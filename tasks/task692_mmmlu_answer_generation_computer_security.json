{
    "Contributors": [
        "Sujan Reddy A"
    ],
    "Source": [
        "Measuring Massive Multitask Language Understanding tasks"
    ],
    "Categories": [
        "Question Answering -> Multiple Choice Question Answering"
    ],
    "Reasoning": [
        "Scientific Reasoning"
    ],
    "Definition": [
        "You are given a question on computer security. You are also given 4 answer options (associated with \"A\", \"B\", \"C\", \"D\"), out of which only one is correct. You need to answer the question by selecting the correct option. You should only answer with the choice letter, not the whole answer."
    ],
    "Input_language": [
        "English"
    ],
    "Output_language": [
        "English"
    ],
    "Instruction_language": [
        "English"
    ],
    "Domains": [
        "Computer Science -> Computer Security"
    ],
    "Positive Examples": [
        {
            "input": "Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program?\n(A)Generational (B)Blackbox (C)Whitebox (D)Mutation-based",
            "output": "C",
            "explanation": "Whitebox is more like to explore path covering every line of code in the program"
        },
        {
            "input": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": "A",
            "explanation": "An attacker replaying bytes that a client sent earlier"
        }
    ],
    "Negative Examples": [
        {
            "input": "Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program?\n(A)Generational (B)Blackbox (C)Whitebox (D)Mutation-based",
            "output": "I dont know.",
            "explanation": "Do not generate anything else apart from one of the following characters: 'A', 'B, 'C', 'D'."
        },
        {
            "input": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": "B,C",
            "explanation": "Only one of the following options ('A', 'B', 'C', 'D') is allowed to be the answer. Multiple options can not be correct. The correct answer here would have been 'A'."
        },
        {
            "input": "What was the first buffer overflow attack?\n(A)Love Bug (B)SQL Slammer (C)Morris Worm (D)Code Red",
            "output": "D",
            "explanation": "Morris Worm was the first buffer overflow attack. Hence the correct answer should be 'C'."
        }
    ],
    "Instances": [
        {
            "input": "Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because:\n(A)Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww (B)Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww (C)Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww (D)Anyone can compute H( k \\| m )H(k\u2225m) for any mm",
            "output": [
                "C"
            ]
        },
        {
            "input": "_______________ is the central node of 802.11 wireless operations.\n(A)WPA (B)Access Point (C)WAP (D)Access Port",
            "output": [
                "B"
            ]
        },
        {
            "input": "The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR, MR, KM, and RS.\n2. RS\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "C"
            ]
        },
        {
            "input": "Why apps developed in languages like C, C++ is prone to Buffer-overflow?\n(A)No string boundary checks in predefined functions (B)No storage check in the external memory (C)No processing power check (D)No database check",
            "output": [
                "A"
            ]
        },
        {
            "input": "What is penetration testing?\n(A)A procedure for testing libraries or other program components for vulnerabilities (B)Whole-system testing for security flaws and bugs (C)A security-minded form of unit testing that applies early in the development process (D)All of the above",
            "output": [
                "B"
            ]
        },
        {
            "input": "What is a replay attack?\n(A)When the attacker replies to a message sent to it by the system (B)An attack that continuously repeats, probing for a weakness (C)An attack that uses the system's own messages and so cannot be defended against (D)The attacker resends a captured message, and the site accept its and responds in the attacker's favor",
            "output": [
                "D"
            ]
        },
        {
            "input": "When the data must arrive at the receiver exactly as they were sent, its called\n(A)Message Condentiality (B)Message Integrity (C)Message Splashing (D)Message Sending",
            "output": [
                "B"
            ]
        },
        {
            "input": "What does EXE do when the STP solver times out on a constraint query for a particular path?\n(A)Assume that the query is satisfiable and continue executing the path. (B)Assume that the query is not satisfiable and stop executing the path (C)Restart STP and retry the query, up to a limited number of retries. (D)Remove a subset of the constraints and retry the query.",
            "output": [
                "B"
            ]
        },
        {
            "input": "When does a buffer overflow occur, generally speaking?\n(A)when writing to a pointer that has been freed (B)when copying a buffer from the stack to the heap (C)when a pointer is used to access memory not allocated to it (D)when the program notices a buffer has filled up, and so starts to reject requests",
            "output": [
                "C"
            ]
        },
        {
            "input": "Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern?\n(A)Authentication. (B)Deniability. (C)Forward secrecy (D)Backward secrecy.",
            "output": [
                "C"
            ]
        },
        {
            "input": "What tool can be used to perform SNMP enumeration?\n(A)DNSlookup (B)Whois (C)Nslookup (D)IP Network Browser",
            "output": [
                "D"
            ]
        },
        {
            "input": "Which of the following is not a block cipher operating mode?\n(A)ECB (B)CFB (C)CBF (D)CBC",
            "output": [
                "C"
            ]
        },
        {
            "input": "The stack is memory for storing\n(A)Local variables (B)Program code (C)Dynamically linked libraries (D)Global variables",
            "output": [
                "A"
            ]
        },
        {
            "input": "Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to send messages to oklogd.\n2. It would be impossible for services to get a TCP connection to a database proxy.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which of the following is not a transport layer vulnerability?\n(A)Mishandling of undefined, poorly defined variables (B)The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information (C)Overloading of transport-layer mechanisms (D)Unauthorized network access",
            "output": [
                "D"
            ]
        },
        {
            "input": "Why would a ping sweep be used?\n(A)To identify live systems (B)To locate live systems (C)To identify open ports (D)To locate firewalls",
            "output": [
                "A"
            ]
        },
        {
            "input": "A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information.\n(A)front-door (B)backdoor (C)clickjacking (D)key-logging",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which of the following deals with network intrusion detection and real-time traffic analysis?\n(A)John the Ripper (B)L0phtCrack (C)Snort (D)Nessus",
            "output": [
                "C"
            ]
        },
        {
            "input": "The AH Protocol provides source authentication and data integrity, but not\n(A)Integrity (B)Privacy (C)Nonrepudiation (D)Both A & C",
            "output": [
                "B"
            ]
        },
        {
            "input": "A sender must not be able to deny sending a message that was sent, is known as\n(A)Message Nonrepudiation (B)Message Integrity (C)Message Condentiality (D)Message Sending",
            "output": [
                "A"
            ]
        },
        {
            "input": "When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________\n(A)AP-handshaking (B)4-way handshake (C)4-way connection (D)wireless handshaking",
            "output": [
                "B"
            ]
        },
        {
            "input": "What is ethical hacking?\n(A)\"Hacking\" ethics so they justify unintended selfish behavior (B)Hacking systems (e.g., during penetration testing) to expose vulnerabilities so they can be fixed, rather than exploited (C)Hacking into systems run by those whose ethics you disagree with (D)A slang term for rapid software development, e.g., as part of hackathons",
            "output": [
                "B"
            ]
        },
        {
            "input": "What are the types of scanning?\n(A)Port, network, and services (B)Network, vulnerability, and port  (C)Passive, active, and interactive (D)Server, client, and network",
            "output": [
                "B"
            ]
        },
        {
            "input": "A proxy rewall lters at the\n(A)Physical layer (B)Application layer (C)Data link layer (D)Network layer",
            "output": [
                "B"
            ]
        },
        {
            "input": "Message authentication is a service beyond\n(A)Message Condentiality (B)Message Integrity (C)Message Splashing (D)Message Sending",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which among the following is the least strong security encryption standard?\n(A)WEP (B)WPA (C)WPA2 (D)WPA3",
            "output": [
                "A"
            ]
        },
        {
            "input": "Which of the following is an authentication method?\n(A)Secret question (B)Biometric (C)SMS code (D)All of the above",
            "output": [
                "D"
            ]
        },
        {
            "input": "To verify a digital signature we need the\n(A)Sender\u2019s Private key (B)Sender\u2019s Public key (C)Receiver\u2019s Private key (D)Receiver\u2019s Public key",
            "output": [
                "B"
            ]
        },
        {
            "input": "A digital signature needs a\n(A)Private-key system (B)Shared-key system (C)Public-key system (D)All of them",
            "output": [
                "C"
            ]
        },
        {
            "input": "A packet filter firewall filters at the\n(A)Application or transport (B)Data link layer (C)Physical Layer (D)Network or transport layer",
            "output": [
                "D"
            ]
        },
        {
            "input": "In Message Condentiality, the transmitted message must make sense to only intended\n(A)Receiver (B)Sender (C)Modulor (D)Translator",
            "output": [
                "A"
            ]
        },
        {
            "input": "Which of the following is a Wireless traffic Sniffing tool?\n(A)Maltego (B)BurpSuit (C)Nessus (D)Wireshark",
            "output": [
                "D"
            ]
        },
        {
            "input": "Let F: K \\times R \\to MF:K\u00d7R\u2192M be a secure PRF. For m \\in Mm\u2208M define E(k,m) = \\big[ r \\gets R,\\ \\text{output } \\big(r,\\ F(k,r) \\oplus m\\big)\\ \\big]E(k,m)=[r\u2190R, output (r, F(k,r)\u2295m) ] Is EE symantically secure under CPA?\n(A)Yes, whenever F is a secure PRF (B)No, there is always a CPA attack on this system (C)Yes, but only if R is large enough so r never repeats (w.h.p) (D)It depends on what F is used",
            "output": [
                "C"
            ]
        },
        {
            "input": "___________________ is alike as that of Access Point (AP) from 802.11, & the mobile operators uses it for offering signal coverage.\n(A)Base Signal Station (B)Base Transmitter Station (C)Base Transceiver Station (D)Transceiver Station",
            "output": [
                "C"
            ]
        },
        {
            "input": "Statement 1| A U2F USB dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off. Statement 2| A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "C"
            ]
        },
        {
            "input": "Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code.\n(A)all instructions that modify segment state (B)all loads or stores to addresses that are not 0 mod 32 (C)all indirect loads or stores (via an address in a register or variable) (D)all indirect jumps (via an address in a register or variable)",
            "output": [
                "A"
            ]
        },
        {
            "input": "What is the difference between a direct leak and a side channel?\n(A)A direct leak creates a denial of service by failing to free memory, while a channel frees memory as a side effect (B)A direct leak is one that is intentional, rather than by unintentional (C)A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage (D)There is no difference",
            "output": [
                "C"
            ]
        },
        {
            "input": "The digest created by a hash function is normally called a\n(A)Modication detection code (MDC) (B)Modify authentication connection (C)Message authentication control (D)Message authentication cipher",
            "output": [
                "A"
            ]
        },
        {
            "input": "The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "D"
            ]
        },
        {
            "input": "A/an ___________ is a program that steals your logins & passwords for instant messaging applications.\n(A)IM \u2013 Trojans (B)Backdoor Trojans (C)Trojan-Downloader (D)Ransom Trojan",
            "output": [
                "A"
            ]
        },
        {
            "input": "____________________ is the anticipation of unauthorized access or break to computers or data by means of wireless networks.\n(A)Wireless access (B)Wireless security (C)Wired Security (D)Wired device apps",
            "output": [
                "B"
            ]
        },
        {
            "input": "Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "C"
            ]
        },
        {
            "input": "Suppose a user has an iPhone (running iOS) and downloads an app called Innocent from the Apple App Store and installs it. The user unlocks the phone and runs Innocent. Innocent exploits a bug in the iOS kernel which allows Innocent to redirect execution inside the kernel to code that Innocent controls. Now Innocent can execute any instructions it likes inside the iOS kernel. Innocent is not able to exploit any bugs in the phone\u2019s secure enclave. Can Innocent read the user\u2019s private information stored in the phone\u2019s flash (e.g. Contacts and messages), or will the security measures described in the paper keep the data private? If Innocent is only able to see encrypted data, then the phone has successfully kept the data private. Circle the security features of the phone (if any) that will prevent Innocent from reading information from the flash on the phone.\n(A)Secure boot chain (B)System software authorization  (C)The secure enclave\u2019s ephemeral key (D)None of the above",
            "output": [
                "D"
            ]
        },
        {
            "input": "___________________ began to show up few years back on wireless access points as a new way of adding or connecting new devices.\n(A)WPA2 (B)WPA (C)WPS (D)WEP",
            "output": [
                "C"
            ]
        },
        {
            "input": "Which of the following is true of mutation-based fuzzing?\n(A)It generates each different input by modifying a prior input (B)It works by making small mutations to the target program to induce faults (C)Each input is mutation that follows a given grammar (D)It only makes sense for file-based fuzzing, not network-based fuzzing",
            "output": [
                "A"
            ]
        },
        {
            "input": "Encryption and decryption provide secrecy, or condentiality, but not\n(A)Authentication (B)Integrity (C)Privacy (D)All of the above",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which of the following does authentication aim to accomplish?\n(A)Restrict what operations/data the user can access (B)Determine if the user is an attacker (C)Flag the user if he/she misbehaves (D)Determine who the user is",
            "output": [
                "D"
            ]
        },
        {
            "input": "Applications developed by programming languages like ____ and ______ have this common buffer-overflow error.\n(A)C, Ruby (B)Python, Ruby (C)C, C++ (D)Tcl, C#",
            "output": [
                "C"
            ]
        },
        {
            "input": "The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers.\n(A)Haunted web (B)World Wide Web (C)Dark web (D)Surface web",
            "output": [
                "C"
            ]
        },
        {
            "input": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "A"
            ]
        },
        {
            "input": "How do you prevent SQL injection?\n(A)Escape queries (B)Interrupt requests (C)Merge tables (D)All of the above",
            "output": [
                "A"
            ]
        },
        {
            "input": "Can a stream cipher have perfect secrecy?\n(A)Yes, if the PRG is really \u201csecure\u201d (B)No, there are no ciphers with perfect secrecy (C)Yes, every cipher has perfect secrecy (D)No, since the key is shorter than the message",
            "output": [
                "D"
            ]
        },
        {
            "input": "A special tool is necessary for entering the network which is _______________ that helps the anonymous internet users to access into the Tor\u2019s network and use various Tor services.\n(A)Opera browser (B)Firefox (C)Chrome (D)Tor browser",
            "output": [
                "D"
            ]
        },
        {
            "input": "Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true?\n(A)You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors (B)Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce (C)Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find (D)Fuzzing doesn't find memory errors, it finds crashes and hangs",
            "output": [
                "C"
            ]
        },
        {
            "input": "Which of the following is a remote Trojan?\n(A)Troya (B)DaCryptic (C)BankerA (D)Game-Troj",
            "output": [
                "A"
            ]
        },
        {
            "input": "You are given a message (m) and its OTP encryption (c). Can you compute the OTP key from m and c ?\n(A)No, I cannot compute the key. (B)Yes, the key is k = m xor c. (C)I can only compute half the bits of the key. (D)Yes, the key is k = m xor m.",
            "output": [
                "B"
            ]
        },
        {
            "input": "Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure?\n(A)No, an attacker can simply guess the tag for messages (B)It depends on the details of the MAC (C)Yes, the attacker cannot generate a valid tag for any message (D)Yes, the PRG is pseudorandom",
            "output": [
                "A"
            ]
        },
        {
            "input": "The sub key length at each round of DES is__________\n(A)32 (B)56 (C)48 (D)64",
            "output": [
                "B"
            ]
        },
        {
            "input": "The message must be encrypted at the sender site and decrypted at the\n(A)Sender Site (B)Site (C)Receiver site (D)Conferencing",
            "output": [
                "C"
            ]
        },
        {
            "input": "In MD-5 the length of the message digest is\n(A)160 (B)128 (C)64 (D)54",
            "output": [
                "B"
            ]
        },
        {
            "input": "Exploitation of the Heartbleed bug permits\n(A)overwriting cryptographic keys in memory (B)a kind of code injection (C)a read outside bounds of a buffer (D)a format string attack",
            "output": [
                "C"
            ]
        },
        {
            "input": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker stealing the server\u2019s private key and reading the plaintext of recorded past connections.\n2. An attacker breaking into a certificate authority and creating a fake certificate for the server.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "C"
            ]
        },
        {
            "input": "In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working?\n(A)Blinding prevents the server from using the CRT optimization, which is essential to the timing attack. (B)Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values. (C)Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences. (D)Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack.",
            "output": [
                "C"
            ]
        },
        {
            "input": "Which of the following is not a security exploit?\n(A)Eavesdropping (B)Cross-site scripting (C)Authentication (D)SQL Injection",
            "output": [
                "C"
            ]
        },
        {
            "input": "Statement 1| U2F is a stronger second factor than sending an SMS code to a user\u2019s smartphone. Statement 2| An attacker that knows a user\u2019s password can easily guess the U2F key to access the user\u2019s account.\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "C"
            ]
        },
        {
            "input": "Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not\n(A)Joined (B)Authenticated (C)Submitted (D)Shared",
            "output": [
                "B"
            ]
        },
        {
            "input": "What does it mean to \"be stealthy\" during a penetration test?\n(A)Performing the tests from an undisclosed location (B)Using encryption during tests to make the source of attacks impossible to determine (C)Performing penetration testing without the target organization knowing (D)Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services",
            "output": [
                "D"
            ]
        },
        {
            "input": "Which of the following is not an example of presentation layer issues?\n(A)Poor handling of unexpected input can lead to the execution of arbitrary instructions (B)Unintentional or ill-directed use of superficially supplied input (C)Cryptographic flaws in the system may get exploited to evade privacy (D)Weak or non-existent authentication mechanisms",
            "output": [
                "D"
            ]
        },
        {
            "input": "______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system.\n(A)Memory leakage (B)Buffer-overrun (C)Less processing power (D)Inefficient programming",
            "output": [
                "B"
            ]
        },
        {
            "input": "Based on the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d, which of the following statements are true? \u201cSpammers\u201d here refer to operators of various parts of the \u201cspam value chain.\u201d\n(A)Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet. (B)Spammers need to register domain names in order for their spam-based advertisements to be effective. (C)There is a high cost for spammers to switch acquiring banks. (D)B and C",
            "output": [
                "D"
            ]
        },
        {
            "input": "What is Nmap?\n(A)It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses (B)It is a network fuzz testing tool (C)It is a map of the Internet (D)It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response",
            "output": [
                "A"
            ]
        },
        {
            "input": "Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false?\n(A)Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates. (B)OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked. (C)DANE makes it difficult for an adversary to launch a SSL stripping attack. (D)Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site.",
            "output": [
                "A"
            ]
        },
        {
            "input": "What is a nop sled\n(A)It is an anonymous version of a mop sled (B)It is a sequence of nops preceding injected shellcode, useful when the return address is unknown (C)It is a method of removing zero bytes from shellcode (D)It is another name for a branch instruction at the end of sequence of nops",
            "output": [
                "B"
            ]
        },
        {
            "input": "_____________ can modify data on your system \u2013 so that your system doesn\u2019t run correctly or you can no longer access specific data, or it may even ask for ransom in order to give your access.\n(A)IM \u2013 Trojans (B)Backdoor Trojans (C)Trojan-Downloader (D)Ransom Trojan",
            "output": [
                "D"
            ]
        },
        {
            "input": "Why is it that the compiler does not know the absolute address of a local variable?\n(A)Programs are not allowed to reference memory using absolute addresses (B)The size of the address depends on the architecture the program will run on (C)As a stack-allocated variable, it could have different addresses depending on when its containing function is called (D)Compiler writers are not very good at that sort of thing",
            "output": [
                "C"
            ]
        },
        {
            "input": "Encapsulating Security Payload (ESP) belongs to which Internet Security Protocol?\n(A)Secure Socket Layer Protocol (B)Secure IP Protocol (C)Secure Http Protocol (D)Transport Layer Security Protocol",
            "output": [
                "B"
            ]
        },
        {
            "input": "Let suppose a search box of an application can take at most 200 words, and you\u2019ve inserted more than that and pressed the search button; the system crashes. Usually this is because of limited __________\n(A)buffer (B)external storage (C)processing power (D)local storage",
            "output": [
                "A"
            ]
        },
        {
            "input": "The four Primary Security Principles related to messages are\n(A)Confidentiality, Integrity, Non repudiation and Authentication (B)Confidentiality, Access Control, Integrity, Non repudiation (C)Authentication, Authorization, Availability, Integrity (D)Availability, Authorization, Confidentiality, Integrity",
            "output": [
                "A"
            ]
        },
        {
            "input": "Old operating systems like _______ and NT-based systems have buffer-overflow attack a common vulnerability.\n(A)Windows 7 (B)Chrome (C)IOS12 (D)UNIX",
            "output": [
                "D"
            ]
        },
        {
            "input": "Which of the following are benefits of penetration testing?\n(A)Results are often reproducible (B)Full evidence of security: a clean test means a secure system (C)Compositionality of security properties means tested components are secure even if others change (D)Makes an adversarial neural network converge more quickly",
            "output": [
                "A"
            ]
        },
        {
            "input": "The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale.\n(A)Silk Road (B)Cotton Road (C)Dark Road (D)Drug Road",
            "output": [
                "A"
            ]
        },
        {
            "input": "Buffer-overflow may remain as a bug in apps if __________ are not done fully.\n(A)boundary hacks (B)memory checks (C)boundary checks (D)buffer checks",
            "output": [
                "C"
            ]
        },
        {
            "input": "Which form of encryption does WPA use?\n(A)Shared key (B)LEAP (C)TKIP (D)AES",
            "output": [
                "C"
            ]
        },
        {
            "input": "The ______________ can cost you money, by sending text messages from your mobile phone numbers.\n(A)IM \u2013 Trojans (B)Backdoor Trojans (C)SMS Trojan (D)Ransom Trojan",
            "output": [
                "C"
            ]
        },
        {
            "input": "A hash function guarantees the integrity of a message. It guarantees that the message has not be\n(A)Replaced (B)Overview (C)Changed (D)Violated",
            "output": [
                "C"
            ]
        },
        {
            "input": "SHA-1 has a message digest of\n(A)160 bits (B)512 bits (C)628 bits (D)820 bits",
            "output": [
                "A"
            ]
        },
        {
            "input": "The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR and MR\n2. CR\n(A)True, True (B)False, False (C)True, False (D)False, True",
            "output": [
                "A"
            ]
        },
        {
            "input": "1. _________ framework made cracking of vulnerabilities easy like point and click.\n(A).Net (B)Metasploit (C)Zeus (D)Ettercap",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which of the following does authorization aim to accomplish?\n(A)Restrict what operations/data the user can access (B)Determine if the user is an attacker (C)Flag the user if he/she misbehaves (D)Determine who the user is",
            "output": [
                "A"
            ]
        },
        {
            "input": "How is IP address spoofing detected?\n(A)Installing and configuring a IDS that can read the IP header (B)Comparing the TTL values of the actual and spoofed addresses (C)Implementing a firewall to the network (D)Identify all TCP sessions that are initiated but does not complete successfully",
            "output": [
                "B"
            ]
        },
        {
            "input": "The ____________ is anything which your search engine cannot search.\n(A)Haunted web (B)World Wide Web (C)Surface web (D)Deep Web",
            "output": [
                "D"
            ]
        },
        {
            "input": "What is a web proxy?\n(A)A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server (B)An agent that makes decisions on the client's behalf when interacting with web applications (C)A piece of software that makes a web application look like a standalone application, making it easier to test (D)A simulator for the web, for use when off-line",
            "output": [
                "A"
            ]
        },
        {
            "input": "In a _____________ attack, the extra data that holds some specific instructions in the memory for actions is projected by a cyber-criminal or penetration tester to crack the system.\n(A)Phishing (B)MiTM (C)Buffer-overflow (D)Clickjacking",
            "output": [
                "C"
            ]
        },
        {
            "input": "A __________ is a sequential segment of the memory location that is allocated for containing some data such as a character string or an array of integers.\n(A)stack (B)queue (C)external storage (D)buffer",
            "output": [
                "D"
            ]
        },
        {
            "input": "___________ is a process of wireless traffic analysis that may be helpful for forensic investigations or during troubleshooting any wireless issue.\n(A)Wireless Traffic Sniffing (B)WiFi Traffic Sniffing (C)Wireless Traffic Checking (D)Wireless Transmission Sniffing",
            "output": [
                "A"
            ]
        },
        {
            "input": "An integer overflow occurs when\n(A)an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created (B)an integer is used as if it was a pointer (C)an integer is used to access a buffer outside of the buffer's bounds (D)there is no more space to hold integers in the program",
            "output": [
                "D"
            ]
        },
        {
            "input": "Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model?\n(A)Physical layer (B)Data-link Layer (C)Session layer (D)Presentation layer",
            "output": [
                "C"
            ]
        },
        {
            "input": "How does a buffer overflow on the stack facilitate running attacker-injected code?\n(A)By overwriting the return address to point to the location of that code (B)By writing directly to the instruction pointer register the address of the code (C)By writing directly to %eax the address of the code (D)By changing the name of the running executable, stored on the stack",
            "output": [
                "A"
            ]
        },
        {
            "input": "____________ is also a part of darknet that is employed for transferring files anonymously.\n(A)Freenet (B)ARPANET (C)Stuxnet (D)Internet",
            "output": [
                "A"
            ]
        },
        {
            "input": "The Message condentiality or privacy means that the sender and the receiver expect\n(A)Integrity (B)Condentiality (C)Authentication (D)Nonrepudiation",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which of the following are most vulnerable to injection attacks?\n(A)Session IDs (B)Registry keys (C)Network communications (D)SQL queries based on user input",
            "output": [
                "D"
            ]
        },
        {
            "input": "A _________________ may be a hidden part of a program, a separate infected program a Trojan in disguise of an executable or code in the firmware of any system\u2019s hardware.\n(A)crypter (B)virus (C)backdoor (D)key-logger",
            "output": [
                "C"
            ]
        },
        {
            "input": "MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used?\n(A)The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets. (B)When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime. (C)When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past. (D)When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired.",
            "output": [
                "C"
            ]
        },
        {
            "input": "Three of the following are classic security properties; which one is not?\n(A)Confidentiality (B)Availability (C)Correctness (D)Integrity",
            "output": [
                "B"
            ]
        },
        {
            "input": "Why is it that anti-virus scanners would not have found an exploitation of Heartbleed?\n(A)It's a vacuous question: Heartbleed only reads outside a buffer, so there is no possible exploit  (B)Anti-virus scanners tend to look for viruses and other malicious (C)Heartbleed attacks the anti-virus scanner itself (D)Anti-virus scanners tend to look for viruses and other malicious code, but Heartbleed exploits steal secrets without injecting any code ",
            "output": [
                "D"
            ]
        },
        {
            "input": "_______________ is a popular tool used for network analysis in multiprotocol diverse network.\n(A)Snort (B)SuperScan (C)Burp Suit (D)EtterPeak",
            "output": [
                "D"
            ]
        },
        {
            "input": "Which Nmap scan is does not completely open a TCP connection?\n(A)SYN stealth scan (B)TCP connect (C)XMAS tree scan (D)ACK scan",
            "output": [
                "A"
            ]
        },
        {
            "input": "A session symmetric key between two parties is used\n(A)Only once (B)Twice (C)Multiple times (D)Conditions dependant",
            "output": [
                "A"
            ]
        },
        {
            "input": "Suppose we define h(H, m) = E(m, H)h(H,m)=E(m,H). Then the resulting h(\\cdot,\\cdot)h(\u22c5,\u22c5) is not collision resistant: to build a collision (H,m)(H,m) and (H\u2019,m\u2019)(H\u2019,m\u2019) choose random (H,m,m\u2019)(H,m,m\u2019) and construct H\u2019H\u2019 as follows:\n(A)H\u2019=D(m\u2019, E(m,H)) (B)H\u2019=E(m\u2019,D(m,H)) (C)H\u2019=E(m\u2019,E(m,H)) (D)H\u2019=D(m\u2019,D(m,H))",
            "output": [
                "A"
            ]
        },
        {
            "input": "What are the port states determined by Nmap?\n(A)Active, inactive, standby (B)Open, half-open, closed  (C)Open, filtered, unfiltered (D)Active, closed, unused",
            "output": [
                "C"
            ]
        },
        {
            "input": "Public key encryption is advantageous over Symmetric key Cryptography because of\n(A)Speed (B)Space (C)Key exchange (D)Key length",
            "output": [
                "C"
            ]
        },
        {
            "input": "Can we build a secure PRP from a secure PRG?\n(A)No, it cannot be done (B)Yes, just plug the GGM PRF into the Luby-Rackoff theorem (C)It depends on the underlying PRG (D)Option text",
            "output": [
                "B"
            ]
        },
        {
            "input": "Which among them has the strongest wireless security?\n(A)WEP (B)WPA (C)WPA2 (D)WPA3",
            "output": [
                "D"
            ]
        }
    ]
}