{
    "Contributors": [
        "Mihir Parmar"
    ],
    "Source": [
        "Logic2Text (dataset: https://github.com/czyssrs/Logic2Text, paper:https://arxiv.org/abs/2004.14579)"
    ],
    "Categories": [
        "Text Generation -> Structured Text Generation",
        "Semantic Parsing"
    ],
    "Reasoning": [
        "Logical Reasoning"
    ],
    "Definition": [
        "In this task, you are given a natural language interpretation of commands (consist of logical operations) to select relevant rows from the given table. Your job is to generate command (in terms of logical operations) from given natural language interpretation. Define body (contains a collection of statements that define what the this logical operator does) of each logical operator between '{}' parenthesis. Here are the definitions of logical operators that you can use while generating command: \n 1. count: returns the number of rows in the view. \n 2. only: returns whether there is exactly one row in the view. \n 3. hop: returns the value under the header column of the row. \n 4. and: returns the boolean operation result of two arguments. \n 5. max/min/avg/sum: returns the max/min/average/sum of the values under the header column. \n 6. nth_max/nth_min: returns the n-th max/n-th min of the values under the header column. \n 7. argmax/argmin: returns the row with the max/min value in header column. \n 8. nth_argmax/nth_argmin: returns the row with the n-th max/min value in header column. \n 9. eq/not_eq: returns if the two arguments are equal. \n 10. round_eq: returns if the two arguments are roughly equal under certain tolerance. \n 11. greater/less: returns if the first argument is greater/less than the second argument. \n 12. diff: returns the difference between two arguments. \n 13. filter_eq/ filter_not_eq: returns the subview whose values under the header column is equal/not equal to the third argument. \n 14. filter_greater/filter_less: returns the subview whose values under the header column is greater/less than the third argument. \n 15. filter_greater_eq /filter_less_eq: returns the subview whose values under the header column is greater/less or equal than the third argument. \n 16. filter_all: returns the view itself for the case of describing the whole table \n 17. all_eq/not_eq: returns whether all the values under the header column are equal/not equal to the third argument. \n 18. all_greater/less: returns whether all the values under the header column are greater/less than the third argument. \n 19. all_greater_eq/less_eq: returns whether all the values under the header column are greater/less or equal to the third argument. \n 20. most_eq/not_eq: returns whether most of the values under the header column are equal/not equal to the third argument. \n 21. most_greater/less: returns whether most of the values under the header column are greater/less than the third argument. \n 22. most_greater_eq/less_eq: returns whether most of the values under the header column are greater/less or equal to the third argument."
    ],
    "Input_language": [
        "English"
    ],
    "Output_language": [
        "English"
    ],
    "Instruction_language": [
        "English"
    ],
    "Domains": [
        "Wikipedia",
        "Logic -> Propositional Logic"
    ],
    "Positive Examples": [
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum. the competition record of this row is danish superliga 2005-06.",
            "output": "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; competition } ; danish superliga 2005 - 06 }",
            "explanation": "Here, the generated command using logical operators correctly selects third maximum from given table rows which is mentioned in natural language interpretation."
        },
        {
            "input": "select the row whose duration record of all rows is maximum. the actor record of this row is lesley saweard.",
            "output": "eq { hop { argmax { all_rows ; duration } ; actor } ; lesley saweard }",
            "explanation": "Here, the generated command using logical operators correctly selects the maximum duration from the given table rows."
        },
        {
            "input": "for the points records of all rows, most of them are equal to 0.",
            "output": "most_eq { all_rows ; points ; 0 }",
            "explanation": "Here, the generated command using logical operators correctly indicates the most of the point records that are zero."
        },
        {
            "input": "the sum of the intake record of all rows is 505 .",
            "output": "round_eq { sum { all_rows ; intake } ; 505 }",
            "explanation": "In order to select all the rows, we should use all_rows ; intake, and for calculating the sum of them, we should use sum { all_rows ; intake } ;. Then we check if the sum is 505 using round_eq { sum { all_rows ; intake } ; 505 }."
        }
    ],
    "Negative Examples": [
        {
            "input": "select the row whose total record of all rows is 3rd maximum . the club record of this row is maidstone united .",
            "output": "eq { hop { nth_argmax { all_rows ; total ; 3 } } ; maidstone united }",
            "explanation": "Given natural language interpretation and generated command are miss matched. We need to choose the club record after selecting the row whose total record of all rows is 3rd maximum."
        },
        {
            "input": "select the row whose goal gain record of all rows is 3rd maximum. the team record of this row is india.",
            "output": "eq { hop { nth_argmax { all_rows ; goal gain ; 3 } ; team } ; south china }",
            "explanation": "In the natural language interpretation, it says that 3rd maximum should be selected from given table rows for team of India, but generated command selects for team of south china. It should be India."
        }
    ],
    "Instances": [
        {
            "input": "the 1st minimum week record of all rows is 1 . the date record of the row with 1st minimum week record is september 4 , 1994 .",
            "output": [
                "and { eq { nth_min { all_rows ; week ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; week ; 1 } ; date } ; september 4 , 1994 } }"
            ]
        },
        {
            "input": "the average of the population record of all rows is 65841 .",
            "output": [
                "round_eq { avg { all_rows ; population } ; 65841 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the home record of this row is calgary .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; home } ; calgary }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to dallas . take the date record of this row . select the rows whose visitor record fuzzily matches to montreal . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; visitor ; dallas } ; date } ; hop { filter_eq { all_rows ; visitor ; montreal } ; date } }"
            ]
        },
        {
            "input": "select the rows whose ranking record fuzzily matches to 33rd . there is only one such row in the table . the season record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; ranking ; 33rd } } ; eq { hop { filter_eq { all_rows ; ranking ; 33rd } ; season } ; 1 } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to baton rouge , us . take the date record of this row . select the rows whose tournament record fuzzily matches to granby , canada . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; baton rouge , us } ; date } ; hop { filter_eq { all_rows ; tournament ; granby , canada } ; date } }"
            ]
        },
        {
            "input": "the sum of the ties record of all rows is 64 .",
            "output": [
                "round_eq { sum { all_rows ; ties } ; 64 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the year record of this row is 1988 .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; year } ; 1988 }"
            ]
        },
        {
            "input": "for the podiums records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; podiums ; 0 }"
            ]
        },
        {
            "input": "for the district records of all rows , most of them fuzzily match to belize .",
            "output": [
                "most_eq { all_rows ; district ; belize }"
            ]
        },
        {
            "input": "the average of the td 's record of all rows is 8.27 .",
            "output": [
                "round_eq { avg { all_rows ; td 's } ; 8.27 }"
            ]
        },
        {
            "input": "select the row whose votes record of all rows is maximum . the election record of this row is 1990 .",
            "output": [
                "eq { hop { argmax { all_rows ; votes } ; election } ; 1990 }"
            ]
        },
        {
            "input": "select the rows whose three darts challenge record fuzzily matches to jermaine jackson . take the episode number record of this row . select the rows whose three darts challenge record fuzzily matches to meat loaf . take the episode number record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; three darts challenge ; jermaine jackson } ; episode number } ; hop { filter_eq { all_rows ; three darts challenge ; meat loaf } ; episode number } }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 15 . among these rows , select the rows whose crowd record is greater than 10000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; home team score ; 15 } ; crowd ; 10000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retire . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; retire } } ; 1 }"
            ]
        },
        {
            "input": "the maximum away team score record of all rows is 15.9 ( 99 ) .",
            "output": [
                "eq { max { all_rows ; away team score } ; 15.9 ( 99 ) }"
            ]
        },
        {
            "input": "select the row whose viewers record of all rows is maximum . the no record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; viewers } ; no } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose circuit record is arbitrary . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_all { all_rows ; circuit } } ; 10 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the season record of this row is 1993 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; season } ; 1993 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is new orleans saints .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; new orleans saints }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the club record of this row is h\u00e9rcules cf .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; club } ; h\u00e9rcules cf }"
            ]
        },
        {
            "input": "select the rows whose version record fuzzily matches to maxi remix . take the length record of this row . select the rows whose version record fuzzily matches to single version . take the length record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; version ; maxi remix } ; length } ; hop { filter_eq { all_rows ; version ; single version } ; length } }"
            ]
        },
        {
            "input": "select the rows whose population metro area in millions record fuzzily matches to 5.3 . take the population metro area in millions record of this row . select the rows whose population metro area in millions record fuzzily matches to 3.9 . take the population metro area in millions record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; population metro area in millions ; 5.3 } ; population metro area in millions } ; hop { filter_eq { all_rows ; population metro area in millions ; 3.9 } ; population metro area in millions } }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 0 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 0 }"
            ]
        },
        {
            "input": "the average of the floors record of all rows is 24.6 .",
            "output": [
                "round_eq { avg { all_rows ; floors } ; 24.6 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . for the to par records of these rows , most of them are greater than -8 .",
            "output": [
                "most_greater { filter_eq { all_rows ; country ; united states } ; to par ; -8 }"
            ]
        },
        {
            "input": "select the row whose became queen record of all rows is minimum . the name record of this row is maria louisa of spain .",
            "output": [
                "eq { hop { argmin { all_rows ; became queen } ; name } ; maria louisa of spain }"
            ]
        },
        {
            "input": "the sum of the no built record of all rows is 84 .",
            "output": [
                "round_eq { sum { all_rows ; no built } ; 84 }"
            ]
        },
        {
            "input": "for the pixel aspect ratio records of all rows , most of them fuzzily match to 1:1 .",
            "output": [
                "most_eq { all_rows ; pixel aspect ratio ; 1:1 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is minimum . the lifetime india distributor share record of this row is 99 , 02 , 00000 .",
            "output": [
                "eq { hop { argmin { all_rows ; year } ; lifetime india distributor share } ; 99 , 02 , 00000 }"
            ]
        },
        {
            "input": "select the rows whose internet plan record fuzzily matches to internet 100 . take the upstream record of this row . select the rows whose internet plan record fuzzily matches to internet 30 . take the upstream record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; internet plan ; internet 100 } ; upstream } ; hop { filter_eq { all_rows ; internet plan ; internet 30 } ; upstream } }"
            ]
        },
        {
            "input": "the average of the power record of all rows is 1900 rpm .",
            "output": [
                "round_eq { avg { all_rows ; power } ; 1900 rpm }"
            ]
        },
        {
            "input": "select the row whose assists record of all rows is maximum . the name record of this row is yotam halperin .",
            "output": [
                "eq { hop { argmax { all_rows ; assists } ; name } ; yotam halperin }"
            ]
        },
        {
            "input": "select the rows whose extra record fuzzily matches to 110 m hurdles . among these rows , select the rows whose result record is greater than 3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; extra ; 110 m hurdles } ; result ; 3 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tom watson . take the total record of this row . select the rows whose player record fuzzily matches to tom weiskopf . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; tom watson } ; total } ; hop { filter_eq { all_rows ; player ; tom weiskopf } ; total } }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to friendly .",
            "output": [
                "most_eq { all_rows ; competition ; friendly }"
            ]
        },
        {
            "input": "select the row whose losses record of all rows is 1st maximum . the team record of this row is new york liberty .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; losses ; 1 } ; team } ; new york liberty }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the name record of this row is kevin kyle .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; name } ; kevin kyle }"
            ]
        },
        {
            "input": "select the row whose oilers first downs record of all rows is maximum . the opponent record of this row is new england patriots .",
            "output": [
                "eq { hop { argmax { all_rows ; oilers first downs } ; opponent } ; new england patriots }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to jack brabham . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; jack brabham } } ; 5 }"
            ]
        },
        {
            "input": "for the games records of all rows , most of them are equal to 5 .",
            "output": [
                "most_eq { all_rows ; games ; 5 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to - 0 . there is only one such row in the table . the opponent record of this unqiue row is san diego chargers .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; - 0 } } ; eq { hop { filter_eq { all_rows ; result ; - 0 } ; opponent } ; san diego chargers } }"
            ]
        },
        {
            "input": "select the row whose ratings ( millions ) record of all rows is maximum . the episode record of this row is episode 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; ratings ( millions ) } ; episode } ; episode 1 }"
            ]
        },
        {
            "input": "the average of the score in the final record of all rows is 5 .",
            "output": [
                "round_eq { avg { all_rows ; score in the final } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose pos record fuzzily matches to cf . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pos ; cf } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to california , united states . there is only one such row in the table . the opponent record of this unqiue row is muhsin corbbrey .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; california , united states } } ; eq { hop { filter_eq { all_rows ; location ; california , united states } ; opponent } ; muhsin corbbrey } }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2009 - 10 . take the goals record of this row . select the rows whose season record fuzzily matches to 2012 - 13 . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2009 - 10 } ; goals } ; hop { filter_eq { all_rows ; season ; 2012 - 13 } ; goals } }"
            ]
        },
        {
            "input": "select the rows whose paul mccartney record fuzzily matches to acoustic guitar . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; paul mccartney ; acoustic guitar } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose head coach record fuzzily matches to jonas kazlauskas . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; head coach ; jonas kazlauskas } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to nice . take the date record of this row . select the rows whose tournament record fuzzily matches to estoril . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; nice } ; date } ; hop { filter_eq { all_rows ; tournament ; estoril } ; date } }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to minardi - cosworth . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; constructor ; minardi - cosworth } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( million ) record is equal to 5.5 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; us viewers ( million ) ; 5.5 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to selected . there is only one such row in the table . the week record of this unqiue row is wild card .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; selected } } ; eq { hop { filter_eq { all_rows ; result ; selected } ; week } ; wild card } }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to north american racing team . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; entrant ; north american racing team } } ; 3 }"
            ]
        },
        {
            "input": "for the pos records of all rows , most of them fuzzily match to dnf .",
            "output": [
                "most_eq { all_rows ; pos ; dnf }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to mountain .",
            "output": [
                "most_eq { all_rows ; type ; mountain }"
            ]
        },
        {
            "input": "select the rows whose attendance record fuzzily matches to canceled . there is only one such row in the table . the venue record of this unqiue row is blackcomb mountain .",
            "output": [
                "and { only { filter_eq { all_rows ; attendance ; canceled } } ; eq { hop { filter_eq { all_rows ; attendance ; canceled } ; venue } ; blackcomb mountain } }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to hoseo . among these rows , select the rows whose korean dialect record fuzzily matches to chungcheong dialect . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; region ; hoseo } ; korean dialect ; chungcheong dialect } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 1st maximum . the nation record of this row is china .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 1 } ; nation } ; china }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to usa . there is only one such row in the table . the pick record of this unqiue row is 12 .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; usa } } ; eq { hop { filter_eq { all_rows ; nationality ; usa } ; pick } ; 12 } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to sporting de gij\u00f3n . take the points record of this row . select the rows whose club record fuzzily matches to c\u00e1diz cf . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; sporting de gij\u00f3n } ; points } ; hop { filter_eq { all_rows ; club ; c\u00e1diz cf } ; points } }"
            ]
        },
        {
            "input": "select the rows whose original canadian air date record fuzzily matches to august . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; original canadian air date ; august } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose record fuzzily matches to 2 . take the viewers record of this row . select the rows whose record fuzzily matches to 1 . take the viewers record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ; 2 } ; viewers } ; hop { filter_eq { all_rows ; ; 1 } ; viewers } }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 152.8 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 152.8 }"
            ]
        },
        {
            "input": "select the rows whose 2004 record is greater than 1000 . there is only one such row in the table . the tournament record of this unqiue row is year end ranking .",
            "output": [
                "and { only { filter_greater { all_rows ; 2004 ; 1000 } } ; eq { hop { filter_greater { all_rows ; 2004 ; 1000 } ; tournament } ; year end ranking } }"
            ]
        },
        {
            "input": "select the rows whose first elected record is greater than or equal to 2000 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; first elected ; 2000 } } ; 5 }"
            ]
        },
        {
            "input": "the maximum crowd record of all rows is 29000 .",
            "output": [
                "eq { max { all_rows ; crowd } ; 29000 }"
            ]
        },
        {
            "input": "select the rows whose yards record is greater than 1400 . there is only one such row in the table . the player record of this unqiue row is derrick lewis .",
            "output": [
                "and { only { filter_greater { all_rows ; yards ; 1400 } } ; eq { hop { filter_greater { all_rows ; yards ; 1400 } ; player } ; derrick lewis } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to germany . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; germany } } ; 2 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 1:00.26 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 1:00.26 }"
            ]
        },
        {
            "input": "the average of the bronze record of all rows is 1.67 .",
            "output": [
                "round_eq { avg { all_rows ; bronze } ; 1.67 }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to united states .",
            "output": [
                "most_eq { all_rows ; country ; united states }"
            ]
        },
        {
            "input": "select the rows whose commissioned record fuzzily matches to 1931 . there is only one such row in the table . the name record of this unqiue row is pers\u00e9e .",
            "output": [
                "and { only { filter_eq { all_rows ; commissioned ; 1931 } } ; eq { hop { filter_eq { all_rows ; commissioned ; 1931 } ; name } ; pers\u00e9e } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 55 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 55 }"
            ]
        },
        {
            "input": "the average of the number of borough councilors record of all rows is 3.8 .",
            "output": [
                "round_eq { avg { all_rows ; number of borough councilors } ; 3.8 }"
            ]
        },
        {
            "input": "select the rows whose date record is less than or equal to october 24 , 2004 . for the tv time records of these rows , most of them fuzzily match to cbs 1:00 pm .",
            "output": [
                "most_eq { filter_less_eq { all_rows ; date ; october 24 , 2004 } ; tv time ; cbs 1:00 pm }"
            ]
        },
        {
            "input": "for the authority records of all rows , all of them fuzzily match to state .",
            "output": [
                "all_eq { all_rows ; authority ; state }"
            ]
        },
        {
            "input": "select the rows whose leader at the summit record fuzzily matches to gonzalo aja . there is only one such row in the table . the year record of this unqiue row is 1974 .",
            "output": [
                "and { only { filter_eq { all_rows ; leader at the summit ; gonzalo aja } } ; eq { hop { filter_eq { all_rows ; leader at the summit ; gonzalo aja } ; year } ; 1974 } }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the gold record of this row is 36 .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; gold } ; 36 }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to suzuki . the average of the laps record of these rows is 21.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; manufacturer ; suzuki } ; laps } ; 21.5 }"
            ]
        },
        {
            "input": "the maximum score record of all rows is 118 - 104 .",
            "output": [
                "eq { max { all_rows ; score } ; 118 - 104 }"
            ]
        },
        {
            "input": "for the tournaments records of all rows , most of them are equal to 12 .",
            "output": [
                "most_eq { all_rows ; tournaments ; 12 }"
            ]
        },
        {
            "input": "for the away team records of all rows , most of them fuzzily match to melbourne .",
            "output": [
                "most_eq { all_rows ; away team ; melbourne }"
            ]
        },
        {
            "input": "select the rows whose opposing team record fuzzily matches to queensland . take the against record of this row . select the rows whose opposing team record fuzzily matches to new south wales . take the against record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opposing team ; queensland } ; against } ; hop { filter_eq { all_rows ; opposing team ; new south wales } ; against } }"
            ]
        },
        {
            "input": "for the speed records of all rows , most of them are greater than or equal to 80 .",
            "output": [
                "most_greater_eq { all_rows ; speed ; 80 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1987 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year ; 1987 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to dave viti . take the round record of this row . select the rows whose player record fuzzily matches to billy neighbors . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; dave viti } ; round } ; hop { filter_eq { all_rows ; player ; billy neighbors } ; round } }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to alex ribeiro . there is only one such row in the table . the year record of this unqiue row is 1979 .",
            "output": [
                "and { only { filter_eq { all_rows ; driver ; alex ribeiro } } ; eq { hop { filter_eq { all_rows ; driver ; alex ribeiro } ; year } ; 1979 } }"
            ]
        },
        {
            "input": "select the row whose against record of all rows is maximum . the opposing team record of this row is buenos aires selection .",
            "output": [
                "eq { hop { argmax { all_rows ; against } ; opposing team } ; buenos aires selection }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 764271 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 764271 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 3 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to 4th . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; 4th } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to running back . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; running back } } ; 2 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to win .",
            "output": [
                "most_eq { all_rows ; result ; win }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the player record of this row is paul magoffin .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; player } ; paul magoffin }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to t2 . the maximum score record of these rows is 73 + 69 = 142 .",
            "output": [
                "eq { max { filter_eq { all_rows ; place ; t2 } ; score } ; 73 + 69"
            ]
        },
        {
            "input": "the sum of the list votes record of all rows is 66617 .",
            "output": [
                "round_eq { sum { all_rows ; list votes } ; 66617 }"
            ]
        },
        {
            "input": "for the laps records of all rows , most of them are equal to 27 .",
            "output": [
                "most_eq { all_rows ; laps ; 27 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to contract terminated . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; contract terminated } } ; 6 }"
            ]
        },
        {
            "input": "for the laps records of all rows , most of them are equal to 30 .",
            "output": [
                "most_eq { all_rows ; laps ; 30 }"
            ]
        },
        {
            "input": "for the object type records of all rows , most of them fuzzily match to open cluster .",
            "output": [
                "most_eq { all_rows ; object type ; open cluster }"
            ]
        },
        {
            "input": "select the row whose winnings record of all rows is maximum . the driver record of this row is mark martin .",
            "output": [
                "eq { hop { argmax { all_rows ; winnings } ; driver } ; mark martin }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 6 . there is only one such row in the table . the team record of this unqiue row is montreal victorias .",
            "output": [
                "and { only { filter_eq { all_rows ; wins ; 6 } } ; eq { hop { filter_eq { all_rows ; wins ; 6 } ; team } ; montreal victorias } }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to lucy watkins . there is only one such row in the table . the title record of this unqiue row is sweet dreams .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; lucy watkins } } ; eq { hop { filter_eq { all_rows ; written by ; lucy watkins } ; title } ; sweet dreams } }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to fiji . take the against record of this row . select the rows whose opposing teams record fuzzily matches to france . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposing teams ; fiji } ; against } ; hop { filter_eq { all_rows ; opposing teams ; france } ; against } }"
            ]
        },
        {
            "input": "for the format records of all rows , most of them fuzzily match to vinyl .",
            "output": [
                "most_eq { all_rows ; format ; vinyl }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are greater than 2000 .",
            "output": [
                "most_greater { all_rows ; year ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 14 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wins ; 14 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly . the sum of the result record of these rows is 4 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; competition ; friendly } ; result } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 10 . for the difference records of these rows , most of them fuzzily match to - .",
            "output": [
                "most_eq { filter_less { all_rows ; points ; 10 } ; difference ; - }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . the maximum final score record of these rows is 24 - 38 .",
            "output": [
                "eq { max { filter_eq { all_rows ; date ; november } ; final score } ; 24 - 38 }"
            ]
        },
        {
            "input": "the sum of the total record of all rows is 111 .",
            "output": [
                "round_eq { sum { all_rows ; total } ; 111 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the performer record of this row is honor heffernan .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; performer } ; honor heffernan }"
            ]
        },
        {
            "input": "for the headquarters records of all rows , most of them fuzzily match to united states .",
            "output": [
                "most_eq { all_rows ; headquarters ; united states }"
            ]
        },
        {
            "input": "select the rows whose rank record is arbitrary . the number of such rows is 19 .",
            "output": [
                "eq { count { filter_all { all_rows ; rank } } ; 19 }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to end of contract .",
            "output": [
                "most_eq { all_rows ; type ; end of contract }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to hartford civic center . there is only one such row in the table . the game record of this unqiue row is 45 .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; hartford civic center } } ; eq { hop { filter_eq { all_rows ; location ; hartford civic center } ; game } ; 45 } }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to mike conley .",
            "output": [
                "most_eq { all_rows ; high assists ; mike conley }"
            ]
        },
        {
            "input": "select the row whose commercial operation record of all rows is minimum . the unit record of this row is hamaoka - 1 .",
            "output": [
                "eq { hop { argmin { all_rows ; commercial operation } ; unit } ; hamaoka - 1 }"
            ]
        },
        {
            "input": "select the rows whose laps record is less than 20 . there is only one such row in the table . the name record of this unqiue row is ryan dalziel .",
            "output": [
                "and { only { filter_less { all_rows ; laps ; 20 } } ; eq { hop { filter_less { all_rows ; laps ; 20 } ; name } ; ryan dalziel } }"
            ]
        },
        {
            "input": "select the rows whose song title record fuzzily matches to nee maatalo . take the year record of this row . select the rows whose song title record fuzzily matches to hey po . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; song title ; nee maatalo } ; year } ; hop { filter_eq { all_rows ; song title ; hey po } ; year } }"
            ]
        },
        {
            "input": "select the rows whose batsmen record fuzzily matches to kim barnett . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; batsmen ; kim barnett } } ; 2 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to td waterhouse centre .",
            "output": [
                "most_eq { all_rows ; location ; td waterhouse centre }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to china . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; tournament ; china } }"
            ]
        },
        {
            "input": "select the rows whose reg gp record is equal to 2 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; reg gp ; 2 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose round record is equal to 7 . among these rows , select the rows whose college record fuzzily matches to oregon . there is only one such row in the table . the name record of this unqiue row is steve smith .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; round ; 7 } ; college ; oregon } } ; eq { hop { filter_eq { filter_eq { all_rows ; round ; 7 } ; college ; oregon } ; name } ; steve smith } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to south africa . there is only one such row in the table . the name record of this unqiue row is likhoelesaurus .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; south africa } } ; eq { hop { filter_eq { all_rows ; location ; south africa } ; name } ; likhoelesaurus } }"
            ]
        },
        {
            "input": "select the rows whose centerfold model record fuzzily matches to tamara witmer . take the date record of this row . select the rows whose centerfold model record fuzzily matches to vanessa hoelsher . take the date record of this row . the second record is 1 month larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; centerfold model ; tamara witmer } ; date } ; hop { filter_eq { all_rows ; centerfold model ; vanessa hoelsher } ; date } } ; -1 month }"
            ]
        },
        {
            "input": "for the team records of all rows , most of them fuzzily match to rothmans honda .",
            "output": [
                "most_eq { all_rows ; team ; rothmans honda }"
            ]
        },
        {
            "input": "for the laps records of all rows , all of them are equal to 197 .",
            "output": [
                "all_eq { all_rows ; laps ; 197 }"
            ]
        },
        {
            "input": "select the row whose age record of all rows is maximum . the name record of this row is donte gamble .",
            "output": [
                "eq { hop { argmax { all_rows ; age } ; name } ; donte gamble }"
            ]
        },
        {
            "input": "select the rows whose team record is arbitrary . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_all { all_rows ; team } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to carlton . take the crowd record of this row . select the rows whose home team record fuzzily matches to collingwood . take the crowd record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; home team ; carlton } ; crowd } ; hop { filter_eq { all_rows ; home team ; collingwood } ; crowd } }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the rank record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; rank } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose floors record is greater than 30 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; floors ; 30 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the nation record of this row is france .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; nation } ; france }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than 10000 .",
            "output": [
                "most_greater { all_rows ; crowd ; 10000 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to groves stadium winston - salem , nc . among these rows , select the rows whose attendance record is greater than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; location ; groves stadium winston - salem , nc } ; attendance ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to 1908 olympics .",
            "output": [
                "most_eq { all_rows ; competition ; 1908 olympics }"
            ]
        },
        {
            "input": "the average of the championships in st louis record of all rows is .3125 .",
            "output": [
                "round_eq { avg { all_rows ; championships in st louis } ; .3125 }"
            ]
        },
        {
            "input": "select the rows whose drawn record is equal to 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; drawn ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to vinyl record . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; format ; vinyl record } } ; 2 }"
            ]
        },
        {
            "input": "the maximum home team score record of all rows is 15.17 ( 107 ) . the home team record of the row with superlative home team score record is south melbourne . the date record of the row with superlative home team score record is 7 august 1926 .",
            "output": [
                "and { eq { max { all_rows ; home team score } ; 15.17 ( 107 ) } ; and { eq { hop { argmax { all_rows ; home team score } ; home team } ; south melbourne } ; eq { hop { argmax { all_rows ; home team score } ; date } ; 7 august 1926 } } }"
            ]
        },
        {
            "input": "select the rows whose away team score record fuzzily matches to 15.2 . there is only one such row in the table . the venue record of this unqiue row is windy hill .",
            "output": [
                "and { only { filter_eq { all_rows ; away team score ; 15.2 } } ; eq { hop { filter_eq { all_rows ; away team score ; 15.2 } ; venue } ; windy hill } }"
            ]
        },
        {
            "input": "for the motor records of all rows , all of them fuzzily match to castor 4b .",
            "output": [
                "all_eq { all_rows ; motor ; castor 4b }"
            ]
        },
        {
            "input": "for the class records of all rows , all of them fuzzily match to d .",
            "output": [
                "all_eq { all_rows ; class ; d }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to a . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; class ; a } }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to public . among these rows , select the rows whose founded record is less than 1940 . there is only one such row in the table .",
            "output": [
                "only { filter_less { filter_eq { all_rows ; type ; public } ; founded ; 1940 } }"
            ]
        },
        {
            "input": "select the rows whose area km 2 record is greater than 500 . among these rows , select the rows whose population record is greater than 1000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; area km 2 ; 500 } ; population ; 1000 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose decision record fuzzily matches to wall . there is only one such row in the table . the date record of this unqiue row is september 20 .",
            "output": [
                "and { only { filter_eq { all_rows ; decision ; wall } } ; eq { hop { filter_eq { all_rows ; decision ; wall } ; date } ; september 20 } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2004 . take the rank record of this row . select the rows whose year record fuzzily matches to 2006 . take the rank record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; year ; 2004 } ; rank } ; hop { filter_eq { all_rows ; year ; 2006 } ; rank } }"
            ]
        },
        {
            "input": "select the row whose seconds record of all rows is maximum . the name record of this row is kerstin j\u00fcrgens - szymkowiak .",
            "output": [
                "eq { hop { argmax { all_rows ; seconds } ; name } ; kerstin j\u00fcrgens - szymkowiak }"
            ]
        },
        {
            "input": "select the rows whose played record is equal to 17 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; played ; 17 } } ; 6 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 2-0 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 2-0 }"
            ]
        },
        {
            "input": "select the rows whose age at appointment record is equal to 50 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; age at appointment ; 50 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to united states . take the bronze record of this row . select the rows whose nation record fuzzily matches to poland . take the bronze record of this row . the first record is equal to the second record . the bronze record of the first row is 1 . the bronze record of the second row is 1 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; nation ; united states } ; bronze } ; hop { filter_eq { all_rows ; nation ; poland } ; bronze } } ; and { eq { hop { filter_eq { all_rows ; nation ; united states } ; bronze } ; 1 } ; eq { hop { filter_eq { all_rows ; nation ; poland } ; bronze } ; 1 } } }"
            ]
        },
        {
            "input": "select the rows whose mountain peak record fuzzily matches to pikes peak . take the location record of this row . select the rows whose mountain peak record fuzzily matches to blanca peak . take the location record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; mountain peak ; pikes peak } ; location } ; hop { filter_eq { all_rows ; mountain peak ; blanca peak } ; location } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 1st maximum . the school record of this row is carson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ; 1 } ; school } ; carson }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is maximum . the title record of this row is exile on main st .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( million ) } ; title } ; exile on main st }"
            ]
        },
        {
            "input": "for the type records of all rows , all of them fuzzily match to sovereign .",
            "output": [
                "all_eq { all_rows ; type ; sovereign }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is 3rd maximum . the city record of this row is beijing .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ; 3 } ; city } ; beijing }"
            ]
        },
        {
            "input": "select the rows whose drawn record is greater than 5 . there is only one such row in the table . the team record of this unqiue row is portuguesa .",
            "output": [
                "and { only { filter_greater { all_rows ; drawn ; 5 } } ; eq { hop { filter_greater { all_rows ; drawn ; 5 } ; team } ; portuguesa } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to tackle . for the round records of these rows , all of them are less than 7 .",
            "output": [
                "all_less { filter_eq { all_rows ; position ; tackle } ; round ; 7 }"
            ]
        },
        {
            "input": "select the row whose 2nd run record of all rows is maximum . the name record of this row is art\u016brs matisons ( lat ) .",
            "output": [
                "eq { hop { argmax { all_rows ; 2nd run } ; name } ; art\u016brs matisons ( lat ) }"
            ]
        },
        {
            "input": "select the rows whose draw record is less than or equal to 3 . among these rows , select the rows whose votes record is greater than 5000 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_greater { filter_less_eq { all_rows ; draw ; 3 } ; votes ; 5000 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose bleeding time record fuzzily matches to unaffected . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; bleeding time ; unaffected } } ; 6 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to safe .",
            "output": [
                "most_eq { all_rows ; result ; safe }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is 2nd minimum . the director record of this row is aigars grauba .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ( ceremony ) ; 2 } ; director } ; aigars grauba }"
            ]
        },
        {
            "input": "the average of the weight record of all rows is 188 .",
            "output": [
                "round_eq { avg { all_rows ; weight } ; 188 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to santa maria da feira . take the area ( km square ) record of this row . select the rows whose name record fuzzily matches to vale de cambra . take the area ( km square ) record of this row . the first record is greater than the second record . the area ( km square ) record of the first row is 215.1 . the area ( km square ) record of the second row is 146.5 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; name ; santa maria da feira } ; area ( km square ) } ; hop { filter_eq { all_rows ; name ; vale de cambra } ; area ( km square ) } } ; and { eq { hop { filter_eq { all_rows ; name ; santa maria da feira } ; area ( km square ) } ; 215.1 } ; eq { hop { filter_eq { all_rows ; name ; vale de cambra } ; area ( km square ) } ; 146.5 } } }"
            ]
        },
        {
            "input": "select the row whose balls record of all rows is maximum . the player record of this row is sanath jayasuriya .",
            "output": [
                "eq { hop { argmax { all_rows ; balls } ; player } ; sanath jayasuriya }"
            ]
        },
        {
            "input": "select the row whose released record of all rows is 2nd minimum . the title record of this row is mission to magnus .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; released ; 2 } ; title } ; mission to magnus }"
            ]
        },
        {
            "input": "select the rows whose 50 m split record is less than 29.0 . among these rows , select the rows whose nationality record fuzzily matches to zimbabwe . there is only one such row in the table . the name record of this unqiue row is kirsty coventry .",
            "output": [
                "and { only { filter_eq { filter_less { all_rows ; 50 m split ; 29.0 } ; nationality ; zimbabwe } } ; eq { hop { filter_eq { filter_less { all_rows ; 50 m split ; 29.0 } ; nationality ; zimbabwe } ; name } ; kirsty coventry } }"
            ]
        },
        {
            "input": "select the row whose weeks record of all rows is 2nd maximum . the title record of this row is evolution .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; weeks ; 2 } ; title } ; evolution }"
            ]
        },
        {
            "input": "the maximum score record of all rows is 5 - 1 .",
            "output": [
                "eq { max { all_rows ; score } ; 5 - 1 }"
            ]
        },
        {
            "input": "select the rows whose winnings record is greater than 300000 . there is only one such row in the table . the year record of this unqiue row is 1998 .",
            "output": [
                "and { only { filter_greater { all_rows ; winnings ; 300000 } } ; eq { hop { filter_greater { all_rows ; winnings ; 300000 } ; year } ; 1998 } }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is 1st minimum . the institution record of this row is guilford college .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; founded ; 1 } ; institution } ; guilford college }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than 2 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; total ; 2 } } ; 3 }"
            ]
        },
        {
            "input": "for the winner records of all rows , all of them fuzzily match to ( ita ) .",
            "output": [
                "all_eq { all_rows ; winner ; ( ita ) }"
            ]
        },
        {
            "input": "for the gdp ( billion us ) records of all rows , most of them are greater than 100 .",
            "output": [
                "most_greater { all_rows ; gdp ( billion us ) ; 100 }"
            ]
        },
        {
            "input": "for the pick records of all rows , most of them are equal to 6 .",
            "output": [
                "most_eq { all_rows ; pick ; 6 }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are equal to 1948 .",
            "output": [
                "most_eq { all_rows ; first elected ; 1948 }"
            ]
        },
        {
            "input": "select the rows whose moving from record fuzzily matches to sedan . there is only one such row in the table . the name record of this unqiue row is abdou .",
            "output": [
                "and { only { filter_eq { all_rows ; moving from ; sedan } } ; eq { hop { filter_eq { all_rows ; moving from ; sedan } ; name } ; abdou } }"
            ]
        },
        {
            "input": "select the row whose matches record of all rows is maximum . the goalkeeper record of this row is chema .",
            "output": [
                "eq { hop { argmax { all_rows ; matches } ; goalkeeper } ; chema }"
            ]
        },
        {
            "input": "select the rows whose performer 2 record fuzzily matches to nyima funk . there is only one such row in the table . the original airdate record of this unqiue row is september 3 , 2013 .",
            "output": [
                "and { only { filter_eq { all_rows ; performer 2 ; nyima funk } } ; eq { hop { filter_eq { all_rows ; performer 2 ; nyima funk } ; original airdate } ; september 3 , 2013 } }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to february .",
            "output": [
                "most_eq { all_rows ; date ; february }"
            ]
        },
        {
            "input": "for the sport records of all rows , most of them fuzzily match to football .",
            "output": [
                "most_eq { all_rows ; sport ; football }"
            ]
        },
        {
            "input": "for the city of license records of all rows , all of them fuzzily match to virginia .",
            "output": [
                "all_eq { all_rows ; city of license ; virginia }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; crowd ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose single record fuzzily matches to wild eyes . take the other details record of this row . select the rows whose single record fuzzily matches to tell the world . take the other details record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; single ; wild eyes } ; other details } ; hop { filter_eq { all_rows ; single ; tell the world } ; other details } }"
            ]
        },
        {
            "input": "select the rows whose junctions record fuzzily matches to sh 359 us 59 . select the row whose route name record of these rows is 1st maximum . the termini record of this row is aguilares , texas us 59 .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; junctions ; sh 359 us 59 } ; route name ; 1 } ; termini } ; aguilares , texas us 59 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 28 - 17 . there is only one such row in the table . the date record of this unqiue row is september 9 , 1962 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; 28 - 17 } } ; eq { hop { filter_eq { all_rows ; result ; 28 - 17 } ; date } ; september 9 , 1962 } }"
            ]
        },
        {
            "input": "the sum of the played record of all rows is 264 .",
            "output": [
                "round_eq { sum { all_rows ; played } ; 264 }"
            ]
        },
        {
            "input": "select the row whose number of viewers record of all rows is 2nd maximum . the show record of this row is warehouse 13 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of viewers ; 2 } ; show } ; warehouse 13 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to tony goldwyn . there is only one such row in the table . the title record of this unqiue row is in which sam receives an unexpected visitor .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; tony goldwyn } } ; eq { hop { filter_eq { all_rows ; directed by ; tony goldwyn } ; title } ; in which sam receives an unexpected visitor } }"
            ]
        },
        {
            "input": "select the rows whose round of 16 record does not match to did not advance . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; round of 16 ; did not advance } } ; 4 }"
            ]
        },
        {
            "input": "the average of the try bonus record of all rows is 5 .",
            "output": [
                "round_eq { avg { all_rows ; try bonus } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to chris garner . take the years in toronto record of this row . select the rows whose player record fuzzily matches to dion glover . take the years in toronto record of this row . the second record is 7 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; chris garner } ; years in toronto } ; hop { filter_eq { all_rows ; player ; dion glover } ; years in toronto } } ; -7 years }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to norfolk . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; norfolk } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose semifinalists record of all rows is 2nd maximum . the country / territory record of this row is south africa .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; semifinalists ; 2 } ; country / territory } ; south africa }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { all_rows ; result ; l }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re-elected . among these rows , select the rows whose first elected record fuzzily matches to 193 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; result ; re-elected } ; first elected ; 193 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 7.125 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 7.125 }"
            ]
        },
        {
            "input": "for the language records of all rows , most of them fuzzily match to hindi .",
            "output": [
                "most_eq { all_rows ; language ; hindi }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to victoria park . there is only one such row in the table . the home team record of this unqiue row is collingwood . the away team record of this unqiue row is north melbourne .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; victoria park } } ; and { eq { hop { filter_eq { all_rows ; venue ; victoria park } ; home team } ; collingwood } ; eq { hop { filter_eq { all_rows ; venue ; victoria park } ; away team } ; north melbourne } } }"
            ]
        },
        {
            "input": "for the season outcome records of all rows , most of them fuzzily match to failed to make playoffs .",
            "output": [
                "most_eq { all_rows ; season outcome ; failed to make playoffs }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to fitzroy . take the crowd record of this row . select the rows whose home team record fuzzily matches to geelong . take the crowd record of this row . the first record is greater than the second record . the away team record of the first row is footscray . the away team record of the second row is st kilda .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; crowd } ; hop { filter_eq { all_rows ; home team ; geelong } ; crowd } } ; and { eq { hop { filter_eq { all_rows ; home team ; fitzroy } ; away team } ; footscray } ; eq { hop { filter_eq { all_rows ; home team ; geelong } ; away team } ; st kilda } } }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to north carolina . for the nba draft records of these rows , all of them fuzzily match to undrafted .",
            "output": [
                "all_eq { filter_eq { all_rows ; college ; north carolina } ; nba draft ; undrafted }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to february 2 . take the attendance record of this row . select the rows whose date record fuzzily matches to february 29 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; february 2 } ; attendance } ; hop { filter_eq { all_rows ; date ; february 29 } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose area ( km square ) record is less than 100000 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_less { all_rows ; area ( km square ) ; 100000 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to transfer . among these rows , select the rows whose moving to record fuzzily matches to milan . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; type ; transfer } ; moving to ; milan } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to team lotus . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; entrant ; team lotus } } ; 4 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to aus .",
            "output": [
                "most_eq { all_rows ; result ; aus }"
            ]
        },
        {
            "input": "for the service records of all rows , most of them fuzzily match to freight .",
            "output": [
                "most_eq { all_rows ; service ; freight }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 143 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 143 }"
            ]
        },
        {
            "input": "the 2nd maximum 187 kg record of all rows is 215 kg . the world record record of the row with 2nd maximum 187 kg record is olympic record .",
            "output": [
                "and { eq { nth_max { all_rows ; 187 kg ; 2 } ; 215 kg } ; eq { hop { nth_argmax { all_rows ; 187 kg ; 2 } ; world record } ; olympic record } }"
            ]
        },
        {
            "input": "select the rows whose lost record is equal to 0 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; lost ; 0 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to johannesburg . the maximum date record of these rows is 23 - 03 - 2003 .",
            "output": [
                "eq { max { filter_eq { all_rows ; venue ; johannesburg } ; date } ; 23 - 03 - 2003 }"
            ]
        },
        {
            "input": "select the rows whose time record fuzzily matches to accident . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time ; accident } } ; 4 }"
            ]
        },
        {
            "input": "for the games records of all rows , all of them are equal to 6 .",
            "output": [
                "all_eq { all_rows ; games ; 6 }"
            ]
        },
        {
            "input": "select the row whose game record of all rows is 2nd minimum . the date record of this row is march 6 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; game ; 2 } ; date } ; march 6 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to ohio state . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; college ; ohio state } } ; 3 }"
            ]
        },
        {
            "input": "for the commenced operations records of all rows , most of them are greater than 2000 .",
            "output": [
                "most_greater { all_rows ; commenced operations ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose branding record fuzzily matches to mom 's radio 88.3 cebu . take the power ( kw ) record of this row . select the rows whose branding record fuzzily matches to mom 's radio 101.5 tacloban . take the power ( kw ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; branding ; mom 's radio 88.3 cebu } ; power ( kw ) } ; hop { filter_eq { all_rows ; branding ; mom 's radio 101.5 tacloban } ; power ( kw ) } }"
            ]
        },
        {
            "input": "select the row whose 1st week sales record of all rows is 2nd maximum . the artist record of this row is ti .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; 1st week sales ; 2 } ; artist } ; ti }"
            ]
        },
        {
            "input": "select the rows whose spaceport record fuzzily matches to baikonur cosmodrome , kazakhstan . the sum of the flights record of these rows is 123 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; spaceport ; baikonur cosmodrome , kazakhstan } ; flights } ; 123 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to mercedes . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tournament ; mercedes } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the league cup record of this row is 2 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; league cup } ; 2 }"
            ]
        },
        {
            "input": "the average of the laps record of all rows is 259 .",
            "output": [
                "round_eq { avg { all_rows ; laps } ; 259 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to coconino . take the hancock record of this row . select the rows whose county record fuzzily matches to graham . take the hancock record of this row . the first record is greater than the second record . the hancock record of the first row is 1504 . the hancock record of the second row is 322 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; county ; coconino } ; hancock } ; hop { filter_eq { all_rows ; county ; graham } ; hancock } } ; and { eq { hop { filter_eq { all_rows ; county ; coconino } ; hancock } ; 1504 } ; eq { hop { filter_eq { all_rows ; county ; graham } ; hancock } ; 322 } } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 22.8 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 22.8 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 78,000 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 78,000 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to norway . there is only one such row in the table . the name record of this unqiue row is h\u00e5logaland bridge .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; norway } } ; eq { hop { filter_eq { all_rows ; country ; norway } ; name } ; h\u00e5logaland bridge } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is minimum . the incumbent record of this row is henry garland dupr\u00e9 .",
            "output": [
                "eq { hop { argmin { all_rows ; first elected } ; incumbent } ; henry garland dupr\u00e9 }"
            ]
        },
        {
            "input": "select the rows whose engines record fuzzily matches to 2 , bergen diesel , brm - 8 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; engines ; 2 , bergen diesel , brm - 8 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to running back . there is only one such row in the table . the player record of this unqiue row is tom moore .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; running back } } ; eq { hop { filter_eq { all_rows ; position ; running back } ; player } ; tom moore } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to cd fas . take the goals conceded record of this row . select the rows whose team record fuzzily matches to cd arcense . take the goals conceded record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; cd fas } ; goals conceded } ; hop { filter_eq { all_rows ; team ; cd arcense } ; goals conceded } }"
            ]
        },
        {
            "input": "select the rows whose joined record is greater than 1981 . the average of the enrollment record of these rows is 2767 .",
            "output": [
                "round_eq { avg { filter_greater { all_rows ; joined ; 1981 } ; enrollment } ; 2767 }"
            ]
        },
        {
            "input": "for the successor records of all rows , most of them fuzzily match to ( d ) .",
            "output": [
                "most_eq { all_rows ; successor ; ( d ) }"
            ]
        },
        {
            "input": "select the row whose distance ( km ) record of all rows is 2nd maximum . the station record of this row is higashi - ishinden .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; distance ( km ) ; 2 } ; station } ; higashi - ishinden }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { all_rows ; result ; w }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to public broadcasting . there is only one such row in the table . the branding record of this unqiue row is cbc radio 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; format ; public broadcasting } } ; eq { hop { filter_eq { all_rows ; format ; public broadcasting } ; branding } ; cbc radio 2 } }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are greater than or equal to 3 .",
            "output": [
                "most_greater_eq { all_rows ; wins ; 3 }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is minimum . the name record of this row is anthony brock .",
            "output": [
                "eq { hop { argmin { all_rows ; height } ; name } ; anthony brock }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2010 . take the races record of this row . select the rows whose season record fuzzily matches to 2009 . take the races record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2010 } ; races } ; hop { filter_eq { all_rows ; season ; 2009 } ; races } }"
            ]
        },
        {
            "input": "for the gold records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; gold ; 0 }"
            ]
        },
        {
            "input": "select the rows whose constellation record fuzzily matches to hydra . there is only one such row in the table . the ngc number record of this unqiue row is 5078 .",
            "output": [
                "and { only { filter_eq { all_rows ; constellation ; hydra } } ; eq { hop { filter_eq { all_rows ; constellation ; hydra } ; ngc number } ; 5078 } }"
            ]
        },
        {
            "input": "for the poles records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; poles ; 0 }"
            ]
        },
        {
            "input": "select the row whose yards record of all rows is maximum . the player record of this row is lonnie ford .",
            "output": [
                "eq { hop { argmax { all_rows ; yards } ; player } ; lonnie ford }"
            ]
        },
        {
            "input": "select the rows whose height record fuzzily matches to 6 - 4 . there is only one such row in the table . the name record of this unqiue row is stephanie murphy .",
            "output": [
                "and { only { filter_eq { all_rows ; height ; 6 - 4 } } ; eq { hop { filter_eq { all_rows ; height ; 6 - 4 } ; name } ; stephanie murphy } }"
            ]
        },
        {
            "input": "select the rows whose villages record is equal to 25 . there is only one such row in the table . the name record of this unqiue row is wuji town .",
            "output": [
                "and { only { filter_eq { all_rows ; villages ; 25 } } ; eq { hop { filter_eq { all_rows ; villages ; 25 } ; name } ; wuji town } }"
            ]
        },
        {
            "input": "select the rows whose airport record fuzzily matches to tenerife sur . take the 2012 record of this row . select the rows whose airport record fuzzily matches to kotoka international airport . take the 2012 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; airport ; tenerife sur } ; 2012 } ; hop { filter_eq { all_rows ; airport ; kotoka international airport } ; 2012 } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is maximum . the date record of this row is april 30 .",
            "output": [
                "eq { hop { argmax { all_rows ; location attendance } ; date } ; april 30 }"
            ]
        },
        {
            "input": "select the row whose area ( hectares ) record of all rows is maximum . the municipality record of this row is caramoran .",
            "output": [
                "eq { hop { argmax { all_rows ; area ( hectares ) } ; municipality } ; caramoran }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to robert l f sikes . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to donald ray matthews . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; robert l f sikes } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; donald ray matthews } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose wsu year ( s ) record fuzzily matches to 1959 - 62 . there is only one such row in the table . the name record of this unqiue row is gene wiley .",
            "output": [
                "and { only { filter_eq { all_rows ; wsu year ( s ) ; 1959 - 62 } } ; eq { hop { filter_eq { all_rows ; wsu year ( s ) ; 1959 - 62 } ; name } ; gene wiley } }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 120528 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 120528 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to winnipeg , canada . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; winnipeg , canada } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to united kingdom . take the silver record of this row . select the rows whose nation record fuzzily matches to finland . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; united kingdom } ; silver } ; hop { filter_eq { all_rows ; nation ; finland } ; silver } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to empire . take the order record of this row . select the rows whose title record fuzzily matches to hollywood . take the order record of this row . the first record is less than the second record . the order record of the first row is 4 . the order record of the second row is 5 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; title ; empire } ; order } ; hop { filter_eq { all_rows ; title ; hollywood } ; order } } ; and { eq { hop { filter_eq { all_rows ; title ; empire } ; order } ; 4 } ; eq { hop { filter_eq { all_rows ; title ; hollywood } ; order } ; 5 } } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 16470 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 16470 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; democratic } } ; 4 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 1,357 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 1,357 }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 1st maximum . the team record of this row is knicks .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 1 } ; team } ; knicks }"
            ]
        },
        {
            "input": "the average of the apparent magnitude record of all rows is 11.7 .",
            "output": [
                "round_eq { avg { all_rows ; apparent magnitude } ; 11.7 }"
            ]
        },
        {
            "input": "select the rows whose reason record fuzzily matches to death . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; reason ; death } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose launched record of all rows is minimum . the ship name record of this row is brp pangasinan .",
            "output": [
                "eq { hop { argmin { all_rows ; launched } ; ship name } ; brp pangasinan }"
            ]
        },
        {
            "input": "select the rows whose joined record is equal to 1996 . among these rows , select the rows whose location record fuzzily matches to tennessee . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; joined ; 1996 } ; location ; tennessee } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose round record is equal to 7 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; round ; 7 } } ; 2 }"
            ]
        },
        {
            "input": "for the original air date records of all rows , most of them are less than or equal to february 2005 .",
            "output": [
                "most_less_eq { all_rows ; original air date ; february 2005 }"
            ]
        },
        {
            "input": "select the rows whose maximum seating capacity record fuzzily matches to unknown . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; maximum seating capacity ; unknown } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to fedor dmitriev . take the year born record of this row . select the rows whose player record fuzzily matches to anton ponkrashov . take the year born record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; fedor dmitriev } ; year born } ; hop { filter_eq { all_rows ; player ; anton ponkrashov } ; year born } }"
            ]
        },
        {
            "input": "for the manner of departure records of all rows , most of them fuzzily match to sacked .",
            "output": [
                "most_eq { all_rows ; manner of departure ; sacked }"
            ]
        },
        {
            "input": "for the long records of all rows , most of them are less than 10 .",
            "output": [
                "most_less { all_rows ; long ; 10 }"
            ]
        },
        {
            "input": "for the nba draft records of all rows , most of them fuzzily match to has not yet declared for the nba draft .",
            "output": [
                "most_eq { all_rows ; nba draft ; has not yet declared for the nba draft }"
            ]
        },
        {
            "input": "select the rows whose sport record fuzzily matches to boxing . among these rows , select the rows whose event record fuzzily matches to men 's light flyweight . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; sport ; boxing } ; event ; men 's light flyweight } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 29 november 2007 . take the attendance record of this row . select the rows whose date record fuzzily matches to 30 november 2007 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 29 november 2007 } ; attendance } ; hop { filter_eq { all_rows ; date ; 30 november 2007 } ; attendance } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the series record of this row is formula renault uk .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; series } ; formula renault uk }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 743 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 743 }"
            ]
        },
        {
            "input": "for the place records of all rows , most of them fuzzily match to t5 .",
            "output": [
                "most_eq { all_rows ; place ; t5 }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to united kingdom .",
            "output": [
                "most_eq { all_rows ; country ; united kingdom }"
            ]
        },
        {
            "input": "select the rows whose to par record is less than 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { all_rows ; to par ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose padilla municipality record is greater than 10000 . there is only one such row in the table . the language record of this unqiue row is spanish .",
            "output": [
                "and { only { filter_greater { all_rows ; padilla municipality ; 10000 } } ; eq { hop { filter_greater { all_rows ; padilla municipality ; 10000 } ; language } ; spanish } }"
            ]
        },
        {
            "input": "the average of the joined record of all rows is 2005 .",
            "output": [
                "round_eq { avg { all_rows ; joined } ; 2005 }"
            ]
        },
        {
            "input": "select the row whose height feet / metres record of all rows is maximum . the name record of this row is dravska vrata .",
            "output": [
                "eq { hop { argmax { all_rows ; height feet / metres } ; name } ; dravska vrata }"
            ]
        },
        {
            "input": "select the row whose total elected 2001 record of all rows is 2nd maximum . the party record of this row is democratic party .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total elected 2001 ; 2 } ; party } ; democratic party }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 14.56 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 14.56 }"
            ]
        },
        {
            "input": "select the row whose losses record of all rows is 2nd maximum . the club record of this row is club sestao .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; losses ; 2 } ; club } ; club sestao }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2011 . take the purse record of this row . select the rows whose year record fuzzily matches to 2005 . take the purse record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2011 } ; purse } ; hop { filter_eq { all_rows ; year ; 2005 } ; purse } }"
            ]
        },
        {
            "input": "select the rows whose timeslot ( edt ) record fuzzily matches to monday - friday 10:00 pm . there is only one such row in the table . the season record of this unqiue row is 10 .",
            "output": [
                "and { only { filter_eq { all_rows ; timeslot ( edt ) ; monday - friday 10:00 pm } } ; eq { hop { filter_eq { all_rows ; timeslot ( edt ) ; monday - friday 10:00 pm } ; season } ; 10 } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to alfred binns . take the total dismissals record of this row . select the rows whose player record fuzzily matches to ivor mendonca . take the total dismissals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; alfred binns } ; total dismissals } ; hop { filter_eq { all_rows ; player ; ivor mendonca } ; total dismissals } }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 100 . the average of the points record of these rows is 71.4 .",
            "output": [
                "round_eq { avg { filter_less { all_rows ; points ; 100 } ; points } ; 71.4 }"
            ]
        },
        {
            "input": "select the rows whose founded record is less than 1800 . there is only one such row in the table . the institution record of this unqiue row is university of louisville .",
            "output": [
                "and { only { filter_less { all_rows ; founded ; 1800 } } ; eq { hop { filter_less { all_rows ; founded ; 1800 } ; institution } ; university of louisville } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to arnold palmer . take the score record of this row . select the rows whose player record fuzzily matches to kermit zarley . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; arnold palmer } ; score } ; hop { filter_eq { all_rows ; player ; kermit zarley } ; score } }"
            ]
        },
        {
            "input": "select the row whose episode count record of all rows is maximum . the character record of this row is professor leo dalton .",
            "output": [
                "eq { hop { argmax { all_rows ; episode count } ; character } ; professor leo dalton }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is 7th minimum . the series record of this row is gp2 series .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; position ; 7 } ; series } ; gp2 series }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 1135404 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 1135404 }"
            ]
        },
        {
            "input": "select the rows whose h / a record fuzzily matches to a . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; h / a ; a } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose local name record fuzzily matches to det store korslaget . take the year premiered record of this row . select the rows whose local name record fuzzily matches to k\u00f6rslaget . take the year premiered record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; local name ; det store korslaget } ; year premiered } ; hop { filter_eq { all_rows ; local name ; k\u00f6rslaget } ; year premiered } }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to delonte west . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; high assists ; delonte west } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . the 2nd minimum date record of these rows is november 28 , 1999 .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; result ; w } ; date ; 2 } ; november 28 , 1999 }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to chief justice . there is only one such row in the table . the name record of this unqiue row is federico hern\u00e1ndez denton .",
            "output": [
                "and { only { filter_eq { all_rows ; rank ; chief justice } } ; eq { hop { filter_eq { all_rows ; rank ; chief justice } ; name } ; federico hern\u00e1ndez denton } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to february . there is only one such row in the table . the event record of this unqiue row is indianapolis boat , sport & travel show .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; february } } ; eq { hop { filter_eq { all_rows ; date ; february } ; event } ; indianapolis boat , sport & travel show } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to wimbledon . select the row whose aces record of these rows is 1st maximum . the player record of this row is john isner .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; event ; wimbledon } ; aces ; 1 } ; player } ; john isner }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 48344 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 48344 }"
            ]
        },
        {
            "input": "select the row whose erp w record of all rows is 2nd maximum . the call sign record of this row is wriq .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; erp w ; 2 } ; call sign } ; wriq }"
            ]
        },
        {
            "input": "select the rows whose current status record fuzzily matches to abc affiliate owned by hearst television . there is only one such row in the table . the station record of this unqiue row is wcvb - tv 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; current status ; abc affiliate owned by hearst television } } ; eq { hop { filter_eq { all_rows ; current status ; abc affiliate owned by hearst television } ; station } ; wcvb - tv 1 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september . the average of the attendance record of these rows is 56,592 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; date ; september } ; attendance } ; 56,592 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to kabul .",
            "output": [
                "most_eq { all_rows ; location ; kabul }"
            ]
        },
        {
            "input": "select the rows whose year of election record fuzzily matches to 1951 . take the candidates elected record of this row . select the rows whose year of election record fuzzily matches to 1948 . take the candidates elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; year of election ; 1951 } ; candidates elected } ; hop { filter_eq { all_rows ; year of election ; 1948 } ; candidates elected } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is maximum . the date record of this row is april 2 .",
            "output": [
                "eq { hop { argmax { all_rows ; location attendance } ; date } ; april 2 }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is 2nd maximum . the home arena record of this row is bird arena .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; capacity ; 2 } ; home arena } ; bird arena }"
            ]
        },
        {
            "input": "select the rows whose printer record fuzzily matches to avery dennison . for the face value records of these rows , all of them are greater than 35 .",
            "output": [
                "all_greater { filter_eq { all_rows ; printer ; avery dennison } ; face value ; 35 }"
            ]
        },
        {
            "input": "select the rows whose playoffs record fuzzily matches to champion . there is only one such row in the table . the year record of this unqiue row is 1989 .",
            "output": [
                "and { only { filter_eq { all_rows ; playoffs ; champion } } ; eq { hop { filter_eq { all_rows ; playoffs ; champion } ; year } ; 1989 } }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to m williams . there is only one such row in the table . the date record of this unqiue row is may 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; high points ; m williams } } ; eq { hop { filter_eq { all_rows ; high points ; m williams } ; date } ; may 2 } }"
            ]
        },
        {
            "input": "select the row whose first aired record of all rows is minimum . the entrepreneur ( s ) record of this row is james seddon .",
            "output": [
                "eq { hop { argmin { all_rows ; first aired } ; entrepreneur ( s ) } ; james seddon }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the year record of this row is 2008 . the date record of this row is sunday , november 16 .",
            "output": [
                "and { eq { hop { argmax { all_rows ; attendance } ; year } ; 2008 } ; eq { hop { argmax { all_rows ; attendance } ; date } ; sunday , november 16 } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to andrew . take the date record of this row . select the rows whose name record fuzzily matches to amanda . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; andrew } ; date } ; hop { filter_eq { all_rows ; name ; amanda } ; date } }"
            ]
        },
        {
            "input": "select the rows whose series record fuzzily matches to british formula three . take the points record of this row . select the rows whose series record fuzzily matches to formula bmw americas . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; series ; british formula three } ; points } ; hop { filter_eq { all_rows ; series ; formula bmw americas } ; points } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record does not match to staples center . for the location attendance records of these rows , all of them are greater than 18500 .",
            "output": [
                "all_greater { filter_not_eq { all_rows ; location attendance ; staples center } ; location attendance ; 18500 }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to oldsmobile . there is only one such row in the table . the driver record of this unqiue row is steve grissom .",
            "output": [
                "and { only { filter_eq { all_rows ; manufacturer ; oldsmobile } } ; eq { hop { filter_eq { all_rows ; manufacturer ; oldsmobile } ; driver } ; steve grissom } }"
            ]
        },
        {
            "input": "select the rows whose laid down record fuzzily matches to july 1933 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; laid down ; july 1933 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose socialist labor ticket record fuzzily matches to ( none ) . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; socialist labor ticket ; ( none ) } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose opponent in the final record fuzzily matches to todd martin . there is only one such row in the table . the date record of this unqiue row is 28 february 1993 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; surface ; hard } ; opponent in the final ; todd martin } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; opponent in the final ; todd martin } ; date } ; 28 february 1993 } }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 31 july 1954 .",
            "output": [
                "all_eq { all_rows ; date ; 31 july 1954 }"
            ]
        },
        {
            "input": "select the rows whose town ships record is equal to 18 . there is only one such row in the table . the state / region record of this unqiue row is kachin state .",
            "output": [
                "and { only { filter_eq { all_rows ; town ships ; 18 } } ; eq { hop { filter_eq { all_rows ; town ships ; 18 } ; state / region } ; kachin state } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to forward-center . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; forward-center } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose starts record of all rows is maximum . the year record of this row is 2001 .",
            "output": [
                "eq { hop { argmax { all_rows ; starts } ; year } ; 2001 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to kara lynn joyce . take the time record of this row . select the rows whose name record fuzzily matches to aliaksandra herasimenia . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; kara lynn joyce } ; time } ; hop { filter_eq { all_rows ; name ; aliaksandra herasimenia } ; time } }"
            ]
        },
        {
            "input": "select the rows whose years in orlando record fuzzily matches to present . there is only one such row in the table . the player record of this unqiue row is victor oladipo .",
            "output": [
                "and { only { filter_eq { all_rows ; years in orlando ; present } } ; eq { hop { filter_eq { all_rows ; years in orlando ; present } ; player } ; victor oladipo } }"
            ]
        },
        {
            "input": "for the win % records of all rows , most of them are greater than 0 .",
            "output": [
                "most_greater { all_rows ; win % ; 0 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to luxembourg . there is only one such row in the table . the season record of this unqiue row is 1978 - 79 .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; luxembourg } } ; eq { hop { filter_eq { all_rows ; country ; luxembourg } ; season } ; 1978 - 79 } }"
            ]
        },
        {
            "input": "select the rows whose television record fuzzily matches to espn2 . the sum of the attendance record of these rows is 44912 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; television ; espn2 } ; attendance } ; 44912 }"
            ]
        },
        {
            "input": "select the row whose weight ( kg ) record of all rows is minimum . the race record of this row is cox plate .",
            "output": [
                "eq { hop { argmin { all_rows ; weight ( kg ) } ; race } ; cox plate }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 7 march 2008 . take the attendance record of this row . select the rows whose date record fuzzily matches to 8 march 2008 . take the attendance record of this row . the first record is less than the second record . the attendance record of the first row is 17225 . the attendance record of the second row is 18279 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; date ; 7 march 2008 } ; attendance } ; hop { filter_eq { all_rows ; date ; 8 march 2008 } ; attendance } } ; and { eq { hop { filter_eq { all_rows ; date ; 7 march 2008 } ; attendance } ; 17225 } ; eq { hop { filter_eq { all_rows ; date ; 8 march 2008 } ; attendance } ; 18279 } } }"
            ]
        },
        {
            "input": "select the rows whose issue price record is equal to 45.95 . there is only one such row in the table . the year record of this unqiue row is 2007 . the theme record of this unqiue row is trumpeter swan .",
            "output": [
                "and { only { filter_eq { all_rows ; issue price ; 45.95 } } ; and { eq { hop { filter_eq { all_rows ; issue price ; 45.95 } ; year } ; 2007 } ; eq { hop { filter_eq { all_rows ; issue price ; 45.95 } ; theme } ; trumpeter swan } } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 16000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 16000 }"
            ]
        },
        {
            "input": "select the row whose number of seasons in top division record of all rows is maximum . the club record of this row is sarajevo b , c .",
            "output": [
                "eq { hop { argmax { all_rows ; number of seasons in top division } ; club } ; sarajevo b , c }"
            ]
        },
        {
            "input": "select the rows whose original album record fuzzily matches to previously unreleased . among these rows , select the rows whose time record is greater than 4:00 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; original album ; previously unreleased } ; time ; 4:00 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to serbia . there is only one such row in the table . the player record of this unqiue row is aleksandar radojevi\u00e4 \u2021 .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; serbia } } ; eq { hop { filter_eq { all_rows ; nationality ; serbia } ; player } ; aleksandar radojevi\u00e4 \u2021 } }"
            ]
        },
        {
            "input": "the average of the population record of all rows is 3289 .",
            "output": [
                "round_eq { avg { all_rows ; population } ; 3289 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to quarterback . there is only one such row in the table . the name record of this unqiue row is bob gagliano .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; quarterback } } ; eq { hop { filter_eq { all_rows ; position ; quarterback } ; name } ; bob gagliano } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the nation record of this row is soviet union .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; nation } ; soviet union }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to pepsi center . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location attendance ; pepsi center } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is maximum . the chassis record of this row is ags jh25b ags jh27 .",
            "output": [
                "eq { hop { argmax { all_rows ; year } ; chassis } ; ags jh25b ags jh27 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to lionel cann . take the runs record of this row . select the rows whose player record fuzzily matches to dean minors . take the runs record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; lionel cann } ; runs } ; hop { filter_eq { all_rows ; player ; dean minors } ; runs } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 20000 . among these rows , select the rows whose away team score record is equal to 13.11 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; crowd ; 20000 } ; away team score ; 13.11 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the year record of this row is 2006 .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; year } ; 2006 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to st louis blues . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; opponent ; st louis blues } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to punter . there is only one such row in the table . the name record of this unqiue row is adam podlesh .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; punter } } ; eq { hop { filter_eq { all_rows ; position ; punter } ; name } ; adam podlesh } }"
            ]
        },
        {
            "input": "for the national team records of all rows , all of them fuzzily match to brazil .",
            "output": [
                "all_eq { all_rows ; national team ; brazil }"
            ]
        },
        {
            "input": "for the owner ( s ) records of all rows , most of them fuzzily match to private owner .",
            "output": [
                "most_eq { all_rows ; owner ( s ) ; private owner }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to clark . take the casinos record of this row . select the rows whose county record fuzzily matches to south lake tahoe . take the casinos record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; county ; clark } ; casinos } ; hop { filter_eq { all_rows ; county ; south lake tahoe } ; casinos } }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 8 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 8 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 66000 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 66000 }"
            ]
        },
        {
            "input": "for the open cup records of all rows , most of them fuzzily match to did not qualify .",
            "output": [
                "most_eq { all_rows ; open cup ; did not qualify }"
            ]
        },
        {
            "input": "the 1st maximum crowd record of all rows is 45848 . the venue record of the row with 1st maximum crowd record is mcg .",
            "output": [
                "and { eq { nth_max { all_rows ; crowd ; 1 } ; 45848 } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; mcg } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to toowoomba . there is only one such row in the table . the date record of this unqiue row is 25 may 1988 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; toowoomba } } ; eq { hop { filter_eq { all_rows ; venue ; toowoomba } ; date } ; 25 may 1988 } }"
            ]
        },
        {
            "input": "select the rows whose built record fuzzily matches to 19th . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; built ; 19th } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose bronze record is equal to 1 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; bronze ; 1 } } ; 3 }"
            ]
        },
        {
            "input": "for the played records of all rows , most of them are equal to 38 .",
            "output": [
                "most_eq { all_rows ; played ; 38 }"
            ]
        },
        {
            "input": "select the rows whose opponents record fuzzily matches to anne hobbs andrew castle . take the year record of this row . select the rows whose opponents record fuzzily matches to gretchen magers kelly jones . take the year record of this row . the second record is 1 year larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; opponents ; anne hobbs andrew castle } ; year } ; hop { filter_eq { all_rows ; opponents ; gretchen magers kelly jones } ; year } } ; -1 year }"
            ]
        },
        {
            "input": "select the rows whose company record fuzzily matches to royal dutch shell . take the market value ( billion ) record of this row . select the rows whose company record fuzzily matches to american international group . take the market value ( billion ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; company ; royal dutch shell } ; market value ( billion ) } ; hop { filter_eq { all_rows ; company ; american international group } ; market value ( billion ) } }"
            ]
        },
        {
            "input": "for the nationality records of all rows , all of them fuzzily match to united states .",
            "output": [
                "all_eq { all_rows ; nationality ; united states }"
            ]
        },
        {
            "input": "select the row whose 13.5 - inch / 1400lb record of all rows is maximum . the ship record of this row is k\u00f6nig .",
            "output": [
                "eq { hop { argmax { all_rows ; 13.5 - inch / 1400lb } ; ship } ; k\u00f6nig }"
            ]
        },
        {
            "input": "the average of the height record of all rows is 2.01 .",
            "output": [
                "round_eq { avg { all_rows ; height } ; 2.01 }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to france . take the against record of this row . select the rows whose opposing teams record fuzzily matches to wales . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposing teams ; france } ; against } ; hop { filter_eq { all_rows ; opposing teams ; wales } ; against } }"
            ]
        },
        {
            "input": "the average of the average record of all rows is 25.2 .",
            "output": [
                "round_eq { avg { all_rows ; average } ; 25.2 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to jonathan shapiro . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; jonathan shapiro } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to los angeles rams . the average of the attendance record of these rows is 68,437 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; opponent ; los angeles rams } ; attendance } ; 68,437 }"
            ]
        },
        {
            "input": "select the row whose final placing record of all rows is minimum . the series record of this row is porsche carrera cup germany .",
            "output": [
                "eq { hop { argmin { all_rows ; final placing } ; series } ; porsche carrera cup germany }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to philadelphia . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; visitor ; philadelphia } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is 2nd maximum . the call sign record of this row is w294aj .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; call sign } ; w294aj }"
            ]
        },
        {
            "input": "select the rows whose opponent team record fuzzily matches to latvia . take the outcome record of this row . select the rows whose opponent team record fuzzily matches to iceland . take the outcome record of this row . the first record fuzzily matches to the second record . the outcome record of the first row is winner . the outcome record of the second row is winner .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; opponent team ; latvia } ; outcome } ; hop { filter_eq { all_rows ; opponent team ; iceland } ; outcome } } ; and { eq { hop { filter_eq { all_rows ; opponent team ; latvia } ; outcome } ; winner } ; eq { hop { filter_eq { all_rows ; opponent team ; iceland } ; outcome } ; winner } } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the tie no record of this row is 51 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; tie no } ; 51 }"
            ]
        },
        {
            "input": "select the rows whose year record is less than 2010 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; year ; 2010 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1978 . the sum of the result record of these rows is 62 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 1978 } ; result } ; 62 }"
            ]
        },
        {
            "input": "for the monounsaturated fat records of all rows , most of them are greater than or equal to 20 g .",
            "output": [
                "most_greater_eq { all_rows ; monounsaturated fat ; 20 g }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to ottawa senators . take the february record of this row . select the rows whose opponent record fuzzily matches to nashville predators . take the february record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; ottawa senators } ; february } ; hop { filter_eq { all_rows ; opponent ; nashville predators } ; february } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2008 . there is only one such row in the table . the tournament record of this unqiue row is vietnam open grand prix .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 2008 } } ; eq { hop { filter_eq { all_rows ; year ; 2008 } ; tournament } ; vietnam open grand prix } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to randwick . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; randwick } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose uncut run time record of all rows is 2nd maximum . the title record of this row is addio zio tom .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; uncut run time ; 2 } ; title } ; addio zio tom }"
            ]
        },
        {
            "input": "the average of the overall record of all rows is 176.09 .",
            "output": [
                "round_eq { avg { all_rows ; overall } ; 176.09 }"
            ]
        },
        {
            "input": "select the rows whose top - 25 record is equal to 6 . there is only one such row in the table . the tournament record of this unqiue row is masters tournament .",
            "output": [
                "and { only { filter_eq { all_rows ; top - 25 ; 6 } } ; eq { hop { filter_eq { all_rows ; top - 25 ; 6 } ; tournament } ; masters tournament } }"
            ]
        },
        {
            "input": "select the row whose games record of all rows is maximum . the player record of this row is kevin anderson .",
            "output": [
                "eq { hop { argmax { all_rows ; games } ; player } ; kevin anderson }"
            ]
        },
        {
            "input": "for the venue records of all rows , most of them fuzzily match to estadio cuscatl\u00e1n , san salvador , el salvador .",
            "output": [
                "most_eq { all_rows ; venue ; estadio cuscatl\u00e1n , san salvador , el salvador }"
            ]
        },
        {
            "input": "select the rows whose races record is less than 10 . there is only one such row in the table . the drivers record of this unqiue row is ben hanley .",
            "output": [
                "and { only { filter_less { all_rows ; races ; 10 } } ; eq { hop { filter_less { all_rows ; races ; 10 } ; drivers } ; ben hanley } }"
            ]
        },
        {
            "input": "select the row whose orbital period record of all rows is minimum . the planet record of this row is alpha centauri bb .",
            "output": [
                "eq { hop { argmin { all_rows ; orbital period } ; planet } ; alpha centauri bb }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to resigned . there is only one such row in the table . the outgoing manager record of this unqiue row is miguel brindisi .",
            "output": [
                "and { only { filter_eq { all_rows ; manner of departure ; resigned } } ; eq { hop { filter_eq { all_rows ; manner of departure ; resigned } ; outgoing manager } ; miguel brindisi } }"
            ]
        },
        {
            "input": "select the rows whose 1953 record fuzzily matches to nathan karp . take the total record of this row . select the rows whose 1953 record fuzzily matches to david l weiss . take the total record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; 1953 ; nathan karp } ; total } ; hop { filter_eq { all_rows ; 1953 ; david l weiss } ; total } }"
            ]
        },
        {
            "input": "the average of the downstream rate record of all rows is 14 .",
            "output": [
                "round_eq { avg { all_rows ; downstream rate } ; 14 }"
            ]
        },
        {
            "input": "select the rows whose music director record fuzzily matches to dharan . there is only one such row in the table . the song title record of this unqiue row is anti pettukundhuna .",
            "output": [
                "and { only { filter_eq { all_rows ; music director ; dharan } } ; eq { hop { filter_eq { all_rows ; music director ; dharan } ; song title } ; anti pettukundhuna } }"
            ]
        },
        {
            "input": "the average of the away team score record of all rows is 11.36 .",
            "output": [
                "round_eq { avg { all_rows ; away team score } ; 11.36 }"
            ]
        },
        {
            "input": "select the rows whose name record is arbitrary . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_all { all_rows ; name } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose couple record fuzzily matches to jason & edyta . take the score record of this row . select the rows whose couple record fuzzily matches to kristi & mark . take the score record of this row . the first record is less than the second record . the score record of the first row is 23 ( 8 , 7 , 8 ) . the score record of the second row is 27 ( 9 , 9 , 9 ) .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; couple ; jason & edyta } ; score } ; hop { filter_eq { all_rows ; couple ; kristi & mark } ; score } } ; and { eq { hop { filter_eq { all_rows ; couple ; jason & edyta } ; score } ; 23 ( 8 , 7 , 8 ) } ; eq { hop { filter_eq { all_rows ; couple ; kristi & mark } ; score } ; 27 ( 9 , 9 , 9 ) } } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to christian wellisch . take the round record of this row . select the rows whose opponent record fuzzily matches to pat harmon . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; christian wellisch } ; round } ; hop { filter_eq { all_rows ; opponent ; pat harmon } ; round } }"
            ]
        },
        {
            "input": "select the rows whose hometown record fuzzily matches to swakopmund . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; hometown ; swakopmund } } ; 2 }"
            ]
        },
        {
            "input": "for the decision records of all rows , most of them fuzzily match to lundqvist .",
            "output": [
                "most_eq { all_rows ; decision ; lundqvist }"
            ]
        },
        {
            "input": "select the rows whose tries against record is equal to 6 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tries against ; 6 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to mclaren - mercedes . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; constructor ; mclaren - mercedes } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose rushing yards record is less than 1000 . there is only one such row in the table . the year record of this unqiue row is 1989 .",
            "output": [
                "and { only { filter_less { all_rows ; rushing yards ; 1000 } } ; eq { hop { filter_less { all_rows ; rushing yards ; 1000 } ; year } ; 1989 } }"
            ]
        },
        {
            "input": "for the video records of all rows , most of them fuzzily match to 480i .",
            "output": [
                "most_eq { all_rows ; video ; 480i }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 1.4 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 1.4 }"
            ]
        },
        {
            "input": "for the tyres records of all rows , most of them fuzzily match to g .",
            "output": [
                "most_eq { all_rows ; tyres ; g }"
            ]
        },
        {
            "input": "the 3rd minimum rank record of all rows is 3 . the nation record of the row with 3rd minimum rank record is japan ( jpn ) . the silver record of the row with 3rd minimum rank record is 1 .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 3 } ; 3 } ; and { eq { hop { nth_argmin { all_rows ; rank ; 3 } ; nation } ; japan ( jpn ) } ; eq { hop { nth_argmin { all_rows ; rank ; 3 } ; silver } ; 1 } } }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to 193 . among these rows , select the rows whose candidates record fuzzily matches to unopposed . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; first elected ; 193 } ; candidates ; unopposed } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose date record is greater than or equal to december 3 , 1989 . among these rows , select the rows whose attendance record is greater than 10000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_greater_eq { all_rows ; date ; december 3 , 1989 } ; attendance ; 10000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose no record is greater than or equal to 8 . the sum of the us viewers ( millions ) record of these rows is 2.20 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; no ; 8 } ; us viewers ( millions ) } ; 2.20 }"
            ]
        },
        {
            "input": "for the hk viewers records of all rows , most of them are greater than 2 .",
            "output": [
                "most_greater { all_rows ; hk viewers ; 2 }"
            ]
        },
        {
            "input": "select the row whose money raised , 2q record of all rows is 3rd maximum . the candidate record of this row is john edwards .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; money raised , 2q ; 3 } ; candidate } ; john edwards }"
            ]
        },
        {
            "input": "the sum of the against record of all rows is 121 .",
            "output": [
                "round_eq { sum { all_rows ; against } ; 121 }"
            ]
        },
        {
            "input": "select the rows whose native american record fuzzily matches to 0.0 % . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; native american ; 0.0 % } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose highest record of all rows is maximum . the team record of this row is st johnstone .",
            "output": [
                "eq { hop { argmax { all_rows ; highest } ; team } ; st johnstone }"
            ]
        },
        {
            "input": "select the rows whose resolution record fuzzily matches to committed suicide . there is only one such row in the table . the name record of this unqiue row is jos\u00e9 manuel balmaceda .",
            "output": [
                "and { only { filter_eq { all_rows ; resolution ; committed suicide } } ; eq { hop { filter_eq { all_rows ; resolution ; committed suicide } ; name } ; jos\u00e9 manuel balmaceda } }"
            ]
        },
        {
            "input": "select the row whose duration record of all rows is 2nd maximum . the song record of this row is s\u00f3lo cristo .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; duration ; 2 } ; song } ; s\u00f3lo cristo }"
            ]
        },
        {
            "input": "for the year joined records of all rows , most of them are equal to 1998 .",
            "output": [
                "most_eq { all_rows ; year joined ; 1998 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; hard } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose diemaco model record fuzzily matches to lsw . take the barrel length record of this row . select the rows whose diemaco model record fuzzily matches to c8 . take the barrel length record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; diemaco model ; lsw } ; barrel length } ; hop { filter_eq { all_rows ; diemaco model ; c8 } ; barrel length } }"
            ]
        },
        {
            "input": "select the rows whose medal record fuzzily matches to silver . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; medal ; silver } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to chris bosh . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high rebounds ; chris bosh } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose years as tallest record is less than 1902 . among these rows , select the rows whose height ft ( m ) record is less than 200 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_less { all_rows ; years as tallest ; 1902 } ; height ft ( m ) ; 200 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to astralwerks . take the date record of this row . select the rows whose label record fuzzily matches to capitol records . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; label ; astralwerks } ; date } ; hop { filter_eq { all_rows ; label ; capitol records } ; date } }"
            ]
        },
        {
            "input": "select the rows whose wood record fuzzily matches to green . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; wood ; green } }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to stephanie vogt . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; stephanie vogt } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to fk valmiera . take the position record of this row . select the rows whose club record fuzzily matches to fk auda kekava . take the position record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; club ; fk valmiera } ; position } ; hop { filter_eq { all_rows ; club ; fk auda kekava } ; position } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jared borgetti . take the period record of this row . select the rows whose player record fuzzily matches to rafael figueroa . take the period record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; jared borgetti } ; period } ; hop { filter_eq { all_rows ; player ; rafael figueroa } ; period } }"
            ]
        },
        {
            "input": "for the start records of all rows , most of them are equal to 3 .",
            "output": [
                "most_eq { all_rows ; start ; 3 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the game site record of this row is commerzbank - arena .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; game site } ; commerzbank - arena }"
            ]
        },
        {
            "input": "select the row whose runs record of all rows is maximum . the opponent record of this row is queensland .",
            "output": [
                "eq { hop { argmax { all_rows ; runs } ; opponent } ; queensland }"
            ]
        },
        {
            "input": "select the row whose population ( 2010 census ) record of all rows is 1st maximum . the district record of this row is tondo .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ( 2010 census ) ; 1 } ; district } ; tondo }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to steve nash .",
            "output": [
                "most_eq { all_rows ; high assists ; steve nash }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 28 august 1954 .",
            "output": [
                "all_eq { all_rows ; date ; 28 august 1954 }"
            ]
        },
        {
            "input": "the sum of the runs record of all rows is 1974 .",
            "output": [
                "round_eq { sum { all_rows ; runs } ; 1974 }"
            ]
        },
        {
            "input": "select the rows whose power ( kw ) record fuzzily matches to 10 kw . among these rows , select the rows whose frequency record is greater than 100.0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; power ( kw ) ; 10 kw } ; frequency ; 100.0 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the population record of all rows is 28114713 .",
            "output": [
                "round_eq { avg { all_rows ; population } ; 28114713 }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to shawn seet . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; director ; shawn seet } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to noah m mason . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to sid simpson . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; noah m mason } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; sid simpson } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; clay } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to essendon . take the crowd record of this row . select the rows whose home team record fuzzily matches to footscray . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; essendon } ; crowd } ; hop { filter_eq { all_rows ; home team ; footscray } ; crowd } }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is minimum . the venue record of this row is toronto , canada .",
            "output": [
                "eq { hop { argmin { all_rows ; position } ; venue } ; toronto , canada }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 1419 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 1419 }"
            ]
        },
        {
            "input": "for the object type records of all rows , most of them fuzzily match to spiral galaxy .",
            "output": [
                "most_eq { all_rows ; object type ; spiral galaxy }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to iva . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; category ; iva } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to marc willers ( nzl ) . take the 1st run record of this row . select the rows whose name record fuzzily matches to mike day ( usa ) . take the 1st run record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; marc willers ( nzl ) } ; 1st run } ; hop { filter_eq { all_rows ; name ; mike day ( usa ) } ; 1st run } }"
            ]
        },
        {
            "input": "select the rows whose song record fuzzily matches to shady lady . take the points record of this row . select the rows whose song record fuzzily matches to peace will come . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; song ; shady lady } ; points } ; hop { filter_eq { all_rows ; song ; peace will come } ; points } }"
            ]
        },
        {
            "input": "select the row whose enrolment record of all rows is maximum . the school record of this row is pembroke school .",
            "output": [
                "eq { hop { argmax { all_rows ; enrolment } ; school } ; pembroke school }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 9 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 17128 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 17128 }"
            ]
        },
        {
            "input": "select the rows whose aspect record fuzzily matches to 4:3 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; aspect ; 4:3 } } ; 4 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 277 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 277 }"
            ]
        },
        {
            "input": "select the rows whose test record fuzzily matches to math . among these rows , select the rows whose number of students record is greater than 100000 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { filter_eq { all_rows ; test ; math } ; number of students ; 100000 } }"
            ]
        },
        {
            "input": "the 2nd minimum discovered record of all rows is 1988 .",
            "output": [
                "eq { nth_min { all_rows ; discovered ; 2 } ; 1988 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to la salle . there is only one such row in the table . the year record of this unqiue row is 2013 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; la salle } } ; eq { hop { filter_eq { all_rows ; opponent ; la salle } ; year } ; 2013 } }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to japan .",
            "output": [
                "most_eq { all_rows ; country ; japan }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to mg sport & racing ltd . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; mg sport & racing ltd } } ; 2 }"
            ]
        },
        {
            "input": "the average of the altitude ( km ) record of all rows is 244.35 .",
            "output": [
                "round_eq { avg { all_rows ; altitude ( km ) } ; 244.35 }"
            ]
        },
        {
            "input": "select the row whose weeks on top record of all rows is 2nd maximum . the song record of this row is ( just like ) starting over .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; weeks on top ; 2 } ; song } ; ( just like ) starting over }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 16 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 16 }"
            ]
        },
        {
            "input": "select the row whose number in service record of all rows is maximum . the class record of this row is dc .",
            "output": [
                "eq { hop { argmax { all_rows ; number in service } ; class } ; dc }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to simon . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; simon } } ; 5 }"
            ]
        },
        {
            "input": "for the elevation ( m ) records of all rows , all of them are greater than 1000 .",
            "output": [
                "all_greater { all_rows ; elevation ( m ) ; 1000 }"
            ]
        },
        {
            "input": "the average of the attendance / g record of all rows is 11360 .",
            "output": [
                "round_eq { avg { all_rows ; attendance / g } ; 11360 }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to shea stadium . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; game site ; shea stadium } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to montreal maroons . take the march record of this row . select the rows whose opponent record fuzzily matches to boston bruins . take the march record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; montreal maroons } ; march } ; hop { filter_eq { all_rows ; opponent ; boston bruins } ; march } }"
            ]
        },
        {
            "input": "the average of the rank record of all rows is 10th .",
            "output": [
                "round_eq { avg { all_rows ; rank } ; 10th }"
            ]
        },
        {
            "input": "select the rows whose former school record fuzzily matches to img academy . there is only one such row in the table . the name record of this unqiue row is jared swopshire .",
            "output": [
                "and { only { filter_eq { all_rows ; former school ; img academy } } ; eq { hop { filter_eq { all_rows ; former school ; img academy } ; name } ; jared swopshire } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 10 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 10 }"
            ]
        },
        {
            "input": "select the row whose number of seasons in superettan record of all rows is maximum . the club record of this row is assyriska ff .",
            "output": [
                "eq { hop { argmax { all_rows ; number of seasons in superettan } ; club } ; assyriska ff }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . among these rows , select the rows whose opponent record fuzzily matches to san diego chargers . there is only one such row in the table . the date record of this unqiue row is september 17 , 1972 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; result ; w } ; opponent ; san diego chargers } } ; eq { hop { filter_eq { filter_eq { all_rows ; result ; w } ; opponent ; san diego chargers } ; date } ; september 17 , 1972 } }"
            ]
        },
        {
            "input": "select the rows whose horse record fuzzily matches to colonel john . take the finished record of this row . select the rows whose horse record fuzzily matches to cowboy cal . take the finished record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; horse ; colonel john } ; finished } ; hop { filter_eq { all_rows ; horse ; cowboy cal } ; finished } }"
            ]
        },
        {
            "input": "select the rows whose home team score record is less than 15 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_less { all_rows ; home team score ; 15 } ; crowd ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to c . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; c } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to debbie allen . there is only one such row in the table . the title record of this unqiue row is adjustment period .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; debbie allen } } ; eq { hop { filter_eq { all_rows ; directed by ; debbie allen } ; title } ; adjustment period } }"
            ]
        },
        {
            "input": "for the cuts made records of all rows , all of them are greater than or equal to 1 .",
            "output": [
                "all_greater_eq { all_rows ; cuts made ; 1 }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to \u00e1gnes sz\u00e1vay . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent in the final ; \u00e1gnes sz\u00e1vay } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose winners share record of all rows is maximum . the year record of this row is 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; winners share } ; year } ; 2010 }"
            ]
        },
        {
            "input": "select the rows whose total ( kg ) record is greater than 195.0 . the 1st minimum bodyweight record of these rows is 57.05 . the name record of the row with 1st minimum bodyweight record is rusmeris villar ( col ) .",
            "output": [
                "and { eq { nth_min { filter_greater { all_rows ; total ( kg ) ; 195.0 } ; bodyweight ; 1 } ; 57.05 } ; eq { hop { nth_argmin { filter_greater { all_rows ; total ( kg ) ; 195.0 } ; bodyweight ; 1 } ; name } ; rusmeris villar ( col ) } }"
            ]
        },
        {
            "input": "the sum of the number of reviews record of all rows is 83 .",
            "output": [
                "round_eq { sum { all_rows ; number of reviews } ; 83 }"
            ]
        },
        {
            "input": "select the rows whose destination record fuzzily matches to chennai . among these rows , select the rows whose frequency record fuzzily matches to daily . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; destination ; chennai } ; frequency ; daily } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose weight ( kg ) record is equal to 53.5 . there is only one such row in the table . the race record of this unqiue row is sir rupert clarke stakes .",
            "output": [
                "and { only { filter_eq { all_rows ; weight ( kg ) ; 53.5 } } ; eq { hop { filter_eq { all_rows ; weight ( kg ) ; 53.5 } ; race } ; sir rupert clarke stakes } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to marquette , michigan . there is only one such row in the table . the institution record of this unqiue row is northern michigan university .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; marquette , michigan } } ; eq { hop { filter_eq { all_rows ; location ; marquette , michigan } ; institution } ; northern michigan university } }"
            ]
        },
        {
            "input": "select the row whose purse record of all rows is maximum . the tournament record of this row is senior tournament players championship .",
            "output": [
                "eq { hop { argmax { all_rows ; purse } ; tournament } ; senior tournament players championship }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired . there is only one such row in the table . the incumbent record of this unqiue row is james hamilton , jr .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; retired } } ; eq { hop { filter_eq { all_rows ; result ; retired } ; incumbent } ; james hamilton , jr } }"
            ]
        },
        {
            "input": "select the rows whose bubbles record does not match to yes . there is only one such row in the table . the type record of this unqiue row is domnoderemovedfromdocument .",
            "output": [
                "and { only { filter_not_eq { all_rows ; bubbles ; yes } } ; eq { hop { filter_not_eq { all_rows ; bubbles ; yes } ; type } ; domnoderemovedfromdocument } }"
            ]
        },
        {
            "input": "select the row whose date of appointment record of all rows is 1st minimum . the replaced by record of this row is peter voets ( caretaker ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date of appointment ; 1 } ; replaced by } ; peter voets ( caretaker ) }"
            ]
        },
        {
            "input": "select the rows whose loser record fuzzily matches to kansas city chiefs . the average of the result record of these rows is 25.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; loser ; kansas city chiefs } ; result } ; 25.5 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2000 . take the position record of this row . select the rows whose year record fuzzily matches to 2004 . take the position record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2000 } ; position } ; hop { filter_eq { all_rows ; year ; 2004 } ; position } }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to decision . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; method ; decision } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to japan . take the 1951 record of this row . select the rows whose country record fuzzily matches to scotland . take the 1951 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; country ; japan } ; 1951 } ; hop { filter_eq { all_rows ; country ; scotland } ; 1951 } }"
            ]
        },
        {
            "input": "for the disease area records of all rows , most of them fuzzily match to cancer .",
            "output": [
                "most_eq { all_rows ; disease area ; cancer }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to march . there is only one such row in the table . the goal record of this unqiue row is 3 .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; march } } ; eq { hop { filter_eq { all_rows ; date ; march } ; goal } ; 3 } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to travnik . take the number of seasons in premier league a record of this row . select the rows whose club record fuzzily matches to zvijezda . take the number of seasons in premier league a record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; travnik } ; number of seasons in premier league a } ; hop { filter_eq { all_rows ; club ; zvijezda } ; number of seasons in premier league a } }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than 25 . there is only one such row in the table . the nation record of this unqiue row is east germany ( gdr ) .",
            "output": [
                "and { only { filter_greater { all_rows ; total ; 25 } } ; eq { hop { filter_greater { all_rows ; total ; 25 } ; nation } ; east germany ( gdr ) } }"
            ]
        },
        {
            "input": "select the rows whose model record fuzzily matches to short wing . there is only one such row in the table . the manufacturer record of this unqiue row is pipistrel .",
            "output": [
                "and { only { filter_eq { all_rows ; model ; short wing } } ; eq { hop { filter_eq { all_rows ; model ; short wing } ; manufacturer } ; pipistrel } }"
            ]
        },
        {
            "input": "select the rows whose women 's singles record fuzzily matches to xu huaiwen . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; women 's singles ; xu huaiwen } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose affiliation record fuzzily matches to public . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; affiliation ; public } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is less than 40000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_less { all_rows ; away team score ; 10 } ; crowd ; 40000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose 2nd evening record fuzzily matches to n / a . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2nd evening ; n / a } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose champions record fuzzily matches to laura montalvo . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; champions ; laura montalvo } } ; 3 }"
            ]
        },
        {
            "input": "for the surface records of all rows , all of them fuzzily match to clay .",
            "output": [
                "all_eq { all_rows ; surface ; clay }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 12 july 1930 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 12 july 1930 } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is maximum . the team record of this row is celtic .",
            "output": [
                "eq { hop { argmax { all_rows ; average } ; team } ; celtic }"
            ]
        },
        {
            "input": "select the rows whose mens singles record fuzzily matches to chen hong . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; mens singles ; chen hong } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose played record is equal to 0 . there is only one such row in the table . the club record of this unqiue row is penlan rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; played ; 0 } } ; eq { hop { filter_eq { all_rows ; played ; 0 } ; club } ; penlan rfc } }"
            ]
        },
        {
            "input": "the average of the scored record of all rows is .23 .",
            "output": [
                "round_eq { avg { all_rows ; scored } ; .23 }"
            ]
        },
        {
            "input": "select the row whose caps record of all rows is maximum . the name record of this row is vaughan coveny .",
            "output": [
                "eq { hop { argmax { all_rows ; caps } ; name } ; vaughan coveny }"
            ]
        },
        {
            "input": "select the rows whose played record is equal to 20 . among these rows , select the rows whose drawn record is equal to 1 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; played ; 20 } ; drawn ; 1 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to stefan noesen . take the round record of this row . select the rows whose player record fuzzily matches to jean - gabriel pageau . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; stefan noesen } ; round } ; hop { filter_eq { all_rows ; player ; jean - gabriel pageau } ; round } }"
            ]
        },
        {
            "input": "select the rows whose kickoff record fuzzily matches to 6:00 pm . there is only one such row in the table . the date record of this unqiue row is sunday , april 28 .",
            "output": [
                "and { only { filter_eq { all_rows ; kickoff ; 6:00 pm } } ; eq { hop { filter_eq { all_rows ; kickoff ; 6:00 pm } ; date } ; sunday , april 28 } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet ( i ) . there is only one such row in the table . the tournament record of this unqiue row is opole .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet ( i ) } } ; eq { hop { filter_eq { all_rows ; surface ; carpet ( i ) } ; tournament } ; opole } }"
            ]
        },
        {
            "input": "select the row whose roll record of all rows is minimum . the name record of this row is timatanga community school .",
            "output": [
                "eq { hop { argmin { all_rows ; roll } ; name } ; timatanga community school }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 11 march 1981 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; date ; 11 march 1981 } }"
            ]
        },
        {
            "input": "select the row whose sunlight hours record of all rows is maximum . the city / town record of this row is pontevedra .",
            "output": [
                "eq { hop { argmax { all_rows ; sunlight hours } ; city / town } ; pontevedra }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 43174 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 43174 }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is maximum . the player record of this row is dario vido\u0161i\u0107 .",
            "output": [
                "eq { hop { argmax { all_rows ; goals } ; player } ; dario vido\u0161i\u0107 }"
            ]
        },
        {
            "input": "the average of the against record of all rows is 21 .",
            "output": [
                "round_eq { avg { all_rows ; against } ; 21 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . among these rows , select the rows whose first elected record is equal to 1902 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; result ; re - elected } ; first elected ; 1902 } } ; 2 }"
            ]
        },
        {
            "input": "for the transfer window records of all rows , most of them fuzzily match to summer .",
            "output": [
                "most_eq { all_rows ; transfer window ; summer }"
            ]
        },
        {
            "input": "select the rows whose district record fuzzily matches to guna . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; district ; guna } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose total dismissals record of all rows is maximum . the no record of this row is 13 .",
            "output": [
                "eq { hop { argmax { all_rows ; total dismissals } ; no } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose callsign record fuzzily matches to dwll . take the power record of this row . select the rows whose callsign record fuzzily matches to dyku . take the power record of this row . the first record is 10 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; callsign ; dwll } ; power } ; hop { filter_eq { all_rows ; callsign ; dyku } ; power } } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose top division titles record is equal to 1 . there is only one such row in the table . the team record of this unqiue row is deportivo coopsol .",
            "output": [
                "and { only { filter_eq { all_rows ; top division titles ; 1 } } ; eq { hop { filter_eq { all_rows ; top division titles ; 1 } ; team } ; deportivo coopsol } }"
            ]
        },
        {
            "input": "select the row whose titles record of all rows is maximum . the city record of this row is budapest .",
            "output": [
                "eq { hop { argmax { all_rows ; titles } ; city } ; budapest }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to anastasia pavlyuchenkova . there is only one such row in the table . the date record of this unqiue row is may 4 , 2013 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; anastasia pavlyuchenkova } } ; eq { hop { filter_eq { all_rows ; opponent ; anastasia pavlyuchenkova } ; date } ; may 4 , 2013 } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 3rd minimum . the player record of this row is dale hackbart .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; pick ; 3 } ; player } ; dale hackbart }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 20000 . there is only one such row in the table . the venue record of this unqiue row is arden street oval .",
            "output": [
                "and { only { filter_greater { all_rows ; crowd ; 20000 } } ; eq { hop { filter_greater { all_rows ; crowd ; 20000 } ; venue } ; arden street oval } }"
            ]
        },
        {
            "input": "select the row whose finish record of all rows is 2nd minimum . the player record of this row is jeff sluman .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; finish ; 2 } ; player } ; jeff sluman }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to chris collins . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; chris collins } } ; 8 }"
            ]
        },
        {
            "input": "for the day / boarding records of all rows , most of them fuzzily match to day & boarding .",
            "output": [
                "most_eq { all_rows ; day / boarding ; day & boarding }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is 3.7 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; 3.7 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the year record of this row is 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; year } ; 2010 }"
            ]
        },
        {
            "input": "select the row whose crime record of all rows is 2nd maximum . the character record of this row is shane casey .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crime ; 2 } ; character } ; shane casey }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to jalen rose .",
            "output": [
                "most_eq { all_rows ; high points ; jalen rose }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the location attendance record of this row is energysolutions arena 18732 .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; location attendance } ; energysolutions arena 18732 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to sun dec 24 . take the result record of this row . select the rows whose date record fuzzily matches to sun dec 17 . take the result record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; sun dec 24 } ; result } ; hop { filter_eq { all_rows ; date ; sun dec 17 } ; result } }"
            ]
        },
        {
            "input": "select the row whose gross record of all rows is 5th maximum . the title record of this row is the color purple . the director record of this row is steven spielberg .",
            "output": [
                "and { eq { hop { nth_argmax { all_rows ; gross ; 5 } ; title } ; the color purple } ; eq { hop { nth_argmax { all_rows ; gross ; 5 } ; director } ; steven spielberg } }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 1732 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 1732 }"
            ]
        },
        {
            "input": "select the row whose win % record of all rows is maximum . the matches record of this row is 6 .",
            "output": [
                "eq { hop { argmax { all_rows ; win % } ; matches } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to 400 m h . the average of the notes record of these rows is 54.54 seconds .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; event ; 400 m h } ; notes } ; 54.54 seconds }"
            ]
        },
        {
            "input": "the sum of the wins record of all rows is 18 .",
            "output": [
                "round_eq { sum { all_rows ; wins } ; 18 }"
            ]
        },
        {
            "input": "select the rows whose flag record fuzzily matches to united kingdom . the average of the tonnage ( grt ) record of these rows is 5983.8 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; flag ; united kingdom } ; tonnage ( grt ) } ; 5983.8 }"
            ]
        },
        {
            "input": "select the rows whose name of the country record fuzzily matches to serbia ( srb ) . there is only one such row in the table . the years in world group record of this unqiue row is 3 ( 2 - 3 ) .",
            "output": [
                "and { only { filter_eq { all_rows ; name of the country ; serbia ( srb ) } } ; eq { hop { filter_eq { all_rows ; name of the country ; serbia ( srb ) } ; years in world group } ; 3 ( 2 - 3 ) } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to ed furgol . take the money record of this row . select the rows whose player record fuzzily matches to lloyd mangrum . take the money record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; ed furgol } ; money } ; hop { filter_eq { all_rows ; player ; lloyd mangrum } ; money } }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 26 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 26 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 20944 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 20944 }"
            ]
        },
        {
            "input": "for the overall records of all rows , most of them are greater than 100 .",
            "output": [
                "most_greater { all_rows ; overall ; 100 }"
            ]
        },
        {
            "input": "the average of the entrants record of all rows is 399 .",
            "output": [
                "round_eq { avg { all_rows ; entrants } ; 399 }"
            ]
        },
        {
            "input": "for the played records of all rows , all of them are equal to 34 .",
            "output": [
                "all_eq { all_rows ; played ; 34 }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is 2nd minimum . the driver record of this row is dan gurney .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; laps ; 2 } ; driver } ; dan gurney }"
            ]
        },
        {
            "input": "select the rows whose theme record fuzzily matches to great blue heron . take the issue price record of this row . select the rows whose theme record fuzzily matches to common eider . take the issue price record of this row . the first record is 2 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; theme ; great blue heron } ; issue price } ; hop { filter_eq { all_rows ; theme ; common eider } ; issue price } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to philips arena . select the row whose attendance record of these rows is maximum . the date record of this row is december 30 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; location ; philips arena } ; attendance } ; date } ; december 30 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to san bernardino . take the year record of this row . select the rows whose city record fuzzily matches to san juan . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; city ; san bernardino } ; year } ; hop { filter_eq { all_rows ; city ; san juan } ; year } }"
            ]
        },
        {
            "input": "select the rows whose density record is equal to 33 . there is only one such row in the table . the english name record of this unqiue row is luobei county .",
            "output": [
                "and { only { filter_eq { all_rows ; density ; 33 } } ; eq { hop { filter_eq { all_rows ; density ; 33 } ; english name } ; luobei county } }"
            ]
        },
        {
            "input": "select the row whose enrollment 08 - 09 record of all rows is maximum . the school record of this row is twin lakes .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment 08 - 09 } ; school } ; twin lakes }"
            ]
        },
        {
            "input": "select the row whose f bolt ( kgf ) record of all rows is 2nd maximum . the chambering record of this row is .300 lapua magnum .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; f bolt ( kgf ) ; 2 } ; chambering } ; .300 lapua magnum }"
            ]
        },
        {
            "input": "for the original air date records of all rows , all of them fuzzily match to april 20 , 2009 .",
            "output": [
                "all_eq { all_rows ; original air date ; april 20 , 2009 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to happy planet index . take the rank record of this row . select the rows whose name record fuzzily matches to environmental performance index . take the rank record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; happy planet index } ; rank } ; hop { filter_eq { all_rows ; name ; environmental performance index } ; rank } }"
            ]
        },
        {
            "input": "select the rows whose season outcome record fuzzily matches to won div ii state championship . there is only one such row in the table . the team record of this unqiue row is indians .",
            "output": [
                "and { only { filter_eq { all_rows ; season outcome ; won div ii state championship } } ; eq { hop { filter_eq { all_rows ; season outcome ; won div ii state championship } ; team } ; indians } }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 130 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; points ; 130 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose 2005 record of all rows is maximum . the tournament record of this row is year end ranking .",
            "output": [
                "eq { hop { argmax { all_rows ; 2005 } ; tournament } ; year end ranking }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to ferrari . the maximum date record of these rows is 18 july .",
            "output": [
                "eq { max { filter_eq { all_rows ; constructor ; ferrari } ; date } ; 18 july }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the name record of this row is angelika buck / erich buck .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; name } ; angelika buck / erich buck }"
            ]
        },
        {
            "input": "for the capacity records of all rows , most of them are greater than 10,000 .",
            "output": [
                "most_greater { all_rows ; capacity ; 10,000 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 9 june 1928 .",
            "output": [
                "all_eq { all_rows ; date ; 9 june 1928 }"
            ]
        },
        {
            "input": "for the surface records of all rows , most of them fuzzily match to hard .",
            "output": [
                "most_eq { all_rows ; surface ; hard }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table . the outcome record of this unqiue row is winner .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; outcome } ; winner } }"
            ]
        },
        {
            "input": "select the row whose winter olympics record of all rows is 2nd maximum . the winner record of this row is thomas wassberg .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; winter olympics ; 2 } ; winner } ; thomas wassberg }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost re - election republican gain . there is only one such row in the table . the district record of this unqiue row is illinois 21 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost re - election republican gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re - election republican gain } ; district } ; illinois 21 } }"
            ]
        },
        {
            "input": "select the rows whose chassis - engine record fuzzily matches to porsche 962 c . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; chassis - engine ; porsche 962 c } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose pole position record fuzzily matches to ayrton senna . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pole position ; ayrton senna } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose mlb draft record fuzzily matches to 1st round . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; mlb draft ; 1st round } } ; 2 }"
            ]
        },
        {
            "input": "for the nationality records of all rows , most of them fuzzily match to rome .",
            "output": [
                "most_eq { all_rows ; nationality ; rome }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to winner . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome ; winner } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose publisher record fuzzily matches to walker . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; publisher ; walker } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose elevation record is greater than 12000 feet . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; elevation ; 12000 feet } } ; 3 }"
            ]
        },
        {
            "input": "the average of the caps record of all rows is 14.83 .",
            "output": [
                "round_eq { avg { all_rows ; caps } ; 14.83 }"
            ]
        },
        {
            "input": "select the row whose goals against record of all rows is 1st maximum . the team record of this row is ashton athletic .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goals against ; 1 } ; team } ; ashton athletic }"
            ]
        },
        {
            "input": "select the row whose 1910 census record of all rows is 3rd maximum . the city record of this row is fuzan .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; 1910 census ; 3 } ; city } ; fuzan }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 24662 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 24662 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 5 . for the crowd records of these rows , most of them are greater than 20000 .",
            "output": [
                "most_greater { filter_greater { all_rows ; home team score ; 5 } ; crowd ; 20000 }"
            ]
        },
        {
            "input": "select the rows whose segment d record fuzzily matches to part 2 . there is only one such row in the table . the series ep record of this unqiue row is 4 - 04 .",
            "output": [
                "and { only { filter_eq { all_rows ; segment d ; part 2 } } ; eq { hop { filter_eq { all_rows ; segment d ; part 2 } ; series ep } ; 4 - 04 } }"
            ]
        },
        {
            "input": "for the party records of all rows , all of them fuzzily match to democratic .",
            "output": [
                "all_eq { all_rows ; party ; democratic }"
            ]
        },
        {
            "input": "for the tv records of all rows , most of them fuzzily match to nbc .",
            "output": [
                "most_eq { all_rows ; tv ; nbc }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is 2nd maximum . the team record of this row is river plate .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; average ; 2 } ; team } ; river plate }"
            ]
        },
        {
            "input": "select the rows whose pba team record fuzzily matches to formula shel . select the row whose pick record of these rows is 2nd minimum . the player record of this row is arnold rodriguez .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; pba team ; formula shel } ; pick ; 2 } ; player } ; arnold rodriguez }"
            ]
        },
        {
            "input": "select the rows whose 2nd place team record fuzzily matches to nitehawks . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2nd place team ; nitehawks } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is carlton .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; carlton }"
            ]
        },
        {
            "input": "select the rows whose novelty record fuzzily matches to gen et sp nov . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; novelty ; gen et sp nov } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose skipper record fuzzily matches to andy forbes . take the combined elapsed time record of this row . select the rows whose skipper record fuzzily matches to stuart jackson . take the combined elapsed time record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; skipper ; andy forbes } ; combined elapsed time } ; hop { filter_eq { all_rows ; skipper ; stuart jackson } ; combined elapsed time } }"
            ]
        },
        {
            "input": "select the rows whose output record fuzzily matches to 15 - 30w . there is only one such row in the table . the model record of this unqiue row is schmidt .",
            "output": [
                "and { only { filter_eq { all_rows ; output ; 15 - 30w } } ; eq { hop { filter_eq { all_rows ; output ; 15 - 30w } ; model } ; schmidt } }"
            ]
        },
        {
            "input": "select the row whose w record of all rows is maximum . the skip ( club ) record of this row is brad gushue ( bally haly ) .",
            "output": [
                "eq { hop { argmax { all_rows ; w } ; skip ( club ) } ; brad gushue ( bally haly ) }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to minnesota . among these rows , select the rows whose attendance record is greater than 15000 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; visitor ; minnesota } ; attendance ; 15000 } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is maximum . the venue record of this row is alexandria stadium , alexandria .",
            "output": [
                "eq { hop { argmax { all_rows ; date } ; venue } ; alexandria stadium , alexandria }"
            ]
        },
        {
            "input": "the sum of the wins record of all rows is 2 .",
            "output": [
                "round_eq { sum { all_rows ; wins } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to goalkeeper . there is only one such row in the table . the player record of this unqiue row is paul robinson .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; goalkeeper } } ; eq { hop { filter_eq { all_rows ; position ; goalkeeper } ; player } ; paul robinson } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; w } } ; 2 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 96.5 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 96.5 }"
            ]
        },
        {
            "input": "select the rows whose agg score record fuzzily matches to 0 - 2 . there is only one such row in the table . the team 1 record of this unqiue row is ilisiakos .",
            "output": [
                "and { only { filter_eq { all_rows ; agg score ; 0 - 2 } } ; eq { hop { filter_eq { all_rows ; agg score ; 0 - 2 } ; team 1 } ; ilisiakos } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 46966 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 46966 }"
            ]
        },
        {
            "input": "the average of the horsepowers record of all rows is 7031 .",
            "output": [
                "round_eq { avg { all_rows ; horsepowers } ; 7031 }"
            ]
        },
        {
            "input": "select the row whose metacritic record of all rows is maximum . the game title record of this row is sly 2 : band of thieves .",
            "output": [
                "eq { hop { argmax { all_rows ; metacritic } ; game title } ; sly 2 : band of thieves }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to team penske . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; team penske } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is minimum . the nation record of this row is commonwealth of independent states ( 1992 only ) .",
            "output": [
                "eq { hop { argmin { all_rows ; bronze } ; nation } ; commonwealth of independent states ( 1992 only ) }"
            ]
        },
        {
            "input": "for the capacity ( mw ) records of all rows , most of them are greater than 20 .",
            "output": [
                "most_greater { all_rows ; capacity ( mw ) ; 20 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 13th minimum . the race record of this row is italian grand prix .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 13 } ; race } ; italian grand prix }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to tim duncan . the average of the high rebounds record of these rows is 11.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high rebounds ; tim duncan } ; high rebounds } ; 11.5 }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the athlete record of this row is alan campbell .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; athlete } ; alan campbell }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to ren\u00e9 louis derouen . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to bolivar e kemp . take the first elected record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; ren\u00e9 louis derouen } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; bolivar e kemp } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose founding university record fuzzily matches to city college of new york . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; founding university ; city college of new york } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose hometown record fuzzily matches to santiago de los caballeros . among these rows , select the rows whose age record is less than 19 . there is only one such row in the table . the contestant record of this unqiue row is valerie chardonnens vargas .",
            "output": [
                "and { only { filter_less { filter_eq { all_rows ; hometown ; santiago de los caballeros } ; age ; 19 } } ; eq { hop { filter_less { filter_eq { all_rows ; hometown ; santiago de los caballeros } ; age ; 19 } ; contestant } ; valerie chardonnens vargas } }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 100 . there is only one such row in the table . the province record of this unqiue row is bangkok .",
            "output": [
                "and { only { filter_greater { all_rows ; gold ; 100 } } ; eq { hop { filter_greater { all_rows ; gold ; 100 } ; province } ; bangkok } }"
            ]
        },
        {
            "input": "for the matches records of all rows , most of them are equal to 4 .",
            "output": [
                "most_eq { all_rows ; matches ; 4 }"
            ]
        },
        {
            "input": "select the row whose pts record of all rows is 4th maximum . the year record of this row is 1986 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pts ; 4 } ; year } ; 1986 }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 278.8 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 278.8 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them are less than or equal to 20th .",
            "output": [
                "most_less_eq { all_rows ; result ; 20th }"
            ]
        },
        {
            "input": "select the rows whose meet record fuzzily matches to 1979 pan american games . there is only one such row in the table . the event record of this unqiue row is 200 m freestyle .",
            "output": [
                "and { only { filter_eq { all_rows ; meet ; 1979 pan american games } } ; eq { hop { filter_eq { all_rows ; meet ; 1979 pan american games } ; event } ; 200 m freestyle } }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to ann breen . take the points record of this row . select the rows whose artist record fuzzily matches to fran meen . take the points record of this row . the first record is 14 larger than the second record . the song record of the first row is oh , darling . the song record of the second row is say that you love me .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; artist ; ann breen } ; points } ; hop { filter_eq { all_rows ; artist ; fran meen } ; points } } ; 14 } ; and { eq { hop { filter_eq { all_rows ; artist ; ann breen } ; song } ; oh , darling } ; eq { hop { filter_eq { all_rows ; artist ; fran meen } ; song } ; say that you love me } } }"
            ]
        },
        {
            "input": "select the rows whose round of 16 record fuzzily matches to did not advance . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; round of 16 ; did not advance } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose archbishop record fuzzily matches to jean baptiste lamy . take the born record of this row . select the rows whose archbishop record fuzzily matches to jean baptiste salpointe . take the born record of this row . the first record is less than the second record . the born record of the first row is october 11 , 1814 . the born record of the second row is february 22 , 1825 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; archbishop ; jean baptiste lamy } ; born } ; hop { filter_eq { all_rows ; archbishop ; jean baptiste salpointe } ; born } } ; and { eq { hop { filter_eq { all_rows ; archbishop ; jean baptiste lamy } ; born } ; october 11 , 1814 } ; eq { hop { filter_eq { all_rows ; archbishop ; jean baptiste salpointe } ; born } ; february 22 , 1825 } } }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to alfa records . among these rows , select the rows whose format record fuzzily matches to cd . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; label ; alfa records } ; format ; cd } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose year born record of all rows is minimum . the player record of this row is goran jagodnik .",
            "output": [
                "eq { hop { argmin { all_rows ; year born } ; player } ; goran jagodnik }"
            ]
        },
        {
            "input": "select the rows whose october 20 , 2008 record fuzzily matches to 2010 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; october 20 , 2008 ; 2010 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to away . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; away } } ; 4 }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is -2.54 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; -2.54 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to mississippi . there is only one such row in the table . the player record of this unqiue row is allen brown .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; mississippi } } ; eq { hop { filter_eq { all_rows ; college ; mississippi } ; player } ; allen brown } }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to league .",
            "output": [
                "most_eq { all_rows ; competition ; league }"
            ]
        },
        {
            "input": "select the rows whose coach record fuzzily matches to brian noble . select the row whose main article record of these rows is 4th minimum . the lost record of this row is 7 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; coach ; brian noble } ; main article ; 4 } ; lost } ; 7 }"
            ]
        },
        {
            "input": "for the box score records of all rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { all_rows ; box score ; w }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose total record is greater than or equal to 300 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { filter_eq { all_rows ; country ; united states } ; total ; 300 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to no contest . there is only one such row in the table . the opponent record of this unqiue row is john ott .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; no contest } } ; eq { hop { filter_eq { all_rows ; method ; no contest } ; opponent } ; john ott } }"
            ]
        },
        {
            "input": "select the rows whose law preservation ticket record fuzzily matches to ( none ) . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; law preservation ticket ; ( none ) } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose extra record fuzzily matches to long jump . there is only one such row in the table . the year record of this unqiue row is 1965 .",
            "output": [
                "and { only { filter_eq { all_rows ; extra ; long jump } } ; eq { hop { filter_eq { all_rows ; extra ; long jump } ; year } ; 1965 } }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to brad kern . there is only one such row in the table . the title record of this unqiue row is the honeymoon 's over .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; brad kern } } ; eq { hop { filter_eq { all_rows ; written by ; brad kern } ; title } ; the honeymoon 's over } }"
            ]
        },
        {
            "input": "select the rows whose line color record fuzzily matches to blue . take the stations served record of this row . select the rows whose line color record fuzzily matches to pink . take the stations served record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; line color ; blue } ; stations served } ; hop { filter_eq { all_rows ; line color ; pink } ; stations served } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to pescarolo sport . for the laps records of these rows , most of them are greater than 300 .",
            "output": [
                "most_greater { filter_eq { all_rows ; team ; pescarolo sport } ; laps ; 300 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to august . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; august } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to tampa bay buccaneers . there is only one such row in the table . the date record of this unqiue row is september 26 , 1999 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; tampa bay buccaneers } } ; eq { hop { filter_eq { all_rows ; opponent ; tampa bay buccaneers } ; date } ; september 26 , 1999 } }"
            ]
        },
        {
            "input": "select the row whose production ( mt ) record of all rows is maximum . the commodity record of this row is wheat .",
            "output": [
                "eq { hop { argmax { all_rows ; production ( mt ) } ; commodity } ; wheat }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . for the result records of these rows , all of them fuzzily match to w .",
            "output": [
                "all_eq { filter_eq { all_rows ; date ; october } ; result ; w }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to kevin martin . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; kevin martin } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose total record is greater than 153 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; country ; united states } ; total ; 153 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 10000 . among these rows , select the rows whose home team score record is greater than 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_less { all_rows ; crowd ; 10000 } ; home team score ; 10 } } ; 2 }"
            ]
        },
        {
            "input": "for the nationality records of all rows , most of them fuzzily match to united states .",
            "output": [
                "most_eq { all_rows ; nationality ; united states }"
            ]
        },
        {
            "input": "select the row whose duration ( days ) record of all rows is maximum . the expedition record of this row is salyut 7 - eo - 3 .",
            "output": [
                "eq { hop { argmax { all_rows ; duration ( days ) } ; expedition } ; salyut 7 - eo - 3 }"
            ]
        },
        {
            "input": "the 1st maximum crowd record of all rows is 40000 . the venue record of the row with 1st maximum crowd record is victoria park .",
            "output": [
                "and { eq { nth_max { all_rows ; crowd ; 1 } ; 40000 } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; victoria park } }"
            ]
        },
        {
            "input": "select the row whose original airdate record of all rows is 2nd maximum . the series record of this row is 12 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original airdate ; 2 } ; series } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose year record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; year } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to todd van poppel . take the year record of this row . select the rows whose player record fuzzily matches to doug million . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; todd van poppel } ; year } ; hop { filter_eq { all_rows ; player ; doug million } ; year } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 2nd . there is only one such row in the table . the year record of this unqiue row is 1963 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; 2nd } } ; eq { hop { filter_eq { all_rows ; result ; 2nd } ; year } ; 1963 } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 22526 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 22526 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is 2nd maximum . the ship record of this row is ms moby drea .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; length ; 2 } ; ship } ; ms moby drea }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them fuzzily match to center .",
            "output": [
                "most_eq { all_rows ; position ; center }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is 3 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to defensive tackle . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; defensive tackle } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to 2009 . take the losses record of this row . select the rows whose team record fuzzily matches to 2011 . take the losses record of this row . the first record is greater than the second record . the losses record of the first row is 8 . the losses record of the second row is 4 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; team ; 2009 } ; losses } ; hop { filter_eq { all_rows ; team ; 2011 } ; losses } } ; and { eq { hop { filter_eq { all_rows ; team ; 2009 } ; losses } ; 8 } ; eq { hop { filter_eq { all_rows ; team ; 2011 } ; losses } ; 4 } } }"
            ]
        },
        {
            "input": "select the row whose runs ( balls ) record of all rows is 3rd maximum . the partnerships record of this row is herschelle gibbs / justin kemp .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; runs ( balls ) ; 3 } ; partnerships } ; herschelle gibbs / justin kemp }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re-elected . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re-elected } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 1st minimum . the nationality record of this row is canada .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; pick ; 1 } ; nationality } ; canada }"
            ]
        },
        {
            "input": "select the rows whose founding university record fuzzily matches to university at buffalo , suny . there is only one such row in the table . the organization record of this unqiue row is delta epsilon sigma iota .",
            "output": [
                "and { only { filter_eq { all_rows ; founding university ; university at buffalo , suny } } ; eq { hop { filter_eq { all_rows ; founding university ; university at buffalo , suny } ; organization } ; delta epsilon sigma iota } }"
            ]
        },
        {
            "input": "select the row whose reg gp record of all rows is maximum . the player record of this row is alexander edler .",
            "output": [
                "eq { hop { argmax { all_rows ; reg gp } ; player } ; alexander edler }"
            ]
        },
        {
            "input": "the maximum score record of all rows is w 132 - 93 ( ot ) .",
            "output": [
                "eq { max { all_rows ; score } ; w 132 - 93 ( ot ) }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is henry clay .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; henry clay }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to private . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_eq { all_rows ; type ; private } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to fin . there is only one such row in the table . the name record of this unqiue row is janne ahonen .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; fin } } ; eq { hop { filter_eq { all_rows ; nationality ; fin } ; name } ; janne ahonen } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to zandro limpot , jr . take the pick record of this row . select the rows whose player record fuzzily matches to richard bachmann . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; zandro limpot , jr } ; pick } ; hop { filter_eq { all_rows ; player ; richard bachmann } ; pick } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . select the row whose week record of these rows is 3rd minimum . the opponent record of this row is san francisco 49ers . the result record of this row is w 31 - 17 .",
            "output": [
                "and { eq { hop { nth_argmin { filter_eq { all_rows ; date ; october } ; week ; 3 } ; opponent } ; san francisco 49ers } ; eq { hop { nth_argmin { filter_eq { all_rows ; date ; october } ; week ; 3 } ; result } ; w 31 - 17 } }"
            ]
        },
        {
            "input": "select the row whose races record of all rows is 2nd minimum . the season record of this row is 2010 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; races ; 2 } ; season } ; 2010 }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 0 . among these rows , select the rows whose silver record is equal to 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; gold ; 0 } ; silver ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose note record of all rows is maximum . the date record of this row is april 21 , 1980 . the format record of this row is stereo lp .",
            "output": [
                "and { eq { hop { argmax { all_rows ; note } ; date } ; april 21 , 1980 } ; eq { hop { argmax { all_rows ; note } ; format } ; stereo lp } }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 1554 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 1554 }"
            ]
        },
        {
            "input": "select the row whose mass ( kg ) record of all rows is maximum . the satellite record of this row is echo 2 .",
            "output": [
                "eq { hop { argmax { all_rows ; mass ( kg ) } ; satellite } ; echo 2 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to win phelps . among these rows , select the rows whose written by record fuzzily matches to david e kelley and william m finkelstein . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; directed by ; win phelps } ; written by ; david e kelley and william m finkelstein } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to october .",
            "output": [
                "most_eq { all_rows ; date ; october }"
            ]
        },
        {
            "input": "the sum of the silver record of all rows is 2 .",
            "output": [
                "round_eq { sum { all_rows ; silver } ; 2 }"
            ]
        },
        {
            "input": "select the row whose round record of all rows is minimum . the name record of this row is joseph addai .",
            "output": [
                "eq { hop { argmin { all_rows ; round } ; name } ; joseph addai }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to fw . select the row whose number record of these rows is 2nd maximum . the player record of this row is fwayo tembo .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; position ; fw } ; number ; 2 } ; player } ; fwayo tembo }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to july .",
            "output": [
                "all_eq { all_rows ; date ; july }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to brigham young university . there is only one such row in the table . the player record of this unqiue row is tevita ofahengaue .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; brigham young university } } ; eq { hop { filter_eq { all_rows ; school / club team ; brigham young university } ; player } ; tevita ofahengaue } }"
            ]
        },
        {
            "input": "select the row whose max pressure record of all rows is 4th maximum . the cartridge record of this row is .38 super .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; max pressure ; 4 } ; cartridge } ; .38 super }"
            ]
        },
        {
            "input": "select the row whose spent per vote ( php ) record of all rows is maximum . the candidate ( party ) record of this row is jamby madrigal ( i ) .",
            "output": [
                "eq { hop { argmax { all_rows ; spent per vote ( php ) } ; candidate ( party ) } ; jamby madrigal ( i ) }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to nor . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; nor } } ; 2 }"
            ]
        },
        {
            "input": "the average of the deaths record of all rows is 13.4 .",
            "output": [
                "round_eq { avg { all_rows ; deaths } ; 13.4 }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 4th . there is only one such row in the table . the year record of this unqiue row is 2003 .",
            "output": [
                "and { only { filter_eq { all_rows ; rank ; 4th } } ; eq { hop { filter_eq { all_rows ; rank ; 4th } ; year } ; 2003 } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the points record of this row is 227 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; points } ; 227 }"
            ]
        },
        {
            "input": "select the rows whose time / retired record fuzzily matches to oil leak . there is only one such row in the table . the driver record of this unqiue row is jack brabham .",
            "output": [
                "and { only { filter_eq { all_rows ; time / retired ; oil leak } } ; eq { hop { filter_eq { all_rows ; time / retired ; oil leak } ; driver } ; jack brabham } }"
            ]
        },
        {
            "input": "for the apparent magnitude records of all rows , most of them are greater than 10.0 .",
            "output": [
                "most_greater { all_rows ; apparent magnitude ; 10.0 }"
            ]
        },
        {
            "input": "select the row whose the championship record of all rows is maximum . the player record of this row is becchio .",
            "output": [
                "eq { hop { argmax { all_rows ; the championship } ; player } ; becchio }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is 15 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; 15 }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is minimum . the film title used in nomination record of this row is caucasia .",
            "output": [
                "eq { hop { argmin { all_rows ; year ( ceremony ) } ; film title used in nomination } ; caucasia }"
            ]
        },
        {
            "input": "the average of the round record of all rows is 2.3 .",
            "output": [
                "round_eq { avg { all_rows ; round } ; 2.3 }"
            ]
        },
        {
            "input": "for the season premiere records of all rows , most of them fuzzily match to september .",
            "output": [
                "most_eq { all_rows ; season premiere ; september }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to university of texas at austin . take the enrollment record of this row . select the rows whose institution record fuzzily matches to texas christian university . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; institution ; university of texas at austin } ; enrollment } ; hop { filter_eq { all_rows ; institution ; texas christian university } ; enrollment } }"
            ]
        },
        {
            "input": "select the rows whose year record is less than or equal to 2009 . the sum of the tournaments played record of these rows is 52 .",
            "output": [
                "round_eq { sum { filter_less_eq { all_rows ; year ; 2009 } ; tournaments played } ; 52 }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2003 / 04 . take the goals record of this row . select the rows whose season record fuzzily matches to 2004 / 05 . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2003 / 04 } ; goals } ; hop { filter_eq { all_rows ; season ; 2004 / 05 } ; goals } }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the airline record of this row is tam .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; airline } ; tam }"
            ]
        },
        {
            "input": "select the rows whose institution record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; institution } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 20000 . there is only one such row in the table . the acc team record of this unqiue row is 10 north carolina . the big ten team record of this unqiue row is 9 michigan state .",
            "output": [
                "and { only { filter_greater { all_rows ; attendance ; 20000 } } ; and { eq { hop { filter_greater { all_rows ; attendance ; 20000 } ; acc team } ; 10 north carolina } ; eq { hop { filter_greater { all_rows ; attendance ; 20000 } ; big ten team } ; 9 michigan state } } }"
            ]
        },
        {
            "input": "for the total records of all rows , most of them are less than 300 .",
            "output": [
                "most_less { all_rows ; total ; 300 }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to canada .",
            "output": [
                "most_eq { all_rows ; country ; canada }"
            ]
        },
        {
            "input": "select the rows whose race winner record fuzzily matches to patrick depailler . there is only one such row in the table . the race record of this unqiue row is spanish grand prix .",
            "output": [
                "and { only { filter_eq { all_rows ; race winner ; patrick depailler } } ; eq { hop { filter_eq { all_rows ; race winner ; patrick depailler } ; race } ; spanish grand prix } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose score record fuzzily matches to 143 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; united states } ; score ; 143 } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the severe tropical cyclones record of all rows is 59 .",
            "output": [
                "round_eq { sum { all_rows ; severe tropical cyclones } ; 59 }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is maximum . the nation record of this row is cuba .",
            "output": [
                "eq { hop { argmax { all_rows ; bronze } ; nation } ; cuba }"
            ]
        },
        {
            "input": "for the status records of all rows , most of them fuzzily match to nominated .",
            "output": [
                "most_eq { all_rows ; status ; nominated }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is minimum . the player record of this row is james lofton .",
            "output": [
                "eq { hop { argmin { all_rows ; pick } ; player } ; james lofton }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to dan comiskey . take the pick record of this row . select the rows whose player record fuzzily matches to kelly lochbaum . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; dan comiskey } ; pick } ; hop { filter_eq { all_rows ; player ; kelly lochbaum } ; pick } }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; points ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose 2002 - 03 record is equal to 5849 . there is only one such row in the table . the commodity record of this unqiue row is cattle and calves .",
            "output": [
                "and { only { filter_eq { all_rows ; 2002 - 03 ; 5849 } } ; eq { hop { filter_eq { all_rows ; 2002 - 03 ; 5849 } ; commodity } ; cattle and calves } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to savannah . there is only one such row in the table . the opponent record of this unqiue row is michael buchkovich .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; savannah } } ; eq { hop { filter_eq { all_rows ; location ; savannah } ; opponent } ; michael buchkovich } }"
            ]
        },
        {
            "input": "select the rows whose segment c record fuzzily matches to part 1 . there is only one such row in the table . the episode record of this unqiue row is 147 .",
            "output": [
                "and { only { filter_eq { all_rows ; segment c ; part 1 } } ; eq { hop { filter_eq { all_rows ; segment c ; part 1 } ; episode } ; 147 } }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 6 . among these rows , select the rows whose difference record is equal to -10 . there is only one such row in the table . the team record of this unqiue row is am\u00e3rica .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } } ; eq { hop { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } ; team } ; am\u00e3rica } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to at & t center . the average of the location attendance record of these rows is 18581 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; location attendance ; at & t center } ; location attendance } ; 18581 }"
            ]
        },
        {
            "input": "select the rows whose writer ( s ) record fuzzily matches to mark james . there is only one such row in the table . the track record of this unqiue row is 4 . the song title record of this unqiue row is moody blue .",
            "output": [
                "and { only { filter_eq { all_rows ; writer ( s ) ; mark james } } ; and { eq { hop { filter_eq { all_rows ; writer ( s ) ; mark james } ; track } ; 4 } ; eq { hop { filter_eq { all_rows ; writer ( s ) ; mark james } ; song title } ; moody blue } } }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are less than 2000 .",
            "output": [
                "most_less { all_rows ; year ; 2000 }"
            ]
        },
        {
            "input": "the average of the losses record of all rows is 3.43 .",
            "output": [
                "round_eq { avg { all_rows ; losses } ; 3.43 }"
            ]
        },
        {
            "input": "for the party records of all rows , most of them fuzzily match to democrat .",
            "output": [
                "most_eq { all_rows ; party ; democrat }"
            ]
        },
        {
            "input": "select the rows whose 1 usd = record is equal to 1 . there is only one such row in the table . the country record of this unqiue row is ecuador .",
            "output": [
                "and { only { filter_eq { all_rows ; 1 usd"
            ]
        },
        {
            "input": "select the row whose runs record of all rows is maximum . the player record of this row is adam gilchrist .",
            "output": [
                "eq { hop { argmax { all_rows ; runs } ; player } ; adam gilchrist }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to aermacchi . take the year record of this row . select the rows whose team record fuzzily matches to harley davidson . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; team ; aermacchi } ; year } ; hop { filter_eq { all_rows ; team ; harley davidson } ; year } }"
            ]
        },
        {
            "input": "select the rows whose date record is greater than 9 march 1985 . for the score records of these rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { filter_greater { all_rows ; date ; 9 march 1985 } ; score ; 1 }"
            ]
        },
        {
            "input": "for the seating records of all rows , most of them are less than 100000 .",
            "output": [
                "most_less { all_rows ; seating ; 100000 }"
            ]
        },
        {
            "input": "for the year completed records of all rows , most of them are less than 1970 .",
            "output": [
                "most_less { all_rows ; year completed ; 1970 }"
            ]
        },
        {
            "input": "select the rows whose womens singles record fuzzily matches to zhang yining . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; womens singles ; zhang yining } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose batting style record fuzzily matches to left hand bat . among these rows , select the rows whose first class team record fuzzily matches to windward islands . there is only one such row in the table . the player record of this unqiue row is nixon mclean .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; batting style ; left hand bat } ; first class team ; windward islands } } ; eq { hop { filter_eq { filter_eq { all_rows ; batting style ; left hand bat } ; first class team ; windward islands } ; player } ; nixon mclean } }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to division 2 .",
            "output": [
                "most_eq { all_rows ; competition ; division 2 }"
            ]
        },
        {
            "input": "for the frequency mhz records of all rows , most of them are greater than or equal to 90 .",
            "output": [
                "most_greater_eq { all_rows ; frequency mhz ; 90 }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( millions ) record is greater than 3.0 . there is only one such row in the table . the title record of this unqiue row is pilot .",
            "output": [
                "and { only { filter_greater { all_rows ; us viewers ( millions ) ; 3.0 } } ; eq { hop { filter_greater { all_rows ; us viewers ( millions ) ; 3.0 } ; title } ; pilot } }"
            ]
        },
        {
            "input": "select the rows whose villains record fuzzily matches to none . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; villains ; none } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose race record of all rows is minimum . the season record of this row is 2011 .",
            "output": [
                "eq { hop { argmin { all_rows ; race } ; season } ; 2011 }"
            ]
        },
        {
            "input": "the average of the overall rank record of all rows is 72 .",
            "output": [
                "round_eq { avg { all_rows ; overall rank } ; 72 }"
            ]
        },
        {
            "input": "select the rows whose polyunsaturated fat record is less than 10 % . there is only one such row in the table . the record of this unqiue row is suet .",
            "output": [
                "and { only { filter_less { all_rows ; polyunsaturated fat ; 10 % } } ; eq { hop { filter_less { all_rows ; polyunsaturated fat ; 10 % } ; } ; suet } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to sweden . take the gold record of this row . select the rows whose nation record fuzzily matches to germany . take the gold record of this row . the first record is greater than the second record . the gold record of the first row is 2 . the gold record of the second row is 1 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; nation ; sweden } ; gold } ; hop { filter_eq { all_rows ; nation ; germany } ; gold } } ; and { eq { hop { filter_eq { all_rows ; nation ; sweden } ; gold } ; 2 } ; eq { hop { filter_eq { all_rows ; nation ; germany } ; gold } ; 1 } } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to aston martin racing . for the class pos records of these rows , most of them fuzzily match to dnf .",
            "output": [
                "most_eq { filter_eq { all_rows ; team ; aston martin racing } ; class pos ; dnf }"
            ]
        },
        {
            "input": "the average of the pts record of all rows is 2.33 .",
            "output": [
                "round_eq { avg { all_rows ; pts } ; 2.33 }"
            ]
        },
        {
            "input": "for the current affiliation records of all rows , most of them fuzzily match to cbs owned - and - operated ( o & o ) .",
            "output": [
                "most_eq { all_rows ; current affiliation ; cbs owned - and - operated ( o & o ) }"
            ]
        },
        {
            "input": "select the rows whose municipality record does not match to total . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; municipality ; total } } ; 12 }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is 4th minimum . the rowers record of this row is zsolt hirling , tam\u00e3 \u00a1 s varga .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; rank ; 4 } ; rowers } ; zsolt hirling , tam\u00e3 \u00a1 s varga }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to geelong . take the crowd record of this row . select the rows whose home team record fuzzily matches to melbourne . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; geelong } ; crowd } ; hop { filter_eq { all_rows ; home team ; melbourne } ; crowd } }"
            ]
        },
        {
            "input": "select the rows whose candidates record is greater than or equal to 55.0 % . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; candidates ; 55.0 % } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to kilkenny . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; county ; kilkenny } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to real madrid . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; club ; real madrid } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to goaltender . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; goaltender } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; december } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to forsythe racing . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; forsythe racing } } ; 3 }"
            ]
        },
        {
            "input": "for the manner of departure records of all rows , most of them fuzzily match to contract ended .",
            "output": [
                "most_eq { all_rows ; manner of departure ; contract ended }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to kazakhstan . there is only one such row in the table . the athlete record of this unqiue row is inga dudchenko .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; kazakhstan } } ; eq { hop { filter_eq { all_rows ; country ; kazakhstan } ; athlete } ; inga dudchenko } }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to second test . there is only one such row in the table . the opposing team record of this unqiue row is argentina . the date record of this unqiue row is 4 august 1990 .",
            "output": [
                "and { only { filter_eq { all_rows ; status ; second test } } ; and { eq { hop { filter_eq { all_rows ; status ; second test } ; opposing team } ; argentina } ; eq { hop { filter_eq { all_rows ; status ; second test } ; date } ; 4 august 1990 } } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard ( i ) . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; surface ; hard ( i ) } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to wayne walker . take the overall pick record of this row . select the rows whose player record fuzzily matches to john yarno . take the overall pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; wayne walker } ; overall pick } ; hop { filter_eq { all_rows ; player ; john yarno } ; overall pick } }"
            ]
        },
        {
            "input": "select the rows whose exited record fuzzily matches to day 16 . the maximum finished record of these rows is 3rd .",
            "output": [
                "eq { max { filter_eq { all_rows ; exited ; day 16 } ; finished } ; 3rd }"
            ]
        },
        {
            "input": "the average of the p1 diameter ( mm ) record of all rows is 13.425 .",
            "output": [
                "round_eq { avg { all_rows ; p1 diameter ( mm ) } ; 13.425 }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to gillette stadium . the average of the result record of these rows is 26 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; game site ; gillette stadium } ; result } ; 26 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 2:40 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 2:40 }"
            ]
        },
        {
            "input": "the average of the decile record of all rows is 5 .",
            "output": [
                "round_eq { avg { all_rows ; decile } ; 5 }"
            ]
        },
        {
            "input": "the sum of the worldwide gross record of all rows is 2632 .",
            "output": [
                "round_eq { sum { all_rows ; worldwide gross } ; 2632 }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to dorell wright . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; dorell wright } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose race record fuzzily matches to warwick stakes . take the distance record of this row . select the rows whose race record fuzzily matches to george main stakes . take the distance record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; race ; warwick stakes } ; distance } ; hop { filter_eq { all_rows ; race ; george main stakes } ; distance } }"
            ]
        },
        {
            "input": "the 4th minimum rank record of all rows is 4 . the team record of the row with 4th minimum rank record is estonia . the wins record of the row with 4th minimum rank record is 2 . the losses record of the row with 4th minimum rank record is 3 . the points record of the row with 4th minimum rank record is 4 .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 4 } ; 4 } ; and { eq { hop { nth_argmin { all_rows ; rank ; 4 } ; team } ; estonia } ; and { eq { hop { nth_argmin { all_rows ; rank ; 4 } ; wins } ; 2 } ; and { eq { hop { nth_argmin { all_rows ; rank ; 4 } ; losses } ; 3 } ; eq { hop { nth_argmin { all_rows ; rank ; 4 } ; points } ; 4 } } } } }"
            ]
        },
        {
            "input": "select the rows whose release date record fuzzily matches to 2004 . there is only one such row in the table . the version record of this unqiue row is 4.10 .",
            "output": [
                "and { only { filter_eq { all_rows ; release date ; 2004 } } ; eq { hop { filter_eq { all_rows ; release date ; 2004 } ; version } ; 4.10 } }"
            ]
        },
        {
            "input": "select the row whose matches record of all rows is 2nd maximum . the name record of this row is glenn mcgrath .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; matches ; 2 } ; name } ; glenn mcgrath }"
            ]
        },
        {
            "input": "for the results records of all rows , most of them fuzzily match to re - elected .",
            "output": [
                "most_eq { all_rows ; results ; re - elected }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september . among these rows , select the rows whose attendance record is greater than 70000 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { filter_eq { all_rows ; date ; september } ; attendance ; 70000 } }"
            ]
        },
        {
            "input": "select the rows whose fate record fuzzily matches to damaged . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; fate ; damaged } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 4 . there is only one such row in the table . the nation record of this unqiue row is south korea .",
            "output": [
                "and { only { filter_eq { all_rows ; gold ; 4 } } ; eq { hop { filter_eq { all_rows ; gold ; 4 } ; nation } ; south korea } }"
            ]
        },
        {
            "input": "for the tournaments played records of all rows , most of them are less than or equal to 3 .",
            "output": [
                "most_less_eq { all_rows ; tournaments played ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to copenhagen . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; copenhagen } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose genre record fuzzily matches to fighting . there is only one such row in the table . the game record of this unqiue row is super smash bros melee .",
            "output": [
                "and { only { filter_eq { all_rows ; genre ; fighting } } ; eq { hop { filter_eq { all_rows ; genre ; fighting } ; game } ; super smash bros melee } }"
            ]
        },
        {
            "input": "select the rows whose service years record fuzzily matches to 1989 . there is only one such row in the table . the ship name record of this unqiue row is kri halim perdanakususma .",
            "output": [
                "and { only { filter_eq { all_rows ; service years ; 1989 } } ; eq { hop { filter_eq { all_rows ; service years ; 1989 } ; ship name } ; kri halim perdanakususma } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 10 june 2009 . take the competition record of this row . select the rows whose date record fuzzily matches to 5 september 2009 . take the competition record of this row . the first record fuzzily matches to the second record . the competition record of the first row is 2010 fifa world cup qualification . the competition record of the second row is 2010 fifa world cup qualification .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; date ; 10 june 2009 } ; competition } ; hop { filter_eq { all_rows ; date ; 5 september 2009 } ; competition } } ; and { eq { hop { filter_eq { all_rows ; date ; 10 june 2009 } ; competition } ; 2010 fifa world cup qualification } ; eq { hop { filter_eq { all_rows ; date ; 5 september 2009 } ; competition } ; 2010 fifa world cup qualification } } }"
            ]
        },
        {
            "input": "select the rows whose game record fuzzily matches to 3 . take the time record of this row . select the rows whose game record fuzzily matches to 4 . take the time record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; game ; 3 } ; time } ; hop { filter_eq { all_rows ; game ; 4 } ; time } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . the minimum date record of these rows is september 13 .",
            "output": [
                "eq { min { filter_eq { all_rows ; result ; w } ; date } ; september 13 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 2 . among these rows , select the rows whose opponent record fuzzily matches to minnesota north stars . there is only one such row in the table . the february record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } ; february } ; 1 } }"
            ]
        },
        {
            "input": "the average of the vuelta record of all rows is 1.67 .",
            "output": [
                "round_eq { avg { all_rows ; vuelta } ; 1.67 }"
            ]
        },
        {
            "input": "the average of the occurrences record of all rows is 10 .",
            "output": [
                "round_eq { avg { all_rows ; occurrences } ; 10 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 97 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 97 }"
            ]
        },
        {
            "input": "select the rows whose graduated record is equal to 2009 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; graduated ; 2009 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; crowd ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose first elected record is less than 2006 . there is only one such row in the table . the incumbent record of this unqiue row is john kline .",
            "output": [
                "and { only { filter_less { all_rows ; first elected ; 2006 } } ; eq { hop { filter_less { all_rows ; first elected ; 2006 } ; incumbent } ; john kline } }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to paul pierce . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; paul pierce } } ; 5 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 25000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 25000 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to peterborough united . take the date record of this row . select the rows whose opponent record fuzzily matches to villarreal . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; peterborough united } ; date } ; hop { filter_eq { all_rows ; opponent ; villarreal } ; date } }"
            ]
        },
        {
            "input": "select the rows whose tribunal record fuzzily matches to coimbra . take the executions in persona record of this row . select the rows whose tribunal record fuzzily matches to goa . take the executions in persona record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tribunal ; coimbra } ; executions in persona } ; hop { filter_eq { all_rows ; tribunal ; goa } ; executions in persona } }"
            ]
        },
        {
            "input": "select the rows whose role record fuzzily matches to police officer lung . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; role ; police officer lung } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to honda . the sum of the wins record of these rows is 6 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; team ; honda } ; wins } ; 6 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 30349 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 30349 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to india . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; india } } ; 4 }"
            ]
        },
        {
            "input": "for the laps records of all rows , most of them are equal to 48 .",
            "output": [
                "most_eq { all_rows ; laps ; 48 }"
            ]
        },
        {
            "input": "the average of the podiums record of all rows is 2.89 .",
            "output": [
                "round_eq { avg { all_rows ; podiums } ; 2.89 }"
            ]
        },
        {
            "input": "select the rows whose year ( ceremony ) record fuzzily matches to 2006 ( 79th ) . take the year ( ceremony ) record of this row . select the rows whose year ( ceremony ) record fuzzily matches to 2007 ( 80th ) . take the year ( ceremony ) record of this row . the first record is less than the second record . the year ( ceremony ) record of the first row is 2006 ( 79th ) . the year ( ceremony ) record of the second row is 2007 ( 80th ) .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; year ( ceremony ) ; 2006 ( 79th ) } ; year ( ceremony ) } ; hop { filter_eq { all_rows ; year ( ceremony ) ; 2007 ( 80th ) } ; year ( ceremony ) } } ; and { eq { hop { filter_eq { all_rows ; year ( ceremony ) ; 2006 ( 79th ) } ; year ( ceremony ) } ; 2006 ( 79th ) } ; eq { hop { filter_eq { all_rows ; year ( ceremony ) ; 2007 ( 80th ) } ; year ( ceremony ) } ; 2007 ( 80th ) } } }"
            ]
        },
        {
            "input": "select the rows whose host record fuzzily matches to hopton - on - sea . there is only one such row in the table . the season record of this unqiue row is 1998 / 99 .",
            "output": [
                "and { only { filter_eq { all_rows ; host ; hopton - on - sea } } ; eq { hop { filter_eq { all_rows ; host ; hopton - on - sea } ; season } ; 1998 / 99 } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to weldon n edwards . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to romulus m saunders . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; weldon n edwards } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; romulus m saunders } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 20000 . among these rows , select the rows whose home team score record is greater than 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; crowd ; 20000 } ; home team score ; 10 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose opposing team record fuzzily matches to fiji . take the against record of this row . select the rows whose opposing team record fuzzily matches to taranaki . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposing team ; fiji } ; against } ; hop { filter_eq { all_rows ; opposing team ; taranaki } ; against } }"
            ]
        },
        {
            "input": "the minimum year record of all rows is 1968 .",
            "output": [
                "eq { min { all_rows ; year } ; 1968 }"
            ]
        },
        {
            "input": "for the used as or integrated with records of all rows , most of them fuzzily match to software .",
            "output": [
                "most_eq { all_rows ; used as or integrated with ; software }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to b . there is only one such row in the table . the drivers record of this unqiue row is alan jones peter fitzgerald .",
            "output": [
                "and { only { filter_eq { all_rows ; class ; b } } ; eq { hop { filter_eq { all_rows ; class ; b } ; drivers } ; alan jones peter fitzgerald } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 1st . there is only one such row in the table . the tournament record of this unqiue row is european championships . the extra record of this unqiue row is 400 m .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; 1st } } ; and { eq { hop { filter_eq { all_rows ; result ; 1st } ; tournament } ; european championships } ; eq { hop { filter_eq { all_rows ; result ; 1st } ; extra } ; 400 m } } }"
            ]
        },
        {
            "input": "select the rows whose year joined record is equal to 1953 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year joined ; 1953 } } ; 4 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 473 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 473 }"
            ]
        },
        {
            "input": "the average of the saturated fat record of all rows is 22 .",
            "output": [
                "round_eq { avg { all_rows ; saturated fat } ; 22 }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to kerr stuart . there is only one such row in the table . the name record of this unqiue row is princess .",
            "output": [
                "and { only { filter_eq { all_rows ; builder ; kerr stuart } } ; eq { hop { filter_eq { all_rows ; builder ; kerr stuart } ; name } ; princess } }"
            ]
        },
        {
            "input": "select the rows whose candidate record fuzzily matches to blake chandler . take the result record of this row . select the rows whose candidate record fuzzily matches to mary - anne lowe . take the result record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; candidate ; blake chandler } ; result } ; hop { filter_eq { all_rows ; candidate ; mary - anne lowe } ; result } }"
            ]
        },
        {
            "input": "select the rows whose height record fuzzily matches to 6 ' 4 . among these rows , select the rows whose round record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; height ; 6 ' 4 } ; round ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 9.29 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 9.29 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 01/1992 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; date ; 01/1992 } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to defensive back . there is only one such row in the table . the player record of this unqiue row is george donnelly .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; defensive back } } ; eq { hop { filter_eq { all_rows ; position ; defensive back } ; player } ; george donnelly } }"
            ]
        },
        {
            "input": "select the rows whose first elected record is less than 1800 . there is only one such row in the table . the incumbent record of this unqiue row is thomas newton , jr .",
            "output": [
                "and { only { filter_less { all_rows ; first elected ; 1800 } } ; eq { hop { filter_less { all_rows ; first elected ; 1800 } ; incumbent } ; thomas newton , jr } }"
            ]
        },
        {
            "input": "select the row whose overall wc points ( rank ) record of all rows is maximum . the name record of this row is gregor schlierenzauer .",
            "output": [
                "eq { hop { argmax { all_rows ; overall wc points ( rank ) } ; name } ; gregor schlierenzauer }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 19 april 1975 .",
            "output": [
                "all_eq { all_rows ; date ; 19 april 1975 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to world championships . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; world championships } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 20 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ; 20 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to united states . the average of the fastest time ( s ) record of these rows is 11.08 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; nation ; united states } ; fastest time ( s ) } ; 11.08 }"
            ]
        },
        {
            "input": "for the reason for change records of all rows , all of them fuzzily match to died .",
            "output": [
                "all_eq { all_rows ; reason for change ; died }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is minimum . the player record of this row is mithat demirel .",
            "output": [
                "eq { hop { argmin { all_rows ; height } ; player } ; mithat demirel }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to blake griffin . the average of the high assists record of these rows is 9 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high assists ; blake griffin } ; high assists } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to csv . there is only one such row in the table . the minister record of this unqiue row is marc fischbach .",
            "output": [
                "and { only { filter_eq { all_rows ; party ; csv } } ; eq { hop { filter_eq { all_rows ; party ; csv } ; minister } ; marc fischbach } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is collingwood .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; home team } ; collingwood }"
            ]
        },
        {
            "input": "select the rows whose assists record is equal to 10 . there is only one such row in the table . the name record of this unqiue row is terrell mcintyre .",
            "output": [
                "and { only { filter_eq { all_rows ; assists ; 10 } } ; eq { hop { filter_eq { all_rows ; assists ; 10 } ; name } ; terrell mcintyre } }"
            ]
        },
        {
            "input": "select the rows whose first elected record is equal to 1824 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; 1824 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september . the sum of the attendance record of these rows is under 200,000 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; september } ; attendance } ; under 200,000 }"
            ]
        },
        {
            "input": "the average of the laps record of all rows is 192 .",
            "output": [
                "round_eq { avg { all_rows ; laps } ; 192 }"
            ]
        },
        {
            "input": "select the row whose high points record of all rows is maximum . the high points record of this row is dalembert ( 23 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; high points } ; high points } ; dalembert ( 23 ) }"
            ]
        },
        {
            "input": "select the rows whose area ( km square ) record is greater than 1000000 . for the population ( millions , 2011 ) records of these rows , most of them are greater than 6 .",
            "output": [
                "most_greater { filter_greater { all_rows ; area ( km square ) ; 1000000 } ; population ( millions , 2011 ) ; 6 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to season cancelled . there is only one such row in the table . the season record of this unqiue row is 2009 - 10 .",
            "output": [
                "and { only { filter_eq { all_rows ; team ; season cancelled } } ; eq { hop { filter_eq { all_rows ; team ; season cancelled } ; season } ; 2009 - 10 } }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to cao . there is only one such row in the table . the name record of this unqiue row is zhong .",
            "output": [
                "and { only { filter_eq { all_rows ; state ; cao } } ; eq { hop { filter_eq { all_rows ; state ; cao } ; name } ; zhong } }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to nominated .",
            "output": [
                "most_eq { all_rows ; result ; nominated }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to renault . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; constructor ; renault } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the game record of this row is 5 .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; game } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to at & t center . the average of the location attendance record of these rows is 18797 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; location attendance ; at & t center } ; location attendance } ; 18797 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to fraternity . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; type ; fraternity } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose city district record fuzzily matches to santiago . take the population 2007 census ( hab ) record of this row . select the rows whose city district record fuzzily matches to wanchaq . take the population 2007 census ( hab ) record of this row . the first record is 11753 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; city district ; santiago } ; population 2007 census ( hab ) } ; hop { filter_eq { all_rows ; city district ; wanchaq } ; population 2007 census ( hab ) } } ; 11753 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the club record of this row is caernarfon rfc .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; club } ; caernarfon rfc }"
            ]
        },
        {
            "input": "select the rows whose circuit record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; circuit } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose scoring average record of all rows is minimum . the year record of this row is 2007 .",
            "output": [
                "eq { hop { argmin { all_rows ; scoring average } ; year } ; 2007 }"
            ]
        },
        {
            "input": "the average of the central rate record of all rows is 3.4 .",
            "output": [
                "round_eq { avg { all_rows ; central rate } ; 3.4 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to budapest , hungary . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; city ; budapest , hungary } }"
            ]
        },
        {
            "input": "select the rows whose round record is equal to 1 . select the row whose weight record of these rows is maximum . the player name record of this row is felix jones .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; round ; 1 } ; weight } ; player name } ; felix jones }"
            ]
        },
        {
            "input": "the sum of the try bonus record of all rows is 44 .",
            "output": [
                "round_eq { sum { all_rows ; try bonus } ; 44 }"
            ]
        },
        {
            "input": "select the rows whose rd record is greater than or equal to 4 . select the row whose pick record of these rows is 2nd minimum . the player record of this row is matt butcher .",
            "output": [
                "eq { hop { nth_argmin { filter_greater_eq { all_rows ; rd ; 4 } ; pick ; 2 } ; player } ; matt butcher }"
            ]
        },
        {
            "input": "select the rows whose name of rivalry record fuzzily matches to auburn - tennessee football rivalry . take the games played record of this row . select the rows whose name of rivalry record fuzzily matches to auburn - clemson rivalry . take the games played record of this row . the first record is 3 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry } ; games played } ; hop { filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry } ; games played } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to virgil fabian . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; virgil fabian } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re-elected . select the row whose first elected record of these rows is 1st maximum . the incumbent record of this row is donald d clancy .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; result ; re-elected } ; first elected ; 1 } ; incumbent } ; donald d clancy }"
            ]
        },
        {
            "input": "select the rows whose score in the final record fuzzily matches to w / o . there is only one such row in the table . the partnering record of this unqiue row is sorana c\u00eerstea .",
            "output": [
                "and { only { filter_eq { all_rows ; score in the final ; w / o } } ; eq { hop { filter_eq { all_rows ; score in the final ; w / o } ; partnering } ; sorana c\u00eerstea } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the venue record of this row is bahrain national stadium , manama .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; venue } ; bahrain national stadium , manama }"
            ]
        },
        {
            "input": "select the rows whose goalsagainst record is greater than 300 . there is only one such row in the table . the season record of this unqiue row is 1997 - 98 .",
            "output": [
                "and { only { filter_greater { all_rows ; goalsagainst ; 300 } } ; eq { hop { filter_greater { all_rows ; goalsagainst ; 300 } ; season } ; 1997 - 98 } }"
            ]
        },
        {
            "input": "select the rows whose ngc number record fuzzily matches to 5823 . take the right ascension ( j2000 ) record of this row . select the rows whose ngc number record fuzzily matches to 5822 . take the right ascension ( j2000 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ngc number ; 5823 } ; right ascension ( j2000 ) } ; hop { filter_eq { all_rows ; ngc number ; 5822 } ; right ascension ( j2000 ) } }"
            ]
        },
        {
            "input": "for the outcome records of all rows , most of them fuzzily match to winner .",
            "output": [
                "most_eq { all_rows ; outcome ; winner }"
            ]
        },
        {
            "input": "select the rows whose mens doubles record fuzzily matches to vincent laigle svetoslav stoyanov . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; mens doubles ; vincent laigle svetoslav stoyanov } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose series ep record of all rows is 2nd minimum . the netflix record of this row is s07e02 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; series ep ; 2 } ; netflix } ; s07e02 }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 120.8 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 120.8 }"
            ]
        },
        {
            "input": "for the mean score records of all rows , most of them are greater than 621 .",
            "output": [
                "most_greater { all_rows ; mean score ; 621 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the club record of this row is ud las palmas .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; club } ; ud las palmas }"
            ]
        },
        {
            "input": "select the rows whose crowd record is equal to 10000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; crowd ; 10000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose venue record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; venue } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose gold record fuzzily matches to norbert sturny ( sui ) . take the year record of this row . select the rows whose gold record fuzzily matches to malcolm cooper ( gbr ) . take the year record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; gold ; norbert sturny ( sui ) } ; year } ; hop { filter_eq { all_rows ; gold ; malcolm cooper ( gbr ) } ; year } }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to rear naked choke . there is only one such row in the table . the opponent record of this unqiue row is helio dipp .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; rear naked choke } } ; eq { hop { filter_eq { all_rows ; method ; rear naked choke } ; opponent } ; helio dipp } }"
            ]
        },
        {
            "input": "for the final score records of all rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { all_rows ; final score ; l }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to independent . there is only one such row in the table . the candidate record of this unqiue row is peter law .",
            "output": [
                "and { only { filter_eq { all_rows ; party ; independent } } ; eq { hop { filter_eq { all_rows ; party ; independent } ; candidate } ; peter law } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to seoul , south korea . there is only one such row in the table . the event record of this unqiue row is hero 's 2005 in seoul .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; seoul , south korea } } ; eq { hop { filter_eq { all_rows ; location ; seoul , south korea } ; event } ; hero 's 2005 in seoul } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to senators . take the overall record record of this row . select the rows whose team record fuzzily matches to golden knights . take the overall record record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; senators } ; overall record } ; hop { filter_eq { all_rows ; team ; golden knights } ; overall record } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is 23 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; 23 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is green bay packers .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; green bay packers }"
            ]
        },
        {
            "input": "select the rows whose location ( city , state ) record fuzzily matches to wisconsin . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ( city , state ) ; wisconsin } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose tie no record fuzzily matches to replay . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tie no ; replay } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1959 . take the rank record of this row . select the rows whose year record fuzzily matches to 1958 . take the rank record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; year ; 1959 } ; rank } ; hop { filter_eq { all_rows ; year ; 1958 } ; rank } }"
            ]
        },
        {
            "input": "select the rows whose primary conference record fuzzily matches to big east conference . there is only one such row in the table . the institution record of this unqiue row is georgetown university .",
            "output": [
                "and { only { filter_eq { all_rows ; primary conference ; big east conference } } ; eq { hop { filter_eq { all_rows ; primary conference ; big east conference } ; institution } ; georgetown university } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 5-2 . there is only one such row in the table . the opponent record of this unqiue row is boston bruins .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 5-2 } } ; eq { hop { filter_eq { all_rows ; score ; 5-2 } ; opponent } ; boston bruins } }"
            ]
        },
        {
            "input": "select the rows whose result record is less than 20.3 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_less { all_rows ; result ; 20.3 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to 112 degree v4 ' big bang ' ( 2 - stroke ) . take the crankshaft record of this row . select the rows whose engine record fuzzily matches to 90 degree v4 ' twin pulse ' . take the crankshaft record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; engine ; 112 degree v4 ' big bang ' ( 2 - stroke ) } ; crankshaft } ; hop { filter_eq { all_rows ; engine ; 90 degree v4 ' twin pulse ' } ; crankshaft } }"
            ]
        },
        {
            "input": "select the rows whose display record is equal to 4.55 . there is only one such row in the table . the code name record of this unqiue row is aoba .",
            "output": [
                "and { only { filter_eq { all_rows ; display ; 4.55 } } ; eq { hop { filter_eq { all_rows ; display ; 4.55 } ; code name } ; aoba } }"
            ]
        },
        {
            "input": "select the rows whose place record does not match to t1 . the average of the to par record of these rows is 4 .",
            "output": [
                "round_eq { avg { filter_not_eq { all_rows ; place ; t1 } ; to par } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table . the name record of this unqiue row is reynel hugnatan .",
            "output": [
                "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; reynel hugnatan } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to world championships . the 2nd minimum year record of these rows is 2001 .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; competition ; world championships } ; year ; 2 } ; 2001 }"
            ]
        },
        {
            "input": "select the rows whose record record fuzzily matches to 4 - 0 . take the time record of this row . select the rows whose record record fuzzily matches to 5 - 0 . take the time record of this row . the first record is less than the second record . the time record of the first row is 1:43 . the time record of the second row is 5:00 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; record ; 4 - 0 } ; time } ; hop { filter_eq { all_rows ; record ; 5 - 0 } ; time } } ; and { eq { hop { filter_eq { all_rows ; record ; 4 - 0 } ; time } ; 1:43 } ; eq { hop { filter_eq { all_rows ; record ; 5 - 0 } ; time } ; 5:00 } } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose score record fuzzily matches to 282 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; united states } ; score ; 282 } } ; 2 }"
            ]
        },
        {
            "input": "for the extra records of all rows , most of them fuzzily match to team competition .",
            "output": [
                "most_eq { all_rows ; extra ; team competition }"
            ]
        },
        {
            "input": "select the rows whose television service record fuzzily matches to telemarket . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; television service ; telemarket } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose ties record is equal to 1 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; ties ; 1 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the week record of this row is 8 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; week } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 10 . among these rows , select the rows whose drawn record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; points ; 10 } ; drawn ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose apps record is equal to 24 . there is only one such row in the table . the season record of this unqiue row is 2005 / 06 .",
            "output": [
                "and { only { filter_eq { all_rows ; apps ; 24 } } ; eq { hop { filter_eq { all_rows ; apps ; 24 } ; season } ; 2005 / 06 } }"
            ]
        },
        {
            "input": "select the row whose top 10 record of all rows is maximum . the year record of this row is 2009 .",
            "output": [
                "eq { hop { argmax { all_rows ; top 10 } ; year } ; 2009 }"
            ]
        },
        {
            "input": "for the hand guards records of all rows , most of them fuzzily match to m4 .",
            "output": [
                "most_eq { all_rows ; hand guards ; m4 }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to 1st . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; round ; 1st } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose score record is equal to 70 . among these rows , select the rows whose country record fuzzily matches to denmark . there is only one such row in the table . the player record of this unqiue row is s\u00f8ren kjeldsen .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; score ; 70 } ; country ; denmark } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; 70 } ; country ; denmark } ; player } ; s\u00f8ren kjeldsen } }"
            ]
        },
        {
            "input": "the 3rd minimum pick record of all rows is 3 . the player record of the row with 3rd minimum pick record is candice wiggins . the school / club team record of the row with 3rd minimum pick record is stanford .",
            "output": [
                "and { eq { nth_min { all_rows ; pick ; 3 } ; 3 } ; and { eq { hop { nth_argmin { all_rows ; pick ; 3 } ; player } ; candice wiggins } ; eq { hop { nth_argmin { all_rows ; pick ; 3 } ; school / club team } ; stanford } } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to dave farmer . take the round record of this row . select the rows whose name record fuzzily matches to don parrish . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; dave farmer } ; round } ; hop { filter_eq { all_rows ; name ; don parrish } ; round } }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 154.3245 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 154.3245 }"
            ]
        },
        {
            "input": "select the rows whose opposition record fuzzily matches to surrey . take the score record of this row . select the rows whose opposition record fuzzily matches to somerset . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposition ; surrey } ; score } ; hop { filter_eq { all_rows ; opposition ; somerset } ; score } }"
            ]
        },
        {
            "input": "select the rows whose 2004 record fuzzily matches to w . there is only one such row in the table . the tournament record of this unqiue row is french open .",
            "output": [
                "and { only { filter_eq { all_rows ; 2004 ; w } } ; eq { hop { filter_eq { all_rows ; 2004 ; w } ; tournament } ; french open } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 22 october . take the score record of this row . select the rows whose date record fuzzily matches to 24 october . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 22 october } ; score } ; hop { filter_eq { all_rows ; date ; 24 october } ; score } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is september 28 , 1986 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; september 28 , 1986 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to fra . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; fra } } ; 3 }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are less than 90 .",
            "output": [
                "most_less { all_rows ; points ; 90 }"
            ]
        },
        {
            "input": "the average of the result record of all rows is 24.69 .",
            "output": [
                "round_eq { avg { all_rows ; result } ; 24.69 }"
            ]
        },
        {
            "input": "select the rows whose institution record is arbitrary . the number of such rows is 17 .",
            "output": [
                "eq { count { filter_all { all_rows ; institution } } ; 17 }"
            ]
        },
        {
            "input": "the sum of the enrollment record of all rows is 6339 .",
            "output": [
                "round_eq { sum { all_rows ; enrollment } ; 6339 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to bottom 3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; bottom 3 } } ; 2 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to paul .",
            "output": [
                "most_eq { all_rows ; high points ; paul }"
            ]
        },
        {
            "input": "the average of the field goals record of all rows is 113 .",
            "output": [
                "round_eq { avg { all_rows ; field goals } ; 113 }"
            ]
        },
        {
            "input": "select the rows whose date successor seated record fuzzily matches to march . there is only one such row in the table . the district record of this unqiue row is kentucky 2nd .",
            "output": [
                "and { only { filter_eq { all_rows ; date successor seated ; march } } ; eq { hop { filter_eq { all_rows ; date successor seated ; march } ; district } ; kentucky 2nd } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . there is only one such row in the table . the year record of this unqiue row is 1994 . the championship record of this unqiue row is rome .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; clay } } ; and { eq { hop { filter_eq { all_rows ; surface ; clay } ; year } ; 1994 } ; eq { hop { filter_eq { all_rows ; surface ; clay } ; championship } ; rome } } }"
            ]
        },
        {
            "input": "the maximum length of retirement record of all rows is 6030 days . the president record of the row with superlative length of retirement record is venkataraman , ramaswamy ramaswamy venkataraman .",
            "output": [
                "and { eq { max { all_rows ; length of retirement } ; 6030 days } ; eq { hop { argmax { all_rows ; length of retirement } ; president } ; venkataraman , ramaswamy ramaswamy venkataraman } }"
            ]
        },
        {
            "input": "the average of the days with frost record of all rows is 18.4 .",
            "output": [
                "round_eq { avg { all_rows ; days with frost } ; 18.4 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to gergely kiss . take the date of birth record of this row . select the rows whose name record fuzzily matches to tibor benedek . take the date of birth record of this row . the first record is 5 years larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; gergely kiss } ; date of birth } ; hop { filter_eq { all_rows ; name ; tibor benedek } ; date of birth } } ; 5 years }"
            ]
        },
        {
            "input": "select the rows whose top - 5 record is equal to 1 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; top - 5 ; 1 } }"
            ]
        },
        {
            "input": "select the row whose erp w record of all rows is maximum . the frequency mhz record of this row is 105.1 fm .",
            "output": [
                "eq { hop { argmax { all_rows ; erp w } ; frequency mhz } ; 105.1 fm }"
            ]
        },
        {
            "input": "for the nationality records of all rows , most of them fuzzily match to canada .",
            "output": [
                "most_eq { all_rows ; nationality ; canada }"
            ]
        },
        {
            "input": "select the rows whose gymnast record fuzzily matches to kor . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gymnast ; kor } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is maximum . the english name record of this row is luobei county .",
            "output": [
                "eq { hop { argmax { all_rows ; population } ; english name } ; luobei county }"
            ]
        },
        {
            "input": "select the row whose us viewers ( in millions ) record of all rows is maximum . the title record of this row is crazy for you .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( in millions ) } ; title } ; crazy for you }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 10 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to iowa . take the date record of this row . select the rows whose opponent record fuzzily matches to 4 michigan . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; iowa } ; date } ; hop { filter_eq { all_rows ; opponent ; 4 michigan } ; date } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tom watson . take the year ( s ) won record of this row . select the rows whose player record fuzzily matches to retief goosen . take the year ( s ) won record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; tom watson } ; year ( s ) won } ; hop { filter_eq { all_rows ; player ; retief goosen } ; year ( s ) won } }"
            ]
        },
        {
            "input": "select the rows whose rank record is equal to 20 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; rank ; 20 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose joined record is equal to 2007 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; joined ; 2007 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose episode count record is greater than 80 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; episode count ; 80 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose original air date ( uk ) record fuzzily matches to july . there is only one such row in the table . the episode title record of this unqiue row is night games .",
            "output": [
                "and { only { filter_eq { all_rows ; original air date ( uk ) ; july } } ; eq { hop { filter_eq { all_rows ; original air date ( uk ) ; july } ; episode title } ; night games } }"
            ]
        },
        {
            "input": "select the rows whose starring record fuzzily matches to warren mitchell as alf garnett . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; starring ; warren mitchell as alf garnett } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to jonathan frakes . among these rows , select the rows whose written by record fuzzily matches to linda mcgibney . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; directed by ; jonathan frakes } ; written by ; linda mcgibney } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose enrollment ihsaa class record of all rows is maximum . the school record of this row is penn .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment ihsaa class } ; school } ; penn }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the date record of this row is 23 may 2002 .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; date } ; 23 may 2002 }"
            ]
        },
        {
            "input": "for the season premiere date records of all rows , all of them fuzzily match to 20 .",
            "output": [
                "all_eq { all_rows ; season premiere date ; 20 }"
            ]
        },
        {
            "input": "the 1st minimum round record of all rows is 1 . the player record of the row with 1st minimum round record is john hummer .",
            "output": [
                "and { eq { nth_min { all_rows ; round ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; round ; 1 } ; player } ; john hummer } }"
            ]
        },
        {
            "input": "for the played records of all rows , most of them are equal to 114 .",
            "output": [
                "most_eq { all_rows ; played ; 114 }"
            ]
        },
        {
            "input": "select the rows whose construction record fuzzily matches to plastic . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; construction ; plastic } } ; 4 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 43583 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 43583 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose score record is greater than 67 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; country ; united states } ; score ; 67 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to mutual consent . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; mutual consent } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the name record of this row is michael doyle .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; name } ; michael doyle }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the school record of this row is belleville east high school .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; school } ; belleville east high school }"
            ]
        },
        {
            "input": "the average of the average ratings record of all rows is 14.57 .",
            "output": [
                "round_eq { avg { all_rows ; average ratings } ; 14.57 }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is minimum . the player record of this row is mehmet y\u0131lmaz .",
            "output": [
                "eq { hop { argmin { all_rows ; goals } ; player } ; mehmet y\u0131lmaz }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to winnipeg . take the date record of this row . select the rows whose visitor record fuzzily matches to chicago . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; visitor ; winnipeg } ; date } ; hop { filter_eq { all_rows ; visitor ; chicago } ; date } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to ( ot ) . there is only one such row in the table . the team record of this unqiue row is milwaukee .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; ( ot ) } } ; eq { hop { filter_eq { all_rows ; score ; ( ot ) } ; team } ; milwaukee } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to commonwealth games . take the result record of this row . select the rows whose tournament record fuzzily matches to african championships . take the result record of this row . the first record is less than the second record . the year record of the first row is 2006 . the year record of the second row is 2006 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result } ; hop { filter_eq { all_rows ; tournament ; african championships } ; result } } ; and { eq { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year } ; 2006 } ; eq { hop { filter_eq { all_rows ; tournament ; african championships } ; year } ; 2006 } } }"
            ]
        },
        {
            "input": "select the rows whose time record fuzzily matches to 2:18 . there is only one such row in the table . the nationality record of this unqiue row is germany .",
            "output": [
                "and { only { filter_eq { all_rows ; time ; 2:18 } } ; eq { hop { filter_eq { all_rows ; time ; 2:18 } ; nationality } ; germany } }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to schenectady . the sum of the quantity made record of these rows is 27 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; manufacturer ; schenectady } ; quantity made } ; 27 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is december 14 , 1958 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; december 14 , 1958 }"
            ]
        },
        {
            "input": "select the row whose singapore gross record of all rows is 2nd maximum . the title record of this row is the eye 2 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; singapore gross ; 2 } ; title } ; the eye 2 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to ty warren . take the round record of this row . select the rows whose player record fuzzily matches to dan klecko . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; ty warren } ; round } ; hop { filter_eq { all_rows ; player ; dan klecko } ; round } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is south melbourne . the away team record of this row is carlton .",
            "output": [
                "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; south melbourne } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; carlton } }"
            ]
        },
        {
            "input": "the average of the mass ( kg ) record of all rows is 56.32 kg .",
            "output": [
                "round_eq { avg { all_rows ; mass ( kg ) } ; 56.32 kg }"
            ]
        },
        {
            "input": "the average of the tied record of all rows is 4.16 .",
            "output": [
                "round_eq { avg { all_rows ; tied } ; 4.16 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to alex chapple . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; alex chapple } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to turespana masters - open andalucia . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to bmw international open . take the margin of victory record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; turespana masters - open andalucia } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; bmw international open } ; margin of victory } }"
            ]
        },
        {
            "input": "select the row whose against record of all rows is 2nd minimum . the opposing team record of this row is north and midland of scotland .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; against ; 2 } ; opposing team } ; north and midland of scotland }"
            ]
        },
        {
            "input": "select the rows whose year record is less than or equal to 1974 . among these rows , select the rows whose place record fuzzily matches to cairo . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_less_eq { all_rows ; year ; 1974 } ; place ; cairo } } ; 1 }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is 0.4375 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; 0.4375 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to canada . take the silver record of this row . select the rows whose nation record fuzzily matches to united states . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; canada } ; silver } ; hop { filter_eq { all_rows ; nation ; united states } ; silver } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april 25 . take the high points record of this row . select the rows whose date record fuzzily matches to april 27 . take the high points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; april 25 } ; high points } ; hop { filter_eq { all_rows ; date ; april 27 } ; high points } }"
            ]
        },
        {
            "input": "select the rows whose rider record fuzzily matches to john hopkins . take the laps record of this row . select the rows whose rider record fuzzily matches to marco melandri . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; rider ; john hopkins } ; laps } ; hop { filter_eq { all_rows ; rider ; marco melandri } ; laps } }"
            ]
        },
        {
            "input": "select the row whose place record of all rows is minimum . the player record of this row is billy casper .",
            "output": [
                "eq { hop { argmin { all_rows ; place } ; player } ; billy casper }"
            ]
        },
        {
            "input": "select the rows whose owner ( s ) record fuzzily matches to private owner . there is only one such row in the table . the number & name record of this unqiue row is no 1163 whitehead .",
            "output": [
                "and { only { filter_eq { all_rows ; owner ( s ) ; private owner } } ; eq { hop { filter_eq { all_rows ; owner ( s ) ; private owner } ; number & name } ; no 1163 whitehead } }"
            ]
        },
        {
            "input": "select the rows whose to par record fuzzily matches to +5 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; +5 } } ; 4 }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them fuzzily match to 1st .",
            "output": [
                "most_eq { all_rows ; position ; 1st }"
            ]
        },
        {
            "input": "select the rows whose ship record fuzzily matches to l\u00fctzow . take the total record of this row . select the rows whose ship record fuzzily matches to seydlitz . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ship ; l\u00fctzow } ; total } ; hop { filter_eq { all_rows ; ship ; seydlitz } ; total } }"
            ]
        },
        {
            "input": "for the suites records of all rows , most of them are greater than or equal to 125 .",
            "output": [
                "most_greater_eq { all_rows ; suites ; 125 }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is maximum . the title record of this row is road to the north pole .",
            "output": [
                "eq { hop { argmax { all_rows ; original air date } ; title } ; road to the north pole }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to niki cross . take the minutes record of this row . select the rows whose name record fuzzily matches to amanda cinalli . take the minutes record of this row . the second record is 60 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; niki cross } ; minutes } ; hop { filter_eq { all_rows ; name ; amanda cinalli } ; minutes } } ; -60 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to madagascar . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; madagascar } } ; 3 }"
            ]
        },
        {
            "input": "for the country records of all rows , all of them fuzzily match to united states .",
            "output": [
                "all_eq { all_rows ; country ; united states }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is maximum . the incumbent record of this row is joe moakley .",
            "output": [
                "eq { hop { argmax { all_rows ; candidates } ; incumbent } ; joe moakley }"
            ]
        },
        {
            "input": "select the row whose appearances record of all rows is maximum . the name record of this row is valdo .",
            "output": [
                "eq { hop { argmax { all_rows ; appearances } ; name } ; valdo }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 . the 3rd minimum date record of these rows is 14 june 2012 . the date record of the row with 3rd minimum date record is 14 june 2012 .",
            "output": [
                "and { eq { nth_min { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; 14 june 2012 } ; eq { hop { nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; date } ; 14 june 2012 } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the category record of this row is favorite tv actress - leading role in a drama .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; category } ; favorite tv actress - leading role in a drama }"
            ]
        },
        {
            "input": "the sum of the 1 usd = record of all rows is 8429.43027 .",
            "output": [
                "round_eq { sum { all_rows ; 1 usd"
            ]
        },
        {
            "input": "select the rows whose platform ( s ) record fuzzily matches to xbox 360 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; platform ( s ) ; xbox 360 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the level record of all rows is 8 .",
            "output": [
                "round_eq { avg { all_rows ; level } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose film title used in nomination record fuzzily matches to vukovar poste restante . take the year ( ceremony ) record of this row . select the rows whose film title used in nomination record fuzzily matches to underground . take the year ( ceremony ) record of this row . the first record is less than the second record . the year ( ceremony ) record of the first row is 1994 ( 67th ) . the year ( ceremony ) record of the second row is 1995 ( 68th ) .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; film title used in nomination ; vukovar poste restante } ; year ( ceremony ) } ; hop { filter_eq { all_rows ; film title used in nomination ; underground } ; year ( ceremony ) } } ; and { eq { hop { filter_eq { all_rows ; film title used in nomination ; vukovar poste restante } ; year ( ceremony ) } ; 1994 ( 67th ) } ; eq { hop { filter_eq { all_rows ; film title used in nomination ; underground } ; year ( ceremony ) } ; 1995 ( 68th ) } } }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to astralwerks records . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; label ; astralwerks records } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose score record is equal to 71 . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; 71 } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to saskatchewan . among these rows , select the rows whose position record fuzzily matches to k . there is only one such row in the table . the player record of this unqiue row is matt kellett .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } } ; eq { hop { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } ; player } ; matt kellett } }"
            ]
        },
        {
            "input": "for the gfl premierships records of all rows , all of them fuzzily match to nil .",
            "output": [
                "all_eq { all_rows ; gfl premierships ; nil }"
            ]
        },
        {
            "input": "for the status records of all rows , most of them fuzzily match to loaned .",
            "output": [
                "most_eq { all_rows ; status ; loaned }"
            ]
        },
        {
            "input": "the average of the earnings record of all rows is $ 426,356.60 .",
            "output": [
                "round_eq { avg { all_rows ; earnings } ; $ 426,356.60 }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than 1 . among these rows , select the rows whose bronze record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; total ; 1 } ; bronze ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose enrollment record is greater than 3000 . the average of the varsity sports record of these rows is 10.4 .",
            "output": [
                "round_eq { avg { filter_greater { all_rows ; enrollment ; 3000 } ; varsity sports } ; 10.4 }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to wales . take the against record of this row . select the rows whose opposing teams record fuzzily matches to scotland . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposing teams ; wales } ; against } ; hop { filter_eq { all_rows ; opposing teams ; scotland } ; against } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the role record of this row is ahana sharma .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; role } ; ahana sharma }"
            ]
        },
        {
            "input": "for the ihsaa class records of all rows , all of them fuzzily match to a .",
            "output": [
                "all_eq { all_rows ; ihsaa class ; a }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to freshman . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; class ; freshman } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose laps record is less than 7 . there is only one such row in the table . the year record of this unqiue row is 1980 .",
            "output": [
                "and { only { filter_less { all_rows ; laps ; 7 } } ; eq { hop { filter_less { all_rows ; laps ; 7 } ; year } ; 1980 } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose to par record is equal to -1 . there is only one such row in the table . the player record of this unqiue row is jack nicklaus .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; country ; united states } ; to par ; -1 } } ; eq { hop { filter_eq { filter_eq { all_rows ; country ; united states } ; to par ; -1 } ; player } ; jack nicklaus } }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 3.75 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 3.75 }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to six nations . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; status ; six nations } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to beijing . take the year record of this row . select the rows whose location record fuzzily matches to hiroshima . take the year record of this row . the second record is 4 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; location ; beijing } ; year } ; hop { filter_eq { all_rows ; location ; hiroshima } ; year } } ; -4 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to curt weldon . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to john murtha . take the opponent record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; curt weldon } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; john murtha } ; opponent } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the tournament record of this unqiue row is kyoto .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; kyoto } }"
            ]
        },
        {
            "input": "for the played records of all rows , all of them are equal to 38 .",
            "output": [
                "all_eq { all_rows ; played ; 38 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to ford center . the sum of the location attendance record of these rows is over 36000 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; location attendance ; ford center } ; location attendance } ; over 36000 }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to mile high stadium . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; game site ; mile high stadium } } ; 7 }"
            ]
        },
        {
            "input": "for the original air date records of all rows , most of them fuzzily match to february .",
            "output": [
                "most_eq { all_rows ; original air date ; february }"
            ]
        },
        {
            "input": "select the rows whose branding record fuzzily matches to dzec radyo agila 1062 . take the power ( kw ) record of this row . select the rows whose branding record fuzzily matches to dwin radyo agila dagupan . take the power ( kw ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; branding ; dzec radyo agila 1062 } ; power ( kw ) } ; hop { filter_eq { all_rows ; branding ; dwin radyo agila dagupan } ; power ( kw ) } }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to ko ( punch ) . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; method ; ko ( punch ) } }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to jammu & kashmir . for the completion schedule records of these rows , most of them are equal to 2011 .",
            "output": [
                "most_eq { filter_eq { all_rows ; state ; jammu & kashmir } ; completion schedule ; 2011 }"
            ]
        },
        {
            "input": "select the rows whose record record fuzzily matches to 3 - 3 . there is only one such row in the table . the high points record of this unqiue row is lebron james ( 25 ) .",
            "output": [
                "and { only { filter_eq { all_rows ; record ; 3 - 3 } } ; eq { hop { filter_eq { all_rows ; record ; 3 - 3 } ; high points } ; lebron james ( 25 ) } }"
            ]
        },
        {
            "input": "for the original channel records of all rows , most of them fuzzily match to itv .",
            "output": [
                "most_eq { all_rows ; original channel ; itv }"
            ]
        },
        {
            "input": "select the row whose 1st leg record of all rows is maximum . the team 2 record of this row is al - sekka al - hadid .",
            "output": [
                "eq { hop { argmax { all_rows ; 1st leg } ; team 2 } ; al - sekka al - hadid }"
            ]
        },
        {
            "input": "select the rows whose rome , italy record fuzzily matches to germany . there is only one such row in the table . the world record record of this unqiue row is world leading .",
            "output": [
                "and { only { filter_eq { all_rows ; rome , italy ; germany } } ; eq { hop { filter_eq { all_rows ; rome , italy ; germany } ; world record } ; world leading } }"
            ]
        },
        {
            "input": "select the rows whose frequency mhz record is greater than 100 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; frequency mhz ; 100 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose house name record fuzzily matches to gongola . take the founded record of this row . select the rows whose house name record fuzzily matches to benue . take the founded record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; house name ; gongola } ; founded } ; hop { filter_eq { all_rows ; house name ; benue } ; founded } }"
            ]
        },
        {
            "input": "select the rows whose opened record is equal to 2004 . there is only one such row in the table . the stadium record of this unqiue row is indiana invaders soccer complex .",
            "output": [
                "and { only { filter_eq { all_rows ; opened ; 2004 } } ; eq { hop { filter_eq { all_rows ; opened ; 2004 } ; stadium } ; indiana invaders soccer complex } }"
            ]
        },
        {
            "input": "select the rows whose original airdate record fuzzily matches to may . there is only one such row in the table . the episode title record of this unqiue row is secret soviet bases .",
            "output": [
                "and { only { filter_eq { all_rows ; original airdate ; may } } ; eq { hop { filter_eq { all_rows ; original airdate ; may } ; episode title } ; secret soviet bases } }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is 1.43 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; 1.43 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd minimum . the venue record of this row is warsaw , poland .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 2 } ; venue } ; warsaw , poland }"
            ]
        },
        {
            "input": "select the rows whose population record is less than 10,000,000 . select the row whose gdp ( nominal ) record of these rows is 2nd maximum . the country record of this row is tajikistan .",
            "output": [
                "eq { hop { nth_argmax { filter_less { all_rows ; population ; 10,000,000 } ; gdp ( nominal ) ; 2 } ; country } ; tajikistan }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york jets . select the row whose date record of these rows is 2nd minimum . the bills points record of this row is 34 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; opponent ; new york jets } ; date ; 2 } ; bills points } ; 34 }"
            ]
        },
        {
            "input": "select the row whose no in series record of all rows is 1st maximum . the family / families record of this row is the williams family .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; no in series ; 1 } ; family / families } ; the williams family }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to sang kyu kim . there is only one such row in the table . the title record of this unqiue row is road narrows .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; sang kyu kim } } ; eq { hop { filter_eq { all_rows ; written by ; sang kyu kim } ; title } ; road narrows } }"
            ]
        },
        {
            "input": "the average of the age record of all rows is 30 .",
            "output": [
                "round_eq { avg { all_rows ; age } ; 30 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to steve mann . among these rows , select the rows whose written by record fuzzily matches to john ridley . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; directed by ; steve mann } ; written by ; john ridley } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose td 's record of all rows is 2nd maximum . the player record of this row is lenzie jackson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; td 's ; 2 } ; player } ; lenzie jackson }"
            ]
        },
        {
            "input": "the average of the money record of all rows is 1584 .",
            "output": [
                "round_eq { avg { all_rows ; money } ; 1584 }"
            ]
        },
        {
            "input": "select the row whose design flow ( lpm ) record of all rows is maximum . the location record of this row is marcala , hon .",
            "output": [
                "eq { hop { argmax { all_rows ; design flow ( lpm ) } ; location } ; marcala , hon }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to amy engelberg & wendy engelberg . there is only one such row in the table . the title record of this unqiue row is dead model walking .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; amy engelberg & wendy engelberg } } ; eq { hop { filter_eq { all_rows ; written by ; amy engelberg & wendy engelberg } ; title } ; dead model walking } }"
            ]
        },
        {
            "input": "the 1st minimum 2004 - 2005 season record of all rows is 1st in the liga . the club record of the row with 1st minimum 2004 - 2005 season record is benfica .",
            "output": [
                "and { eq { nth_min { all_rows ; 2004 - 2005 season ; 1 } ; 1st in the liga } ; eq { hop { nth_argmin { all_rows ; 2004 - 2005 season ; 1 } ; club } ; benfica } }"
            ]
        },
        {
            "input": "select the rows whose men 's singles record fuzzily matches to andrew smith . there is only one such row in the table . the year record of this unqiue row is 2006 .",
            "output": [
                "and { only { filter_eq { all_rows ; men 's singles ; andrew smith } } ; eq { hop { filter_eq { all_rows ; men 's singles ; andrew smith } ; year } ; 2006 } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is detroit lions .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; detroit lions }"
            ]
        },
        {
            "input": "select the row whose rainfall by volume ( km 3 / year ) record of all rows is maximum . the region record of this row is huetar atl\u00e1ntico .",
            "output": [
                "eq { hop { argmax { all_rows ; rainfall by volume ( km 3 / year ) } ; region } ; huetar atl\u00e1ntico }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 5th minimum . the team record of this row is houston .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 5 } ; team } ; houston }"
            ]
        },
        {
            "input": "select the rows whose men 's singles record fuzzily matches to kevin cord\u00f3n . the minimum year record of these rows is 2009 .",
            "output": [
                "eq { min { filter_eq { all_rows ; men 's singles ; kevin cord\u00f3n } ; year } ; 2009 }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is 1st maximum . the year record of this row is 2008 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; laps ; 1 } ; year } ; 2008 }"
            ]
        },
        {
            "input": "select the rows whose finish record fuzzily matches to avignon . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; finish ; avignon } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to 2.7 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; engine ; 2.7 } } ; 3 }"
            ]
        },
        {
            "input": "the 9th minimum week record of all rows is 9 . the attendance record of the row with 9th minimum week record is 46978 .",
            "output": [
                "and { eq { nth_min { all_rows ; week ; 9 } ; 9 } ; eq { hop { nth_argmin { all_rows ; week ; 9 } ; attendance } ; 46978 } }"
            ]
        },
        {
            "input": "for the owner records of all rows , most of them fuzzily match to canadian broadcasting corporation .",
            "output": [
                "most_eq { all_rows ; owner ; canadian broadcasting corporation }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the venue record of this row is victoria park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; venue } ; victoria park }"
            ]
        },
        {
            "input": "for the top - 10 records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; top - 10 ; 0 }"
            ]
        },
        {
            "input": "select the row whose blocks per game record of all rows is maximum . the month record of this row is december 2007 .",
            "output": [
                "eq { hop { argmax { all_rows ; blocks per game } ; month } ; december 2007 }"
            ]
        },
        {
            "input": "for the city of license records of all rows , most of them fuzzily match to colorado .",
            "output": [
                "most_eq { all_rows ; city of license ; colorado }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to millennium trophy match . there is only one such row in the table . the opposing teams record of this unqiue row is ireland .",
            "output": [
                "and { only { filter_eq { all_rows ; status ; millennium trophy match } } ; eq { hop { filter_eq { all_rows ; status ; millennium trophy match } ; opposing teams } ; ireland } }"
            ]
        },
        {
            "input": "the average of the population record of all rows is 60970 .",
            "output": [
                "round_eq { avg { all_rows ; population } ; 60970 }"
            ]
        },
        {
            "input": "select the row whose peak record of all rows is maximum . the english title record of this row is heart of greed .",
            "output": [
                "eq { hop { argmax { all_rows ; peak } ; english title } ; heart of greed }"
            ]
        },
        {
            "input": "select the rows whose top - 5 record is greater than 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; top - 5 ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "for the total fat records of all rows , most of them are equal to 100 .",
            "output": [
                "most_eq { all_rows ; total fat ; 100 }"
            ]
        },
        {
            "input": "select the row whose commenced operations record of all rows is 2nd minimum . the airline record of this row is nouvelair .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; commenced operations ; 2 } ; airline } ; nouvelair }"
            ]
        },
        {
            "input": "select the rows whose series record fuzzily matches to gp2 series . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; series ; gp2 series } } ; 2 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 16667 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 16667 }"
            ]
        },
        {
            "input": "the average of the population ( 2011 ) record of all rows is 706.73 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2011 ) } ; 706.73 }"
            ]
        },
        {
            "input": "select the rows whose game record fuzzily matches to 55 . take the score record of this row . select the rows whose game record fuzzily matches to 56 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; game ; 55 } ; score } ; hop { filter_eq { all_rows ; game ; 56 } ; score } }"
            ]
        },
        {
            "input": "the 2nd maximum weeks record of all rows is 16 weeks .",
            "output": [
                "eq { nth_max { all_rows ; weeks ; 2 } ; 16 weeks }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 9 . take the viewers ( in millions ) record of this row . select the rows whose season record fuzzily matches to 4 . take the viewers ( in millions ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; season ; 9 } ; viewers ( in millions ) } ; hop { filter_eq { all_rows ; season ; 4 } ; viewers ( in millions ) } }"
            ]
        },
        {
            "input": "select the rows whose rider record fuzzily matches to stan woods . take the time record of this row . select the rows whose rider record fuzzily matches to tom loughridge . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; rider ; stan woods } ; time } ; hop { filter_eq { all_rows ; rider ; tom loughridge } ; time } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to frank t bow . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to louis stokes . take the first elected record of this row . the second record is 18 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; incumbent ; frank t bow } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; louis stokes } ; first elected } } ; -18 years }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to dairy farmers stadium . there is only one such row in the table . the opponent record of this unqiue row is north queensland cowboys .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; dairy farmers stadium } } ; eq { hop { filter_eq { all_rows ; venue ; dairy farmers stadium } ; opponent } ; north queensland cowboys } }"
            ]
        },
        {
            "input": "select the rows whose erp w record fuzzily matches to 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; erp w ; 10 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re-elected . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re-elected } } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 15720 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 15720 }"
            ]
        },
        {
            "input": "select the row whose jersey number ( s ) record of all rows is 2nd maximum . the player record of this row is patrick ewing .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; jersey number ( s ) ; 2 } ; player } ; patrick ewing }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost re-election republican gain . there is only one such row in the table . the incumbent record of this unqiue row is tom luken .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost re-election republican gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re-election republican gain } ; incumbent } ; tom luken } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the city / location record of this row is ontario , california .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; city / location } ; ontario , california }"
            ]
        },
        {
            "input": "select the row whose of seats won record of all rows is maximum . the election record of this row is 1984 .",
            "output": [
                "eq { hop { argmax { all_rows ; of seats won } ; election } ; 1984 }"
            ]
        },
        {
            "input": "select the row whose number of seasons in liga mx record of all rows is maximum . the club record of this row is am\u00e9rica .",
            "output": [
                "eq { hop { argmax { all_rows ; number of seasons in liga mx } ; club } ; am\u00e9rica }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 10 . there is only one such row in the table . the nation record of this unqiue row is united states .",
            "output": [
                "and { only { filter_greater { all_rows ; gold ; 10 } } ; eq { hop { filter_greater { all_rows ; gold ; 10 } ; nation } ; united states } }"
            ]
        },
        {
            "input": "select the rows whose race record fuzzily matches to indianapolis 500 . take the date record of this row . select the rows whose race record fuzzily matches to monaco grand prix . take the date record of this row . the first record is 1 day larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; race ; indianapolis 500 } ; date } ; hop { filter_eq { all_rows ; race ; monaco grand prix } ; date } } ; 1 day }"
            ]
        },
        {
            "input": "select the row whose date of commissioning record of all rows is maximum . the unit number record of this row is 8 .",
            "output": [
                "eq { hop { argmax { all_rows ; date of commissioning } ; unit number } ; 8 }"
            ]
        },
        {
            "input": "the sum of the races record of all rows is 164 .",
            "output": [
                "round_eq { sum { all_rows ; races } ; 164 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 5 }"
            ]
        },
        {
            "input": "for the tournament records of all rows , most of them fuzzily match to 25000 .",
            "output": [
                "most_eq { all_rows ; tournament ; 25000 }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to tko . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; method ; tko } } ; 7 }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are less than 10 .",
            "output": [
                "most_less { all_rows ; points ; 10 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to cry turmoil . take the originalairdate record of this row . select the rows whose title record fuzzily matches to the deadly pyramid . take the originalairdate record of this row . the first record is less than the second record . the originalairdate record of the first row is november 5 , 1994 . the originalairdate record of the second row is november 12 , 1994 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; title ; cry turmoil } ; originalairdate } ; hop { filter_eq { all_rows ; title ; the deadly pyramid } ; originalairdate } } ; and { eq { hop { filter_eq { all_rows ; title ; cry turmoil } ; originalairdate } ; november 5 , 1994 } ; eq { hop { filter_eq { all_rows ; title ; the deadly pyramid } ; originalairdate } ; november 12 , 1994 } } }"
            ]
        },
        {
            "input": "select the row whose competition record of all rows is 1st minimum . the date record of this row is 29 october 1975 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; competition ; 1 } ; date } ; 29 october 1975 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to cleveland browns . take the attendance record of this row . select the rows whose opponent record fuzzily matches to pittsburgh steelers . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; cleveland browns } ; attendance } ; hop { filter_eq { all_rows ; opponent ; pittsburgh steelers } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than or equal to 20 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; points ; 20 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to buffalo bills . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; buffalo bills } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the location record of this row is kohl center madison , wi .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; location } ; kohl center madison , wi }"
            ]
        },
        {
            "input": "select the rows whose successor record fuzzily matches to bob livingston ( r ) . take the date successor seated record of this row . select the rows whose successor record fuzzily matches to robert garc\u00eda ( d ) . take the date successor seated record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; successor ; bob livingston ( r ) } ; date successor seated } ; hop { filter_eq { all_rows ; successor ; robert garc\u00eda ( d ) } ; date successor seated } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to ( a ) . there is only one such row in the table . the player record of this unqiue row is jim simons ( a ) .",
            "output": [
                "and { only { filter_eq { all_rows ; player ; ( a ) } } ; eq { hop { filter_eq { all_rows ; player ; ( a ) } ; player } ; jim simons ( a ) } }"
            ]
        },
        {
            "input": "select the rows whose provider ( national government ) record fuzzily matches to ministry of defense . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; provider ( national government ) ; ministry of defense } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is nov 23 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; nov 23 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 5 - 0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; 5 - 0 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to judd av . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; engine ; judd av } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 3rd minimum . the country record of this row is united states .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 3 } ; country } ; united states }"
            ]
        },
        {
            "input": "select the rows whose prize money ( usd ) record is less than 25000 . there is only one such row in the table . the name record of this unqiue row is jan kode\u00e5 \u00a1 .",
            "output": [
                "and { only { filter_less { all_rows ; prize money ( usd ) ; 25000 } } ; eq { hop { filter_less { all_rows ; prize money ( usd ) ; 25000 } ; name } ; jan kode\u00e5 \u00a1 } }"
            ]
        },
        {
            "input": "select the rows whose host record fuzzily matches to kettering . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; host ; kettering } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is minimum . the title record of this row is the chipmunk adventure .",
            "output": [
                "eq { hop { argmin { all_rows ; year } ; title } ; the chipmunk adventure }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the name record of this row is massimiliano rosolino .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; name } ; massimiliano rosolino }"
            ]
        },
        {
            "input": "select the row whose obama % record of all rows is maximum . the county record of this row is essex .",
            "output": [
                "eq { hop { argmax { all_rows ; obama % } ; county } ; essex }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to japan . select the row whose date record of these rows is 2nd minimum . the surface record of this row is carpet ( i ) .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; tournament ; japan } ; date ; 2 } ; surface } ; carpet ( i ) }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1954 . take the points record of this row . select the rows whose year record fuzzily matches to 1952 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1954 } ; points } ; hop { filter_eq { all_rows ; year ; 1952 } ; points } }"
            ]
        },
        {
            "input": "select the rows whose cores record is equal to 1 . there is only one such row in the table . the model number record of this unqiue row is itanium 2 9010 .",
            "output": [
                "and { only { filter_eq { all_rows ; cores ; 1 } } ; eq { hop { filter_eq { all_rows ; cores ; 1 } ; model number } ; itanium 2 9010 } }"
            ]
        },
        {
            "input": "for the mlb draft records of all rows , most of them fuzzily match to 1995 .",
            "output": [
                "most_eq { all_rows ; mlb draft ; 1995 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 2nd maximum . the date record of this row is march 13 . the opponent record of this row is baltimore bullets .",
            "output": [
                "and { eq { hop { nth_argmax { all_rows ; score ; 2 } ; date } ; march 13 } ; eq { hop { nth_argmax { all_rows ; score ; 2 } ; opponent } ; baltimore bullets } }"
            ]
        },
        {
            "input": "select the row whose published record of all rows is 2nd maximum . the title record of this row is hollywood .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; published ; 2 } ; title } ; hollywood }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to great western . there is only one such row in the table . the game record of this unqiue row is 35 .",
            "output": [
                "and { only { filter_eq { all_rows ; location attendance ; great western } } ; eq { hop { filter_eq { all_rows ; location attendance ; great western } ; game } ; 35 } }"
            ]
        },
        {
            "input": "select the rows whose name record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; name } } ; 11 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to won .",
            "output": [
                "most_eq { all_rows ; result ; won }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to centre - left . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; centre - left } } ; 2 }"
            ]
        },
        {
            "input": "the average of the number of viewers record of all rows is 28.94 .",
            "output": [
                "round_eq { avg { all_rows ; number of viewers } ; 28.94 }"
            ]
        },
        {
            "input": "select the row whose catholic record of all rows is maximum . the region record of this row is southeast asia .",
            "output": [
                "eq { hop { argmax { all_rows ; catholic } ; region } ; southeast asia }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 80 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; laps ; 80 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to ateneo . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; college ; ateneo } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the game site record of this row is waldstadion .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; game site } ; waldstadion }"
            ]
        },
        {
            "input": "select the rows whose try bp record is equal to 0 . there is only one such row in the table . the club record of this unqiue row is bedlinog rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; try bp ; 0 } } ; eq { hop { filter_eq { all_rows ; try bp ; 0 } ; club } ; bedlinog rfc } }"
            ]
        },
        {
            "input": "select the row whose seats ( acs ) record of all rows is 1st maximum . the state record of this row is madhya pradesh .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; seats ( acs ) ; 1 } ; state } ; madhya pradesh }"
            ]
        },
        {
            "input": "the sum of the national titles record of all rows is 79 .",
            "output": [
                "round_eq { sum { all_rows ; national titles } ; 79 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to ulrich . select the row whose year record of these rows is maximum . the start record of this row is 33 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; team ; ulrich } ; year } ; start } ; 33 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is minimum . the incumbent record of this row is percy e quin .",
            "output": [
                "eq { hop { argmin { all_rows ; first elected } ; incumbent } ; percy e quin }"
            ]
        },
        {
            "input": "select the row whose roll record of all rows is 2nd maximum . the name record of this row is albany school .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; roll ; 2 } ; name } ; albany school }"
            ]
        },
        {
            "input": "select the rows whose street address record fuzzily matches to 424 church street . take the floors record of this row . select the rows whose street address record fuzzily matches to 211 union street . take the floors record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; street address ; 424 church street } ; floors } ; hop { filter_eq { all_rows ; street address ; 211 union street } ; floors } }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to raphael matos . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; raphael matos } } ; 1 }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 114 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 114 }"
            ]
        },
        {
            "input": "for the quantity preserved records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; quantity preserved ; 0 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 3.625 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 3.625 }"
            ]
        },
        {
            "input": "select the row whose ratings record of all rows is maximum . the guest ( s ) record of this row is matt lucas .",
            "output": [
                "eq { hop { argmax { all_rows ; ratings } ; guest ( s ) } ; matt lucas }"
            ]
        },
        {
            "input": "select the rows whose station record fuzzily matches to kstp - tv . there is only one such row in the table . the channel record of this unqiue row is 5.1 .",
            "output": [
                "and { only { filter_eq { all_rows ; station ; kstp - tv } } ; eq { hop { filter_eq { all_rows ; station ; kstp - tv } ; channel } ; 5.1 } }"
            ]
        },
        {
            "input": "the average of the cuts made record of all rows is 4 .",
            "output": [
                "round_eq { avg { all_rows ; cuts made } ; 4 }"
            ]
        },
        {
            "input": "for the director records of all rows , most of them fuzzily match to paul gay .",
            "output": [
                "most_eq { all_rows ; director ; paul gay }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to toyota . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; constructor ; toyota } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose name ( year commissioned ) record fuzzily matches to goldfields gas transmission pipeline ( 1996 ) . take the maximum diameter record of this row . select the rows whose name ( year commissioned ) record fuzzily matches to mid west gas pipeline ( 1999 ) . take the maximum diameter record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ( year commissioned ) ; goldfields gas transmission pipeline ( 1996 ) } ; maximum diameter } ; hop { filter_eq { all_rows ; name ( year commissioned ) ; mid west gas pipeline ( 1999 ) } ; maximum diameter } }"
            ]
        },
        {
            "input": "the average of the round record of all rows is 2 .",
            "output": [
                "round_eq { avg { all_rows ; round } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to united center . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location attendance ; united center } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to austria . select the row whose score record of these rows is 1st maximum . the shooter record of this row is uwe potteck ( gdr ) .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; place ; austria } ; score ; 1 } ; shooter } ; uwe potteck ( gdr ) }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to march .",
            "output": [
                "all_eq { all_rows ; date ; march }"
            ]
        },
        {
            "input": "the maximum result record of all rows is 4 - 2 . the venue record of the row with superlative result record is estadio monumental , santiago , chile .",
            "output": [
                "and { eq { max { all_rows ; result } ; 4 - 2 } ; eq { hop { argmax { all_rows ; result } ; venue } ; estadio monumental , santiago , chile } }"
            ]
        },
        {
            "input": "for the played records of all rows , all of them are equal to 22 .",
            "output": [
                "all_eq { all_rows ; played ; 22 }"
            ]
        },
        {
            "input": "for the age records of all rows , most of them are less than 27 .",
            "output": [
                "most_less { all_rows ; age ; 27 }"
            ]
        },
        {
            "input": "select the rows whose operating systems record fuzzily matches to linux . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; operating systems ; linux } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is maximum . the version record of this row is music video .",
            "output": [
                "eq { hop { argmax { all_rows ; length } ; version } ; music video }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 16 . the maximum wins record of these rows is 11 . the year record of the row with superlative wins record is 2011 .",
            "output": [
                "and { eq { max { filter_eq { all_rows ; matches ; 16 } ; wins } ; 11 } ; eq { hop { argmax { filter_eq { all_rows ; matches ; 16 } ; wins } ; year } ; 2011 } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to ept baden classic . take the prize record of this row . select the rows whose event record fuzzily matches to the european poker championships . take the prize record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; event ; ept baden classic } ; prize } ; hop { filter_eq { all_rows ; event ; the european poker championships } ; prize } }"
            ]
        },
        {
            "input": "select the rows whose date of successors formal installation record fuzzily matches to not filled this term . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date of successors formal installation ; not filled this term } } ; 2 }"
            ]
        },
        {
            "input": "the average of the number of hurricanes record of all rows is 4.3 .",
            "output": [
                "round_eq { avg { all_rows ; number of hurricanes } ; 4.3 }"
            ]
        },
        {
            "input": "the 1st minimum date record of all rows is may 31 .",
            "output": [
                "eq { nth_min { all_rows ; date ; 1 } ; may 31 }"
            ]
        },
        {
            "input": "for the batting style records of all rows , most of them fuzzily match to right-handed .",
            "output": [
                "most_eq { all_rows ; batting style ; right-handed }"
            ]
        },
        {
            "input": "for the partner records of all rows , most of them fuzzily match to app .",
            "output": [
                "most_eq { all_rows ; partner ; app }"
            ]
        },
        {
            "input": "select the rows whose week record is greater than or equal to 13 . the sum of the attendance record of these rows is 95326 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; week ; 13 } ; attendance } ; 95326 }"
            ]
        },
        {
            "input": "select the rows whose swimsuit record fuzzily matches to 8.432 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; swimsuit ; 8.432 } } ; 2 }"
            ]
        },
        {
            "input": "for the status at production records of all rows , all of them fuzzily match to under construction .",
            "output": [
                "all_eq { all_rows ; status at production ; under construction }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is queens college .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; queens college }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to princes park . there is only one such row in the table . the home team record of this unqiue row is carlton . the away team record of this unqiue row is geelong .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; princes park } } ; and { eq { hop { filter_eq { all_rows ; venue ; princes park } ; home team } ; carlton } ; eq { hop { filter_eq { all_rows ; venue ; princes park } ; away team } ; geelong } } }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { all_rows ; score ; l }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to vacant . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; incumbent ; vacant } }"
            ]
        },
        {
            "input": "select the row whose ratings record of all rows is maximum . the translation of title record of this row is english showdown ! fight for stupid 6 .",
            "output": [
                "eq { hop { argmax { all_rows ; ratings } ; translation of title } ; english showdown ! fight for stupid 6 }"
            ]
        },
        {
            "input": "select the rows whose snatch record is greater than 170.0 . there is only one such row in the table . the name record of this unqiue row is jo\u00ebl mackenzie ( cub ) .",
            "output": [
                "and { only { filter_greater { all_rows ; snatch ; 170.0 } } ; eq { hop { filter_greater { all_rows ; snatch ; 170.0 } ; name } ; jo\u00ebl mackenzie ( cub ) } }"
            ]
        },
        {
            "input": "select the row whose difference record of all rows is 2nd maximum . the team record of this row is palmeiras .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; difference ; 2 } ; team } ; palmeiras }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to t8 . the sum of the money record of these rows is $ 379,000 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; place ; t8 } ; money } ; $ 379,000 }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to tunisia .",
            "output": [
                "most_eq { all_rows ; country ; tunisia }"
            ]
        },
        {
            "input": "select the row whose us air date record of all rows is 3rd minimum . the us air date record of this row is july 3 , 1993 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; us air date ; 3 } ; us air date } ; july 3 , 1993 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the series record of this row is toyota racing series .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; series } ; toyota racing series }"
            ]
        },
        {
            "input": "the sum of the laps record of all rows is 3670 .",
            "output": [
                "round_eq { sum { all_rows ; laps } ; 3670 }"
            ]
        },
        {
            "input": "select the rows whose area ( km 2 ) record is less than 50 . select the row whose population record of these rows is 1st maximum . the common of record of this row is moncalieri .",
            "output": [
                "eq { hop { nth_argmax { filter_less { all_rows ; area ( km 2 ) ; 50 } ; population ; 1 } ; common of } ; moncalieri }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to digital download . there is only one such row in the table . the record company record of this unqiue row is deutsche grammophon .",
            "output": [
                "and { only { filter_eq { all_rows ; format ; digital download } } ; eq { hop { filter_eq { all_rows ; format ; digital download } ; record company } ; deutsche grammophon } }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them fuzzily match to wing .",
            "output": [
                "most_eq { all_rows ; position ; wing }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to petr kelner . take the round record of this row . select the rows whose opponent record fuzzily matches to andrej bregar . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; petr kelner } ; round } ; hop { filter_eq { all_rows ; opponent ; andrej bregar } ; round } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to bosnia and herzegovina . there is only one such row in the table . the film record of this unqiue row is prva plata .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; bosnia and herzegovina } } ; eq { hop { filter_eq { all_rows ; country ; bosnia and herzegovina } ; film } ; prva plata } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to lee janzen . take the score record of this row . select the rows whose player record fuzzily matches to chris perry . take the score record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; lee janzen } ; score } ; hop { filter_eq { all_rows ; player ; chris perry } ; score } } ; -1 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . for the result records of these rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; november } ; result ; l }"
            ]
        },
        {
            "input": "select the row whose run time record of all rows is maximum . the episode number record of this row is 313 .",
            "output": [
                "eq { hop { argmax { all_rows ; run time } ; episode number } ; 313 }"
            ]
        },
        {
            "input": "for the gender records of all rows , all of them fuzzily match to coed .",
            "output": [
                "all_eq { all_rows ; gender ; coed }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to tribal . there is only one such row in the table . the type record of this unqiue row is tribal .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; tribal } } ; eq { hop { filter_eq { all_rows ; type ; tribal } ; type } ; tribal } }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to mark webber . take the time / retired record of this row . select the rows whose driver record fuzzily matches to jarno trulli . take the time / retired record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; driver ; mark webber } ; time / retired } ; hop { filter_eq { all_rows ; driver ; jarno trulli } ; time / retired } }"
            ]
        },
        {
            "input": "select the row whose area ( km 2 ) record of all rows is maximum . the county record of this row is tana river .",
            "output": [
                "eq { hop { argmax { all_rows ; area ( km 2 ) } ; county } ; tana river }"
            ]
        },
        {
            "input": "select the row whose number of episodes record of all rows is 2nd maximum . the english title ( chinese title ) record of this row is burning flame \u70c8\u706b\u96c4\u5fc3 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of episodes ; 2 } ; english title ( chinese title ) } ; burning flame \u70c8\u706b\u96c4\u5fc3 }"
            ]
        },
        {
            "input": "select the row whose overall record record of all rows is maximum . the texas vs record of this row is texas a & m .",
            "output": [
                "eq { hop { argmax { all_rows ; overall record } ; texas vs } ; texas a & m }"
            ]
        },
        {
            "input": "the average of the wickets record of all rows is 33 .",
            "output": [
                "round_eq { avg { all_rows ; wickets } ; 33 }"
            ]
        },
        {
            "input": "select the rows whose first elected record is equal to 1944 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; 1944 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 2 - 2 . there is only one such row in the table . the date record of this unqiue row is 8 october 2007 . the result record of this unqiue row is draw .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 2 - 2 } } ; and { eq { hop { filter_eq { all_rows ; score ; 2 - 2 } ; date } ; 8 october 2007 } ; eq { hop { filter_eq { all_rows ; score ; 2 - 2 } ; result } ; draw } } }"
            ]
        },
        {
            "input": "for the 1st ship delivery date records of all rows , most of them fuzzily match to may 1943 .",
            "output": [
                "most_eq { all_rows ; 1st ship delivery date ; may 1943 }"
            ]
        },
        {
            "input": "select the rows whose original air date record is less than january 1 , 2010 . the average of the us viewers ( million ) record of these rows is 9.74 .",
            "output": [
                "round_eq { avg { filter_less { all_rows ; original air date ; january 1 , 2010 } ; us viewers ( million ) } ; 9.74 }"
            ]
        },
        {
            "input": "select the row whose windows record of all rows is 2nd maximum . the source record of this row is international data corporation .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; windows ; 2 } ; source } ; international data corporation }"
            ]
        },
        {
            "input": "for the leading scorer records of all rows , most of them fuzzily match to lebron james .",
            "output": [
                "most_eq { all_rows ; leading scorer ; lebron james }"
            ]
        },
        {
            "input": "for the time / retired records of all rows , most of them are greater than or equal to 2 .",
            "output": [
                "most_greater_eq { all_rows ; time / retired ; 2 }"
            ]
        },
        {
            "input": "for the year records of all rows , all of them are greater than 1970 .",
            "output": [
                "all_greater { all_rows ; year ; 1970 }"
            ]
        },
        {
            "input": "select the rows whose us acres episode record fuzzily matches to daydream doctor . take the original airdate record of this row . select the rows whose us acres episode record fuzzily matches to deja vu . take the original airdate record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; us acres episode ; daydream doctor } ; original airdate } ; hop { filter_eq { all_rows ; us acres episode ; deja vu } ; original airdate } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 6 september 2006 . take the score record of this row . select the rows whose date record fuzzily matches to 11 october 2006 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 6 september 2006 } ; score } ; hop { filter_eq { all_rows ; date ; 11 october 2006 } ; score } }"
            ]
        },
        {
            "input": "the maximum days held record of all rows is 700 .",
            "output": [
                "eq { max { all_rows ; days held } ; 700 }"
            ]
        },
        {
            "input": "for the td 's records of all rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { all_rows ; td 's ; 1 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 0 - 0 . there is only one such row in the table . the home team record of this unqiue row is port vale . the away team record of this unqiue row is watford .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 0 - 0 } } ; and { eq { hop { filter_eq { all_rows ; score ; 0 - 0 } ; home team } ; port vale } ; eq { hop { filter_eq { all_rows ; score ; 0 - 0 } ; away team } ; watford } } }"
            ]
        },
        {
            "input": "for the 2011 records of all rows , most of them fuzzily match to a .",
            "output": [
                "most_eq { all_rows ; 2011 ; a }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to the vertices of the core . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; the vertices of the core } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the nation record of this row is west germany .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; nation } ; west germany }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 27.8 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 27.8 }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is 3rd maximum . the street address record of this row is 1111 main street .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; floors ; 3 } ; street address } ; 1111 main street }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the home team record of this row is melbourne tigers . the away team record of this row is wollongong hawks .",
            "output": [
                "and { eq { hop { argmax { all_rows ; score } ; home team } ; melbourne tigers } ; eq { hop { argmax { all_rows ; score } ; away team } ; wollongong hawks } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the race record of this row is dance design ebf maiden .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; race } ; dance design ebf maiden }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to winner . select the row whose date record of these rows is minimum . the tournament record of this row is granby , canada .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; outcome ; winner } ; date } ; tournament } ; granby , canada }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to melbourne . among these rows , select the rows whose goals record is greater than 0 . there is only one such row in the table . the date record of this unqiue row is 1956 - 11 - 27 .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; venue ; melbourne } ; goals ; 0 } } ; eq { hop { filter_greater { filter_eq { all_rows ; venue ; melbourne } ; goals ; 0 } ; date } ; 1956 - 11 - 27 } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to mcg . there is only one such row in the table . the home team record of this unqiue row is richmond . the away team record of this unqiue row is collingwood .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; mcg } } ; and { eq { hop { filter_eq { all_rows ; venue ; mcg } ; home team } ; richmond } ; eq { hop { filter_eq { all_rows ; venue ; mcg } ; away team } ; collingwood } } }"
            ]
        },
        {
            "input": "select the rows whose edition record is equal to 2005 . among these rows , select the rows whose outcome record fuzzily matches to loss . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; edition ; 2005 } ; outcome ; loss } } ; 2 }"
            ]
        },
        {
            "input": "the average of the bush % record of all rows is 65-70 .",
            "output": [
                "round_eq { avg { all_rows ; bush % } ; 65-70 }"
            ]
        },
        {
            "input": "for the played records of all rows , all of them are equal to 30 .",
            "output": [
                "all_eq { all_rows ; played ; 30 }"
            ]
        },
        {
            "input": "the average of the impedance ( ohms ) record of all rows is 33 .",
            "output": [
                "round_eq { avg { all_rows ; impedance ( ohms ) } ; 33 }"
            ]
        },
        {
            "input": "for the date of vacancy records of all rows , most of them fuzzily match to march 2011 .",
            "output": [
                "most_eq { all_rows ; date of vacancy ; march 2011 }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the location record of this row is mercer island .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; location } ; mercer island }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to sophomore . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year ; sophomore } } ; 5 }"
            ]
        },
        {
            "input": "for the director records of all rows , most of them fuzzily match to rn bradbury .",
            "output": [
                "most_eq { all_rows ; director ; rn bradbury }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to james booyer . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high rebounds ; james booyer } } ; 2 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 3 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to arizona state . there is only one such row in the table . the player record of this unqiue row is tony lorick .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; arizona state } } ; eq { hop { filter_eq { all_rows ; college ; arizona state } ; player } ; tony lorick } }"
            ]
        },
        {
            "input": "for the 2007 records of all rows , most of them fuzzily match to a .",
            "output": [
                "most_eq { all_rows ; 2007 ; a }"
            ]
        },
        {
            "input": "select the rows whose loser record fuzzily matches to iceland . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; loser ; iceland } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2000 . there is only one such row in the table . the name record of this unqiue row is anthony thomas .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 2000 } } ; eq { hop { filter_eq { all_rows ; year ; 2000 } ; name } ; anthony thomas } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the incumbent record of this row is jamie l whitten .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; incumbent } ; jamie l whitten }"
            ]
        },
        {
            "input": "the average of the home team score record of all rows is 13.47 .",
            "output": [
                "round_eq { avg { all_rows ; home team score } ; 13.47 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to occupational . there is only one such row in the table . the surname record of this unqiue row is m\u00f8ller .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; occupational } } ; eq { hop { filter_eq { all_rows ; type ; occupational } ; surname } ; m\u00f8ller } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the winning driver record of this row is eugenio silvani .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; winning driver } ; eugenio silvani }"
            ]
        },
        {
            "input": "select the row whose week record of all rows is 1st minimum . the opponent record of this row is detroit lions .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; week ; 1 } ; opponent } ; detroit lions }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 54939 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 54939 }"
            ]
        },
        {
            "input": "select the rows whose reason for termination record fuzzily matches to not confirmed . there is only one such row in the table . the judge record of this unqiue row is clinton woodbury howard .",
            "output": [
                "and { only { filter_eq { all_rows ; reason for termination ; not confirmed } } ; eq { hop { filter_eq { all_rows ; reason for termination ; not confirmed } ; judge } ; clinton woodbury howard } }"
            ]
        },
        {
            "input": "select the rows whose area ( km square ) record is less than 100 . among these rows , select the rows whose population 2000 census record is less than 100000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_less { all_rows ; area ( km square ) ; 100 } ; population 2000 census ; 100000 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the year record of this row is 1970 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; year } ; 1970 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to carolina panthers . take the date record of this row . select the rows whose opponent record fuzzily matches to atlanta falcons . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; carolina panthers } ; date } ; hop { filter_eq { all_rows ; opponent ; atlanta falcons } ; date } }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is 2nd maximum . the no in season record of this row is 3 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; no in season } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to portland . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; portland } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 3rd minimum . the rider record of this row is ross johnson .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 3 } ; rider } ; ross johnson }"
            ]
        },
        {
            "input": "select the row whose agg record of all rows is maximum . the team 1 record of this row is pyunik .",
            "output": [
                "eq { hop { argmax { all_rows ; agg } ; team 1 } ; pyunik }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 2.7 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 2.7 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to l . select the row whose date record of these rows is 3rd minimum . the attendance record of this row is 11741 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; score ; l } ; date ; 3 } ; attendance } ; 11741 }"
            ]
        },
        {
            "input": "the average of the apparent magnitude record of all rows is 12.24 .",
            "output": [
                "round_eq { avg { all_rows ; apparent magnitude } ; 12.24 }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is maximum . the away team score record of this row is 13.14 ( 92 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; home team score } ; away team score } ; 13.14 ( 92 ) }"
            ]
        },
        {
            "input": "for the package / option records of all rows , most of them fuzzily match to no ( fta ) .",
            "output": [
                "most_eq { all_rows ; package / option ; no ( fta ) }"
            ]
        },
        {
            "input": "select the rows whose first premiere record fuzzily matches to 2009 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first premiere ; 2009 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose enrollment 08 - 09 record of all rows is 2nd maximum . the school record of this row is heritage .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment 08 - 09 ; 2 } ; school } ; heritage }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to mitchell duke . take the goals record of this row . select the rows whose player record fuzzily matches to john hutchinson . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; mitchell duke } ; goals } ; hop { filter_eq { all_rows ; player ; john hutchinson } ; goals } }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 15.0 . among these rows , select the rows whose crowd record is less than 20,000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; home team score ; 15.0 } ; crowd ; 20,000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to tatiana poutchek . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; tatiana poutchek } } ; 2 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 3:29 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 3:29 }"
            ]
        },
        {
            "input": "select the rows whose fuel propulsion record fuzzily matches to diesel - electric hybrid . there is only one such row in the table . the make and model record of this unqiue row is new flyer de35lf .",
            "output": [
                "and { only { filter_eq { all_rows ; fuel propulsion ; diesel - electric hybrid } } ; eq { hop { filter_eq { all_rows ; fuel propulsion ; diesel - electric hybrid } ; make and model } ; new flyer de35lf } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the gold record of this row is 3 .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; gold } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to simon ammann . take the 1st ( m ) record of this row . select the rows whose name record fuzzily matches to thomas morgenstern . take the 1st ( m ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; simon ammann } ; 1st ( m ) } ; hop { filter_eq { all_rows ; name ; thomas morgenstern } ; 1st ( m ) } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to mold rfc . take the losing bonus record of this row . select the rows whose club record fuzzily matches to ruthin rfc . take the losing bonus record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; club ; mold rfc } ; losing bonus } ; hop { filter_eq { all_rows ; club ; ruthin rfc } ; losing bonus } } ; -1 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the club record of this row is ud salamanca .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; club } ; ud salamanca }"
            ]
        },
        {
            "input": "select the row whose became queen record of all rows is 2nd minimum . the name record of this row is maria teresa of the two sicilies .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; became queen ; 2 } ; name } ; maria teresa of the two sicilies }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to san diego state . there is only one such row in the table . the name record of this unqiue row is freddie keiaho .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; san diego state } } ; eq { hop { filter_eq { all_rows ; college ; san diego state } ; name } ; freddie keiaho } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to switzerland . take the points record of this row . select the rows whose team record fuzzily matches to germany . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; switzerland } ; points } ; hop { filter_eq { all_rows ; team ; germany } ; points } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . for the attendance records of these rows , most of them are greater than or equal to 10000 .",
            "output": [
                "most_greater_eq { filter_eq { all_rows ; date ; november } ; attendance ; 10000 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to contract terminated . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; contract terminated } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 10000 . there is only one such row in the table . the home team record of this unqiue row is st kilda .",
            "output": [
                "and { only { filter_less { all_rows ; crowd ; 10000 } } ; eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; st kilda } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to bangkok . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; bangkok } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose age record is less than 24 . there is only one such row in the table . the player record of this unqiue row is don budge .",
            "output": [
                "and { only { filter_less { all_rows ; age ; 24 } } ; eq { hop { filter_less { all_rows ; age ; 24 } ; player } ; don budge } }"
            ]
        },
        {
            "input": "select the rows whose partnering record fuzzily matches to simon stadler . take the date record of this row . select the rows whose partnering record fuzzily matches to paolo lorenzi . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; partnering ; simon stadler } ; date } ; hop { filter_eq { all_rows ; partnering ; paolo lorenzi } ; date } }"
            ]
        },
        {
            "input": "the average of the matches record of all rows is 51 .",
            "output": [
                "round_eq { avg { all_rows ; matches } ; 51 }"
            ]
        },
        {
            "input": "select the rows whose air date record fuzzily matches to july 2008 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; air date ; july 2008 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose population ( 2002 ) record of all rows is maximum . the urban settlement record of this row is novi sad .",
            "output": [
                "eq { hop { argmax { all_rows ; population ( 2002 ) } ; urban settlement } ; novi sad }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to rb . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; rb } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to mutual consent . there is only one such row in the table . the outgoing manager record of this unqiue row is lee sinnott .",
            "output": [
                "and { only { filter_eq { all_rows ; manner of departure ; mutual consent } } ; eq { hop { filter_eq { all_rows ; manner of departure ; mutual consent } ; outgoing manager } ; lee sinnott } }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to a horford . select the row whose location attendance record of these rows is maximum . the date record of this row is december 8 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; high rebounds ; a horford } ; location attendance } ; date } ; december 8 }"
            ]
        },
        {
            "input": "select the row whose location / attendance record of all rows is 1st maximum . the opponent record of this row is new york .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location / attendance ; 1 } ; opponent } ; new york }"
            ]
        },
        {
            "input": "the average of the result record of all rows is 10.15 th .",
            "output": [
                "round_eq { avg { all_rows ; result } ; 10.15 th }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 2 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose total ( kg ) record is greater than or equal to 330 . among these rows , select the rows whose snatch record is less than 150 . there is only one such row in the table . the name record of this unqiue row is juan quiterio ( dom ) .",
            "output": [
                "and { only { filter_less { filter_greater_eq { all_rows ; total ( kg ) ; 330 } ; snatch ; 150 } } ; eq { hop { filter_less { filter_greater_eq { all_rows ; total ( kg ) ; 330 } ; snatch ; 150 } ; name } ; juan quiterio ( dom ) } }"
            ]
        },
        {
            "input": "for the winner records of all rows , most of them fuzzily match to new york giants .",
            "output": [
                "most_eq { all_rows ; winner ; new york giants }"
            ]
        },
        {
            "input": "for the event records of all rows , most of them fuzzily match to freestyle .",
            "output": [
                "most_eq { all_rows ; event ; freestyle }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 13916 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 13916 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to end of contract . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; end of contract } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is cleveland browns .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; cleveland browns }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to university of leicester . take the established record of this row . select the rows whose institution record fuzzily matches to university of east anglia . take the established record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; institution ; university of leicester } ; established } ; hop { filter_eq { all_rows ; institution ; university of east anglia } ; established } }"
            ]
        },
        {
            "input": "for the league records of all rows , most of them fuzzily match to segunda divisi\u00f3n b .",
            "output": [
                "most_eq { all_rows ; league ; segunda divisi\u00f3n b }"
            ]
        },
        {
            "input": "select the rows whose first audition date record fuzzily matches to september . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; first audition date ; september } }"
            ]
        },
        {
            "input": "for the to par records of all rows , most of them are greater than 0 .",
            "output": [
                "most_greater { all_rows ; to par ; 0 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to pierce .",
            "output": [
                "most_eq { all_rows ; high points ; pierce }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to stuttgart , west germany . take the year record of this row . select the rows whose venue record fuzzily matches to seoul , south korea . take the year record of this row . the second record is 2 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; venue ; stuttgart , west germany } ; year } ; hop { filter_eq { all_rows ; venue ; seoul , south korea } ; year } } ; -2 years }"
            ]
        },
        {
            "input": "select the rows whose relationship with predecessor record fuzzily matches to and . there is only one such row in the table . the name record of this unqiue row is maximilian .",
            "output": [
                "and { only { filter_eq { all_rows ; relationship with predecessor ; and } } ; eq { hop { filter_eq { all_rows ; relationship with predecessor ; and } ; name } ; maximilian } }"
            ]
        },
        {
            "input": "the average of the wkts record of all rows is 12.91 .",
            "output": [
                "round_eq { avg { all_rows ; wkts } ; 12.91 }"
            ]
        },
        {
            "input": "the average of the race 1 ( pts ) record of all rows is 17.8 .",
            "output": [
                "round_eq { avg { all_rows ; race 1 ( pts ) } ; 17.8 }"
            ]
        },
        {
            "input": "select the rows whose 1st leg record fuzzily matches to 0-3 . there is only one such row in the table . the team 1 record of this unqiue row is blooming . the team 2 record of this unqiue row is river plate .",
            "output": [
                "and { only { filter_eq { all_rows ; 1st leg ; 0-3 } } ; and { eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 } ; blooming } ; eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 } ; river plate } } }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is 3.5 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; 3.5 }"
            ]
        },
        {
            "input": "select the rows whose administrative district record fuzzily matches to mullaitivu . take the land area ( km 2 ) record of this row . select the rows whose administrative district record fuzzily matches to mannar . take the land area ( km 2 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; administrative district ; mullaitivu } ; land area ( km 2 ) } ; hop { filter_eq { all_rows ; administrative district ; mannar } ; land area ( km 2 ) } }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to re-elected .",
            "output": [
                "most_eq { all_rows ; result ; re-elected }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 11:0 . there is only one such row in the table . the competition record of this unqiue row is 1996 asian championships .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 11:0 } } ; eq { hop { filter_eq { all_rows ; score ; 11:0 } ; competition } ; 1996 asian championships } }"
            ]
        },
        {
            "input": "select the rows whose goal difference record is less than 0 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_less { all_rows ; goal difference ; 0 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 20 . for the lost records of these rows , most of them are less than 10 .",
            "output": [
                "most_less { filter_less { all_rows ; points ; 20 } ; lost ; 10 }"
            ]
        },
        {
            "input": "select the rows whose rank record is equal to 14 . there is only one such row in the table . the fourth place record of this unqiue row is 2 ( 2010 , 2011 ) .",
            "output": [
                "and { only { filter_eq { all_rows ; rank ; 14 } } ; eq { hop { filter_eq { all_rows ; rank ; 14 } ; fourth place } ; 2 ( 2010 , 2011 ) } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to portuguese . there is only one such row in the table . the elector record of this unqiue row is jo\u00e3o pedro juli\u00e3o .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; portuguese } } ; eq { hop { filter_eq { all_rows ; nationality ; portuguese } ; elector } ; jo\u00e3o pedro juli\u00e3o } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to john burch . take the round record of this row . select the rows whose player record fuzzily matches to kendall trainor . take the round record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; john burch } ; round } ; hop { filter_eq { all_rows ; player ; kendall trainor } ; round } } ; -1 }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 22800 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 22800 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is october 22 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; october 22 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to bernie fryer . take the years for jazz record of this row . select the rows whose player record fuzzily matches to derek fisher . take the years for jazz record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; bernie fryer } ; years for jazz } ; hop { filter_eq { all_rows ; player ; derek fisher } ; years for jazz } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 11 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 11 }"
            ]
        },
        {
            "input": "select the row whose goals scored record of all rows is 2nd minimum . the team record of this row is once municipal .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; goals scored ; 2 } ; team } ; once municipal }"
            ]
        },
        {
            "input": "select the rows whose to par record is equal to -5 . there is only one such row in the table . the player record of this unqiue row is ben hogan .",
            "output": [
                "and { only { filter_eq { all_rows ; to par ; -5 } } ; eq { hop { filter_eq { all_rows ; to par ; -5 } ; player } ; ben hogan } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to rose garden . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location attendance ; rose garden } } ; 3 }"
            ]
        },
        {
            "input": "for the unit records of all rows , most of them fuzzily match to colorado .",
            "output": [
                "most_eq { all_rows ; unit ; colorado }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is 19 may 2007 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; 19 may 2007 }"
            ]
        },
        {
            "input": "select the rows whose squadron record fuzzily matches to squadron 552 . among these rows , select the rows whose dates record fuzzily matches to 2006-present . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; squadron ; squadron 552 } ; dates ; 2006-present } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose 1st leg record fuzzily matches to 0 - 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 1st leg ; 0 - 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose bronze record fuzzily matches to jerzy greszkiewicz . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; bronze ; jerzy greszkiewicz } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to nuttall . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; class ; nuttall } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose race record of all rows is 2nd minimum . the season record of this row is 2008 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; race ; 2 } ; season } ; 2008 }"
            ]
        },
        {
            "input": "the average of the pieces record of all rows is 271.6 .",
            "output": [
                "round_eq { avg { all_rows ; pieces } ; 271.6 }"
            ]
        },
        {
            "input": "for the affiliation records of all rows , most of them fuzzily match to private .",
            "output": [
                "most_eq { all_rows ; affiliation ; private }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . for the final score records of these rows , most of them are greater than or equal to 20 for both teams .",
            "output": [
                "most_greater_eq { filter_eq { all_rows ; date ; december } ; final score ; 20 for both teams }"
            ]
        },
        {
            "input": "select the rows whose home / away record fuzzily matches to home . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; home / away ; home } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to seongnam . take the population ( 2010 ) record of this row . select the rows whose city record fuzzily matches to namyangju . take the population ( 2010 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; city ; seongnam } ; population ( 2010 ) } ; hop { filter_eq { all_rows ; city ; namyangju } ; population ( 2010 ) } }"
            ]
        },
        {
            "input": "the average of the area ( km square ) record of all rows is 198.448 .",
            "output": [
                "round_eq { avg { all_rows ; area ( km square ) } ; 198.448 }"
            ]
        },
        {
            "input": "for the enrollment records of all rows , most of them are greater than 1000 .",
            "output": [
                "most_greater { all_rows ; enrollment ; 1000 }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to elio de angelis . take the date record of this row . select the rows whose winning driver record fuzzily matches to niki lauda . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; winning driver ; elio de angelis } ; date } ; hop { filter_eq { all_rows ; winning driver ; niki lauda } ; date } }"
            ]
        },
        {
            "input": "select the rows whose game record fuzzily matches to 63 . take the points record of this row . select the rows whose game record fuzzily matches to 57 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; game ; 63 } ; points } ; hop { filter_eq { all_rows ; game ; 57 } ; points } }"
            ]
        },
        {
            "input": "the 1st minimum year record of all rows is 1942 . the opponent in the final record of the row with 1st minimum year record is don budge .",
            "output": [
                "and { eq { nth_min { all_rows ; year ; 1 } ; 1942 } ; eq { hop { nth_argmin { all_rows ; year ; 1 } ; opponent in the final } ; don budge } }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to republican . among these rows , select the rows whose result record fuzzily matches to retired . there is only one such row in the table . the incumbent record of this unqiue row is jack fields .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; party ; republican } ; result ; retired } } ; eq { hop { filter_eq { filter_eq { all_rows ; party ; republican } ; result ; retired } ; incumbent } ; jack fields } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 10000 . among these rows , select the rows whose away team score record is greater than or equal to 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { filter_greater { all_rows ; crowd ; 10000 } ; away team score ; 10 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to catcher . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; catcher } } ; 2 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 97.3 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 97.3 }"
            ]
        },
        {
            "input": "select the rows whose tag team record fuzzily matches to rosey and the hurricane . take the eliminated record of this row . select the rows whose tag team record fuzzily matches to jindrak and cade . take the eliminated record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tag team ; rosey and the hurricane } ; eliminated } ; hop { filter_eq { all_rows ; tag team ; jindrak and cade } ; eliminated } }"
            ]
        },
        {
            "input": "for the original beechwood bunny tale / source material records of all rows , most of them fuzzily match to teleplay by val\u00e9rie baranski .",
            "output": [
                "most_eq { all_rows ; original beechwood bunny tale / source material ; teleplay by val\u00e9rie baranski }"
            ]
        },
        {
            "input": "select the rows whose molecule record fuzzily matches to protein . take the percent of mass record of this row . select the rows whose molecule record fuzzily matches to other s inorganic . take the percent of mass record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; molecule ; protein } ; percent of mass } ; hop { filter_eq { all_rows ; molecule ; other s inorganic } ; percent of mass } }"
            ]
        },
        {
            "input": "select the rows whose floors record is equal to 32 . there is only one such row in the table . the name record of this unqiue row is at & t building .",
            "output": [
                "and { only { filter_eq { all_rows ; floors ; 32 } } ; eq { hop { filter_eq { all_rows ; floors ; 32 } ; name } ; at & t building } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . the sum of the attendance record of these rows is 245,093 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; october } ; attendance } ; 245,093 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; democratic } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to malm\u00f6 ff . take the allsvenskan titles record of this row . select the rows whose club record fuzzily matches to ifk g\u00f6teborg . take the allsvenskan titles record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; malm\u00f6 ff } ; allsvenskan titles } ; hop { filter_eq { all_rows ; club ; ifk g\u00f6teborg } ; allsvenskan titles } }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 2nd maximum . the title record of this row is the understudy .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original air date ; 2 } ; title } ; the understudy }"
            ]
        },
        {
            "input": "select the rows whose w / l record fuzzily matches to win . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; w / l ; win } } ; 9 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 1.8 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 1.8 }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to may . for the directed by records of these rows , most of them fuzzily match to gary halvorson .",
            "output": [
                "most_eq { filter_eq { all_rows ; original air date ; may } ; directed by ; gary halvorson }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to lane evans . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to phil crane . take the first elected record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; lane evans } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; phil crane } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose innings record is equal to 8 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; innings ; 8 } } ; 3 }"
            ]
        },
        {
            "input": "for the earnings records of all rows , most of them are greater than 10000000 .",
            "output": [
                "most_greater { all_rows ; earnings ; 10000000 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 68.75 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 68.75 }"
            ]
        },
        {
            "input": "select the rows whose film record fuzzily matches to furnace four . take the award record of this row . select the rows whose film record fuzzily matches to the hardest part . take the award record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; film ; furnace four } ; award } ; hop { filter_eq { all_rows ; film ; the hardest part } ; award } }"
            ]
        },
        {
            "input": "select the rows whose ch 1 record fuzzily matches to 59 ( uhf ) . take the on - air date record of this row . select the rows whose ch 1 record fuzzily matches to 32 ( uhf ) . take the on - air date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; ch 1 ; 59 ( uhf ) } ; on - air date } ; hop { filter_eq { all_rows ; ch 1 ; 32 ( uhf ) } ; on - air date } }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to chicago black hawks . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; visitor ; chicago black hawks } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to igor sijsling . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; igor sijsling } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 3 . select the row whose silver record of these rows is maximum . the nation record of this row is china .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; gold ; 3 } ; silver } ; nation } ; china }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to d . among these rows , select the rows whose frequency mhz record is equal to 98.7 . there is only one such row in the table . the city of license record of this unqiue row is sparta , georgia .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; class ; d } ; frequency mhz ; 98.7 } } ; eq { hop { filter_eq { filter_eq { all_rows ; class ; d } ; frequency mhz ; 98.7 } ; city of license } ; sparta , georgia } }"
            ]
        },
        {
            "input": "select the row whose stage record of all rows is 2nd minimum . the year record of this row is 2003 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; stage ; 2 } ; year } ; 2003 }"
            ]
        },
        {
            "input": "select the rows whose frequency record fuzzily matches to fm . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; frequency ; fm } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose episode title record fuzzily matches to remember . take the original air date record of this row . select the rows whose episode title record fuzzily matches to big brotherly love . take the original air date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; episode title ; remember } ; original air date } ; hop { filter_eq { all_rows ; episode title ; big brotherly love } ; original air date } }"
            ]
        },
        {
            "input": "select the rows whose successor record fuzzily matches to john parker hale ( r ) . take the date of successors formal installation record of this row . select the rows whose successor record fuzzily matches to william bigler ( d ) . take the date of successors formal installation record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; successor ; john parker hale ( r ) } ; date of successors formal installation } ; hop { filter_eq { all_rows ; successor ; william bigler ( d ) } ; date of successors formal installation } }"
            ]
        },
        {
            "input": "the average of the electors record of all rows is 50.85 .",
            "output": [
                "round_eq { avg { all_rows ; electors } ; 50.85 }"
            ]
        },
        {
            "input": "select the row whose votes record of all rows is 3rd maximum . the candidate record of this row is pat martin .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; votes ; 3 } ; candidate } ; pat martin }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 22288 . there is only one such row in the table . the date record of this unqiue row is march 14 .",
            "output": [
                "and { only { filter_greater { all_rows ; attendance ; 22288 } } ; eq { hop { filter_greater { all_rows ; attendance ; 22288 } ; date } ; march 14 } }"
            ]
        },
        {
            "input": "select the row whose finish record of all rows is 2nd minimum . the year record of this row is 1967 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; finish ; 2 } ; year } ; 1967 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to february .",
            "output": [
                "all_eq { all_rows ; date ; february }"
            ]
        },
        {
            "input": "the sum of the race 1 ( pts ) record of all rows is 128 .",
            "output": [
                "round_eq { sum { all_rows ; race 1 ( pts ) } ; 128 }"
            ]
        },
        {
            "input": "select the rows whose isbn us record fuzzily matches to unknown . there is only one such row in the table . the title record of this unqiue row is mission to venus .",
            "output": [
                "and { only { filter_eq { all_rows ; isbn us ; unknown } } ; eq { hop { filter_eq { all_rows ; isbn us ; unknown } ; title } ; mission to venus } }"
            ]
        },
        {
            "input": "for the engine records of all rows , most of them fuzzily match to v8 .",
            "output": [
                "most_eq { all_rows ; engine ; v8 }"
            ]
        },
        {
            "input": "for the music records of all rows , most of them fuzzily match to sukshinder shinda .",
            "output": [
                "most_eq { all_rows ; music ; sukshinder shinda }"
            ]
        },
        {
            "input": "select the row whose asts record of all rows is maximum . the player record of this row is gail goodrich .",
            "output": [
                "eq { hop { argmax { all_rows ; asts } ; player } ; gail goodrich }"
            ]
        },
        {
            "input": "select the rows whose margin of victory record fuzzily matches to 4 strokes . there is only one such row in the table . the tournament record of this unqiue row is barclays scottish open .",
            "output": [
                "and { only { filter_eq { all_rows ; margin of victory ; 4 strokes } } ; eq { hop { filter_eq { all_rows ; margin of victory ; 4 strokes } ; tournament } ; barclays scottish open } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to january 29 . take the high points record of this row . select the rows whose date record fuzzily matches to january 1 . take the high points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; january 29 } ; high points } ; hop { filter_eq { all_rows ; date ; january 1 } ; high points } }"
            ]
        },
        {
            "input": "select the row whose no record of all rows is 3rd maximum . the player record of this row is ashraf amaya .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; no ; 3 } ; player } ; ashraf amaya }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to wimbledon . for the outcome records of these rows , most of them fuzzily match to winner .",
            "output": [
                "most_eq { filter_eq { all_rows ; championship ; wimbledon } ; outcome ; winner }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to south melbourne . take the away team score record of this row . select the rows whose away team record fuzzily matches to north melbourne . take the away team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; away team ; south melbourne } ; away team score } ; hop { filter_eq { all_rows ; away team ; north melbourne } ; away team score } }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to mark selby . there is only one such row in the table . the championship record of this unqiue row is uk championship .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent in the final ; mark selby } } ; eq { hop { filter_eq { all_rows ; opponent in the final ; mark selby } ; championship } ; uk championship } }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to ricky davis . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; leading scorer ; ricky davis } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 1978 - 79 . take the goals for record of this row . select the rows whose season record fuzzily matches to 1975 - 76 . take the goals for record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 1978 - 79 } ; goals for } ; hop { filter_eq { all_rows ; season ; 1975 - 76 } ; goals for } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the athlete record of this row is jean - baptiste macquet , adrien hardy .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; athlete } ; jean - baptiste macquet , adrien hardy }"
            ]
        },
        {
            "input": "select the row whose saturated fat record of all rows is 4th maximum . the record of this row is vegetable shortening ( hydrogenated ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; saturated fat ; 4 } ; } ; vegetable shortening ( hydrogenated ) }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wins ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1993 . take the laps record of this row . select the rows whose year record fuzzily matches to 1982 . take the laps record of this row . the first record is greater than the second record . the laps record of the first row is 374 . the laps record of the second row is 92 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; year ; 1993 } ; laps } ; hop { filter_eq { all_rows ; year ; 1982 } ; laps } } ; and { eq { hop { filter_eq { all_rows ; year ; 1993 } ; laps } ; 374 } ; eq { hop { filter_eq { all_rows ; year ; 1982 } ; laps } ; 92 } } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 1st maximum . the club record of this row is pentyrch rfc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 1 } ; club } ; pentyrch rfc }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is maximum . the name record of this row is rodrigo santana .",
            "output": [
                "eq { hop { argmax { all_rows ; height } ; name } ; rodrigo santana }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 3rd maximum . the home team record of this row is sydney spirit .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; score ; 3 } ; home team } ; sydney spirit }"
            ]
        },
        {
            "input": "the 3rd minimum date record of all rows is sep 14 , 1997 .",
            "output": [
                "eq { nth_min { all_rows ; date ; 3 } ; sep 14 , 1997 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to chicago blackhawks . there is only one such row in the table . the game record of this unqiue row is 36 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; chicago blackhawks } } ; eq { hop { filter_eq { all_rows ; opponent ; chicago blackhawks } ; game } ; 36 } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 10000 . there is only one such row in the table . the home team record of this unqiue row is essendon . the away team record of this unqiue row is hawthorn .",
            "output": [
                "and { only { filter_less { all_rows ; crowd ; 10000 } } ; and { eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; essendon } ; eq { hop { filter_less { all_rows ; crowd ; 10000 } ; away team } ; hawthorn } } }"
            ]
        },
        {
            "input": "select the row whose events record of all rows is maximum . the tournament record of this row is the open championship .",
            "output": [
                "eq { hop { argmax { all_rows ; events } ; tournament } ; the open championship }"
            ]
        },
        {
            "input": "select the rows whose eliminated by record fuzzily matches to evolution . there is only one such row in the table . the tag team record of this unqiue row is dudley boyz .",
            "output": [
                "and { only { filter_eq { all_rows ; eliminated by ; evolution } } ; eq { hop { filter_eq { all_rows ; eliminated by ; evolution } ; tag team } ; dudley boyz } }"
            ]
        },
        {
            "input": "for the played records of all rows , most of them are equal to 22 .",
            "output": [
                "most_eq { all_rows ; played ; 22 }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to spirit racing . there is only one such row in the table . the year record of this unqiue row is 1983 .",
            "output": [
                "and { only { filter_eq { all_rows ; entrant ; spirit racing } } ; eq { hop { filter_eq { all_rows ; entrant ; spirit racing } ; year } ; 1983 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november 10 . take the leading scorer record of this row . select the rows whose date record fuzzily matches to november 22 . take the leading scorer record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; november 10 } ; leading scorer } ; hop { filter_eq { all_rows ; date ; november 22 } ; leading scorer } }"
            ]
        },
        {
            "input": "for the team records of all rows , most of them fuzzily match to holden racing team .",
            "output": [
                "most_eq { all_rows ; team ; holden racing team }"
            ]
        },
        {
            "input": "select the row whose percentage record of all rows is maximum . the driver record of this row is juan manuel fangio .",
            "output": [
                "eq { hop { argmax { all_rows ; percentage } ; driver } ; juan manuel fangio }"
            ]
        },
        {
            "input": "select the rows whose designer , year record is greater than 2000 . there is only one such row in the table . the name record of this unqiue row is pacific dunes . the state record of this unqiue row is oregon .",
            "output": [
                "and { only { filter_greater { all_rows ; designer , year ; 2000 } } ; and { eq { hop { filter_greater { all_rows ; designer , year ; 2000 } ; name } ; pacific dunes } ; eq { hop { filter_greater { all_rows ; designer , year ; 2000 } ; state } ; oregon } } }"
            ]
        },
        {
            "input": "the average of the power record of all rows is 8260 .",
            "output": [
                "round_eq { avg { all_rows ; power } ; 8260 }"
            ]
        },
        {
            "input": "the sum of the total dismissals record of all rows is 463 .",
            "output": [
                "round_eq { sum { all_rows ; total dismissals } ; 463 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is may 22 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; may 22 }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to f - 20 . take the quantity made record of this row . select the rows whose class record fuzzily matches to f - 22 . take the quantity made record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; class ; f - 20 } ; quantity made } ; hop { filter_eq { all_rows ; class ; f - 22 } ; quantity made } }"
            ]
        },
        {
            "input": "select the row whose yards record of all rows is 2nd maximum . the season record of this row is 2009 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; yards ; 2 } ; season } ; 2009 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 15760 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 15760 }"
            ]
        },
        {
            "input": "for the ihsaa class records of all rows , all of them fuzzily match to 4a .",
            "output": [
                "all_eq { all_rows ; ihsaa class ; 4a }"
            ]
        },
        {
            "input": "the 2nd minimum number record of all rows is 18 .",
            "output": [
                "eq { nth_min { all_rows ; number ; 2 } ; 18 }"
            ]
        },
        {
            "input": "select the row whose years for rockets record of all rows is minimum . the player record of this row is perry , curtis curtis perry .",
            "output": [
                "eq { hop { argmin { all_rows ; years for rockets } ; player } ; perry , curtis curtis perry }"
            ]
        },
        {
            "input": "select the row whose date sent record of all rows is minimum . the constellation record of this row is delphinus .",
            "output": [
                "eq { hop { argmin { all_rows ; date sent } ; constellation } ; delphinus }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to canada . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; canada } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 16 july 1949 .",
            "output": [
                "all_eq { all_rows ; date ; 16 july 1949 }"
            ]
        },
        {
            "input": "select the rows whose style record fuzzily matches to country - western two - step . there is only one such row in the table . the couple record of this unqiue row is kherington payne mark kanemura .",
            "output": [
                "and { only { filter_eq { all_rows ; style ; country - western two - step } } ; eq { hop { filter_eq { all_rows ; style ; country - western two - step } ; couple } ; kherington payne mark kanemura } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to wc beijing . the sum of the rank points record of these rows is 23 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; event ; wc beijing } ; rank points } ; 23 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to craig stadler . take the money record of this row . select the rows whose player record fuzzily matches to fred couples . take the money record of this row . the first record is 5863 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; craig stadler } ; money } ; hop { filter_eq { all_rows ; player ; fred couples } ; money } } ; 5863 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to december .",
            "output": [
                "all_eq { all_rows ; date ; december }"
            ]
        },
        {
            "input": "select the rows whose facility record fuzzily matches to coyote ridge corrections center ( crcc ) . take the capacity record of this row . select the rows whose facility record fuzzily matches to monroe correctional complex ( mcc ) . take the capacity record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; facility ; coyote ridge corrections center ( crcc ) } ; capacity } ; hop { filter_eq { all_rows ; facility ; monroe correctional complex ( mcc ) } ; capacity } }"
            ]
        },
        {
            "input": "select the row whose tonnage record of all rows is 2nd maximum . the name record of this row is ocean rover .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; tonnage ; 2 } ; name } ; ocean rover }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 8 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 8 }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 1st maximum . the team record of this row is boston .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 1 } ; team } ; boston }"
            ]
        },
        {
            "input": "select the rows whose tv station ( operator ) record fuzzily matches to modernine tv . take the 2005 record of this row . select the rows whose tv station ( operator ) record fuzzily matches to nbt . take the 2005 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tv station ( operator ) ; modernine tv } ; 2005 } ; hop { filter_eq { all_rows ; tv station ( operator ) ; nbt } ; 2005 } }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 9 august 1952 .",
            "output": [
                "all_eq { all_rows ; date ; 9 august 1952 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 612 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 612 }"
            ]
        },
        {
            "input": "select the row whose foundation record of all rows is maximum . the organization record of this row is radiotelevisi\u00f3n del principado de asturias ( rtpa ) .",
            "output": [
                "eq { hop { argmax { all_rows ; foundation } ; organization } ; radiotelevisi\u00f3n del principado de asturias ( rtpa ) }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to nick price . take the wins record of this row . select the rows whose player record fuzzily matches to fred couples . take the wins record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; nick price } ; wins } ; hop { filter_eq { all_rows ; player ; fred couples } ; wins } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to world cup . there is only one such row in the table . the year record of this unqiue row is 1998 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; world cup } } ; eq { hop { filter_eq { all_rows ; tournament ; world cup } ; year } ; 1998 } }"
            ]
        },
        {
            "input": "select the rows whose official name record fuzzily matches to saint george . take the population record of this row . select the rows whose official name record fuzzily matches to saint andrews . take the population record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; official name ; saint george } ; population } ; hop { filter_eq { all_rows ; official name ; saint andrews } ; population } }"
            ]
        },
        {
            "input": "select the row whose start record of all rows is minimum . the year record of this row is 1936 .",
            "output": [
                "eq { hop { argmin { all_rows ; start } ; year } ; 1936 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 16013 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 16013 }"
            ]
        },
        {
            "input": "the sum of the votes record of all rows is 65680 .",
            "output": [
                "round_eq { sum { all_rows ; votes } ; 65680 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to patrick duffy . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; patrick duffy } } ; 8 }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is 2nd maximum . the nation record of this row is netherlands .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; bronze ; 2 } ; nation } ; netherlands }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to jacksonville jaguars . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; jacksonville jaguars } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose runner - up record fuzzily matches to asec abidjan . among these rows , select the rows whose score record is greater than 5 . there is only one such row in the table . the winner record of this unqiue row is us gor\u00e9e .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; runner - up ; asec abidjan } ; score ; 5 } } ; eq { hop { filter_greater { filter_eq { all_rows ; runner - up ; asec abidjan } ; score ; 5 } ; winner } ; us gor\u00e9e } }"
            ]
        },
        {
            "input": "select the row whose overall record of all rows is 3rd minimum . the name record of this row is james hamilton .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; overall ; 3 } ; name } ; james hamilton }"
            ]
        },
        {
            "input": "select the rows whose hometown record fuzzily matches to tx . there is only one such row in the table . the player record of this unqiue row is kerry wood .",
            "output": [
                "and { only { filter_eq { all_rows ; hometown ; tx } } ; eq { hop { filter_eq { all_rows ; hometown ; tx } ; player } ; kerry wood } }"
            ]
        },
        {
            "input": "the average of the distance ( km ) record of all rows is 7.1 .",
            "output": [
                "round_eq { avg { all_rows ; distance ( km ) } ; 7.1 }"
            ]
        },
        {
            "input": "for the away captain records of all rows , all of them fuzzily match to prosper utseya .",
            "output": [
                "all_eq { all_rows ; away captain ; prosper utseya }"
            ]
        },
        {
            "input": "select the row whose foundation record of all rows is 2nd minimum . the english name record of this row is japan coast guard academy .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; foundation ; 2 } ; english name } ; japan coast guard academy }"
            ]
        },
        {
            "input": "the minimum closed record of all rows is 1983 . the station record of the row with superlative closed record is fairmount avenue .",
            "output": [
                "and { eq { min { all_rows ; closed } ; 1983 } ; eq { hop { argmin { all_rows ; closed } ; station } ; fairmount avenue } }"
            ]
        },
        {
            "input": "select the rows whose semifinalists record is equal to 1 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; semifinalists ; 1 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to real murcia . take the wins record of this row . select the rows whose club record fuzzily matches to jerez cd . take the wins record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; real murcia } ; wins } ; hop { filter_eq { all_rows ; club ; jerez cd } ; wins } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to king . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; title ; king } } ; 4 }"
            ]
        },
        {
            "input": "for the outcome records of all rows , most of them fuzzily match to runner - up .",
            "output": [
                "most_eq { all_rows ; outcome ; runner - up }"
            ]
        },
        {
            "input": "select the rows whose primary conference when joining the msfa record fuzzily matches to whac . there is only one such row in the table . the institution record of this unqiue row is trine university .",
            "output": [
                "and { only { filter_eq { all_rows ; primary conference when joining the msfa ; whac } } ; eq { hop { filter_eq { all_rows ; primary conference when joining the msfa ; whac } ; institution } ; trine university } }"
            ]
        },
        {
            "input": "select the rows whose score record is greater than 280 . there is only one such row in the table . the year record of this unqiue row is 1998 .",
            "output": [
                "and { only { filter_greater { all_rows ; score ; 280 } } ; eq { hop { filter_greater { all_rows ; score ; 280 } ; year } ; 1998 } }"
            ]
        },
        {
            "input": "for the score records of all rows , all of them fuzzily match to 1 goal .",
            "output": [
                "all_eq { all_rows ; score ; 1 goal }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 43800 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 43800 }"
            ]
        },
        {
            "input": "the average of the candidates record of all rows is 76.075 % .",
            "output": [
                "round_eq { avg { all_rows ; candidates } ; 76.075 % }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to french . among these rows , select the rows whose points record is equal to 14 . there is only one such row in the table . the artist record of this unqiue row is tonia .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; language ; french } ; points ; 14 } } ; eq { hop { filter_eq { filter_eq { all_rows ; language ; french } ; points ; 14 } ; artist } ; tonia } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 5th minimum . the venue record of this row is guangzhou .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 5 } ; venue } ; guangzhou }"
            ]
        },
        {
            "input": "the average of the round record of all rows is 1.95 .",
            "output": [
                "round_eq { avg { all_rows ; round } ; 1.95 }"
            ]
        },
        {
            "input": "for the gross tonnage records of all rows , most of them are greater than 2000 .",
            "output": [
                "most_greater { all_rows ; gross tonnage ; 2000 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the player record of this row is jason gillespie .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; player } ; jason gillespie }"
            ]
        },
        {
            "input": "for the distance ( miles ) records of all rows , all of them fuzzily match to 1-3 / 16 .",
            "output": [
                "all_eq { all_rows ; distance ( miles ) ; 1-3 / 16 }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to mercy college . take the enrollment record of this row . select the rows whose institution record fuzzily matches to dowling college . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; institution ; mercy college } ; enrollment } ; hop { filter_eq { all_rows ; institution ; dowling college } ; enrollment } }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to 26 january 1985 .",
            "output": [
                "most_eq { all_rows ; date ; 26 january 1985 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 09 / 30 / 1933 . take the result record of this row . select the rows whose date record fuzzily matches to 11 / 04 / 1933 . take the result record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 09 / 30 / 1933 } ; result } ; hop { filter_eq { all_rows ; date ; 11 / 04 / 1933 } ; result } }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 1st maximum . the ground record of this row is humber college north .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; score ; 1 } ; ground } ; humber college north }"
            ]
        },
        {
            "input": "for the directed by records of all rows , all of them fuzzily match to ted wass .",
            "output": [
                "all_eq { all_rows ; directed by ; ted wass }"
            ]
        },
        {
            "input": "for the venue records of all rows , most of them fuzzily match to london .",
            "output": [
                "most_eq { all_rows ; venue ; london }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to alive after exiting the cube . there is only one such row in the table . the name record of this unqiue row is kazan .",
            "output": [
                "and { only { filter_eq { all_rows ; status ; alive after exiting the cube } } ; eq { hop { filter_eq { all_rows ; status ; alive after exiting the cube } ; name } ; kazan } }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is maximum . the name record of this row is bank one tower .",
            "output": [
                "eq { hop { argmax { all_rows ; floors } ; name } ; bank one tower }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to sweden . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; sweden } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to lola t370 . there is only one such row in the table . the year record of this unqiue row is 1974 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; lola t370 } } ; eq { hop { filter_eq { all_rows ; chassis ; lola t370 } ; year } ; 1974 } }"
            ]
        },
        {
            "input": "for the game site records of all rows , most of them fuzzily match to mile high stadium .",
            "output": [
                "most_eq { all_rows ; game site ; mile high stadium }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd maximum . the wrestler record of this row is chris masters .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; time ; 2 } ; wrestler } ; chris masters }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is melbourne .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; melbourne }"
            ]
        },
        {
            "input": "the average of the against record of all rows is 11.6 .",
            "output": [
                "round_eq { avg { all_rows ; against } ; 11.6 }"
            ]
        },
        {
            "input": "select the rows whose elevated record fuzzily matches to 1117 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; elevated ; 1117 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to robert taylor . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to mark alexander . take the first elected record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; robert taylor } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; mark alexander } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose november record fuzzily matches to 27 . take the points record of this row . select the rows whose november record fuzzily matches to 29 . take the points record of this row . the second record is 2 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; november ; 27 } ; points } ; hop { filter_eq { all_rows ; november ; 29 } ; points } } ; -2 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to lebanon . take the total record of this row . select the rows whose nation record fuzzily matches to french community of belgium . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; lebanon } ; total } ; hop { filter_eq { all_rows ; nation ; french community of belgium } ; total } }"
            ]
        },
        {
            "input": "select the rows whose team 1 record fuzzily matches to as saint - \u00e9tienne ( d1 ) . take the score record of this row . select the rows whose team 1 record fuzzily matches to girondins de bordeaux ( d1 ) . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team 1 ; as saint - \u00e9tienne ( d1 ) } ; score } ; hop { filter_eq { all_rows ; team 1 ; girondins de bordeaux ( d1 ) } ; score } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high assists record fuzzily matches to g payton . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; score ; w } ; high assists ; g payton } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose country record does not match to united states . there is only one such row in the table . the player record of this unqiue row is bob charles .",
            "output": [
                "and { only { filter_not_eq { all_rows ; country ; united states } } ; eq { hop { filter_not_eq { all_rows ; country ; united states } ; player } ; bob charles } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is collingwood . the away team record of this row is north melbourne .",
            "output": [
                "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; collingwood } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; north melbourne } }"
            ]
        },
        {
            "input": "select the row whose est record of all rows is minimum . the name record of this row is yamagata international documentary film festival .",
            "output": [
                "eq { hop { argmin { all_rows ; est } ; name } ; yamagata international documentary film festival }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 4th maximum . the home team record of this row is essendon .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 4 } ; home team } ; essendon }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2007 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; date ; 2007 } }"
            ]
        },
        {
            "input": "the average of the population ( 2005 ) record of all rows is 801.29 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2005 ) } ; 801.29 }"
            ]
        },
        {
            "input": "the sum of the against record of all rows is 53 .",
            "output": [
                "round_eq { sum { all_rows ; against } ; 53 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 626 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 626 }"
            ]
        },
        {
            "input": "select the rows whose stage ( winner ) record fuzzily matches to mark cavendish . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; stage ( winner ) ; mark cavendish } } ; 3 }"
            ]
        },
        {
            "input": "the average of the times contested record of all rows is 2.17 .",
            "output": [
                "round_eq { avg { all_rows ; times contested } ; 2.17 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to johannesburg . for the runs records of these rows , most of them are greater than 140 .",
            "output": [
                "most_greater { filter_eq { all_rows ; venue ; johannesburg } ; runs ; 140 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 6 march 1976 . select the row whose tie no record of these rows is minimum . the home team record of this row is sunderland . the away team record of this row is crystal palace .",
            "output": [
                "and { eq { hop { argmin { filter_eq { all_rows ; date ; 6 march 1976 } ; tie no } ; home team } ; sunderland } ; eq { hop { argmin { filter_eq { all_rows ; date ; 6 march 1976 } ; tie no } ; away team } ; crystal palace } }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are greater than 1960 .",
            "output": [
                "most_greater { all_rows ; first elected ; 1960 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to boston garden . the sum of the score record of these rows is 843 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; location ; boston garden } ; score } ; 843 }"
            ]
        },
        {
            "input": "select the rows whose expected year of completion record is equal to 2006 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; expected year of completion ; 2006 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 18,333.33 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 18,333.33 }"
            ]
        },
        {
            "input": "select the rows whose frequency record fuzzily matches to 91.1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; frequency ; 91.1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october 26 , 1976 . take the score record of this row . select the rows whose date record fuzzily matches to october 23 , 1976 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; october 26 , 1976 } ; score } ; hop { filter_eq { all_rows ; date ; october 23 , 1976 } ; score } }"
            ]
        },
        {
            "input": "select the rows whose name of ground record fuzzily matches to chester road north ground . take the worcs la matches record of this row . select the rows whose name of ground record fuzzily matches to racecourse ground . take the worcs la matches record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name of ground ; chester road north ground } ; worcs la matches } ; hop { filter_eq { all_rows ; name of ground ; racecourse ground } ; worcs la matches } }"
            ]
        },
        {
            "input": "select the rows whose peak record fuzzily matches to pietrosul rodnei . take the elevation ( m ) record of this row . select the rows whose peak record fuzzily matches to moldoveanu peak . take the elevation ( m ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; peak ; pietrosul rodnei } ; elevation ( m ) } ; hop { filter_eq { all_rows ; peak ; moldoveanu peak } ; elevation ( m ) } }"
            ]
        },
        {
            "input": "for the gender records of all rows , most of them fuzzily match to coed .",
            "output": [
                "most_eq { all_rows ; gender ; coed }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . among these rows , select the rows whose from record fuzzily matches to idaho state . there is only one such row in the table . the jersey number ( s ) record of this unqiue row is 41 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; nationality ; united states } ; from ; idaho state } } ; eq { hop { filter_eq { filter_eq { all_rows ; nationality ; united states } ; from ; idaho state } ; jersey number ( s ) } ; 41 } }"
            ]
        },
        {
            "input": "select the row whose duration record of all rows is 2nd maximum . the interregnum began record of this row is 20 october 1740 death of charles vi .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; duration ; 2 } ; interregnum began } ; 20 october 1740 death of charles vi }"
            ]
        },
        {
            "input": "the average of the games played record of all rows is 65.2 .",
            "output": [
                "round_eq { avg { all_rows ; games played } ; 65.2 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to guide . take the points record of this row . select the rows whose artist record fuzzily matches to balsam boys . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; artist ; guide } ; points } ; hop { filter_eq { all_rows ; artist ; balsam boys } ; points } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to adam voges . take the runs record of this row . select the rows whose player record fuzzily matches to callum ferguson . take the runs record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; adam voges } ; runs } ; hop { filter_eq { all_rows ; player ; callum ferguson } ; runs } }"
            ]
        },
        {
            "input": "for the points 1 records of all rows , most of them are less than 40 .",
            "output": [
                "most_less { all_rows ; points 1 ; 40 }"
            ]
        },
        {
            "input": "the 1st minimum year completed record of all rows is 1955 .",
            "output": [
                "eq { nth_min { all_rows ; year completed ; 1 } ; 1955 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to graham rahal . take the points record of this row . select the rows whose name record fuzzily matches to dan clarke . take the points record of this row . the first record is less than the second record . the points record of the first row is 25 . the points record of the second row is 27 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; name ; graham rahal } ; points } ; hop { filter_eq { all_rows ; name ; dan clarke } ; points } } ; and { eq { hop { filter_eq { all_rows ; name ; graham rahal } ; points } ; 25 } ; eq { hop { filter_eq { all_rows ; name ; dan clarke } ; points } ; 27 } } }"
            ]
        },
        {
            "input": "for the nominee ( s ) records of all rows , most of them fuzzily match to john wells .",
            "output": [
                "most_eq { all_rows ; nominee ( s ) ; john wells }"
            ]
        },
        {
            "input": "select the rows whose to par record fuzzily matches to - 9 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; - 9 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to east germany . take the lost record of this row . select the rows whose team record fuzzily matches to poland . take the lost record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; east germany } ; lost } ; hop { filter_eq { all_rows ; team ; poland } ; lost } }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to ferrari . select the row whose time / retired record of these rows is minimum . the driver record of this row is rubens barrichello .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; constructor ; ferrari } ; time / retired } ; driver } ; rubens barrichello }"
            ]
        },
        {
            "input": "select the rows whose scored record is greater than 30 . there is only one such row in the table . the team record of this unqiue row is tembetary .",
            "output": [
                "and { only { filter_greater { all_rows ; scored ; 30 } } ; eq { hop { filter_greater { all_rows ; scored ; 30 } ; team } ; tembetary } }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is maximum . the building record of this row is fenwick tower ( residential ) .",
            "output": [
                "eq { hop { argmax { all_rows ; floors } ; building } ; fenwick tower ( residential ) }"
            ]
        },
        {
            "input": "select the rows whose republican ticket record fuzzily matches to frank . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; republican ticket ; frank } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose number record of all rows is 2nd maximum . the language record of this row is yiddish .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number ; 2 } ; language } ; yiddish }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to nursery . there is only one such row in the table . the name record of this unqiue row is heath lane .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; nursery } } ; eq { hop { filter_eq { all_rows ; type ; nursery } ; name } ; heath lane } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is south dragons .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; home team } ; south dragons }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 21.2 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 21.2 }"
            ]
        },
        {
            "input": "the 2nd minimum rank record of all rows is 2nd . the population record of the row with 2nd minimum rank record is 36039 .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 2 } ; 2nd } ; eq { hop { nth_argmin { all_rows ; rank ; 2 } ; population } ; 36039 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to may 2008 . for the original artist records of these rows , all of them fuzzily match to beatles .",
            "output": [
                "all_eq { filter_eq { all_rows ; date ; may 2008 } ; original artist ; beatles }"
            ]
        },
        {
            "input": "select the rows whose top - 5 record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; top - 5 ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose time record is greater than 48 . there is only one such row in the table . the athlete record of this unqiue row is naiel santiago d'almeida .",
            "output": [
                "and { only { filter_greater { all_rows ; time ; 48 } } ; eq { hop { filter_greater { all_rows ; time ; 48 } ; athlete } ; naiel santiago d'almeida } }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november 22 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 29 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; november 22 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 29 } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . for the result records of these rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; october } ; result ; w }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to lb . select the row whose overall record of these rows is minimum . the name record of this row is cody glenn .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; position ; lb } ; overall } ; name } ; cody glenn }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is 3rd maximum . the english name record of this row is suibin county .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ; 3 } ; english name } ; suibin county }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is 1st maximum . the official name record of this row is chipman .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ; 1 } ; official name } ; chipman }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is 1st maximum . the title record of this row is my man and the devil on his shoulder .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; length ; 1 } ; title } ; my man and the devil on his shoulder }"
            ]
        },
        {
            "input": "for the jockey records of all rows , most of them fuzzily match to g cooksley .",
            "output": [
                "most_eq { all_rows ; jockey ; g cooksley }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the opponent in the final record of this row is melinda czink .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; opponent in the final } ; melinda czink }"
            ]
        },
        {
            "input": "select the rows whose track record fuzzily matches to mono 45upm - romance adieu ( weltklang remix ) . take the year record of this row . select the rows whose track record fuzzily matches to kinder aus asbest - hey engel ( weltklang remix ) . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; track ; mono 45upm - romance adieu ( weltklang remix ) } ; year } ; hop { filter_eq { all_rows ; track ; kinder aus asbest - hey engel ( weltklang remix ) } ; year } }"
            ]
        },
        {
            "input": "select the row whose reason for change record of all rows is 1st minimum . the vacator record of this row is george h christopher ( d ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; reason for change ; 1 } ; vacator } ; george h christopher ( d ) }"
            ]
        },
        {
            "input": "for the site records of all rows , most of them fuzzily match to ames .",
            "output": [
                "most_eq { all_rows ; site ; ames }"
            ]
        },
        {
            "input": "the maximum wins record of all rows is 5 . the year record of the row with superlative wins record is 1991 .",
            "output": [
                "and { eq { max { all_rows ; wins } ; 5 } ; eq { hop { argmax { all_rows ; wins } ; year } ; 1991 } }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to re - elected .",
            "output": [
                "most_eq { all_rows ; result ; re - elected }"
            ]
        },
        {
            "input": "select the row whose length ( male ) record of all rows is 3rd maximum . the scientific name record of this row is trioceros jacksonii .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; length ( male ) ; 3 } ; scientific name } ; trioceros jacksonii }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 3.9 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 3.9 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to ita . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; winner ; ita } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; clay } } ; 5 }"
            ]
        },
        {
            "input": "the 2nd maximum winning score record of all rows is 69 + 65 + 69 + 69 = 272 .",
            "output": [
                "eq { nth_max { all_rows ; winning score ; 2 } ; 69 + 65 + 69 + 69"
            ]
        },
        {
            "input": "select the rows whose took office record fuzzily matches to 195 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; took office ; 195 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the tournament record of this unqiue row is pr\u016fhonice - prague , czech republic .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; pr\u016fhonice - prague , czech republic } }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are less than 2012 .",
            "output": [
                "most_less { all_rows ; year ; 2012 }"
            ]
        },
        {
            "input": "for the lost records of all rows , most of them are equal to 5 .",
            "output": [
                "most_eq { all_rows ; lost ; 5 }"
            ]
        },
        {
            "input": "select the rows whose population ( 2011 ) record is greater than 1000 . select the row whose change ( % ) record of these rows is 1st maximum . the name record of this row is la loche .",
            "output": [
                "eq { hop { nth_argmax { filter_greater { all_rows ; population ( 2011 ) ; 1000 } ; change ( % ) ; 1 } ; name } ; la loche }"
            ]
        },
        {
            "input": "select the row whose height ( m ) record of all rows is 2nd maximum . the name record of this row is messeturm .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; height ( m ) ; 2 } ; name } ; messeturm }"
            ]
        },
        {
            "input": "select the rows whose historical references record fuzzily matches to the wright brothers . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; historical references ; the wright brothers } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 10 july 1954 .",
            "output": [
                "all_eq { all_rows ; date ; 10 july 1954 }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to illinois . among these rows , select the rows whose founded record is equal to 1887 . there is only one such row in the table . the school record of this unqiue row is benedictine university .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; state ; illinois } ; founded ; 1887 } } ; eq { hop { filter_eq { filter_eq { all_rows ; state ; illinois } ; founded ; 1887 } ; school } ; benedictine university } }"
            ]
        },
        {
            "input": "select the rows whose municipality record fuzzily matches to jose panganiban . take the area ( km square ) record of this row . select the rows whose municipality record fuzzily matches to daet ( capital town ) . take the area ( km square ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; municipality ; jose panganiban } ; area ( km square ) } ; hop { filter_eq { all_rows ; municipality ; daet ( capital town ) } ; area ( km square ) } }"
            ]
        },
        {
            "input": "the average of the height record of all rows is 1.99 .",
            "output": [
                "round_eq { avg { all_rows ; height } ; 1.99 }"
            ]
        },
        {
            "input": "select the rows whose single record fuzzily matches to tell the world . take the other details record of this row . select the rows whose single record fuzzily matches to my love will follow me . take the other details record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; single ; tell the world } ; other details } ; hop { filter_eq { all_rows ; single ; my love will follow me } ; other details } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 30 august 1952 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 30 august 1952 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose partner record fuzzily matches to magdalena maleeva . there is only one such row in the table . the date record of this unqiue row is july 16 , 1992 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } ; date } ; july 16 , 1992 } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is november 1 , 1953 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; november 1 , 1953 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 23.25 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 23.25 }"
            ]
        },
        {
            "input": "the 1st minimum rank record of all rows is 1 . the country record of the row with 1st minimum rank record is dominican republic .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; rank ; 1 } ; country } ; dominican republic } }"
            ]
        },
        {
            "input": "select the row whose mean free path record of all rows is 2nd maximum . the vacuum range record of this row is ultra high vacuum .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; mean free path ; 2 } ; vacuum range } ; ultra high vacuum }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 3rd minimum . the name record of this row is marianne limpert .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 3 } ; name } ; marianne limpert }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 5 }"
            ]
        },
        {
            "input": "for the ground records of all rows , most of them fuzzily match to humber college north .",
            "output": [
                "most_eq { all_rows ; ground ; humber college north }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than 14,000 .",
            "output": [
                "most_greater { all_rows ; crowd ; 14,000 }"
            ]
        },
        {
            "input": "the average of the score in the final record of all rows is 6 .",
            "output": [
                "round_eq { avg { all_rows ; score in the final } ; 6 }"
            ]
        },
        {
            "input": "the average of the prize ( k ) record of all rows is 219.6 .",
            "output": [
                "round_eq { avg { all_rows ; prize ( k ) } ; 219.6 }"
            ]
        },
        {
            "input": "select the rows whose votes record is greater than 100000 . among these rows , select the rows whose seats record is greater than 20 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; votes ; 100000 } ; seats ; 20 } } ; 3 }"
            ]
        },
        {
            "input": "for the total units sold records of all rows , most of them are greater than 1500000 .",
            "output": [
                "most_greater { all_rows ; total units sold ; 1500000 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to ghent .",
            "output": [
                "most_eq { all_rows ; location ; ghent }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 80 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 80 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tiger woods . take the score record of this row . select the rows whose player record fuzzily matches to fred couples . take the score record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; tiger woods } ; score } ; hop { filter_eq { all_rows ; player ; fred couples } ; score } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to draw . there is only one such row in the table . the opponent record of this unqiue row is c\u0103t\u0103lin zm\u0103r\u0103ndescu .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; draw } } ; eq { hop { filter_eq { all_rows ; result ; draw } ; opponent } ; c\u0103t\u0103lin zm\u0103r\u0103ndescu } }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is 3rd maximum . the nation record of this row is soviet union .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; bronze ; 3 } ; nation } ; soviet union }"
            ]
        },
        {
            "input": "for the honour records of all rows , all of them fuzzily match to medal of the order of australia .",
            "output": [
                "all_eq { all_rows ; honour ; medal of the order of australia }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to roger christiansen . the minimum original air date record of these rows is january 9 , 2010 .",
            "output": [
                "eq { min { filter_eq { all_rows ; directed by ; roger christiansen } ; original air date } ; january 9 , 2010 }"
            ]
        },
        {
            "input": "select the row whose draw record of all rows is 1st minimum . the artist record of this row is alma \u010dard\u017ei\u0107 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; draw ; 1 } ; artist } ; alma \u010dard\u017ei\u0107 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to triton . take the year joined record of this row . select the rows whose school record fuzzily matches to oak hill . take the year joined record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; school ; triton } ; year joined } ; hop { filter_eq { all_rows ; school ; oak hill } ; year joined } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 6999 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 6999 }"
            ]
        },
        {
            "input": "select the rows whose manager record fuzzily matches to tommy shields . there is only one such row in the table . the finish record of this unqiue row is 4th .",
            "output": [
                "and { only { filter_eq { all_rows ; manager ; tommy shields } } ; eq { hop { filter_eq { all_rows ; manager ; tommy shields } ; finish } ; 4th } }"
            ]
        },
        {
            "input": "the sum of the runs record of all rows is 4832 .",
            "output": [
                "round_eq { sum { all_rows ; runs } ; 4832 }"
            ]
        },
        {
            "input": "the average of the elevation ( m ) record of all rows is 2494.63 .",
            "output": [
                "round_eq { avg { all_rows ; elevation ( m ) } ; 2494.63 }"
            ]
        },
        {
            "input": "the maximum attendance record of all rows is 19567 . the opponent record of the row with superlative attendance record is philadelphia flyers .",
            "output": [
                "and { eq { max { all_rows ; attendance } ; 19567 } ; eq { hop { argmax { all_rows ; attendance } ; opponent } ; philadelphia flyers } }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 6 . there is only one such row in the table . the player record of this unqiue row is mark turner .",
            "output": [
                "and { only { filter_eq { all_rows ; matches ; 6 } } ; eq { hop { filter_eq { all_rows ; matches ; 6 } ; player } ; mark turner } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to serbia . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; nation ; serbia } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the venue record of this row is vfl park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; venue } ; vfl park }"
            ]
        },
        {
            "input": "the average of the total position record of all rows is 10.73 .",
            "output": [
                "round_eq { avg { all_rows ; total position } ; 10.73 }"
            ]
        },
        {
            "input": "for the party records of all rows , most of them fuzzily match to republican .",
            "output": [
                "most_eq { all_rows ; party ; republican }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 25185 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 25185 }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than 40000 .",
            "output": [
                "most_greater { all_rows ; attendance ; 40000 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose game site record fuzzily matches to tampa stadium . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; november } ; game site ; tampa stadium } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 20 nov 2005 . take the margin of victory record of this row . select the rows whose date record fuzzily matches to 10 sep 2006 . take the margin of victory record of this row . the first record is 2 strokes larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; date ; 20 nov 2005 } ; margin of victory } ; hop { filter_eq { all_rows ; date ; 10 sep 2006 } ; margin of victory } } ; 2 strokes }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is 3rd maximum . the ethnic group record of this row is saho .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ; 3 } ; ethnic group } ; saho }"
            ]
        },
        {
            "input": "select the rows whose borough or census area record fuzzily matches to fairbanks north star . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; borough or census area ; fairbanks north star } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose easa ( eu ) record fuzzily matches to yes . there is only one such row in the table . the airline record of this unqiue row is premiair .",
            "output": [
                "and { only { filter_eq { all_rows ; easa ( eu ) ; yes } } ; eq { hop { filter_eq { all_rows ; easa ( eu ) ; yes } ; airline } ; premiair } }"
            ]
        },
        {
            "input": "select the row whose away record of all rows is maximum . the season record of this row is 2001 - 02 .",
            "output": [
                "eq { hop { argmax { all_rows ; away } ; season } ; 2001 - 02 }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to g & swr kilmarnock . select the row whose no built record of these rows is 3rd maximum . the class record of this row is 153 .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; builder ; g & swr kilmarnock } ; no built ; 3 } ; class } ; 153 }"
            ]
        },
        {
            "input": "for the us viewers ( million ) records of all rows , most of them are greater than 6 .",
            "output": [
                "most_greater { all_rows ; us viewers ( million ) ; 6 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is moorabbin oval .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; moorabbin oval }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than 17000 .",
            "output": [
                "most_greater { all_rows ; crowd ; 17000 }"
            ]
        },
        {
            "input": "select the rows whose introduced record is less than 2000 . among these rows , select the rows whose fleet size record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; introduced ; 2000 } ; fleet size ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the year joined record of all rows is 1977 .",
            "output": [
                "round_eq { avg { all_rows ; year joined } ; 1977 }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to world snooker championship . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; championship ; world snooker championship } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose unemployment rate record of all rows is 2nd maximum . the county record of this row is allegany .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; unemployment rate ; 2 } ; county } ; allegany }"
            ]
        },
        {
            "input": "the average of the number of seats record of all rows is 44 .",
            "output": [
                "round_eq { avg { all_rows ; number of seats } ; 44 }"
            ]
        },
        {
            "input": "for the founded records of all rows , most of them are less than 1900 .",
            "output": [
                "most_less { all_rows ; founded ; 1900 }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to ferrari . the sum of the laps record of these rows is 140 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; constructor ; ferrari } ; laps } ; 140 }"
            ]
        },
        {
            "input": "the average of the laps record of all rows is 102.9 .",
            "output": [
                "round_eq { avg { all_rows ; laps } ; 102.9 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the date record of this row is october 13 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; date } ; october 13 }"
            ]
        },
        {
            "input": "for the general classification records of all rows , most of them fuzzily match to alejandro valverde .",
            "output": [
                "most_eq { all_rows ; general classification ; alejandro valverde }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to r\u00e9union . among these rows , select the rows whose airport record fuzzily matches to roland garros airport . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; r\u00e9union } ; airport ; roland garros airport } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to athens , greece . take the date record of this row . select the rows whose venue record fuzzily matches to oslo , norway . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; venue ; athens , greece } ; date } ; hop { filter_eq { all_rows ; venue ; oslo , norway } ; date } }"
            ]
        },
        {
            "input": "select the row whose profits ( billion ) record of all rows is 2nd maximum . the company record of this row is royal dutch shell .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; profits ( billion ) ; 2 } ; company } ; royal dutch shell }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to new jersey . the 1st minimum date record of these rows is october 5 .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; team ; new jersey } ; date ; 1 } ; october 5 }"
            ]
        },
        {
            "input": "select the row whose last aired record of all rows is 2nd minimum . the show record of this row is high rollers .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; last aired ; 2 } ; show } ; high rollers }"
            ]
        },
        {
            "input": "the sum of the hard discounters record of all rows is 5096 .",
            "output": [
                "round_eq { sum { all_rows ; hard discounters } ; 5096 }"
            ]
        },
        {
            "input": "select the rows whose winning score record fuzzily matches to - 7 . there is only one such row in the table . the tournament record of this unqiue row is us women 's open .",
            "output": [
                "and { only { filter_eq { all_rows ; winning score ; - 7 } } ; eq { hop { filter_eq { all_rows ; winning score ; - 7 } ; tournament } ; us women 's open } }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_less { all_rows ; away team score ; 10 } ; crowd ; 20000 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is netherlands ( ned ) .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; netherlands ( ned ) }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 4-0 . there is only one such row in the table . the year record of this unqiue row is 2006 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; 4-0 } } ; eq { hop { filter_eq { all_rows ; result ; 4-0 } ; year } ; 2006 } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to toronto maple leafs . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; toronto maple leafs } } ; 3 }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is -5.6 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; -5.6 }"
            ]
        },
        {
            "input": "the 1st minimum us release date record of all rows is 27 june 2006 . the title record of the row with 1st minimum us release date record is galaxy angel .",
            "output": [
                "and { eq { nth_min { all_rows ; us release date ; 1 } ; 27 june 2006 } ; eq { hop { nth_argmin { all_rows ; us release date ; 1 } ; title } ; galaxy angel } }"
            ]
        },
        {
            "input": "the average of the margin ( pts ) record of all rows is 27.25 .",
            "output": [
                "round_eq { avg { all_rows ; margin ( pts ) } ; 27.25 }"
            ]
        },
        {
            "input": "select the row whose caps record of all rows is 3rd maximum . the player record of this row is kyle beckerman .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; caps ; 3 } ; player } ; kyle beckerman }"
            ]
        },
        {
            "input": "the average of the weight ( lbs ) record of all rows is 238.05 .",
            "output": [
                "round_eq { avg { all_rows ; weight ( lbs ) } ; 238.05 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to oct . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; oct } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 199 . for the performance records of these rows , most of them fuzzily match to triple jump .",
            "output": [
                "most_eq { filter_eq { all_rows ; year ; 199 } ; performance ; triple jump }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to brent woods . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; brent woods } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose leading lady record fuzzily matches to alberta vaughn . there is only one such row in the table . the title record of this unqiue row is randy rides alone .",
            "output": [
                "and { only { filter_eq { all_rows ; leading lady ; alberta vaughn } } ; eq { hop { filter_eq { all_rows ; leading lady ; alberta vaughn } ; title } ; randy rides alone } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december 1976 . for the result records of these rows , all of them fuzzily match to w .",
            "output": [
                "all_eq { filter_eq { all_rows ; date ; december 1976 } ; result ; w }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to ellijay , georgia . take the frequency mhz record of this row . select the rows whose city of license record fuzzily matches to morrow , georgia . take the frequency mhz record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; city of license ; ellijay , georgia } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; morrow , georgia } ; frequency mhz } }"
            ]
        },
        {
            "input": "the maximum total record of all rows is 8 . the nation record of the row with superlative total record is soviet union ( urs ) . the gold record of the row with superlative total record is 3 . the silver record of the row with superlative total record is 3 .",
            "output": [
                "and { eq { max { all_rows ; total } ; 8 } ; and { eq { hop { argmax { all_rows ; total } ; nation } ; soviet union ( urs ) } ; and { eq { hop { argmax { all_rows ; total } ; gold } ; 3 } ; eq { hop { argmax { all_rows ; total } ; silver } ; 3 } } } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to greece . there is only one such row in the table . the athlete record of this unqiue row is konstadinos douvalidis .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; greece } } ; eq { hop { filter_eq { all_rows ; nationality ; greece } ; athlete } ; konstadinos douvalidis } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december 30 . take the attendance record of this row . select the rows whose date record fuzzily matches to december 26 . take the attendance record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; date ; december 30 } ; attendance } ; hop { filter_eq { all_rows ; date ; december 26 } ; attendance } }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is minimum . the institution record of this row is garden city community college .",
            "output": [
                "eq { hop { argmin { all_rows ; founded } ; institution } ; garden city community college }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is princes park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; princes park }"
            ]
        },
        {
            "input": "the average of the population ( 2010 census ) record of all rows is 68,253 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2010 census ) } ; 68,253 }"
            ]
        },
        {
            "input": "select the rows whose average record is greater than 10000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; average ; 10000 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the club record of this row is ca osasuna .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; club } ; ca osasuna }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; points ; 0 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 30 . there is only one such row in the table . the team record of this unqiue row is portuguesa .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 30 } } ; eq { hop { filter_eq { all_rows ; points ; 30 } ; team } ; portuguesa } }"
            ]
        },
        {
            "input": "select the rows whose equatorial bulge record is greater than 1000 . among these rows , select the rows whose polar diameter record is greater than 100,000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; equatorial bulge ; 1000 } ; polar diameter ; 100,000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to team lotus . take the points record of this row . select the rows whose entrant record fuzzily matches to team lotus . take the points record of this row . the first record is equal to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; entrant ; team lotus } ; points } ; hop { filter_eq { all_rows ; entrant ; team lotus } ; points } }"
            ]
        },
        {
            "input": "select the rows whose debut in europe record is equal to 1995 . select the row whose games record of these rows is maximum . the player record of this row is ra\u00e3l .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; debut in europe ; 1995 } ; games } ; player } ; ra\u00e3l }"
            ]
        },
        {
            "input": "select the rows whose no of couples record is equal to 4 . the average of the viewers ( millions ) record of these rows is 4.575 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; no of couples ; 4 } ; viewers ( millions ) } ; 4.575 }"
            ]
        },
        {
            "input": "the average of the number of powiats record of all rows is 2.5 .",
            "output": [
                "round_eq { avg { all_rows ; number of powiats } ; 2.5 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to april .",
            "output": [
                "most_eq { all_rows ; date ; april }"
            ]
        },
        {
            "input": "select the rows whose race record fuzzily matches to german grand prix . take the date record of this row . select the rows whose race record fuzzily matches to british grand prix . take the date record of this row . the first record is 15 days larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; race ; german grand prix } ; date } ; hop { filter_eq { all_rows ; race ; british grand prix } ; date } } ; 15 days }"
            ]
        },
        {
            "input": "select the rows whose code name record fuzzily matches to surfer . take the serial number record of this row . select the rows whose code name record fuzzily matches to shark . take the serial number record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; code name ; surfer } ; serial number } ; hop { filter_eq { all_rows ; code name ; shark } ; serial number } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is maximum . the player record of this row is james campbell .",
            "output": [
                "eq { hop { argmax { all_rows ; pick } ; player } ; james campbell }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 19.5 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 19.5 }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; points ; 0 }"
            ]
        },
        {
            "input": "select the rows whose affiliation record fuzzily matches to private christian . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; affiliation ; private christian } } ; 2 }"
            ]
        },
        {
            "input": "for the manufacturer records of all rows , most of them fuzzily match to chevrolet .",
            "output": [
                "most_eq { all_rows ; manufacturer ; chevrolet }"
            ]
        },
        {
            "input": "select the rows whose categor\u00eda record fuzzily matches to rock group . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; categor\u00eda ; rock group } } ; 2 }"
            ]
        },
        {
            "input": "for the ihsaa class records of all rows , all of them fuzzily match to aaa .",
            "output": [
                "all_eq { all_rows ; ihsaa class ; aaa }"
            ]
        },
        {
            "input": "select the row whose production code record of all rows is 2nd maximum . the episode record of this row is 809 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; production code ; 2 } ; episode } ; 809 }"
            ]
        },
        {
            "input": "select the rows whose td 's record is greater than or equal to 3 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; td 's ; 3 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to kevin falls . among these rows , select the rows whose directed by record fuzzily matches to alex graves . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; written by ; kevin falls } ; directed by ; alex graves } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose laps led record of all rows is maximum . the driver record of this row is sam hornish , jr .",
            "output": [
                "eq { hop { argmax { all_rows ; laps led } ; driver } ; sam hornish , jr }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to western oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to windy hill . take the crowd record of this row . the first record is 3755 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; venue ; western oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; windy hill } ; crowd } } ; 3755 }"
            ]
        },
        {
            "input": "the sum of the hotel rooms record of all rows is 18447 .",
            "output": [
                "round_eq { sum { all_rows ; hotel rooms } ; 18447 }"
            ]
        },
        {
            "input": "select the row whose rnd record of all rows is 3rd minimum . the date record of this row is 1 march .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; rnd ; 3 } ; date } ; 1 march }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to v\u00e9lez s\u00e1rsfield . take the points record of this row . select the rows whose team record fuzzily matches to newell 's old boys . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; v\u00e9lez s\u00e1rsfield } ; points } ; hop { filter_eq { all_rows ; team ; newell 's old boys } ; points } }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to new york . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; state ; new york } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose votes record of all rows is 3rd maximum . the candidate 's name record of this row is michael mackay .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; votes ; 3 } ; candidate 's name } ; michael mackay }"
            ]
        },
        {
            "input": "select the row whose withdrawal record of all rows is maximum . the irish name record of this row is fl\u00f3ir\u00edn .",
            "output": [
                "eq { hop { argmax { all_rows ; withdrawal } ; irish name } ; fl\u00f3ir\u00edn }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to retired republican hold . there is only one such row in the table . the district record of this unqiue row is minnesota3 .",
            "output": [
                "and { only { filter_eq { all_rows ; status ; retired republican hold } } ; eq { hop { filter_eq { all_rows ; status ; retired republican hold } ; district } ; minnesota3 } }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than or equal to 20,000 .",
            "output": [
                "most_greater_eq { all_rows ; crowd ; 20,000 }"
            ]
        },
        {
            "input": "select the rows whose air date record fuzzily matches to 2008 . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; air date ; 2008 } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose max processors record fuzzily matches to 1 ultrasparc t1 . select the row whose max memory record of these rows is 1st minimum . the model record of this row is t1000 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; max processors ; 1 ultrasparc t1 } ; max memory ; 1 } ; model } ; t1000 }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to the meadowlands . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; game site ; the meadowlands } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose monday to friday record fuzzily matches to monday to saturday . there is only one such row in the table . the mexico record of this unqiue row is bosnia and herzegovina .",
            "output": [
                "and { only { filter_eq { all_rows ; monday to friday ; monday to saturday } } ; eq { hop { filter_eq { all_rows ; monday to friday ; monday to saturday } ; mexico } ; bosnia and herzegovina } }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 20 . among these rows , select the rows whose draw record is equal to 2 . there is only one such row in the table . the team record of this unqiue row is wanda nowa huta .",
            "output": [
                "and { only { filter_eq { filter_less { all_rows ; points ; 20 } ; draw ; 2 } } ; eq { hop { filter_eq { filter_less { all_rows ; points ; 20 } ; draw ; 2 } ; team } ; wanda nowa huta } }"
            ]
        },
        {
            "input": "the sum of the us viewers ( million ) record of all rows is 7.9 .",
            "output": [
                "round_eq { sum { all_rows ; us viewers ( million ) } ; 7.9 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . among these rows , select the rows whose date record fuzzily matches to october . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; october } ; date ; october } } ; 5 }"
            ]
        },
        {
            "input": "the average of the 2001 - 02 record of all rows is 2907 .",
            "output": [
                "round_eq { avg { all_rows ; 2001 - 02 } ; 2907 }"
            ]
        },
        {
            "input": "for the league / division records of all rows , most of them fuzzily match to first division .",
            "output": [
                "most_eq { all_rows ; league / division ; first division }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to , . there is only one such row in the table . the date record of this unqiue row is september 12 .",
            "output": [
                "and { only { filter_eq { all_rows ; high rebounds ; , } } ; eq { hop { filter_eq { all_rows ; high rebounds ; , } ; date } ; september 12 } }"
            ]
        },
        {
            "input": "the average of the goals per match record of all rows is 1.052 .",
            "output": [
                "round_eq { avg { all_rows ; goals per match } ; 1.052 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 1st maximum . the nation record of this row is france ( fra ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 1 } ; nation } ; france ( fra ) }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to gillis wilson . take the round record of this row . select the rows whose player record fuzzily matches to lester towns . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; gillis wilson } ; round } ; hop { filter_eq { all_rows ; player ; lester towns } ; round } }"
            ]
        },
        {
            "input": "select the rows whose team 1 record fuzzily matches to kastoria . take the agg score record of this row . select the rows whose team 1 record fuzzily matches to ilisiakos . take the agg score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team 1 ; kastoria } ; agg score } ; hop { filter_eq { all_rows ; team 1 ; ilisiakos } ; agg score } }"
            ]
        },
        {
            "input": "select the rows whose asts record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; asts ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to sam graves . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to russ carnahan . take the first elected record of this row . the second record is 4 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; incumbent ; sam graves } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; russ carnahan } ; first elected } } ; -4 }"
            ]
        },
        {
            "input": "select the rows whose lost record is equal to 0 . there is only one such row in the table . the team record of this unqiue row is s\u00e3o paulo .",
            "output": [
                "and { only { filter_eq { all_rows ; lost ; 0 } } ; eq { hop { filter_eq { all_rows ; lost ; 0 } ; team } ; s\u00e3o paulo } }"
            ]
        },
        {
            "input": "select the rows whose captain ( s ) record fuzzily matches to greg bird nate myles . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; captain ( s ) ; greg bird nate myles } } ; 2 }"
            ]
        },
        {
            "input": "the average of the floors record of all rows is 35 .",
            "output": [
                "round_eq { avg { all_rows ; floors } ; 35 }"
            ]
        },
        {
            "input": "for the format records of all rows , most of them fuzzily match to cd .",
            "output": [
                "most_eq { all_rows ; format ; cd }"
            ]
        },
        {
            "input": "the sum of the 3rd place record of all rows is 3 .",
            "output": [
                "round_eq { sum { all_rows ; 3rd place } ; 3 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 62 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 62 }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to vasilis mazarakis . there is only one such row in the table . the date record of this unqiue row is 20 march 2007 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent in the final ; vasilis mazarakis } } ; eq { hop { filter_eq { all_rows ; opponent in the final ; vasilis mazarakis } ; date } ; 20 march 2007 } }"
            ]
        },
        {
            "input": "for the engine records of all rows , most of them fuzzily match to ferrari v12 .",
            "output": [
                "most_eq { all_rows ; engine ; ferrari v12 }"
            ]
        },
        {
            "input": "select the rows whose pos record fuzzily matches to dnf . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pos ; dnf } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1987 . take the points record of this row . select the rows whose year record fuzzily matches to 1995 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1987 } ; points } ; hop { filter_eq { all_rows ; year ; 1995 } ; points } }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to silvio caiozzi . the minimum year ( ceremony ) record of these rows is 1990 : ( 63rd ) .",
            "output": [
                "eq { min { filter_eq { all_rows ; director ; silvio caiozzi } ; year ( ceremony ) } ; 1990 : ( 63rd ) }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is 3rd maximum . the name record of this row is dean windass .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goals ; 3 } ; name } ; dean windass }"
            ]
        },
        {
            "input": "for the attendance records of all rows , all of them are greater than 25000 .",
            "output": [
                "all_greater { all_rows ; attendance ; 25000 }"
            ]
        },
        {
            "input": "select the rows whose opposing team record fuzzily matches to natal . there is only one such row in the table . the date record of this unqiue row is may 17 , 1972 .",
            "output": [
                "and { only { filter_eq { all_rows ; opposing team ; natal } } ; eq { hop { filter_eq { all_rows ; opposing team ; natal } ; date } ; may 17 , 1972 } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is mcg .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; mcg }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to john lewis . take the elected record of this row . select the rows whose incumbent record fuzzily matches to nathan deal . take the elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; john lewis } ; elected } ; hop { filter_eq { all_rows ; incumbent ; nathan deal } ; elected } }"
            ]
        },
        {
            "input": "select the rows whose operator record fuzzily matches to london overground . among these rows , select the rows whose platform record is equal to 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; operator ; london overground } ; platform ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose withdrawn record is equal to 1951 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; withdrawn ; 1951 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to cleveland browns . take the attendance record of this row . select the rows whose opponent record fuzzily matches to dallas cowboys . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; cleveland browns } ; attendance } ; hop { filter_eq { all_rows ; opponent ; dallas cowboys } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . the minimum date record of these rows is january 8 , 2001 .",
            "output": [
                "eq { min { filter_eq { all_rows ; surface ; clay } ; date } ; january 8 , 2001 }"
            ]
        },
        {
            "input": "select the rows whose growth rate record is less than 0 . there is only one such row in the table . the district record of this unqiue row is kolkata .",
            "output": [
                "and { only { filter_less { all_rows ; growth rate ; 0 } } ; eq { hop { filter_less { all_rows ; growth rate ; 0 } ; district } ; kolkata } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the home team record of this row is sunderland .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; home team } ; sunderland }"
            ]
        },
        {
            "input": "for the venue records of all rows , most of them fuzzily match to johannesburg .",
            "output": [
                "most_eq { all_rows ; venue ; johannesburg }"
            ]
        },
        {
            "input": "the sum of the earnings record of all rows is 206874 .",
            "output": [
                "round_eq { sum { all_rows ; earnings } ; 206874 }"
            ]
        },
        {
            "input": "the average of the aspect record of all rows is 4:3 .",
            "output": [
                "round_eq { avg { all_rows ; aspect } ; 4:3 }"
            ]
        },
        {
            "input": "select the rows whose pole position record fuzzily matches to alain prost . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pole position ; alain prost } } ; 2 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 289.5 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 289.5 }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 3 . the average of the time record of these rows is 7:30.63 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; rank ; 3 } ; time } ; 7:30.63 }"
            ]
        },
        {
            "input": "the maximum capacity record of all rows is 41040 . the team record of the row with superlative capacity record is dinamo minsk .",
            "output": [
                "and { eq { max { all_rows ; capacity } ; 41040 } ; eq { hop { argmax { all_rows ; capacity } ; team } ; dinamo minsk } }"
            ]
        },
        {
            "input": "select the rows whose name record is arbitrary . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_all { all_rows ; name } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to reno , nv . there is only one such row in the table . the athlete record of this unqiue row is gwen torrence .",
            "output": [
                "and { only { filter_eq { all_rows ; place ; reno , nv } } ; eq { hop { filter_eq { all_rows ; place ; reno , nv } ; athlete } ; gwen torrence } }"
            ]
        },
        {
            "input": "select the row whose race 2 ( pts ) record of all rows is maximum . the country record of this row is france .",
            "output": [
                "eq { hop { argmax { all_rows ; race 2 ( pts ) } ; country } ; france }"
            ]
        },
        {
            "input": "select the rows whose votes record is greater than 80 . there is only one such row in the table . the artist record of this unqiue row is sahlene .",
            "output": [
                "and { only { filter_greater { all_rows ; votes ; 80 } } ; eq { hop { filter_greater { all_rows ; votes ; 80 } ; artist } ; sahlene } }"
            ]
        },
        {
            "input": "select the rows whose high points record is greater than ( 35 ) . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; high points ; ( 35 ) } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to bong hawkins . take the season record of this row . select the rows whose name record fuzzily matches to bakari hendrix . take the season record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; bong hawkins } ; season } ; hop { filter_eq { all_rows ; name ; bakari hendrix } ; season } }"
            ]
        },
        {
            "input": "the average of the composition record of all rows is 99 .",
            "output": [
                "round_eq { avg { all_rows ; composition } ; 99 }"
            ]
        },
        {
            "input": "select the rows whose laws against homosexuality record fuzzily matches to male only . there is only one such row in the table . the country record of this unqiue row is uzbekistan .",
            "output": [
                "and { only { filter_eq { all_rows ; laws against homosexuality ; male only } } ; eq { hop { filter_eq { all_rows ; laws against homosexuality ; male only } ; country } ; uzbekistan } }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are greater than 350 .",
            "output": [
                "most_greater { all_rows ; score ; 350 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to south korea . take the bronze record of this row . select the rows whose nation record fuzzily matches to estonia . take the bronze record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; south korea } ; bronze } ; hop { filter_eq { all_rows ; nation ; estonia } ; bronze } }"
            ]
        },
        {
            "input": "select the row whose area km 2 record of all rows is maximum . the official name record of this row is salisbury .",
            "output": [
                "eq { hop { argmax { all_rows ; area km 2 } ; official name } ; salisbury }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to spain . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nation ; spain } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is river plate .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; river plate }"
            ]
        },
        {
            "input": "for the chassis records of all rows , most of them fuzzily match to dallara .",
            "output": [
                "most_eq { all_rows ; chassis ; dallara }"
            ]
        },
        {
            "input": "the sum of the viewers ( in millions ) record of all rows is 260.8 / 254.8 .",
            "output": [
                "round_eq { sum { all_rows ; viewers ( in millions ) } ; 260.8 / 254.8 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is minimum . the nominee ( s ) record of this row is jenny bicks .",
            "output": [
                "eq { hop { argmin { all_rows ; year } ; nominee ( s ) } ; jenny bicks }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to ryan sutter . take the premiered record of this row . select the rows whose winner record fuzzily matches to jesse csincsak . take the premiered record of this row . the first record is less than the second record . the premiered record of the first row is january 8 , 2003 . the premiered record of the second row is may 19 , 2008 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; winner ; ryan sutter } ; premiered } ; hop { filter_eq { all_rows ; winner ; jesse csincsak } ; premiered } } ; and { eq { hop { filter_eq { all_rows ; winner ; ryan sutter } ; premiered } ; january 8 , 2003 } ; eq { hop { filter_eq { all_rows ; winner ; jesse csincsak } ; premiered } ; may 19 , 2008 } } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is princes park .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; princes park }"
            ]
        },
        {
            "input": "select the rows whose rider record fuzzily matches to suzuki . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; rider ; suzuki } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the candidates record of this row is charles edward bennett ( d ) unopposed .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; candidates } ; charles edward bennett ( d ) unopposed }"
            ]
        },
        {
            "input": "the average of the votes record of all rows is 13004 .",
            "output": [
                "round_eq { avg { all_rows ; votes } ; 13004 }"
            ]
        },
        {
            "input": "select the rows whose partnering record fuzzily matches to neuza silva . there is only one such row in the table . the edition record of this unqiue row is 2010 fed cup europe / africa group i .",
            "output": [
                "and { only { filter_eq { all_rows ; partnering ; neuza silva } } ; eq { hop { filter_eq { all_rows ; partnering ; neuza silva } ; edition } ; 2010 fed cup europe / africa group i } }"
            ]
        },
        {
            "input": "select the rows whose pos record fuzzily matches to qb . the average of the contract record of these rows is 2 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; pos ; qb } ; contract } ; 2 }"
            ]
        },
        {
            "input": "for the party records of all rows , most of them fuzzily match to jacksonian .",
            "output": [
                "most_eq { all_rows ; party ; jacksonian }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 3rd minimum . the team record of this row is san antonio .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 3 } ; team } ; san antonio }"
            ]
        },
        {
            "input": "select the row whose multi lane record of all rows is maximum . the category wise record of this row is national highways .",
            "output": [
                "eq { hop { argmax { all_rows ; multi lane } ; category wise } ; national highways }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 3 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2009 . select the row whose points record of these rows is maximum . the club record of this row is barcelona .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; season ; 2009 } ; points } ; club } ; barcelona }"
            ]
        },
        {
            "input": "select the row whose total points record of all rows is 2nd maximum . the player record of this row is kenny sanders .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total points ; 2 } ; player } ; kenny sanders }"
            ]
        },
        {
            "input": "the maximum crowd record of all rows is 26500 . the date record of the row with superlative crowd record is 4 august 1951 .",
            "output": [
                "and { eq { max { all_rows ; crowd } ; 26500 } ; eq { hop { argmax { all_rows ; crowd } ; date } ; 4 august 1951 } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to candlestick park . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; candlestick park } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to andy cadiff . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; andy cadiff } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose average record is equal to 32 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; average ; 32 } } ; 3 }"
            ]
        },
        {
            "input": "for the standard records of all rows , most of them fuzzily match to umts hspa .",
            "output": [
                "most_eq { all_rows ; standard ; umts hspa }"
            ]
        },
        {
            "input": "for the signal power records of all rows , all of them fuzzily match to 10 kw .",
            "output": [
                "all_eq { all_rows ; signal power ; 10 kw }"
            ]
        },
        {
            "input": "select the row whose kilometer record of all rows is maximum . the number record of this row is 31 .",
            "output": [
                "eq { hop { argmax { all_rows ; kilometer } ; number } ; 31 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to gravity . among these rows , select the rows whose drainage basin ( km square ) record is equal to 0.0 . there is only one such row in the table . the location record of this unqiue row is morc\u00edn .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; type ; gravity } ; drainage basin ( km square ) ; 0.0 } } ; eq { hop { filter_eq { filter_eq { all_rows ; type ; gravity } ; drainage basin ( km square ) ; 0.0 } ; location } ; morc\u00edn } }"
            ]
        },
        {
            "input": "select the rows whose model number record fuzzily matches to atom z550 . take the tdp record of this row . select the rows whose model number record fuzzily matches to atom z510 . take the tdp record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; model number ; atom z550 } ; tdp } ; hop { filter_eq { all_rows ; model number ; atom z510 } ; tdp } }"
            ]
        },
        {
            "input": "select the row whose winner record of all rows is maximum . the episode record of this row is 2x10 .",
            "output": [
                "eq { hop { argmax { all_rows ; winner } ; episode } ; 2x10 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 138 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; 138 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose scientific name record fuzzily matches to chamaeleo calyptratus . take the length ( female ) record of this row . select the rows whose scientific name record fuzzily matches to rhampholeon spectrum . take the length ( female ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; scientific name ; chamaeleo calyptratus } ; length ( female ) } ; hop { filter_eq { all_rows ; scientific name ; rhampholeon spectrum } ; length ( female ) } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 33151 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 33151 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1983 . take the points record of this row . select the rows whose year record fuzzily matches to 1984 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1983 } ; points } ; hop { filter_eq { all_rows ; year ; 1984 } ; points } }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are less than or equal to 3 .",
            "output": [
                "most_less_eq { all_rows ; score ; 3 }"
            ]
        },
        {
            "input": "select the row whose rnd record of all rows is 1st minimum . the date record of this row is march 14 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; rnd ; 1 } ; date } ; march 14 }"
            ]
        },
        {
            "input": "select the row whose margin record of all rows is maximum . the year record of this row is 1980 .",
            "output": [
                "eq { hop { argmax { all_rows ; margin } ; year } ; 1980 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to south china . take the loss record of this row . select the rows whose team record fuzzily matches to xiangxue pharmaceutical . take the loss record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; team ; south china } ; loss } ; hop { filter_eq { all_rows ; team ; xiangxue pharmaceutical } ; loss } }"
            ]
        },
        {
            "input": "select the rows whose average record is equal to 8.0 . select the row whose total record of these rows is minimum . the player record of this row is finbarr delaney .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; average ; 8.0 } ; total } ; player } ; finbarr delaney }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to winner . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome ; winner } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is maximum . the location record of this row is minsk .",
            "output": [
                "eq { hop { argmax { all_rows ; capacity } ; location } ; minsk }"
            ]
        },
        {
            "input": "select the rows whose english title record fuzzily matches to sergey lazo . take the length record of this row . select the rows whose english title record fuzzily matches to sour grape . take the length record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; english title ; sergey lazo } ; length } ; hop { filter_eq { all_rows ; english title ; sour grape } ; length } }"
            ]
        },
        {
            "input": "for the family friendly records of all rows , most of them fuzzily match to yes .",
            "output": [
                "most_eq { all_rows ; family friendly ; yes }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is 9 april 2000 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; 9 april 2000 }"
            ]
        },
        {
            "input": "select the rows whose horse name record fuzzily matches to c p west . take the lengths behind record of this row . select the rows whose horse name record fuzzily matches to hard spun . take the lengths behind record of this row . the first record is 1\u00a01/2 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; horse name ; c p west } ; lengths behind } ; hop { filter_eq { all_rows ; horse name ; hard spun } ; lengths behind } } ; 1\u00a01/2 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 1:00.25 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 1:00.25 }"
            ]
        },
        {
            "input": "for the method records of all rows , most of them fuzzily match to tko .",
            "output": [
                "most_eq { all_rows ; method ; tko }"
            ]
        },
        {
            "input": "select the rows whose gender record fuzzily matches to m . the maximum votes record of these rows is 11542 .",
            "output": [
                "eq { max { filter_eq { all_rows ; gender ; m } ; votes } ; 11542 }"
            ]
        },
        {
            "input": "the average of the horwood record of all rows is 8 .",
            "output": [
                "round_eq { avg { all_rows ; horwood } ; 8 }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than or equal to 5000 .",
            "output": [
                "most_greater_eq { all_rows ; crowd ; 5000 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to mexico . there is only one such row in the table . the player record of this unqiue row is lorena ochoa .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; mexico } } ; eq { hop { filter_eq { all_rows ; country ; mexico } ; player } ; lorena ochoa } }"
            ]
        },
        {
            "input": "for the surface records of all rows , most of them fuzzily match to clay .",
            "output": [
                "most_eq { all_rows ; surface ; clay }"
            ]
        },
        {
            "input": "the sum of the 1st prize record of all rows is 241700 .",
            "output": [
                "round_eq { sum { all_rows ; 1st prize } ; 241700 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the opponent record of this row is pittsburgh steelers .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; opponent } ; pittsburgh steelers }"
            ]
        },
        {
            "input": "select the rows whose transfer fee record fuzzily matches to free . among these rows , select the rows whose moving from record fuzzily matches to everton . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; transfer fee ; free } ; moving from ; everton } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose car record of all rows is minimum . the driver record of this row is mike skinner .",
            "output": [
                "eq { hop { argmin { all_rows ; car } ; driver } ; mike skinner }"
            ]
        },
        {
            "input": "the sum of the laps record of all rows is 522 .",
            "output": [
                "round_eq { sum { all_rows ; laps } ; 522 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is victoria park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; victoria park }"
            ]
        },
        {
            "input": "select the rows whose fat32 record fuzzily matches to yes . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; fat32 ; yes } } ; 4 }"
            ]
        },
        {
            "input": "for the nationality records of all rows , most of them fuzzily match to french .",
            "output": [
                "most_eq { all_rows ; nationality ; french }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to detroit mercy . there is only one such row in the table . the player record of this unqiue row is joe kopicki .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; detroit mercy } } ; eq { hop { filter_eq { all_rows ; college ; detroit mercy } ; player } ; joe kopicki } }"
            ]
        },
        {
            "input": "for the court surface records of all rows , most of them fuzzily match to hard .",
            "output": [
                "most_eq { all_rows ; court surface ; hard }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to bath . take the date record of this row . select the rows whose tournament record fuzzily matches to hull . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; bath } ; date } ; hop { filter_eq { all_rows ; tournament ; hull } ; date } }"
            ]
        },
        {
            "input": "select the rows whose round record is equal to 3 . there is only one such row in the table . the opponent record of this unqiue row is ian freeman .",
            "output": [
                "and { only { filter_eq { all_rows ; round ; 3 } } ; eq { hop { filter_eq { all_rows ; round ; 3 } ; opponent } ; ian freeman } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is st kilda . the away team record of this row is melbourne .",
            "output": [
                "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; st kilda } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; melbourne } }"
            ]
        },
        {
            "input": "select the row whose winning score record of all rows is maximum . the year record of this row is 2001 .",
            "output": [
                "eq { hop { argmax { all_rows ; winning score } ; year } ; 2001 }"
            ]
        },
        {
            "input": "select the row whose goals against record of all rows is 2nd maximum . the club record of this row is baracaldo ah .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goals against ; 2 } ; club } ; baracaldo ah }"
            ]
        },
        {
            "input": "select the rows whose arena ( capacity ) record fuzzily matches to 5000 . among these rows , select the rows whose previous season record is less than or equal to 5 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less_eq { filter_eq { all_rows ; arena ( capacity ) ; 5000 } ; previous season ; 5 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose season record is less than or equal to 1958 . the average of the attendance record of these rows is 10158.5 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; season ; 1958 } ; attendance } ; 10158.5 }"
            ]
        },
        {
            "input": "select the row whose tonnage record of all rows is maximum . the name record of this row is northern eagle .",
            "output": [
                "eq { hop { argmax { all_rows ; tonnage } ; name } ; northern eagle }"
            ]
        },
        {
            "input": "for the prize records of all rows , most of them are greater than 500,000 .",
            "output": [
                "most_greater { all_rows ; prize ; 500,000 }"
            ]
        },
        {
            "input": "the sum of the total record of all rows is 2548 .",
            "output": [
                "round_eq { sum { all_rows ; total } ; 2548 }"
            ]
        },
        {
            "input": "select the rows whose fate record fuzzily matches to sunk . among these rows , select the rows whose nationality record fuzzily matches to great britain . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; fate ; sunk } ; nationality ; great britain } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the average of the to par record of these rows is 9.67 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; country ; united states } ; to par } ; 9.67 }"
            ]
        },
        {
            "input": "the 3rd maximum no of episodes record of all rows is 135 .",
            "output": [
                "eq { nth_max { all_rows ; no of episodes ; 3 } ; 135 }"
            ]
        },
        {
            "input": "the average of the length record of all rows is 55 .",
            "output": [
                "round_eq { avg { all_rows ; length } ; 55 }"
            ]
        },
        {
            "input": "select the rows whose episode record fuzzily matches to episode 5 . take the viewing figure record of this row . select the rows whose episode record fuzzily matches to episode 7 . take the viewing figure record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; episode ; episode 5 } ; viewing figure } ; hop { filter_eq { all_rows ; episode ; episode 7 } ; viewing figure } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to defensive end . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; defensive end } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the number in service record of all rows is 310 .",
            "output": [
                "round_eq { sum { all_rows ; number in service } ; 310 }"
            ]
        },
        {
            "input": "select the rows whose supercopa sudamericana 1996 record fuzzily matches to did not qualify . among these rows , select the rows whose copa conmebol 1996 record fuzzily matches to semifinals . there is only one such row in the table . the team record of this unqiue row is vasco . the copa libertadores 1996 record of this unqiue row is did not qualify .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; supercopa sudamericana 1996 ; did not qualify } ; copa conmebol 1996 ; semifinals } } ; and { eq { hop { filter_eq { filter_eq { all_rows ; supercopa sudamericana 1996 ; did not qualify } ; copa conmebol 1996 ; semifinals } ; team } ; vasco } ; eq { hop { filter_eq { filter_eq { all_rows ; supercopa sudamericana 1996 ; did not qualify } ; copa conmebol 1996 ; semifinals } ; copa libertadores 1996 } ; did not qualify } } }"
            ]
        },
        {
            "input": "select the rows whose station record fuzzily matches to kami - mio . take the distance ( km ) record of this row . select the rows whose station record fuzzily matches to funao . take the distance ( km ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; station ; kami - mio } ; distance ( km ) } ; hop { filter_eq { all_rows ; station ; funao } ; distance ( km ) } }"
            ]
        },
        {
            "input": "select the rows whose building record fuzzily matches to duke tower ( office ) . take the height record of this row . select the rows whose building record fuzzily matches to summer gardens ( residential ) . take the height record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; building ; duke tower ( office ) } ; height } ; hop { filter_eq { all_rows ; building ; summer gardens ( residential ) } ; height } }"
            ]
        },
        {
            "input": "select the rows whose reason for termination record fuzzily matches to death . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; reason for termination ; death } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to bc open . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to glen campbell - los angeles open . take the margin of victory record of this row . the first record is 3 larger than the second record . the margin of victory record of the first row is 5 strokes . the margin of victory record of the second row is 2 strokes .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } } ; 3 } ; and { eq { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; 5 strokes } ; eq { hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } ; 2 strokes } } }"
            ]
        },
        {
            "input": "select the rows whose lyricist record fuzzily matches to sameer . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; lyricist ; sameer } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to danielle evenson . there is only one such row in the table . the title record of this unqiue row is long days journey into stan .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; danielle evenson } } ; eq { hop { filter_eq { all_rows ; written by ; danielle evenson } ; title } ; long days journey into stan } }"
            ]
        },
        {
            "input": "select the row whose total viewers ( in millions ) record of all rows is maximum . the title record of this row is our fathers .",
            "output": [
                "eq { hop { argmax { all_rows ; total viewers ( in millions ) } ; title } ; our fathers }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to lebron james .",
            "output": [
                "most_eq { all_rows ; high points ; lebron james }"
            ]
        },
        {
            "input": "the average of the orangemen points record of all rows is 20.3 .",
            "output": [
                "round_eq { avg { all_rows ; orangemen points } ; 20.3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to running back . there is only one such row in the table . the player record of this unqiue row is doug goodwin .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; running back } } ; eq { hop { filter_eq { all_rows ; position ; running back } ; player } ; doug goodwin } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to cd sabadell cf . take the wins record of this row . select the rows whose club record fuzzily matches to deportivo alav\u00e9s . take the wins record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; cd sabadell cf } ; wins } ; hop { filter_eq { all_rows ; club ; deportivo alav\u00e9s } ; wins } }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to david bard . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; candidates ; david bard } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 0 . for the total records of these rows , most of them are less than 10 .",
            "output": [
                "most_less { filter_greater { all_rows ; gold ; 0 } ; total ; 10 }"
            ]
        },
        {
            "input": "select the rows whose week of record fuzzily matches to 2 october . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; week of ; 2 october } } ; 4 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to november .",
            "output": [
                "all_eq { all_rows ; date ; november }"
            ]
        },
        {
            "input": "the average of the roll record of all rows is 338.66 .",
            "output": [
                "round_eq { avg { all_rows ; roll } ; 338.66 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to china ( chn ) . take the bronze record of this row . select the rows whose nation record fuzzily matches to thailand ( tha ) . take the bronze record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; nation ; china ( chn ) } ; bronze } ; hop { filter_eq { all_rows ; nation ; thailand ( tha ) } ; bronze } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to denny , dunbarton . select the row whose laid down record of these rows is 1st minimum . the name record of this row is sutlej .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; builder ; denny , dunbarton } ; laid down ; 1 } ; name } ; sutlej }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . for the outcome records of these rows , most of them fuzzily match to runner - up .",
            "output": [
                "most_eq { filter_eq { all_rows ; surface ; clay } ; outcome ; runner - up }"
            ]
        },
        {
            "input": "select the rows whose goalkeeper record fuzzily matches to juan calatayud . take the goals record of this row . select the rows whose goalkeeper record fuzzily matches to eduardo navarro . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; goalkeeper ; juan calatayud } ; goals } ; hop { filter_eq { all_rows ; goalkeeper ; eduardo navarro } ; goals } }"
            ]
        },
        {
            "input": "the average of the age record of all rows is 23.7 .",
            "output": [
                "round_eq { avg { all_rows ; age } ; 23.7 }"
            ]
        },
        {
            "input": "select the rows whose satellite record fuzzily matches to echo 2 . take the mass ( kg ) record of this row . select the rows whose satellite record fuzzily matches to mylar balloon . take the mass ( kg ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; satellite ; echo 2 } ; mass ( kg ) } ; hop { filter_eq { all_rows ; satellite ; mylar balloon } ; mass ( kg ) } }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to yankee stadium .",
            "output": [
                "most_eq { all_rows ; location ; yankee stadium }"
            ]
        },
        {
            "input": "the sum of the runs record of all rows is 2296 .",
            "output": [
                "round_eq { sum { all_rows ; runs } ; 2296 }"
            ]
        },
        {
            "input": "select the rows whose race record fuzzily matches to flight stakes . take the date record of this row . select the rows whose race record fuzzily matches to cox plate . take the date record of this row . the second record is 21 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; race ; flight stakes } ; date } ; hop { filter_eq { all_rows ; race ; cox plate } ; date } } ; -21 }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to chris mills . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; leading scorer ; chris mills } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to yiddish . take the number record of this row . select the rows whose language record fuzzily matches to russian . take the number record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; language ; yiddish } ; number } ; hop { filter_eq { all_rows ; language ; russian } ; number } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to puerto rico . take the bronze record of this row . select the rows whose nation record fuzzily matches to barbados . take the bronze record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; puerto rico } ; bronze } ; hop { filter_eq { all_rows ; nation ; barbados } ; bronze } }"
            ]
        },
        {
            "input": "for the years records of all rows , most of them fuzzily match to 2001 - 2004 .",
            "output": [
                "most_eq { all_rows ; years ; 2001 - 2004 }"
            ]
        },
        {
            "input": "the sum of the goals record of all rows is 1158 .",
            "output": [
                "round_eq { sum { all_rows ; goals } ; 1158 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to layne beachley ( aus ) . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; winner ; layne beachley ( aus ) } }"
            ]
        },
        {
            "input": "select the rows whose office record fuzzily matches to former governor . select the row whose popular vote record of these rows is minimum . the candidate record of this row is buddy roemer .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; office ; former governor } ; popular vote } ; candidate } ; buddy roemer }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them are greater than 1980 .",
            "output": [
                "most_greater { all_rows ; date ; 1980 }"
            ]
        },
        {
            "input": "for the government records of all rows , most of them fuzzily match to cumann na ngaedheal government .",
            "output": [
                "most_eq { all_rows ; government ; cumann na ngaedheal government }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 198 .",
            "output": [
                "all_eq { all_rows ; date ; 198 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1988 . take the score record of this row . select the rows whose date record fuzzily matches to 1986 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 1988 } ; score } ; hop { filter_eq { all_rows ; date ; 1986 } ; score } }"
            ]
        },
        {
            "input": "select the row whose top - 25 record of all rows is maximum . the tournament record of this row is the open championship .",
            "output": [
                "eq { hop { argmax { all_rows ; top - 25 } ; tournament } ; the open championship }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 4th maximum . the player record of this row is alvin mckinley .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 4 } ; player } ; alvin mckinley }"
            ]
        },
        {
            "input": "the average of the candidates record of all rows is 60 .",
            "output": [
                "round_eq { avg { all_rows ; candidates } ; 60 }"
            ]
        },
        {
            "input": "select the rows whose emperor 's cup record fuzzily matches to semi - final . there is only one such row in the table . the season record of this unqiue row is 2000 .",
            "output": [
                "and { only { filter_eq { all_rows ; emperor 's cup ; semi - final } } ; eq { hop { filter_eq { all_rows ; emperor 's cup ; semi - final } ; season } ; 2000 } }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to olympic stadium . there is only one such row in the table . the date record of this unqiue row is sunday , april 4 .",
            "output": [
                "and { only { filter_eq { all_rows ; game site ; olympic stadium } } ; eq { hop { filter_eq { all_rows ; game site ; olympic stadium } ; date } ; sunday , april 4 } }"
            ]
        },
        {
            "input": "select the rows whose blank ends record is less than 10 . there is only one such row in the table . the skip record of this unqiue row is johnny frederiksen .",
            "output": [
                "and { only { filter_less { all_rows ; blank ends ; 10 } } ; eq { hop { filter_less { all_rows ; blank ends ; 10 } ; skip } ; johnny frederiksen } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is east carolina university .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; east carolina university }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to australia . there is only one such row in the table . the player record of this unqiue row is mathew goggin .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; australia } } ; eq { hop { filter_eq { all_rows ; country ; australia } ; player } ; mathew goggin } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to final . the sum of the jury votes record of these rows is 29 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; result ; final } ; jury votes } ; 29 }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner - up . among these rows , select the rows whose surface record fuzzily matches to clay . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; outcome ; runner - up } ; surface ; clay } } ; 5 }"
            ]
        },
        {
            "input": "the average of the podiums record of all rows is 48 .",
            "output": [
                "round_eq { avg { all_rows ; podiums } ; 48 }"
            ]
        },
        {
            "input": "for the draws records of all rows , most of them are greater than or equal to 5 .",
            "output": [
                "most_greater_eq { all_rows ; draws ; 5 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to italy . there is only one such row in the table . the pilot record of this unqiue row is thomas gostner .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; italy } } ; eq { hop { filter_eq { all_rows ; country ; italy } ; pilot } ; thomas gostner } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the venue record of this row is corio oval .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; venue } ; corio oval }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is maximum . the nation record of this row is france ( fra ) .",
            "output": [
                "eq { hop { argmax { all_rows ; bronze } ; nation } ; france ( fra ) }"
            ]
        },
        {
            "input": "for the number of aircraft records of all rows , most of them are greater than 40 .",
            "output": [
                "most_greater { all_rows ; number of aircraft ; 40 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . the sum of the attendance record of these rows is 142040 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; october } ; attendance } ; 142040 }"
            ]
        },
        {
            "input": "select the rows whose displacement cc record is greater than 2000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; displacement cc ; 2000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose equatorial bulge record is less than 100 . select the row whose equatorial diameter record of these rows is 1st maximum . the body record of this row is earth .",
            "output": [
                "eq { hop { nth_argmax { filter_less { all_rows ; equatorial bulge ; 100 } ; equatorial diameter ; 1 } ; body } ; earth }"
            ]
        },
        {
            "input": "select the rows whose earpads record fuzzily matches to comfort pads . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; earpads ; comfort pads } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to james wood . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; james wood } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 20 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; home team score ; 20 } }"
            ]
        },
        {
            "input": "for the league cup records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; league cup ; 0 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the opponent record of this row is 7 usc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent } ; 7 usc }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . for the outcome records of these rows , most of them fuzzily match to winner .",
            "output": [
                "most_eq { filter_eq { all_rows ; surface ; hard } ; outcome ; winner }"
            ]
        },
        {
            "input": "select the rows whose aspect record fuzzily matches to 16:9 . there is only one such row in the table . the channel record of this unqiue row is 31.1 .",
            "output": [
                "and { only { filter_eq { all_rows ; aspect ; 16:9 } } ; eq { hop { filter_eq { all_rows ; aspect ; 16:9 } ; channel } ; 31.1 } }"
            ]
        },
        {
            "input": "select the row whose us viewers ( millions ) record of all rows is maximum . the original air date record of this row is november 7 , 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( millions ) } ; original air date } ; november 7 , 2010 }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 36 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 36 }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 10 . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_less_eq { all_rows ; rank ; 10 } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose area record fuzzily matches to gore . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; area ; gore } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose 1st leg record fuzzily matches to 0-0 . there is only one such row in the table . the team 1 record of this unqiue row is s\u00e3o paulo . the team 2 record of this unqiue row is nacional .",
            "output": [
                "and { only { filter_eq { all_rows ; 1st leg ; 0-0 } } ; and { eq { hop { filter_eq { all_rows ; 1st leg ; 0-0 } ; team 1 } ; s\u00e3o paulo } ; eq { hop { filter_eq { all_rows ; 1st leg ; 0-0 } ; team 2 } ; nacional } } }"
            ]
        },
        {
            "input": "select the rows whose women 's singles record fuzzily matches to juliane schenk . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; women 's singles ; juliane schenk } } ; 3 }"
            ]
        },
        {
            "input": "the average of the sequence similarity record of all rows is 70 .",
            "output": [
                "round_eq { avg { all_rows ; sequence similarity } ; 70 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to minnesota vikings . among these rows , select the rows whose result record fuzzily matches to l . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; opponent ; minnesota vikings } ; result ; l } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; won } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is sunday , may 29 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; sunday , may 29 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to sophomore . the average of the weight record of these rows is 192.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; year ; sophomore } ; weight } ; 192.5 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to australia . there is only one such row in the table . the player record of this unqiue row is geoff ogilvy .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; australia } } ; eq { hop { filter_eq { all_rows ; country ; australia } ; player } ; geoff ogilvy } }"
            ]
        },
        {
            "input": "select the rows whose athlete record fuzzily matches to thuso mpuang . take the time record of this row . select the rows whose athlete record fuzzily matches to wallace spearmon . take the time record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; athlete ; thuso mpuang } ; time } ; hop { filter_eq { all_rows ; athlete ; wallace spearmon } ; time } }"
            ]
        },
        {
            "input": "select the rows whose make record fuzzily matches to dodge . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; make ; dodge } }"
            ]
        },
        {
            "input": "select the rows whose wins record is not equal to 0 . there is only one such row in the table . the tournament record of this unqiue row is pga championship .",
            "output": [
                "and { only { filter_not_eq { all_rows ; wins ; 0 } } ; eq { hop { filter_not_eq { all_rows ; wins ; 0 } ; tournament } ; pga championship } }"
            ]
        },
        {
            "input": "for the extra records of all rows , most of them fuzzily match to 200 m .",
            "output": [
                "most_eq { all_rows ; extra ; 200 m }"
            ]
        },
        {
            "input": "for the chassis records of all rows , most of them fuzzily match to kurtis kraft 500b .",
            "output": [
                "most_eq { all_rows ; chassis ; kurtis kraft 500b }"
            ]
        },
        {
            "input": "select the row whose to par record of all rows is 2nd maximum . the player record of this row is mark hensby .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; to par ; 2 } ; player } ; mark hensby }"
            ]
        },
        {
            "input": "select the rows whose role record fuzzily matches to guy holden . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; role ; guy holden } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose event record of all rows is 2nd maximum . the athlete record of this row is mostafa abdollahi .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; event ; 2 } ; athlete } ; mostafa abdollahi }"
            ]
        },
        {
            "input": "select the rows whose team 1 record fuzzily matches to elche . take the 2nd leg record of this row . select the rows whose team 1 record fuzzily matches to numancia . take the 2nd leg record of this row . the first record fuzzily matches to the second record . the 2nd leg record of the first row is 0 - 2 . the 2nd leg record of the second row is 0 - 2 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; team 1 ; elche } ; 2nd leg } ; hop { filter_eq { all_rows ; team 1 ; numancia } ; 2nd leg } } ; and { eq { hop { filter_eq { all_rows ; team 1 ; elche } ; 2nd leg } ; 0 - 2 } ; eq { hop { filter_eq { all_rows ; team 1 ; numancia } ; 2nd leg } ; 0 - 2 } } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to andreas kofler . take the points record of this row . select the rows whose name record fuzzily matches to tom hilde . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; andreas kofler } ; points } ; hop { filter_eq { all_rows ; name ; tom hilde } ; points } }"
            ]
        },
        {
            "input": "select the row whose birthdate record of all rows is minimum . the name record of this row is phil verchota .",
            "output": [
                "eq { hop { argmin { all_rows ; birthdate } ; name } ; phil verchota }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to sweden . there is only one such row in the table . the player record of this unqiue row is jacob markstrom .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; sweden } } ; eq { hop { filter_eq { all_rows ; nationality ; sweden } ; player } ; jacob markstrom } }"
            ]
        },
        {
            "input": "select the rows whose pole position record fuzzily matches to ayrton senna . the number of such rows is 13 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pole position ; ayrton senna } } ; 13 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the opponent record of this row is denver broncos .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; opponent } ; denver broncos }"
            ]
        },
        {
            "input": "for the played records of all rows , all of them are equal to 18 .",
            "output": [
                "all_eq { all_rows ; played ; 18 }"
            ]
        },
        {
            "input": "select the rows whose yard name record fuzzily matches to delta shipbuilding co . take the total vessels built for usmc record of this row . select the rows whose yard name record fuzzily matches to pennsylvania shipyards . take the total vessels built for usmc record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; yard name ; delta shipbuilding co } ; total vessels built for usmc } ; hop { filter_eq { all_rows ; yard name ; pennsylvania shipyards } ; total vessels built for usmc } }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to columbia . take the date record of this row . select the rows whose label record fuzzily matches to legacy recordings . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; label ; columbia } ; date } ; hop { filter_eq { all_rows ; label ; legacy recordings } ; date } }"
            ]
        },
        {
            "input": "select the row whose took office record of all rows is 4th minimum . the delegate record of this row is brian k mchale .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; took office ; 4 } ; delegate } ; brian k mchale }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2011 . there is only one such row in the table . the title of movie record of this unqiue row is already famous \u300a \u4e00\u6ce1\u800c\u7d05 \u300b .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 2011 } } ; eq { hop { filter_eq { all_rows ; year ; 2011 } ; title of movie } ; already famous \u300a \u4e00\u6ce1\u800c\u7d05 \u300b } }"
            ]
        },
        {
            "input": "select the rows whose engine name record fuzzily matches to 1.6 tdi ecomotive . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; engine name ; 1.6 tdi ecomotive } }"
            ]
        },
        {
            "input": "select the row whose pieces record of all rows is maximum . the release record of this row is 1981 .",
            "output": [
                "eq { hop { argmax { all_rows ; pieces } ; release } ; 1981 }"
            ]
        },
        {
            "input": "select the rows whose interregnum began record fuzzily matches to 20 february 1790 death of joseph ii . take the duration record of this row . select the rows whose interregnum began record fuzzily matches to 1 march 1792 death of leopold ii . take the duration record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; interregnum began ; 20 february 1790 death of joseph ii } ; duration } ; hop { filter_eq { all_rows ; interregnum began ; 1 march 1792 death of leopold ii } ; duration } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to guy norman bee . take the episode record of this row . select the rows whose directed by record fuzzily matches to james head . take the episode record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; directed by ; guy norman bee } ; episode } ; hop { filter_eq { all_rows ; directed by ; james head } ; episode } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is soviet union .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; soviet union }"
            ]
        },
        {
            "input": "select the rows whose week record is greater than or equal to 13 . the sum of the attendance record of these rows is 95,901 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; week ; 13 } ; attendance } ; 95,901 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to tim duncan .",
            "output": [
                "most_eq { all_rows ; high points ; tim duncan }"
            ]
        },
        {
            "input": "the maximum qual record of all rows is 225.496 .",
            "output": [
                "eq { max { all_rows ; qual } ; 225.496 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to usa .",
            "output": [
                "most_eq { all_rows ; location ; usa }"
            ]
        },
        {
            "input": "select the rows whose mascot record fuzzily matches to tigers . there is only one such row in the table . the school record of this unqiue row is yorktown .",
            "output": [
                "and { only { filter_eq { all_rows ; mascot ; tigers } } ; eq { hop { filter_eq { all_rows ; mascot ; tigers } ; school } ; yorktown } }"
            ]
        },
        {
            "input": "for the venue records of all rows , most of them fuzzily match to millennium stadium .",
            "output": [
                "most_eq { all_rows ; venue ; millennium stadium }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to 6 - 1 , 6 - 1 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; winner ; 6 - 1 , 6 - 1 } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to amangul mollayeva . take the ties record of this row . select the rows whose name record fuzzily matches to ayna ereshova . take the ties record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; amangul mollayeva } ; ties } ; hop { filter_eq { all_rows ; name ; ayna ereshova } ; ties } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 30 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 30 }"
            ]
        },
        {
            "input": "select the row whose distance record of all rows is 1st maximum . the race record of this row is mercedes classic .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; distance ; 1 } ; race } ; mercedes classic }"
            ]
        },
        {
            "input": "for the crowd records of all rows , all of them are greater than or equal to 8000 .",
            "output": [
                "all_greater_eq { all_rows ; crowd ; 8000 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( millions ) record of all rows is maximum . the no in series record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( millions ) } ; no in series } ; 1 }"
            ]
        },
        {
            "input": "select the row whose 1st run record of all rows is 2nd minimum . the name record of this row is donny robinson ( usa ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; 1st run ; 2 } ; name } ; donny robinson ( usa ) }"
            ]
        },
        {
            "input": "select the rows whose launched record is equal to 1958 . among these rows , select the rows whose capacity , mln tpa record fuzzily matches to 12 , 0 . there is only one such row in the table . the name record of this unqiue row is lukoil - permnefteorgsintez .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; launched ; 1958 } ; capacity , mln tpa ; 12 , 0 } } ; eq { hop { filter_eq { filter_eq { all_rows ; launched ; 1958 } ; capacity , mln tpa ; 12 , 0 } ; name } ; lukoil - permnefteorgsintez } }"
            ]
        },
        {
            "input": "the maximum highest record of all rows is 1398 . the team record of the row with superlative highest record is dumbarton .",
            "output": [
                "and { eq { max { all_rows ; highest } ; 1398 } ; eq { hop { argmax { all_rows ; highest } ; team } ; dumbarton } }"
            ]
        },
        {
            "input": "select the rows whose games record is equal to 74 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; games ; 74 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose section of atlantic city record fuzzily matches to uptown . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; section of atlantic city ; uptown } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose lead record is greater than or equal to 10 % . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; lead ; 10 % } } ; 3 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 4067 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 4067 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the nation record of this row is united states .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; nation } ; united states }"
            ]
        },
        {
            "input": "select the rows whose winning team record fuzzily matches to texas . among these rows , select the rows whose winning pitcher record fuzzily matches to chris young . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; winning team ; texas } ; winning pitcher ; chris young } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york rangers . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; new york rangers } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september 22 . take the result record of this row . select the rows whose date record fuzzily matches to november 17 . take the result record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; september 22 } ; result } ; hop { filter_eq { all_rows ; date ; november 17 } ; result } }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 10 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the wins record of this row is 2 .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; wins } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose 1st leg record fuzzily matches to 1 - 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 1st leg ; 1 - 1 } } ; 2 }"
            ]
        },
        {
            "input": "for the reason for termination records of all rows , most of them fuzzily match to death .",
            "output": [
                "most_eq { all_rows ; reason for termination ; death }"
            ]
        },
        {
            "input": "select the row whose events record of all rows is 2nd maximum . the tournament record of this row is pga championship .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; events ; 2 } ; tournament } ; pga championship }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . among these rows , select the rows whose first elected record is equal to 1974 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; party ; democratic } ; first elected ; 1974 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose al - wehdat wins record is greater than 20 . there is only one such row in the table . the tournament record of this unqiue row is jordan premier league .",
            "output": [
                "and { only { filter_greater { all_rows ; al - wehdat wins ; 20 } } ; eq { hop { filter_greater { all_rows ; al - wehdat wins ; 20 } ; tournament } ; jordan premier league } }"
            ]
        },
        {
            "input": "select the rows whose nation record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; nation } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose athlete record fuzzily matches to shawn crawford . take the result record of this row . select the rows whose athlete record fuzzily matches to kevin little . take the result record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; athlete ; shawn crawford } ; result } ; hop { filter_eq { all_rows ; athlete ; kevin little } ; result } }"
            ]
        },
        {
            "input": "select the rows whose try bonus record is equal to 1 . there is only one such row in the table . the club record of this unqiue row is cefn coed rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; try bonus ; 1 } } ; eq { hop { filter_eq { all_rows ; try bonus ; 1 } ; club } ; cefn coed rfc } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . there is only one such row in the table . the date record of this unqiue row is 3 may 1998 .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; clay } } ; eq { hop { filter_eq { all_rows ; surface ; clay } ; date } ; 3 may 1998 } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 1st maximum . the nation record of this row is venezuela .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 1 } ; nation } ; venezuela }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd maximum . the name record of this row is orangeville district secondary school .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ; 2 } ; name } ; orangeville district secondary school }"
            ]
        },
        {
            "input": "select the row whose 1st leg record of all rows is maximum . the team 1 record of this row is flamengo . the team 2 record of this row is am\u00e9rica .",
            "output": [
                "and { eq { hop { argmax { all_rows ; 1st leg } ; team 1 } ; flamengo } ; eq { hop { argmax { all_rows ; 1st leg } ; team 2 } ; am\u00e9rica } }"
            ]
        },
        {
            "input": "the average of the 1990 - 95 record of all rows is 0.27 .",
            "output": [
                "round_eq { avg { all_rows ; 1990 - 95 } ; 0.27 }"
            ]
        },
        {
            "input": "the 1st minimum date record of all rows is july 23 , 2002 .",
            "output": [
                "eq { nth_min { all_rows ; date ; 1 } ; july 23 , 2002 }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to cd . the 1st minimum date record of these rows is september 10 , 1986 . the label record of the row with 1st minimum date record is alfa records .",
            "output": [
                "and { eq { nth_min { filter_eq { all_rows ; format ; cd } ; date ; 1 } ; september 10 , 1986 } ; eq { hop { nth_argmin { filter_eq { all_rows ; format ; cd } ; date ; 1 } ; label } ; alfa records } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 158 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 158 }"
            ]
        },
        {
            "input": "select the rows whose decision record fuzzily matches to joseph . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; decision ; joseph } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose ostrich record fuzzily matches to egyptian goose . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; ostrich ; egyptian goose } }"
            ]
        },
        {
            "input": "the average of the total passengers record of all rows is 4773780 .",
            "output": [
                "round_eq { avg { all_rows ; total passengers } ; 4773780 }"
            ]
        },
        {
            "input": "for the details records of all rows , most of them fuzzily match to abandoned part of northern heights project .",
            "output": [
                "most_eq { all_rows ; details ; abandoned part of northern heights project }"
            ]
        },
        {
            "input": "select the row whose agg record of all rows is maximum . the team 1 record of this row is canon yaound\u00e9 .",
            "output": [
                "eq { hop { argmax { all_rows ; agg } ; team 1 } ; canon yaound\u00e9 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to philadelphia eagles . the average of the attendance record of these rows is 46450 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; opponent ; philadelphia eagles } ; attendance } ; 46450 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to belgium . take the total record of this row . select the rows whose country record fuzzily matches to brazil . take the total record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; country ; belgium } ; total } ; hop { filter_eq { all_rows ; country ; brazil } ; total } }"
            ]
        },
        {
            "input": "the average of the tests won by england record of all rows is 0.47 .",
            "output": [
                "round_eq { avg { all_rows ; tests won by england } ; 0.47 }"
            ]
        },
        {
            "input": "the average of the viewers ( in millions ) record of all rows is 7.76 .",
            "output": [
                "round_eq { avg { all_rows ; viewers ( in millions ) } ; 7.76 }"
            ]
        },
        {
            "input": "select the rows whose winning team record fuzzily matches to hwa 1 . take the date record of this row . select the rows whose winning team record fuzzily matches to opel team phoenix . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; winning team ; hwa 1 } ; date } ; hop { filter_eq { all_rows ; winning team ; opel team phoenix } ; date } }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to lola t100 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; chassis ; lola t100 } } ; 2 }"
            ]
        },
        {
            "input": "for the manner of departure records of all rows , most of them fuzzily match to resigned .",
            "output": [
                "most_eq { all_rows ; manner of departure ; resigned }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is december 16 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; december 16 }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to los angeles . for the attendance records of these rows , most of them are equal to 18118 .",
            "output": [
                "most_eq { filter_eq { all_rows ; home ; los angeles } ; attendance ; 18118 }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to died . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; reason for change ; died } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose march record of all rows is 12th minimum . the score record of this row is 8 - 7 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; march ; 12 } ; score } ; 8 - 7 }"
            ]
        },
        {
            "input": "select the rows whose architect record fuzzily matches to john mcarthur , jr . select the row whose height ft ( m ) record of these rows is 1st maximum . the name record of this row is philadelphia city hall .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; architect ; john mcarthur , jr } ; height ft ( m ) ; 1 } ; name } ; philadelphia city hall }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to injured . there is only one such row in the table . the week record of this unqiue row is 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; injured } } ; eq { hop { filter_eq { all_rows ; result ; injured } ; week } ; 5 } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jack snow . take the pick record of this row . select the rows whose player record fuzzily matches to lou bobich . take the pick record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; jack snow } ; pick } ; hop { filter_eq { all_rows ; player ; lou bobich } ; pick } } ; 1 }"
            ]
        },
        {
            "input": "the average of the max pressure record of all rows is 26611 .",
            "output": [
                "round_eq { avg { all_rows ; max pressure } ; 26611 }"
            ]
        },
        {
            "input": "select the row whose attendance / g record of all rows is maximum . the season record of this row is 2004 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance / g } ; season } ; 2004 }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is 2nd maximum . the city of license record of this row is lewis , kansas .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; city of license } ; lewis , kansas }"
            ]
        },
        {
            "input": "select the rows whose loco name record fuzzily matches to earl of mount edgcumbe . take the build date record of this row . select the rows whose loco name record fuzzily matches to pyramus . take the build date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; loco name ; earl of mount edgcumbe } ; build date } ; hop { filter_eq { all_rows ; loco name ; pyramus } ; build date } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1996 . take the winnings record of this row . select the rows whose year record fuzzily matches to 1998 . take the winnings record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1996 } ; winnings } ; hop { filter_eq { all_rows ; year ; 1998 } ; winnings } }"
            ]
        },
        {
            "input": "select the row whose start record of all rows is minimum . the year record of this row is 1954 .",
            "output": [
                "eq { hop { argmin { all_rows ; start } ; year } ; 1954 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october 16 , 1977 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 13 , 1977 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; october 16 , 1977 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 13 , 1977 } ; attendance } }"
            ]
        },
        {
            "input": "the maximum score record of all rows is l 83 - 74 . the date record of the row with superlative score record is february 5 .",
            "output": [
                "and { eq { max { all_rows ; score } ; l 83 - 74 } ; eq { hop { argmax { all_rows ; score } ; date } ; february 5 } }"
            ]
        },
        {
            "input": "select the rows whose sport record fuzzily matches to wrestling . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; sport ; wrestling } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . select the row whose earnings record of these rows is 2nd maximum . the player record of this row is george archer .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; country ; united states } ; earnings ; 2 } ; player } ; george archer }"
            ]
        },
        {
            "input": "select the rows whose qual 1 record is equal to - . there is only one such row in the table . the name record of this unqiue row is a j allmendinger .",
            "output": [
                "and { only { filter_eq { all_rows ; qual 1 ; - } } ; eq { hop { filter_eq { all_rows ; qual 1 ; - } ; name } ; a j allmendinger } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd minimum . the institution record of this row is philander smith college .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; enrollment ; 2 } ; institution } ; philander smith college }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to bob tway . take the year ( s ) won record of this row . select the rows whose player record fuzzily matches to phil mickelson . take the year ( s ) won record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; bob tway } ; year ( s ) won } ; hop { filter_eq { all_rows ; player ; phil mickelson } ; year ( s ) won } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to shell houston open . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to the players championship . take the margin of victory record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; shell houston open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; the players championship } ; margin of victory } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; won } } ; 8 }"
            ]
        },
        {
            "input": "the average of the notes record of all rows is 1.86 .",
            "output": [
                "round_eq { avg { all_rows ; notes } ; 1.86 }"
            ]
        },
        {
            "input": "select the rows whose rider record fuzzily matches to wattie brown . take the time record of this row . select the rows whose rider record fuzzily matches to chris swallow . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; rider ; wattie brown } ; time } ; hop { filter_eq { all_rows ; rider ; chris swallow } ; time } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the player record of this row is djibril cisse .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; player } ; djibril cisse }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 2nd minimum . the date record of this row is august 22 , 2007 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; score ; 2 } ; date } ; august 22 , 2007 }"
            ]
        },
        {
            "input": "select the rows whose wins record is greater than 4 . among these rows , select the rows whose loses record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; wins ; 4 } ; loses ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "for the prone records of all rows , most of them are less than 200 .",
            "output": [
                "most_less { all_rows ; prone ; 200 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( in millions ) record of all rows is maximum . the title record of this row is the new normal . the directed by record of this row is michael lange .",
            "output": [
                "and { eq { hop { argmax { all_rows ; us viewers ( in millions ) } ; title } ; the new normal } ; eq { hop { argmax { all_rows ; us viewers ( in millions ) } ; directed by } ; michael lange } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to mount rushmore . take the original air date record of this row . select the rows whose title record fuzzily matches to salem . take the original air date record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; mount rushmore } ; original air date } ; hop { filter_eq { all_rows ; title ; salem } ; original air date } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to rhp . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; rhp } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose number in fleet record of all rows is maximum . the chassis model record of this row is 18.280 hocl - nl . the body model record of this row is abm cb64a .",
            "output": [
                "and { eq { hop { argmax { all_rows ; number in fleet } ; chassis model } ; 18.280 hocl - nl } ; eq { hop { argmax { all_rows ; number in fleet } ; body model } ; abm cb64a } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the venue record of this row is princes park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; venue } ; princes park }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 260 . there is only one such row in the table . the name record of this unqiue row is andreas kofler .",
            "output": [
                "and { only { filter_less { all_rows ; points ; 260 } } ; eq { hop { filter_less { all_rows ; points ; 260 } ; name } ; andreas kofler } }"
            ]
        },
        {
            "input": "select the rows whose area ( km 2 ) record is less than 10000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; area ( km 2 ) ; 10000 } } ; 3 }"
            ]
        },
        {
            "input": "for the winner records of all rows , most of them fuzzily match to aus .",
            "output": [
                "most_eq { all_rows ; winner ; aus }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is minimum . the school record of this row is cloverdale .",
            "output": [
                "eq { hop { argmin { all_rows ; enrollment } ; school } ; cloverdale }"
            ]
        },
        {
            "input": "select the rows whose season record is greater than or equal to 1973 . the sum of the won record of these rows is 77 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; season ; 1973 } ; won } ; 77 }"
            ]
        },
        {
            "input": "select the rows whose place ( result ) record fuzzily matches to 1st runner - up . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; place ( result ) ; 1st runner - up } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to donald p bellisario . there is only one such row in the table . the title record of this unqiue row is we the people .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; donald p bellisario } } ; eq { hop { filter_eq { all_rows ; written by ; donald p bellisario } ; title } ; we the people } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to buffalo sabres . select the row whose game record of these rows is 2nd minimum . the november record of this row is 22 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; opponent ; buffalo sabres } ; game ; 2 } ; november } ; 22 }"
            ]
        },
        {
            "input": "select the rows whose vacator record fuzzily matches to william f norrell ( d ) . take the reason for change record of this row . select the rows whose vacator record fuzzily matches to walter m mumma ( r ) . take the reason for change record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; vacator ; william f norrell ( d ) } ; reason for change } ; hop { filter_eq { all_rows ; vacator ; walter m mumma ( r ) } ; reason for change } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the opponent record of this row is philadelphia eagles .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; opponent } ; philadelphia eagles }"
            ]
        },
        {
            "input": "for the original air date records of all rows , most of them fuzzily match to 2007 .",
            "output": [
                "most_eq { all_rows ; original air date ; 2007 }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 90 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; points ; 90 } }"
            ]
        },
        {
            "input": "select the row whose mintage record of all rows is maximum . the theme record of this row is steam buggy .",
            "output": [
                "eq { hop { argmax { all_rows ; mintage } ; theme } ; steam buggy }"
            ]
        },
        {
            "input": "the average of the elevation ( m ) record of all rows is 2069.16 .",
            "output": [
                "round_eq { avg { all_rows ; elevation ( m ) } ; 2069.16 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to viscount . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; title ; viscount } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose win % record of all rows is 1st maximum . the opposition record of this row is pune warriors india .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; win % ; 1 } ; opposition } ; pune warriors india }"
            ]
        },
        {
            "input": "select the rows whose event record is arbitrary . the number of such rows is 14 .",
            "output": [
                "eq { count { filter_all { all_rows ; event } } ; 14 }"
            ]
        },
        {
            "input": "select the rows whose industry record fuzzily matches to oil and gas . the sum of the profits ( billion ) record of these rows is 151.9 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; industry ; oil and gas } ; profits ( billion ) } ; 151.9 }"
            ]
        },
        {
            "input": "select the rows whose game record fuzzily matches to 69 . take the score record of this row . select the rows whose game record fuzzily matches to 66 . take the score record of this row . the first record is greater than the second record . the opponent record of the first row is boston bruins . the opponent record of the second row is boston bruins .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; game ; 69 } ; score } ; hop { filter_eq { all_rows ; game ; 66 } ; score } } ; and { eq { hop { filter_eq { all_rows ; game ; 69 } ; opponent } ; boston bruins } ; eq { hop { filter_eq { all_rows ; game ; 66 } ; opponent } ; boston bruins } } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to detroit lions . take the date record of this row . select the rows whose opponent record fuzzily matches to los angeles raiders . take the date record of this row . the second record is 7 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; opponent ; detroit lions } ; date } ; hop { filter_eq { all_rows ; opponent ; los angeles raiders } ; date } } ; -7 days }"
            ]
        },
        {
            "input": "select the rows whose time record fuzzily matches to 12:00 pm . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time ; 12:00 pm } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose season record is arbitrary . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_all { all_rows ; season } } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to erik darnell . take the car record of this row . select the rows whose driver record fuzzily matches to bobby east . take the car record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; driver ; erik darnell } ; car } ; hop { filter_eq { all_rows ; driver ; bobby east } ; car } }"
            ]
        },
        {
            "input": "the average of the lwat record of all rows is 26 .",
            "output": [
                "round_eq { avg { all_rows ; lwat } ; 26 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to t2 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; place ; t2 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose partnerships record fuzzily matches to younis khan / shoaib malik . take the runs ( balls ) record of this row . select the rows whose partnerships record fuzzily matches to gautam gambhir / virender sehwag . take the runs ( balls ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; partnerships ; younis khan / shoaib malik } ; runs ( balls ) } ; hop { filter_eq { all_rows ; partnerships ; gautam gambhir / virender sehwag } ; runs ( balls ) } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to ch greenblatt & william reiss . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; ch greenblatt & william reiss } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose money record is greater than 100000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; money ; 100000 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose episode number record of all rows is 1st minimum . the air date record of this row is 5 april 2010 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; episode number ; 1 } ; air date } ; 5 april 2010 }"
            ]
        },
        {
            "input": "select the row whose virtual record of all rows is maximum . the call sign record of this row is kndx .",
            "output": [
                "eq { hop { argmax { all_rows ; virtual } ; call sign } ; kndx }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than or equal to 40000 .",
            "output": [
                "most_greater_eq { all_rows ; attendance ; 40000 }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to al harrington . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; al harrington } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose main venue record fuzzily matches to dover park . there is only one such row in the table . the event name record of this unqiue row is dieppe kite international .",
            "output": [
                "and { only { filter_eq { all_rows ; main venue ; dover park } } ; eq { hop { filter_eq { all_rows ; main venue ; dover park } ; event name } ; dieppe kite international } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd minimum . the date record of this row is december 22 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; attendance ; 2 } ; date } ; december 22 }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to quiksilver pro . among these rows , select the rows whose country record fuzzily matches to australia . there is only one such row in the table .",
            "output": [
                "only { filter_eq { filter_eq { all_rows ; event ; quiksilver pro } ; country ; australia } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to masters tournament . take the top - 5 record of this row . select the rows whose tournament record fuzzily matches to us open . take the top - 5 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 5 } ; hop { filter_eq { all_rows ; tournament ; us open } ; top - 5 } }"
            ]
        },
        {
            "input": "for the tires records of all rows , most of them fuzzily match to goodyear .",
            "output": [
                "most_eq { all_rows ; tires ; goodyear }"
            ]
        },
        {
            "input": "select the rows whose 2008 club record fuzzily matches to army . there is only one such row in the table . the name record of this unqiue row is guo peng .",
            "output": [
                "and { only { filter_eq { all_rows ; 2008 club ; army } } ; eq { hop { filter_eq { all_rows ; 2008 club ; army } ; name } ; guo peng } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 84 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 84 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is windy hill .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; windy hill }"
            ]
        },
        {
            "input": "select the rows whose launched record fuzzily matches to november 1942 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; launched ; november 1942 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose opposition record fuzzily matches to pune warriors india . take the win % record of this row . select the rows whose opposition record fuzzily matches to kochi tuskers kerala . take the win % record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposition ; pune warriors india } ; win % } ; hop { filter_eq { all_rows ; opposition ; kochi tuskers kerala } ; win % } }"
            ]
        },
        {
            "input": "select the rows whose month record fuzzily matches to april . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; month ; april } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the game record of this row is 6 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; game } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to kj choi . take the reset points record of this row . select the rows whose player record fuzzily matches to charles howell iii . take the reset points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; kj choi } ; reset points } ; hop { filter_eq { all_rows ; player ; charles howell iii } ; reset points } }"
            ]
        },
        {
            "input": "select the rows whose callsign record fuzzily matches to dyjr - fm . take the frequency record of this row . select the rows whose callsign record fuzzily matches to dwdj - fm . take the frequency record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; callsign ; dyjr - fm } ; frequency } ; hop { filter_eq { all_rows ; callsign ; dwdj - fm } ; frequency } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to chicago bears . select the row whose date record of these rows is 2nd minimum . the attendance record of this row is 47475 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; opponent ; chicago bears } ; date ; 2 } ; attendance } ; 47475 }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them fuzzily match to guard .",
            "output": [
                "most_eq { all_rows ; position ; guard }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is olympiacos cfp .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; olympiacos cfp }"
            ]
        },
        {
            "input": "select the rows whose cores record is equal to 6 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; cores ; 6 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is maximum . the date record of this row is 7 september 2005 .",
            "output": [
                "eq { hop { argmax { all_rows ; date } ; date } ; 7 september 2005 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose result record fuzzily matches to l . there is only one such row in the table . the opponent record of this unqiue row is philadelphia eagles .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; date ; december } ; result ; l } } ; eq { hop { filter_eq { filter_eq { all_rows ; date ; december } ; result ; l } ; opponent } ; philadelphia eagles } }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is maximum . the home venue record of this row is gwangju world cup stadium .",
            "output": [
                "eq { hop { argmax { all_rows ; capacity } ; home venue } ; gwangju world cup stadium }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to best newcomer . there is only one such row in the table . the year record of this unqiue row is 2008 . the film or series record of this unqiue row is eastenders .",
            "output": [
                "and { only { filter_eq { all_rows ; category ; best newcomer } } ; and { eq { hop { filter_eq { all_rows ; category ; best newcomer } ; year } ; 2008 } ; eq { hop { filter_eq { all_rows ; category ; best newcomer } ; film or series } ; eastenders } } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to spain . there is only one such row in the table . the player record of this unqiue row is jos\u00e9 mar\u00eda olaz\u00e1bal .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; spain } } ; eq { hop { filter_eq { all_rows ; country ; spain } ; player } ; jos\u00e9 mar\u00eda olaz\u00e1bal } }"
            ]
        },
        {
            "input": "the average of the faces record of all rows is 66 .",
            "output": [
                "round_eq { avg { all_rows ; faces } ; 66 }"
            ]
        },
        {
            "input": "for the run time records of all rows , most of them are greater than 4:00 .",
            "output": [
                "most_greater { all_rows ; run time ; 4:00 }"
            ]
        },
        {
            "input": "select the row whose no record of all rows is 3rd maximum . the player record of this row is terry dehere .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; no ; 3 } ; player } ; terry dehere }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to european zone . select the row whose year record of these rows is minimum . the score record of this row is 1 - 4 .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; competition ; european zone } ; year } ; score } ; 1 - 4 }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is minimum . the pilot record of this row is mario kiessling .",
            "output": [
                "eq { hop { argmin { all_rows ; position } ; pilot } ; mario kiessling }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to dean holland . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; dean holland } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose region 2 record fuzzily matches to 2004 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; region 2 ; 2004 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose call sign record fuzzily matches to w269ax . take the frequency mhz record of this row . select the rows whose call sign record fuzzily matches to w230av . take the frequency mhz record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; call sign ; w269ax } ; frequency mhz } ; hop { filter_eq { all_rows ; call sign ; w230av } ; frequency mhz } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; w } } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose money record is greater than 1999 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; country ; united states } ; money ; 1999 } } ; 3 }"
            ]
        },
        {
            "input": "for the aspect records of all rows , all of them fuzzily match to 4:3 .",
            "output": [
                "all_eq { all_rows ; aspect ; 4:3 }"
            ]
        },
        {
            "input": "select the rows whose no in series record is arbitrary . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_all { all_rows ; no in series } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( million ) record is less than 1.0 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_less { all_rows ; us viewers ( million ) ; 1.0 } } ; 5 }"
            ]
        },
        {
            "input": "the sum of the inhabitants record of all rows is 521,203 .",
            "output": [
                "round_eq { sum { all_rows ; inhabitants } ; 521,203 }"
            ]
        },
        {
            "input": "select the rows whose 2011 record fuzzily matches to 2r . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2011 ; 2r } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the number of cars record of all rows is 63 .",
            "output": [
                "round_eq { sum { all_rows ; number of cars } ; 63 }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to lola . there is only one such row in the table . the year record of this unqiue row is 1993 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; lola } } ; eq { hop { filter_eq { all_rows ; chassis ; lola } ; year } ; 1993 } }"
            ]
        },
        {
            "input": "for the party records of all rows , most of them fuzzily match to democratic .",
            "output": [
                "most_eq { all_rows ; party ; democratic }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is southern university at new orleans .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; southern university at new orleans }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 19 november 1997 . take the score record of this row . select the rows whose date record fuzzily matches to 19 november 2003 . take the score record of this row . the first record is greater than the second record . the score record of the first row is 1 - 0 . the score record of the second row is 0 - 3 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } } ; and { eq { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; 1 - 0 } ; eq { hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } ; 0 - 3 } } }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is 2.86 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; 2.86 }"
            ]
        },
        {
            "input": "select the rows whose premier date record fuzzily matches to 2004 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; premier date ; 2004 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is tom barrett .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; tom barrett }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 17 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; points ; 17 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to china . for the status records of these rows , all of them fuzzily match to valid .",
            "output": [
                "all_eq { filter_eq { all_rows ; location ; china } ; status ; valid }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to usa . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; usa } } ; 2 }"
            ]
        },
        {
            "input": "for the clubs involved records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; clubs involved ; 10 }"
            ]
        },
        {
            "input": "select the row whose year erected record of all rows is 3rd minimum . the statue record of this row is benito juarez .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year erected ; 3 } ; statue } ; benito juarez }"
            ]
        },
        {
            "input": "the average of the height ( m ) record of all rows is 2.01 .",
            "output": [
                "round_eq { avg { all_rows ; height ( m ) } ; 2.01 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 3rd minimum . the athlete record of this row is gabriella bascelli .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 3 } ; athlete } ; gabriella bascelli }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to carlton . take the home team score record of this row . select the rows whose home team record fuzzily matches to footscray . take the home team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; carlton } ; home team score } ; hop { filter_eq { all_rows ; home team ; footscray } ; home team score } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to final . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; final } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose overall record of all rows is maximum . the name record of this row is sean renfree .",
            "output": [
                "eq { hop { argmax { all_rows ; overall } ; name } ; sean renfree }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to minsk . take the capacity record of this row . select the rows whose location record fuzzily matches to lida . take the capacity record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; location ; minsk } ; capacity } ; hop { filter_eq { all_rows ; location ; lida } ; capacity } }"
            ]
        },
        {
            "input": "select the rows whose a score record is greater than 7 . among these rows , select the rows whose b score record is less than 9 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; a score ; 7 } ; b score ; 9 } } ; 1 }"
            ]
        },
        {
            "input": "for the engine records of all rows , most of them fuzzily match to bmw straight - 4 .",
            "output": [
                "most_eq { all_rows ; engine ; bmw straight - 4 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to wide receiver . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; wide receiver } } ; 2 }"
            ]
        },
        {
            "input": "for the nba draft records of all rows , most of them fuzzily match to 1st round .",
            "output": [
                "most_eq { all_rows ; nba draft ; 1st round }"
            ]
        },
        {
            "input": "for the away team score records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; away team score ; 10 }"
            ]
        },
        {
            "input": "select the rows whose ties record is equal to 3 . there is only one such row in the table . the season record of this unqiue row is 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; ties ; 3 } } ; eq { hop { filter_eq { all_rows ; ties ; 3 } ; season } ; 2008 } }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 39 . there is only one such row in the table . the year record of this unqiue row is 1949 .",
            "output": [
                "and { only { filter_eq { all_rows ; laps ; 39 } } ; eq { hop { filter_eq { all_rows ; laps ; 39 } ; year } ; 1949 } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is buffalo bills .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; buffalo bills }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to north dakota . there is only one such row in the table . the player record of this unqiue row is tim prinsen .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; north dakota } } ; eq { hop { filter_eq { all_rows ; college ; north dakota } ; player } ; tim prinsen } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the song record of this row is are you sure .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; song } ; are you sure }"
            ]
        },
        {
            "input": "select the row whose first - team goals record of all rows is maximum . the player record of this row is gareth barry .",
            "output": [
                "eq { hop { argmax { all_rows ; first - team goals } ; player } ; gareth barry }"
            ]
        },
        {
            "input": "for the method records of all rows , most of them fuzzily match to decision .",
            "output": [
                "most_eq { all_rows ; method ; decision }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is minimum . the date record of this row is 17 september 1997 .",
            "output": [
                "eq { hop { argmin { all_rows ; attendance } ; date } ; 17 september 1997 }"
            ]
        },
        {
            "input": "the sum of the scored record of all rows is 28 .",
            "output": [
                "round_eq { sum { all_rows ; scored } ; 28 }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to % . there is only one such row in the table . the district record of this unqiue row is arkansas 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; candidates ; % } } ; eq { hop { filter_eq { all_rows ; candidates ; % } ; district } ; arkansas 5 } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to defense . the 4th minimum round record of these rows is 4 . the player record of the row with 4th minimum round record is dave hynek .",
            "output": [
                "and { eq { nth_min { filter_eq { all_rows ; position ; defense } ; round ; 4 } ; 4 } ; eq { hop { nth_argmin { filter_eq { all_rows ; position ; defense } ; round ; 4 } ; player } ; dave hynek } }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is maximum . the title record of this row is baby not on board .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( million ) } ; title } ; baby not on board }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 2270 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 2270 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to new orleans arena . the sum of the location attendance record of these rows is 117747 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; location attendance ; new orleans arena } ; location attendance } ; 117747 }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to chris bosh . the average of the high points record of these rows is 25.57 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high points ; chris bosh } ; high points } ; 25.57 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to nominee . there is only one such row in the table . the film title used in nomination record of this unqiue row is before the rain .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; nominee } } ; eq { hop { filter_eq { all_rows ; result ; nominee } ; film title used in nomination } ; before the rain } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose team record fuzzily matches to memphis . there is only one such row in the table . the date record of this unqiue row is january 2 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } ; date } ; january 2 } }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are less than 2000 .",
            "output": [
                "most_less { all_rows ; first elected ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose building record fuzzily matches to titanium la portada . take the number of floors record of this row . select the rows whose building record fuzzily matches to torre mall center . take the number of floors record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; building ; titanium la portada } ; number of floors } ; hop { filter_eq { all_rows ; building ; torre mall center } ; number of floors } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 3rd maximum . the name record of this row is anatoly polyakov .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; time ; 3 } ; name } ; anatoly polyakov }"
            ]
        },
        {
            "input": "select the row whose took office record of all rows is maximum . the delegate record of this row is nina r harper .",
            "output": [
                "eq { hop { argmax { all_rows ; took office } ; delegate } ; nina r harper }"
            ]
        },
        {
            "input": "the maximum score ( l ) = score in legs , ( s ) = score in sets record of all rows is 11 - 5 ( l ) .",
            "output": [
                "eq { max { all_rows ; score ( l )"
            ]
        },
        {
            "input": "select the row whose apogee record of all rows is maximum . the mission record of this row is maxus 1b .",
            "output": [
                "eq { hop { argmax { all_rows ; apogee } ; mission } ; maxus 1b }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to florida . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; florida } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 100600 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 100600 }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is 1st maximum . the nation record of this row is france .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; silver ; 1 } ; nation } ; france }"
            ]
        },
        {
            "input": "for the yvert records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; yvert ; 0 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 52,519.93 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 52,519.93 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to pittsburgh . there is only one such row in the table . the player record of this unqiue row is marty schottenheimer .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; pittsburgh } } ; eq { hop { filter_eq { all_rows ; college ; pittsburgh } ; player } ; marty schottenheimer } }"
            ]
        },
        {
            "input": "for the chassis records of all rows , all of them fuzzily match to dallara .",
            "output": [
                "all_eq { all_rows ; chassis ; dallara }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is minimum . the home record of this row is ny islanders .",
            "output": [
                "eq { hop { argmin { all_rows ; attendance } ; home } ; ny islanders }"
            ]
        },
        {
            "input": "select the rows whose first broadcast record fuzzily matches to september 2013 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first broadcast ; september 2013 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose to par record of all rows is maximum . the player record of this row is tiger woods .",
            "output": [
                "eq { hop { argmax { all_rows ; to par } ; player } ; tiger woods }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october 31 . take the score record of this row . select the rows whose date record fuzzily matches to october 29 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; october 31 } ; score } ; hop { filter_eq { all_rows ; date ; october 29 } ; score } }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to ny rangers . there is only one such row in the table . the date record of this unqiue row is december 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; home ; ny rangers } } ; eq { hop { filter_eq { all_rows ; home ; ny rangers } ; date } ; december 1 } }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is 3rd maximum . the english title record of this row is the wind journeys .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ( ceremony ) ; 3 } ; english title } ; the wind journeys }"
            ]
        },
        {
            "input": "select the row whose points 1 record of all rows is maximum . the team record of this row is colne dynamoes .",
            "output": [
                "eq { hop { argmax { all_rows ; points 1 } ; team } ; colne dynamoes }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to liverpool . take the result record of this row . select the rows whose opponent record fuzzily matches to chelsea . take the result record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; liverpool } ; result } ; hop { filter_eq { all_rows ; opponent ; chelsea } ; result } }"
            ]
        },
        {
            "input": "select the row whose current streak record of all rows is 2nd maximum . the missouri vs record of this row is drake .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; current streak ; 2 } ; missouri vs } ; drake }"
            ]
        },
        {
            "input": "select the rows whose mens singles record fuzzily matches to andrew smith . there is only one such row in the table . the year record of this unqiue row is 2006 .",
            "output": [
                "and { only { filter_eq { all_rows ; mens singles ; andrew smith } } ; eq { hop { filter_eq { all_rows ; mens singles ; andrew smith } ; year } ; 2006 } }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 7 . there is only one such row in the table . the nation record of this unqiue row is brazil ( bra ) .",
            "output": [
                "and { only { filter_eq { all_rows ; gold ; 7 } } ; eq { hop { filter_eq { all_rows ; gold ; 7 } ; nation } ; brazil ( bra ) } }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is maximum . the player record of this row is jos\u00e9 luis molt\u00f3 .",
            "output": [
                "eq { hop { argmax { all_rows ; height } ; player } ; jos\u00e9 luis molt\u00f3 }"
            ]
        },
        {
            "input": "select the rows whose gold record fuzzily matches to 1 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gold ; 1 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose rank record is arbitrary . the number of such rows is 15 .",
            "output": [
                "eq { count { filter_all { all_rows ; rank } } ; 15 }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is 2nd maximum . the nationality record of this row is ireland .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goals ; 2 } ; nationality } ; ireland }"
            ]
        },
        {
            "input": "the average of the wheels record of all rows is 120 .",
            "output": [
                "round_eq { avg { all_rows ; wheels } ; 120 }"
            ]
        },
        {
            "input": "select the row whose tonnes record of all rows is maximum . the airport name record of this row is memphis international airport .",
            "output": [
                "eq { hop { argmax { all_rows ; tonnes } ; airport name } ; memphis international airport }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to penn state . there is only one such row in the table . the player record of this unqiue row is john amaechi .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; penn state } } ; eq { hop { filter_eq { all_rows ; school / club team ; penn state } ; player } ; john amaechi } }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to c1 . there is only one such row in the table . the year record of this unqiue row is 1992 .",
            "output": [
                "and { only { filter_eq { all_rows ; class ; c1 } } ; eq { hop { filter_eq { all_rows ; class ; c1 } ; year } ; 1992 } }"
            ]
        },
        {
            "input": "the average of the profit ( mil ) record of all rows is 121.66 .",
            "output": [
                "round_eq { avg { all_rows ; profit ( mil ) } ; 121.66 }"
            ]
        },
        {
            "input": "select the rows whose team ( league ) record fuzzily matches to lake superior state university ( ncaa ) . there is only one such row in the table . the player record of this unqiue row is paul constantin .",
            "output": [
                "and { only { filter_eq { all_rows ; team ( league ) ; lake superior state university ( ncaa ) } } ; eq { hop { filter_eq { all_rows ; team ( league ) ; lake superior state university ( ncaa ) } ; player } ; paul constantin } }"
            ]
        },
        {
            "input": "the maximum score record of all rows is 8 - 0 .",
            "output": [
                "eq { max { all_rows ; score } ; 8 - 0 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is mel watt .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; mel watt }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to brm p201 . take the year record of this row . select the rows whose chassis record fuzzily matches to hill gh1 . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; chassis ; brm p201 } ; year } ; hop { filter_eq { all_rows ; chassis ; hill gh1 } ; year } }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is 2nd maximum . the official name record of this row is hillsborough .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ; 2 } ; official name } ; hillsborough }"
            ]
        },
        {
            "input": "the average of the rank record of all rows is 4.89 .",
            "output": [
                "round_eq { avg { all_rows ; rank } ; 4.89 }"
            ]
        },
        {
            "input": "select the rows whose wins record is greater than 1 . among these rows , select the rows whose country record fuzzily matches to united states . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; wins ; 1 } ; country ; united states } } ; 3 }"
            ]
        },
        {
            "input": "the average of the catches record of all rows is 3.125 .",
            "output": [
                "round_eq { avg { all_rows ; catches } ; 3.125 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to world cup qualification . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; world cup qualification } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to novi v8 . there is only one such row in the table . the year record of this unqiue row is 1956 .",
            "output": [
                "and { only { filter_eq { all_rows ; engine ; novi v8 } } ; eq { hop { filter_eq { all_rows ; engine ; novi v8 } ; year } ; 1956 } }"
            ]
        },
        {
            "input": "select the rows whose rank points record is equal to 8 . among these rows , select the rows whose total record is equal to 17 . there is only one such row in the table . the shooter record of this unqiue row is iulian raicea ( rou ) .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; rank points ; 8 } ; total ; 17 } } ; eq { hop { filter_eq { filter_eq { all_rows ; rank points ; 8 } ; total ; 17 } ; shooter } ; iulian raicea ( rou ) } }"
            ]
        },
        {
            "input": "select the row whose dcsf number record of all rows is maximum . the name record of this row is galley hill .",
            "output": [
                "eq { hop { argmax { all_rows ; dcsf number } ; name } ; galley hill }"
            ]
        },
        {
            "input": "select the rows whose length record is greater than 4:00 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; length ; 4:00 } } ; 3 }"
            ]
        },
        {
            "input": "for the category records of all rows , most of them fuzzily match to best actress in a musical .",
            "output": [
                "most_eq { all_rows ; category ; best actress in a musical }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to dominican republic . take the asians record of this row . select the rows whose country record fuzzily matches to costa rica . take the asians record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; country ; dominican republic } ; asians } ; hop { filter_eq { all_rows ; country ; costa rica } ; asians } }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is 2nd minimum . the goalkeeper record of this row is rub\u00e9n mart\u00ednez .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; average ; 2 } ; goalkeeper } ; rub\u00e9n mart\u00ednez }"
            ]
        },
        {
            "input": "the sum of the annual payroll ( 1000 ) record of all rows is 3,521,267,581 .",
            "output": [
                "round_eq { sum { all_rows ; annual payroll ( 1000 ) } ; 3,521,267,581 }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are less than 20000 .",
            "output": [
                "most_less { all_rows ; crowd ; 20000 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the location record of this row is plainview .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; location } ; plainview }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is punt road oval .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; punt road oval }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to l . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; l } } ; 8 }"
            ]
        },
        {
            "input": "select the row whose launch date record of all rows is 2nd maximum . the name record of this row is corot .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; launch date ; 2 } ; name } ; corot }"
            ]
        },
        {
            "input": "for the original release records of all rows , most of them fuzzily match to 196 .",
            "output": [
                "most_eq { all_rows ; original release ; 196 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 4 . among these rows , select the rows whose venue record fuzzily matches to brunswick street oval . there is only one such row in the table . the home team record of this unqiue row is fitzroy .",
            "output": [
                "and { only { filter_eq { filter_greater { all_rows ; home team score ; 4 } ; venue ; brunswick street oval } } ; eq { hop { filter_eq { filter_greater { all_rows ; home team score ; 4 } ; venue ; brunswick street oval } ; home team } ; fitzroy } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 100 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ; 100 } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose catches record of all rows is 2nd maximum . the player record of this row is adam gilchrist .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; catches ; 2 } ; player } ; adam gilchrist }"
            ]
        },
        {
            "input": "select the row whose position in 1992 record of all rows is minimum . the team record of this row is dinamo minsk .",
            "output": [
                "eq { hop { argmin { all_rows ; position in 1992 } ; team } ; dinamo minsk }"
            ]
        },
        {
            "input": "the average of the high points record of all rows is 25 .",
            "output": [
                "round_eq { avg { all_rows ; high points } ; 25 }"
            ]
        },
        {
            "input": "select the row whose age at appointment record of all rows is maximum . the romanised name record of this row is elsie leung oi - see .",
            "output": [
                "eq { hop { argmax { all_rows ; age at appointment } ; romanised name } ; elsie leung oi - see }"
            ]
        },
        {
            "input": "the average of the result record of all rows is 26 .",
            "output": [
                "round_eq { avg { all_rows ; result } ; 26 }"
            ]
        },
        {
            "input": "select the rows whose location / attendance record fuzzily matches to ford center . the minimum date record of these rows is nov 1 .",
            "output": [
                "eq { min { filter_eq { all_rows ; location / attendance ; ford center } ; date } ; nov 1 }"
            ]
        },
        {
            "input": "for the country of origin records of all rows , most of them fuzzily match to philippines .",
            "output": [
                "most_eq { all_rows ; country of origin ; philippines }"
            ]
        },
        {
            "input": "select the rows whose played record is equal to 27 . the maximum position record of these rows is 12th . the competition record of the row with superlative position record is super league xiv .",
            "output": [
                "and { eq { max { filter_eq { all_rows ; played ; 27 } ; position } ; 12th } ; eq { hop { argmax { filter_eq { all_rows ; played ; 27 } ; position } ; competition } ; super league xiv } }"
            ]
        },
        {
            "input": "select the rows whose date record is equal to - . there is only one such row in the table . the week record of this unqiue row is 10 .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; - } } ; eq { hop { filter_eq { all_rows ; date ; - } ; week } ; 10 } }"
            ]
        },
        {
            "input": "for the director records of all rows , all of them fuzzily match to robert alvarez .",
            "output": [
                "all_eq { all_rows ; director ; robert alvarez }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the player record of this row is andy kaufmann .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; player } ; andy kaufmann }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . there is only one such row in the table . the nominee record of this unqiue row is daniel day - lewis .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; won } } ; eq { hop { filter_eq { all_rows ; result ; won } ; nominee } ; daniel day - lewis } }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is germany .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; germany }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is september 25 , 1960 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; september 25 , 1960 }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 100 . there is only one such row in the table . the artist record of this unqiue row is giorgos gavriel .",
            "output": [
                "and { only { filter_less { all_rows ; points ; 100 } } ; eq { hop { filter_less { all_rows ; points ; 100 } ; artist } ; giorgos gavriel } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to australian open . take the 2011 record of this row . select the rows whose tournament record fuzzily matches to australian open . take the 2011 record of this row . the first record fuzzily matches to the second record . the 2011 record of the first row is qf . the 2011 record of the second row is qf .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; tournament ; australian open } ; 2011 } ; hop { filter_eq { all_rows ; tournament ; australian open } ; 2011 } } ; and { eq { hop { filter_eq { all_rows ; tournament ; australian open } ; 2011 } ; qf } ; eq { hop { filter_eq { all_rows ; tournament ; australian open } ; 2011 } ; qf } } }"
            ]
        },
        {
            "input": "select the row whose no in season record of all rows is 1st minimum . the title record of this row is grampires ( part 1 ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; no in season ; 1 } ; title } ; grampires ( part 1 ) }"
            ]
        },
        {
            "input": "select the row whose year joined record of all rows is 1st maximum . the school record of this row is fishers .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year joined ; 1 } ; school } ; fishers }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to united states . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; region ; united states } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is 2nd maximum . the year record of this row is 1987 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; position ; 2 } ; year } ; 1987 }"
            ]
        },
        {
            "input": "the 3rd minimum episode number record of all rows is 3 . the musical guest ( song performed ) record of the row with 3rd minimum episode number record is nerd ( everyone nose ) .",
            "output": [
                "and { eq { nth_min { all_rows ; episode number ; 3 } ; 3 } ; eq { hop { nth_argmin { all_rows ; episode number ; 3 } ; musical guest ( song performed ) } ; nerd ( everyone nose ) } }"
            ]
        },
        {
            "input": "select the rows whose academic ranking of world universities 2012 record fuzzily matches to not ranked . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; academic ranking of world universities 2012 ; not ranked } } ; 3 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to january .",
            "output": [
                "all_eq { all_rows ; date ; january }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to jeff simmons . take the laps record of this row . select the rows whose driver record fuzzily matches to sarah fisher . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; driver ; jeff simmons } ; laps } ; hop { filter_eq { all_rows ; driver ; sarah fisher } ; laps } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to gene taylor . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to harold volkmer . take the first elected record of this row . the second record is 4 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; incumbent ; gene taylor } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; harold volkmer } ; first elected } } ; -4 years }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to bears stadium . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; game site ; bears stadium } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose 2012 club record fuzzily matches to vk primorje rijeka . there is only one such row in the table . the name record of this unqiue row is xavier garc\u00eda .",
            "output": [
                "and { only { filter_eq { all_rows ; 2012 club ; vk primorje rijeka } } ; eq { hop { filter_eq { all_rows ; 2012 club ; vk primorje rijeka } ; name } ; xavier garc\u00eda } }"
            ]
        },
        {
            "input": "select the rows whose owner record fuzzily matches to cairo communication . there is only one such row in the table . the channel record of this unqiue row is la7 .",
            "output": [
                "and { only { filter_eq { all_rows ; owner ; cairo communication } } ; eq { hop { filter_eq { all_rows ; owner ; cairo communication } ; channel } ; la7 } }"
            ]
        },
        {
            "input": "select the rows whose kit manufacturer record fuzzily matches to umbro . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; kit manufacturer ; umbro } } ; 4 }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is 15.6 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; 15.6 }"
            ]
        },
        {
            "input": "for the reg gp records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; reg gp ; 0 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to philadelphia eagles . there is only one such row in the table . the week record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; philadelphia eagles } } ; eq { hop { filter_eq { all_rows ; opponent ; philadelphia eagles } ; week } ; 1 } }"
            ]
        },
        {
            "input": "select the rows whose owner ( s ) record fuzzily matches to private owner . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; owner ( s ) ; private owner } } ; 5 }"
            ]
        },
        {
            "input": "for the frequency records of all rows , most of them fuzzily match to 00 9 .",
            "output": [
                "most_eq { all_rows ; frequency ; 00 9 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to cd & v . among these rows , select the rows whose name record fuzzily matches to yves leterme . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; party ; cd & v } ; name ; yves leterme } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to nu . there is only one such row in the table . the player record of this unqiue row is rey mendoza .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; nu } } ; eq { hop { filter_eq { all_rows ; college ; nu } ; player } ; rey mendoza } }"
            ]
        },
        {
            "input": "select the rows whose poison / klesha record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; poison / klesha } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1997 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 1997 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose bronze record is equal to 2 . select the row whose gold record of these rows is 1st maximum . the rank record of this row is 4 .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; bronze ; 2 } ; gold ; 1 } ; rank } ; 4 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to friday .",
            "output": [
                "most_eq { all_rows ; date ; friday }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to toronto maple leafs . the sum of the attendance record of these rows is 38,002 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; toronto maple leafs } ; attendance } ; 38,002 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to newport . take the year withdrawn record of this row . select the rows whose name record fuzzily matches to cowes . take the year withdrawn record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; newport } ; year withdrawn } ; hop { filter_eq { all_rows ; name ; cowes } ; year withdrawn } }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to signed by blackburn rovers ( mutual consent ) . there is only one such row in the table . the outgoing manager record of this unqiue row is paul ince .",
            "output": [
                "and { only { filter_eq { all_rows ; manner of departure ; signed by blackburn rovers ( mutual consent ) } } ; eq { hop { filter_eq { all_rows ; manner of departure ; signed by blackburn rovers ( mutual consent ) } ; outgoing manager } ; paul ince } }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to jackie stewart . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; jackie stewart } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose spacecraft record fuzzily matches to voyager 1 . the 1st minimum time elapsed record of these rows is 547 days ( 1 yr , 6 mo , 1 d ) .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; spacecraft ; voyager 1 } ; time elapsed ; 1 } ; 547 days ( 1 yr , 6 mo , 1 d ) }"
            ]
        },
        {
            "input": "for the total points records of all rows , most of them are less than 2000 .",
            "output": [
                "most_less { all_rows ; total points ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose draws record is greater than 5 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; draws ; 5 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose episode record is less than or equal to 175 . among these rows , select the rows whose segment a record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { filter_less_eq { all_rows ; episode ; 175 } ; segment a } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to santa clara , california . there is only one such row in the table . the athlete record of this unqiue row is mike ryan .",
            "output": [
                "and { only { filter_eq { all_rows ; city ; santa clara , california } } ; eq { hop { filter_eq { all_rows ; city ; santa clara , california } ; athlete } ; mike ryan } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to sussex . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; club ; sussex } } ; 3 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 21996 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 21996 }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to minnesota . for the round records of these rows , most of them are less than or equal to 11 .",
            "output": [
                "most_less_eq { filter_eq { all_rows ; school / club team ; minnesota } ; round ; 11 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to seattle . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; seattle } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united kingdom . for the points records of these rows , most of them are less than 10 .",
            "output": [
                "most_less { filter_eq { all_rows ; country ; united kingdom } ; points ; 10 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to brad jones . the minimum date record of these rows is 26 - 27 apr .",
            "output": [
                "eq { min { filter_eq { all_rows ; winner ; brad jones } ; date } ; 26 - 27 apr }"
            ]
        },
        {
            "input": "select the rows whose sport record fuzzily matches to baseball . there is only one such row in the table . the sportsperson record of this unqiue row is albert pujols .",
            "output": [
                "and { only { filter_eq { all_rows ; sport ; baseball } } ; eq { hop { filter_eq { all_rows ; sport ; baseball } ; sportsperson } ; albert pujols } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to england . among these rows , select the rows whose score record is equal to 71 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; england } ; score ; 71 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose built year record of all rows is 2nd minimum . the warship record of this row is covadonga .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; built year ; 2 } ; warship } ; covadonga }"
            ]
        },
        {
            "input": "select the rows whose time of day record fuzzily matches to afternoon . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time of day ; afternoon } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to jackson . take the join date record of this row . select the rows whose school record fuzzily matches to lake . take the join date record of this row . the second record is 23 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; school ; jackson } ; join date } ; hop { filter_eq { all_rows ; school ; lake } ; join date } } ; -23 years }"
            ]
        },
        {
            "input": "select the rows whose name record is arbitrary . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_all { all_rows ; name } } ; 10 }"
            ]
        },
        {
            "input": "for the gold records of all rows , most of them are less than 2 .",
            "output": [
                "most_less { all_rows ; gold ; 2 }"
            ]
        },
        {
            "input": "select the row whose round record of all rows is 3rd maximum . the player record of this row is tyree davis .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; round ; 3 } ; player } ; tyree davis }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose game site record fuzzily matches to rich stadium . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; december } ; game site ; rich stadium } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is 1st maximum . the film title used in nomination record of this row is labyrinth .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ( ceremony ) ; 1 } ; film title used in nomination } ; labyrinth }"
            ]
        },
        {
            "input": "select the rows whose vacator record fuzzily matches to john l mcclellan ( d ) . take the reason for change record of this row . select the rows whose vacator record fuzzily matches to lee metcalf ( d ) . take the reason for change record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; vacator ; john l mcclellan ( d ) } ; reason for change } ; hop { filter_eq { all_rows ; vacator ; lee metcalf ( d ) } ; reason for change } }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; wins ; 10 }"
            ]
        },
        {
            "input": "select the rows whose 2006 record fuzzily matches to 1r . there is only one such row in the table . the tournament record of this unqiue row is australian open .",
            "output": [
                "and { only { filter_eq { all_rows ; 2006 ; 1r } } ; eq { hop { filter_eq { all_rows ; 2006 ; 1r } ; tournament } ; australian open } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to briggs stadium . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; briggs stadium } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose construction start record fuzzily matches to 1985 . there is only one such row in the table . the unit record of this unqiue row is kakrapar 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; construction start ; 1985 } } ; eq { hop { filter_eq { all_rows ; construction start ; 1985 } ; unit } ; kakrapar 2 } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to dick farman . take the overall record of this row . select the rows whose name record fuzzily matches to paul coop . take the overall record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; dick farman } ; overall } ; hop { filter_eq { all_rows ; name ; paul coop } ; overall } }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 30 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 30 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to essex , nj . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; county ; essex , nj } } ; 6 }"
            ]
        },
        {
            "input": "the average of the winner 's share record of all rows is 355169.4 .",
            "output": [
                "round_eq { avg { all_rows ; winner 's share } ; 355169.4 }"
            ]
        },
        {
            "input": "for the played records of all rows , all of them are equal to 16 .",
            "output": [
                "all_eq { all_rows ; played ; 16 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 100 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 100 }"
            ]
        },
        {
            "input": "select the row whose game record of all rows is minimum . the location attendance record of this row is pepsi center 14243 .",
            "output": [
                "eq { hop { argmin { all_rows ; game } ; location attendance } ; pepsi center 14243 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to edmonton . take the date record of this row . select the rows whose visitor record fuzzily matches to colorado . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; visitor ; edmonton } ; date } ; hop { filter_eq { all_rows ; visitor ; colorado } ; date } }"
            ]
        },
        {
            "input": "select the rows whose designated home record fuzzily matches to miami dolphins . take the year record of this row . select the rows whose designated home record fuzzily matches to new orleans saints . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; designated home ; miami dolphins } ; year } ; hop { filter_eq { all_rows ; designated home ; new orleans saints } ; year } }"
            ]
        },
        {
            "input": "for the lead records of all rows , most of them are greater than or equal to 10 .",
            "output": [
                "most_greater_eq { all_rows ; lead ; 10 }"
            ]
        },
        {
            "input": "select the rows whose writer / composer record fuzzily matches to ken walther . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; writer / composer ; ken walther } } ; 2 }"
            ]
        },
        {
            "input": "for the opened records of all rows , most of them are less than 2000 .",
            "output": [
                "most_less { all_rows ; opened ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose laps record is greater than 312 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; laps ; 312 } }"
            ]
        },
        {
            "input": "for the comment records of all rows , most of them fuzzily match to landed with 747 .",
            "output": [
                "most_eq { all_rows ; comment ; landed with 747 }"
            ]
        },
        {
            "input": "select the rows whose animal name record fuzzily matches to the rabbits . take the tv seasons record of this row . select the rows whose animal name record fuzzily matches to mole . take the tv seasons record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; animal name ; the rabbits } ; tv seasons } ; hop { filter_eq { all_rows ; animal name ; mole } ; tv seasons } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2013 . there is only one such row in the table . the nominated work record of this unqiue row is commitment .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 2013 } } ; eq { hop { filter_eq { all_rows ; year ; 2013 } ; nominated work } ; commitment } }"
            ]
        },
        {
            "input": "for the bronze records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; bronze ; 0 }"
            ]
        },
        {
            "input": "select the rows whose selected caribbean and n latin america countries record fuzzily matches to mexico . take the internl tourist arrivals 2011 ( x1000 ) record of this row . select the rows whose selected caribbean and n latin america countries record fuzzily matches to barbados . take the internl tourist arrivals 2011 ( x1000 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; selected caribbean and n latin america countries ; mexico } ; internl tourist arrivals 2011 ( x1000 ) } ; hop { filter_eq { all_rows ; selected caribbean and n latin america countries ; barbados } ; internl tourist arrivals 2011 ( x1000 ) } }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is maximum . the year record of this row is 2003 .",
            "output": [
                "eq { hop { argmax { all_rows ; laps } ; year } ; 2003 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to defensive back . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; defensive back } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose headquarters record fuzzily matches to japan . there is only one such row in the table . the name record of this unqiue row is toyota motor corporation .",
            "output": [
                "and { only { filter_eq { all_rows ; headquarters ; japan } } ; eq { hop { filter_eq { all_rows ; headquarters ; japan } ; name } ; toyota motor corporation } }"
            ]
        },
        {
            "input": "select the rows whose cuts made record is less than 20 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; cuts made ; 20 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose winnings record of all rows is 2nd maximum . the year record of this row is 2003 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; winnings ; 2 } ; year } ; 2003 }"
            ]
        },
        {
            "input": "select the rows whose max memory record fuzzily matches to 128 gb . among these rows , select the rows whose max processors record fuzzily matches to 1 ultrasparc t2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; max memory ; 128 gb } ; max processors ; 1 ultrasparc t2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to memorial stadium . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; game site ; memorial stadium } } ; 6 }"
            ]
        },
        {
            "input": "the sum of the quantity made record of all rows is 151 .",
            "output": [
                "round_eq { sum { all_rows ; quantity made } ; 151 }"
            ]
        },
        {
            "input": "select the rows whose position record is arbitrary . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_all { all_rows ; position } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose rounds record of all rows is maximum . the team record of this row is henderson motorsports .",
            "output": [
                "eq { hop { argmax { all_rows ; rounds } ; team } ; henderson motorsports }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the incumbent record of this row is george m grant .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; incumbent } ; george m grant }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to home . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; home } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united kingdom . there is only one such row in the table . the pick record of this unqiue row is 51 .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; united kingdom } } ; eq { hop { filter_eq { all_rows ; nationality ; united kingdom } ; pick } ; 51 } }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 12 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 12 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the team 1 record of this row is as monaco ( d1 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; team 1 } ; as monaco ( d1 ) }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to kevin barnett . take the weight record of this row . select the rows whose name record fuzzily matches to gabriel gardner . take the weight record of this row . the second record is 9 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; kevin barnett } ; weight } ; hop { filter_eq { all_rows ; name ; gabriel gardner } ; weight } } ; -9 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to utah . there is only one such row in the table . the name record of this unqiue row is dewey nelson .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; utah } } ; eq { hop { filter_eq { all_rows ; college ; utah } ; name } ; dewey nelson } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to sept . the sum of the wildcats points record of these rows is 40 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; sept } ; wildcats points } ; 40 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to oakland raiders . there is only one such row in the table . the date record of this unqiue row is october 6 , 1968 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; oakland raiders } } ; eq { hop { filter_eq { all_rows ; opponent ; oakland raiders } ; date } ; october 6 , 1968 } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to michael lange . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; michael lange } } ; 9 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st maximum . the incumbent record of this row is dale alford .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; first elected ; 1 } ; incumbent } ; dale alford }"
            ]
        },
        {
            "input": "for the batting style records of all rows , most of them fuzzily match to right hand bat .",
            "output": [
                "most_eq { all_rows ; batting style ; right hand bat }"
            ]
        },
        {
            "input": "select the rows whose nationality record does not match to ireland . the 1st maximum goals record of these rows is 138 . the name record of the row with 1st maximum goals record is johnny armstrong .",
            "output": [
                "and { eq { nth_max { filter_not_eq { all_rows ; nationality ; ireland } ; goals ; 1 } ; 138 } ; eq { hop { nth_argmax { filter_not_eq { all_rows ; nationality ; ireland } ; goals ; 1 } ; name } ; johnny armstrong } }"
            ]
        },
        {
            "input": "select the rows whose channel record fuzzily matches to rai 2 . take the launch date record of this row . select the rows whose channel record fuzzily matches to canale 5 . take the launch date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; channel ; rai 2 } ; launch date } ; hop { filter_eq { all_rows ; channel ; canale 5 } ; launch date } }"
            ]
        },
        {
            "input": "select the rows whose attendance record fuzzily matches to rose garden . the sum of the attendance record of these rows is 121570 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; attendance ; rose garden } ; attendance } ; 121570 }"
            ]
        },
        {
            "input": "select the rows whose yards record is equal to 0 . there is only one such row in the table . the player record of this unqiue row is andy kelly .",
            "output": [
                "and { only { filter_eq { all_rows ; yards ; 0 } } ; eq { hop { filter_eq { all_rows ; yards ; 0 } ; player } ; andy kelly } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the year record of this row is 2007 - 08 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; year } ; 2007 - 08 }"
            ]
        },
        {
            "input": "the average of the prize money record of all rows is 4831665 .",
            "output": [
                "round_eq { avg { all_rows ; prize money } ; 4831665 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; democratic } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to k league classic . there is only one such row in the table . the name record of this unqiue row is molina .",
            "output": [
                "and { only { filter_eq { all_rows ; competition ; k league classic } } ; eq { hop { filter_eq { all_rows ; competition ; k league classic } ; name } ; molina } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to san francisco . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; san francisco } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to mark ellis , stephanie morgenstern & alex levine . there is only one such row in the table . the title record of this unqiue row is priority of life .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; mark ellis , stephanie morgenstern & alex levine } } ; eq { hop { filter_eq { all_rows ; written by ; mark ellis , stephanie morgenstern & alex levine } ; title } ; priority of life } }"
            ]
        },
        {
            "input": "for the aircraft movements records of all rows , most of them are greater than 100 .",
            "output": [
                "most_greater { all_rows ; aircraft movements ; 100 }"
            ]
        },
        {
            "input": "for the team records of all rows , most of them fuzzily match to suzuki .",
            "output": [
                "most_eq { all_rows ; team ; suzuki }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 19 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 19 }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to pete travis . there is only one such row in the table . the episode record of this unqiue row is episode 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; director ; pete travis } } ; eq { hop { filter_eq { all_rows ; director ; pete travis } ; episode } ; episode 5 } }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to campus radio . there is only one such row in the table . the call sign record of this unqiue row is cfak - fm .",
            "output": [
                "and { only { filter_eq { all_rows ; format ; campus radio } } ; eq { hop { filter_eq { all_rows ; format ; campus radio } ; call sign } ; cfak - fm } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 12 june 1972 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; date ; 12 june 1972 } ; crowd ; 20000 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose cuts made record of all rows is maximum . the year record of this row is 2009 .",
            "output": [
                "eq { hop { argmax { all_rows ; cuts made } ; year } ; 2009 }"
            ]
        },
        {
            "input": "for the name records of all rows , most of them fuzzily match to - .",
            "output": [
                "most_eq { all_rows ; name ; - }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to norte\u00f1o .",
            "output": [
                "most_eq { all_rows ; type ; norte\u00f1o }"
            ]
        },
        {
            "input": "for the bronze records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; bronze ; 10 }"
            ]
        },
        {
            "input": "the sum of the population record of all rows is 46350 .",
            "output": [
                "round_eq { sum { all_rows ; population } ; 46350 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to israel open . take the date record of this row . select the rows whose tournament record fuzzily matches to president 's cup ( tennis ) . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; israel open } ; date } ; hop { filter_eq { all_rows ; tournament ; president 's cup ( tennis ) } ; date } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to mcg . take the crowd record of this row . select the rows whose venue record fuzzily matches to lake oval . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; mcg } ; crowd } ; hop { filter_eq { all_rows ; venue ; lake oval } ; crowd } }"
            ]
        },
        {
            "input": "select the rows whose interview subject record fuzzily matches to tobey maguire . take the date record of this row . select the rows whose interview subject record fuzzily matches to mike piazza . take the date record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; interview subject ; tobey maguire } ; date } ; hop { filter_eq { all_rows ; interview subject ; mike piazza } ; date } }"
            ]
        },
        {
            "input": "select the rows whose week record fuzzily matches to top 24 ( 12 women ) . take the order record of this row . select the rows whose week record fuzzily matches to top 20 ( 10 women ) . take the order record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; week ; top 24 ( 12 women ) } ; order } ; hop { filter_eq { all_rows ; week ; top 20 ( 10 women ) } ; order } }"
            ]
        },
        {
            "input": "select the rows whose stadium record fuzzily matches to mikheil meskhi stadium . take the capacity record of this row . select the rows whose stadium record fuzzily matches to sasha kvaratskhelia stadium . take the capacity record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; stadium ; mikheil meskhi stadium } ; capacity } ; hop { filter_eq { all_rows ; stadium ; sasha kvaratskhelia stadium } ; capacity } }"
            ]
        },
        {
            "input": "for the rare metals records of all rows , most of them fuzzily match to no .",
            "output": [
                "most_eq { all_rows ; rare metals ; no }"
            ]
        },
        {
            "input": "select the rows whose opponents record fuzzily matches to palam\u00f3s . select the row whose kick off record of these rows is minimum . the referee record of this row is daud\u00e9n ib\u00e1\u00f1ez .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; opponents ; palam\u00f3s } ; kick off } ; referee } ; daud\u00e9n ib\u00e1\u00f1ez }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to wabash . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; wabash } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . among these rows , select the rows whose party record fuzzily matches to democratic . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; result ; re - elected } ; party ; democratic } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose goal difference record is equal to -1 . there is only one such row in the table . the club record of this unqiue row is ce sabadell fc .",
            "output": [
                "and { only { filter_eq { all_rows ; goal difference ; -1 } } ; eq { hop { filter_eq { all_rows ; goal difference ; -1 } ; club } ; ce sabadell fc } }"
            ]
        },
        {
            "input": "for the indole records of all rows , most of them fuzzily match to negative .",
            "output": [
                "most_eq { all_rows ; indole ; negative }"
            ]
        },
        {
            "input": "select the row whose opponents record of all rows is maximum . the opponent record of this row is new york jets .",
            "output": [
                "eq { hop { argmax { all_rows ; opponents } ; opponent } ; new york jets }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the home team record of this row is milton keynes dons .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; home team } ; milton keynes dons }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to capybara . take the originalairdate record of this row . select the rows whose title record fuzzily matches to the sleep of babies . take the originalairdate record of this row . the second record is 7 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; title ; capybara } ; originalairdate } ; hop { filter_eq { all_rows ; title ; the sleep of babies } ; originalairdate } } ; -7 days }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 5 . the average of the bronze record of these rows is 4 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; rank ; 5 } ; bronze } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose bowling style record fuzzily matches to right arm fast - medium . select the row whose date of birth record of these rows is maximum . the first class team record of this row is guyana .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; bowling style ; right arm fast - medium } ; date of birth } ; first class team } ; guyana }"
            ]
        },
        {
            "input": "select the row whose employees ( world ) record of all rows is maximum . the name record of this row is volkswagen ag .",
            "output": [
                "eq { hop { argmax { all_rows ; employees ( world ) } ; name } ; volkswagen ag }"
            ]
        },
        {
            "input": "the sum of the payout ( us ) record of all rows is 16,030,000 .",
            "output": [
                "round_eq { sum { all_rows ; payout ( us ) } ; 16,030,000 }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is 2nd minimum . the english name record of this row is liancheng county .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; population ; 2 } ; english name } ; liancheng county }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to williams fw04 . there is only one such row in the table . the year record of this unqiue row is 1975 . the entrant record of this unqiue row is frank williams racing cars .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; williams fw04 } } ; and { eq { hop { filter_eq { all_rows ; chassis ; williams fw04 } ; year } ; 1975 } ; eq { hop { filter_eq { all_rows ; chassis ; williams fw04 } ; entrant } ; frank williams racing cars } } }"
            ]
        },
        {
            "input": "select the rows whose earnings record is greater than 4000000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; earnings ; 4000000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to andrew bynum . the average of the high rebounds record of these rows is 17.25 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high rebounds ; andrew bynum } ; high rebounds } ; 17.25 }"
            ]
        },
        {
            "input": "select the rows whose season record is equal to 2012 . the sum of the points record of these rows is 40 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; season ; 2012 } ; points } ; 40 }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to scotland . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opposing teams ; scotland } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . there is only one such row in the table . the year record of this unqiue row is 1996 . the group record of this unqiue row is c\u00e9sar awards .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; won } } ; and { eq { hop { filter_eq { all_rows ; result ; won } ; year } ; 1996 } ; eq { hop { filter_eq { all_rows ; result ; won } ; group } ; c\u00e9sar awards } } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the series record of this row is formula renault 2.0 nec .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; series } ; formula renault 2.0 nec }"
            ]
        },
        {
            "input": "select the row whose height metres / ft record of all rows is maximum . the name record of this row is shard london bridge .",
            "output": [
                "eq { hop { argmax { all_rows ; height metres / ft } ; name } ; shard london bridge }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 6 - 95 . take the date record of this row . select the rows whose date record fuzzily matches to 10 - 95 . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; date ; 6 - 95 } ; date } ; hop { filter_eq { all_rows ; date ; 10 - 95 } ; date } }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is 2nd maximum . the player record of this row is tom watson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; player } ; tom watson }"
            ]
        },
        {
            "input": "the average of the home team score record of all rows is 12.07 .",
            "output": [
                "round_eq { avg { all_rows ; home team score } ; 12.07 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to launceston , tasmania . select the row whose years record of these rows is 1st minimum . the original code record of this row is victorian rules .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; location ; launceston , tasmania } ; years ; 1 } ; original code } ; victorian rules }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is grove city college .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; grove city college }"
            ]
        },
        {
            "input": "for the most spoken language records of all rows , most of them fuzzily match to sotho .",
            "output": [
                "most_eq { all_rows ; most spoken language ; sotho }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to country . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; format ; country } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose platform record fuzzily matches to wii . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; platform ; wii } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose writer record fuzzily matches to naomi janzen . there is only one such row in the table . the title record of this unqiue row is the tale of the frozen ghost .",
            "output": [
                "and { only { filter_eq { all_rows ; writer ; naomi janzen } } ; eq { hop { filter_eq { all_rows ; writer ; naomi janzen } ; title } ; the tale of the frozen ghost } }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to ensign . there is only one such row in the table . the year record of this unqiue row is 1978 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; ensign } } ; eq { hop { filter_eq { all_rows ; chassis ; ensign } ; year } ; 1978 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . among these rows , select the rows whose attendance record is greater than 50000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; date ; october } ; attendance ; 50000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to special . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; special } } ; 4 }"
            ]
        },
        {
            "input": "for the builder records of all rows , most of them fuzzily match to avonside engine company .",
            "output": [
                "most_eq { all_rows ; builder ; avonside engine company }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 1st minimum . the rank record of this row is 1 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 1 } ; rank } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose nbr class record fuzzily matches to 251 . take the total record of this row . select the rows whose nbr class record fuzzily matches to 229 . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nbr class ; 251 } ; total } ; hop { filter_eq { all_rows ; nbr class ; 229 } ; total } }"
            ]
        },
        {
            "input": "select the rows whose won record is equal to 9 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; won ; 9 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 55680.4 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 55680.4 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 19900 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 19900 }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than 6 . the sum of the gold record of these rows is 42 .",
            "output": [
                "round_eq { sum { filter_less { all_rows ; rank ; 6 } ; gold } ; 42 }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 0 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater { all_rows ; gold ; 0 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to england . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; country ; england } }"
            ]
        },
        {
            "input": "select the rows whose home / away record fuzzily matches to home . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; home / away ; home } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose goals for record of all rows is 2nd maximum . the team record of this row is blackpool mechanics .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goals for ; 2 } ; team } ; blackpool mechanics }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to died . there is only one such row in the table . the vacator record of this unqiue row is thomas blount ( dr ) .",
            "output": [
                "and { only { filter_eq { all_rows ; reason for change ; died } } ; eq { hop { filter_eq { all_rows ; reason for change ; died } ; vacator } ; thomas blount ( dr ) } }"
            ]
        },
        {
            "input": "select the row whose weight ( lbs ) record of all rows is maximum . the name record of this row is joseph barksdale .",
            "output": [
                "eq { hop { argmax { all_rows ; weight ( lbs ) } ; name } ; joseph barksdale }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to mcg . take the crowd record of this row . select the rows whose venue record fuzzily matches to vfl park . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; mcg } ; crowd } ; hop { filter_eq { all_rows ; venue ; vfl park } ; crowd } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the name record of this row is tom malchow .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; name } ; tom malchow }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is 2nd maximum . the nation record of this row is mexico .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; gold ; 2 } ; nation } ; mexico }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 123128 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 123128 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 1432 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 1432 }"
            ]
        },
        {
            "input": "for the game site records of all rows , most of them fuzzily match to kingdome .",
            "output": [
                "most_eq { all_rows ; game site ; kingdome }"
            ]
        },
        {
            "input": "select the rows whose away team score record is greater than 10 . among these rows , select the rows whose crowd record is greater than 20,000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; away team score ; 10 } ; crowd ; 20,000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose socket record fuzzily matches to socket m socket p bga479 . there is only one such row in the table . the model ( list ) record of this unqiue row is t5xxx t7xxx .",
            "output": [
                "and { only { filter_eq { all_rows ; socket ; socket m socket p bga479 } } ; eq { hop { filter_eq { all_rows ; socket ; socket m socket p bga479 } ; model ( list ) } ; t5xxx t7xxx } }"
            ]
        },
        {
            "input": "the 1st minimum date record of all rows is 18 may 1993 .",
            "output": [
                "eq { nth_min { all_rows ; date ; 1 } ; 18 may 1993 }"
            ]
        },
        {
            "input": "the average of the won record of all rows is 8.8 .",
            "output": [
                "round_eq { avg { all_rows ; won } ; 8.8 }"
            ]
        },
        {
            "input": "for the total records of all rows , all of them are greater than or equal to 1 .",
            "output": [
                "all_greater_eq { all_rows ; total ; 1 }"
            ]
        },
        {
            "input": "select the rows whose time record is greater than 6:00 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; time ; 6:00 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose team name record fuzzily matches to isport international . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team name ; isport international } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to smart girl . take the original air date record of this row . select the rows whose title record fuzzily matches to number 1 fan . take the original air date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; smart girl } ; original air date } ; hop { filter_eq { all_rows ; title ; number 1 fan } ; original air date } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the athlete record of this row is veronica campbell - brown .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; athlete } ; veronica campbell - brown }"
            ]
        },
        {
            "input": "select the rows whose 2003 - 04 pts record is equal to - . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2003 - 04 pts ; - } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 3 . the average of the time record of these rows is 10.73 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; rank ; 3 } ; time } ; 10.73 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to ivor d fenton . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to hardie scott . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; ivor d fenton } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; hardie scott } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose cause of destruction record fuzzily matches to still in existence . there is only one such row in the table . the name record of this unqiue row is great pyramid of giza .",
            "output": [
                "and { only { filter_eq { all_rows ; cause of destruction ; still in existence } } ; eq { hop { filter_eq { all_rows ; cause of destruction ; still in existence } ; name } ; great pyramid of giza } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to june 11 . take the high assists record of this row . select the rows whose date record fuzzily matches to june 10 . take the high assists record of this row . the first record fuzzily matches to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; date ; june 11 } ; high assists } ; hop { filter_eq { all_rows ; date ; june 10 } ; high assists } }"
            ]
        },
        {
            "input": "select the rows whose points margin record is less than 10 . there is only one such row in the table . the proceed to quarter - final record of this unqiue row is montauban . the eliminated from competition record of this unqiue row is borders .",
            "output": [
                "and { only { filter_less { all_rows ; points margin ; 10 } } ; and { eq { hop { filter_less { all_rows ; points margin ; 10 } ; proceed to quarter - final } ; montauban } ; eq { hop { filter_less { all_rows ; points margin ; 10 } ; eliminated from competition } ; borders } } }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is maximum . the club record of this row is real madrid cf .",
            "output": [
                "eq { hop { argmax { all_rows ; capacity } ; club } ; real madrid cf }"
            ]
        },
        {
            "input": "select the row whose potential prize money record of all rows is maximum . the season record of this row is 5 .",
            "output": [
                "eq { hop { argmax { all_rows ; potential prize money } ; season } ; 5 }"
            ]
        },
        {
            "input": "select the row whose total goals record of all rows is maximum . the name record of this row is billy price .",
            "output": [
                "eq { hop { argmax { all_rows ; total goals } ; name } ; billy price }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to melbourne . the average of the crowd record of these rows is 15750 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; home team ; melbourne } ; crowd } ; 15750 }"
            ]
        },
        {
            "input": "the average of the frequency record of all rows is 2200 mhz .",
            "output": [
                "round_eq { avg { all_rows ; frequency } ; 2200 mhz }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 0 . there is only one such row in the table . the opponent record of this unqiue row is new jersey devils .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 0 } } ; eq { hop { filter_eq { all_rows ; points ; 0 } ; opponent } ; new jersey devils } }"
            ]
        },
        {
            "input": "for the series premiere records of all rows , most of them fuzzily match to unknown .",
            "output": [
                "most_eq { all_rows ; series premiere ; unknown }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to martin schmitt . take the points record of this row . select the rows whose name record fuzzily matches to denis kornilov . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; martin schmitt } ; points } ; hop { filter_eq { all_rows ; name ; denis kornilov } ; points } }"
            ]
        },
        {
            "input": "select the row whose children together record of all rows is maximum . the name record of this row is martin van buren .",
            "output": [
                "eq { hop { argmax { all_rows ; children together } ; name } ; martin van buren }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to 100 % . there is only one such row in the table . the district record of this unqiue row is new york 15 . the incumbent record of this unqiue row is michael hoffman .",
            "output": [
                "and { only { filter_eq { all_rows ; candidates ; 100 % } } ; and { eq { hop { filter_eq { all_rows ; candidates ; 100 % } ; district } ; new york 15 } ; eq { hop { filter_eq { all_rows ; candidates ; 100 % } ; incumbent } ; michael hoffman } } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jeff feniak . take the round record of this row . select the rows whose player record fuzzily matches to konstantin rudenko . take the round record of this row . the second record is 2 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; jeff feniak } ; round } ; hop { filter_eq { all_rows ; player ; konstantin rudenko } ; round } } ; -2 }"
            ]
        },
        {
            "input": "the sum of the electorate record of all rows is 2633581 .",
            "output": [
                "round_eq { sum { all_rows ; electorate } ; 2633581 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to northern eagle . take the year record of this row . select the rows whose name record fuzzily matches to northern hawk . take the year record of this row . the second record is 15 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; northern eagle } ; year } ; hop { filter_eq { all_rows ; name ; northern hawk } ; year } } ; -15 years }"
            ]
        },
        {
            "input": "the average of the julian clary record of all rows is 8 .",
            "output": [
                "round_eq { avg { all_rows ; julian clary } ; 8 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 791,469 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 791,469 }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 0 . among these rows , select the rows whose bronze record is equal to 2 . there is only one such row in the table . the nation record of this unqiue row is soviet union ( urs ) .",
            "output": [
                "and { only { filter_eq { filter_greater { all_rows ; gold ; 0 } ; bronze ; 2 } } ; eq { hop { filter_eq { filter_greater { all_rows ; gold ; 0 } ; bronze ; 2 } ; nation } ; soviet union ( urs ) } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to sam montes . the 1st minimum original airdate record of these rows is april 23 , 2010 . the title record of the row with 1st minimum original airdate record is the day that everything changed .",
            "output": [
                "and { eq { nth_min { filter_eq { all_rows ; directed by ; sam montes } ; original airdate ; 1 } ; april 23 , 2010 } ; eq { hop { nth_argmin { filter_eq { all_rows ; directed by ; sam montes } ; original airdate ; 1 } ; title } ; the day that everything changed } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the game site record of this row is los angeles memorial coliseum .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; game site } ; los angeles memorial coliseum }"
            ]
        },
        {
            "input": "select the row whose shot % record of all rows is 2nd maximum . the skip record of this row is david murdoch .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; shot % ; 2 } ; skip } ; david murdoch }"
            ]
        },
        {
            "input": "select the rows whose election record fuzzily matches to 2001 . take the of candidates nominated record of this row . select the rows whose election record fuzzily matches to 2004 . take the of candidates nominated record of this row . the second record is 39 larger than the first record . the of candidates nominated record of the first row is 10 . the of candidates nominated record of the second row is 49 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } } ; -39 } ; and { eq { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; 10 } ; eq { hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } ; 49 } } }"
            ]
        },
        {
            "input": "select the rows whose airborne unit record fuzzily matches to pathfinders . select the row whose drop zone time record of these rows is 1st minimum . the drop zone record of this row is a .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone time ; 1 } ; drop zone } ; a }"
            ]
        },
        {
            "input": "select the rows whose 1st ship delivery date record fuzzily matches to may 1942 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 1st ship delivery date ; may 1942 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to hesketh 308e . take the year record of this row . select the rows whose chassis record fuzzily matches to surtees ts19 . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; chassis ; hesketh 308e } ; year } ; hop { filter_eq { all_rows ; chassis ; surtees ts19 } ; year } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1985 . the sum of the points record of these rows is 8 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 1985 } ; points } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to kerri burnett . there is only one such row in the table . the theme record of this unqiue row is trumpeter swan .",
            "output": [
                "and { only { filter_eq { all_rows ; artist ; kerri burnett } } ; eq { hop { filter_eq { all_rows ; artist ; kerri burnett } ; theme } ; trumpeter swan } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is october 10 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; october 10 }"
            ]
        },
        {
            "input": "select the rows whose career win - loss record fuzzily matches to 3 - 5 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; career win - loss ; 3 - 5 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; surface ; grass } }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to wildcat . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; chassis ; wildcat } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is minimum . the player record of this row is ben hogan .",
            "output": [
                "eq { hop { argmin { all_rows ; score } ; player } ; ben hogan }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to united states . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nation ; united states } } ; 5 }"
            ]
        },
        {
            "input": "for the result records of all rows , all of them fuzzily match to not nominated .",
            "output": [
                "all_eq { all_rows ; result ; not nominated }"
            ]
        },
        {
            "input": "for the entrant records of all rows , most of them fuzzily match to clarke - mordaunt - guthrie .",
            "output": [
                "most_eq { all_rows ; entrant ; clarke - mordaunt - guthrie }"
            ]
        },
        {
            "input": "the average of the silver record of all rows is 5.2 .",
            "output": [
                "round_eq { avg { all_rows ; silver } ; 5.2 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd minimum . the author record of this row is anthony browne .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 2 } ; author } ; anthony browne }"
            ]
        },
        {
            "input": "select the rows whose champion record fuzzily matches to aktobe . for the season records of these rows , all of them are greater than 2004 .",
            "output": [
                "all_greater { filter_eq { all_rows ; champion ; aktobe } ; season ; 2004 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the year record of this row is 1989 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; year } ; 1989 }"
            ]
        },
        {
            "input": "select the row whose number of electorates ( 2009 ) record of all rows is 2nd maximum . the name record of this row is susner .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of electorates ( 2009 ) ; 2 } ; name } ; susner }"
            ]
        },
        {
            "input": "for the distance records of all rows , all of them fuzzily match to 240.5 km .",
            "output": [
                "all_eq { all_rows ; distance ; 240.5 km }"
            ]
        },
        {
            "input": "for the written by records of all rows , all of them fuzzily match to michael hirst .",
            "output": [
                "all_eq { all_rows ; written by ; michael hirst }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april 19 . take the high points record of this row . select the rows whose date record fuzzily matches to april 20 . take the high points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; april 19 } ; high points } ; hop { filter_eq { all_rows ; date ; april 20 } ; high points } }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to british racing partnership . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; entrant ; british racing partnership } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose earpads record fuzzily matches to circumaural bowl . there is only one such row in the table . the headphone model record of this unqiue row is gs1000i .",
            "output": [
                "and { only { filter_eq { all_rows ; earpads ; circumaural bowl } } ; eq { hop { filter_eq { all_rows ; earpads ; circumaural bowl } ; headphone model } ; gs1000i } }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them are less than 4:00 .",
            "output": [
                "most_less { all_rows ; time ; 4:00 }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is 2nd maximum . the home team record of this row is essendon .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; home team score ; 2 } ; home team } ; essendon }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to lake oval . there is only one such row in the table . the home team record of this unqiue row is south melbourne .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; lake oval } } ; eq { hop { filter_eq { all_rows ; venue ; lake oval } ; home team } ; south melbourne } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to walter llerena ( ecu ) . take the total ( kg ) record of this row . select the rows whose name record fuzzily matches to guy hamilton ( can ) . take the total ( kg ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; walter llerena ( ecu ) } ; total ( kg ) } ; hop { filter_eq { all_rows ; name ; guy hamilton ( can ) } ; total ( kg ) } }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . there is only one such row in the table . the incumbent record of this unqiue row is james g polk .",
            "output": [
                "and { only { filter_eq { all_rows ; party ; democratic } } ; eq { hop { filter_eq { all_rows ; party ; democratic } ; incumbent } ; james g polk } }"
            ]
        },
        {
            "input": "select the row whose laid down record of all rows is minimum . the name record of this row is chanticleer .",
            "output": [
                "eq { hop { argmin { all_rows ; laid down } ; name } ; chanticleer }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tim jones . take the pick record of this row . select the rows whose player record fuzzily matches to lew kamanu . take the pick record of this row . the first record is greater than the second record . the position record of the first row is quarterback . the position record of the second row is defensive end .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; player ; tim jones } ; pick } ; hop { filter_eq { all_rows ; player ; lew kamanu } ; pick } } ; and { eq { hop { filter_eq { all_rows ; player ; tim jones } ; position } ; quarterback } ; eq { hop { filter_eq { all_rows ; player ; lew kamanu } ; position } ; defensive end } } }"
            ]
        },
        {
            "input": "the 8th minimum round record of all rows is 7 . the player record of the row with 8th minimum round record is bob chandler .",
            "output": [
                "and { eq { nth_min { all_rows ; round ; 8 } ; 7 } ; eq { hop { nth_argmin { all_rows ; round ; 8 } ; player } ; bob chandler } }"
            ]
        },
        {
            "input": "select the rows whose class / type record fuzzily matches to passenger ship . there is only one such row in the table . the builder record of this unqiue row is john roach and son .",
            "output": [
                "and { only { filter_eq { all_rows ; class / type ; passenger ship } } ; eq { hop { filter_eq { all_rows ; class / type ; passenger ship } ; builder } ; john roach and son } }"
            ]
        },
        {
            "input": "select the rows whose 1st round record fuzzily matches to 2 - 0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 1st round ; 2 - 0 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose site / stadium record fuzzily matches to rosenblatt stadium . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; site / stadium ; rosenblatt stadium } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to espn great outdoor games . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; event ; espn great outdoor games } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner - up . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome ; runner - up } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose wins record is greater than or equal to 5 . for the last runners - up records of these rows , most of them are greater than or equal to 1987 .",
            "output": [
                "most_greater_eq { filter_greater_eq { all_rows ; wins ; 5 } ; last runners - up ; 1987 }"
            ]
        },
        {
            "input": "select the rows whose metres record is greater than 300 . there is only one such row in the table . the name record of this unqiue row is the shard .",
            "output": [
                "and { only { filter_greater { all_rows ; metres ; 300 } } ; eq { hop { filter_greater { all_rows ; metres ; 300 } ; name } ; the shard } }"
            ]
        },
        {
            "input": "for the power kw records of all rows , most of them fuzzily match to 10 kw .",
            "output": [
                "most_eq { all_rows ; power kw ; 10 kw }"
            ]
        },
        {
            "input": "for the socket records of all rows , most of them fuzzily match to lga 1156 .",
            "output": [
                "most_eq { all_rows ; socket ; lga 1156 }"
            ]
        },
        {
            "input": "select the rows whose 8:30 record fuzzily matches to parks and recreation . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; 8:30 ; parks and recreation } }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 9.7 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 9.7 }"
            ]
        },
        {
            "input": "the 3rd maximum crowd record of all rows is 13805 .",
            "output": [
                "eq { nth_max { all_rows ; crowd ; 3 } ; 13805 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; nationality ; united states } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to quarterback . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; quarterback } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the home team record of this row is carlton . the away team record of this row is richmond . the date record of this row is 10 may 1930 .",
            "output": [
                "and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; home team } ; carlton } ; and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; away team } ; richmond } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 10 may 1930 } } }"
            ]
        },
        {
            "input": "select the row whose agg record of all rows is 2nd maximum . the team 2 record of this row is defence force .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; agg ; 2 } ; team 2 } ; defence force }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to hong kong . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; hong kong } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner-up . there is only one such row in the table . the year record of this unqiue row is 1993 .",
            "output": [
                "and { only { filter_eq { all_rows ; outcome ; runner-up } } ; eq { hop { filter_eq { all_rows ; outcome ; runner-up } ; year } ; 1993 } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to steve pepin . take the nhl team record of this row . select the rows whose player record fuzzily matches to john miner . take the nhl team record of this row . the first record does not match to the second record . the nhl team record of the first row is chicago black hawks . the nhl team record of the second row is edmonton oilers .",
            "output": [
                "and { not_eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; hop { filter_eq { all_rows ; player ; john miner } ; nhl team } } ; and { eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; chicago black hawks } ; eq { hop { filter_eq { all_rows ; player ; john miner } ; nhl team } ; edmonton oilers } } }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 1 . there is only one such row in the table . the nation record of this unqiue row is germany .",
            "output": [
                "and { only { filter_greater { all_rows ; gold ; 1 } } ; eq { hop { filter_greater { all_rows ; gold ; 1 } ; nation } ; germany } }"
            ]
        },
        {
            "input": "for the rank records of all rows , most of them fuzzily match to unranked .",
            "output": [
                "most_eq { all_rows ; rank ; unranked }"
            ]
        },
        {
            "input": "the average of the first elected record of all rows is 1992 .",
            "output": [
                "round_eq { avg { all_rows ; first elected } ; 1992 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to dallas cowboys . take the date record of this row . select the rows whose opponent record fuzzily matches to green bay packers . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; dallas cowboys } ; date } ; hop { filter_eq { all_rows ; opponent ; green bay packers } ; date } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to canada . there is only one such row in the table . the year record of this unqiue row is 2011 .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; canada } } ; eq { hop { filter_eq { all_rows ; country ; canada } ; year } ; 2011 } }"
            ]
        },
        {
            "input": "select the rows whose of which currently forests , km square record is greater than 1000 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; of which currently forests , km square ; 1000 } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1990 . the sum of the pages record of these rows is 1135 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 1990 } ; pages } ; 1135 }"
            ]
        },
        {
            "input": "select the row whose notes record of all rows is 3rd maximum . the year record of this row is 2004 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; notes ; 3 } ; year } ; 2004 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to new zealand . there is only one such row in the table . the year record of this unqiue row is 1988 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; new zealand } } ; eq { hop { filter_eq { all_rows ; venue ; new zealand } ; year } ; 1988 } }"
            ]
        },
        {
            "input": "the average of the qual record of all rows is 141.562 .",
            "output": [
                "round_eq { avg { all_rows ; qual } ; 141.562 }"
            ]
        },
        {
            "input": "select the rows whose cfl team record fuzzily matches to hamilton tiger - cats . take the pick record of this row . select the rows whose cfl team record fuzzily matches to british columbia lions . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; cfl team ; hamilton tiger - cats } ; pick } ; hop { filter_eq { all_rows ; cfl team ; british columbia lions } ; pick } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the club record of this row is chepstow rfc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; club } ; chepstow rfc }"
            ]
        },
        {
            "input": "for the socialist ticket records of all rows , most of them fuzzily match to man .",
            "output": [
                "most_eq { all_rows ; socialist ticket ; man }"
            ]
        },
        {
            "input": "select the rows whose trim record fuzzily matches to xe ( 2009 ) . take the transmission record of this row . select the rows whose trim record fuzzily matches to xr ( 2009 ) . take the transmission record of this row . the first record fuzzily matches to the second record . the transmission record of the first row is 6 - speed 6t40 . the transmission record of the second row is 6 - speed 6t40 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; trim ; xe ( 2009 ) } ; transmission } ; hop { filter_eq { all_rows ; trim ; xr ( 2009 ) } ; transmission } } ; and { eq { hop { filter_eq { all_rows ; trim ; xe ( 2009 ) } ; transmission } ; 6 - speed 6t40 } ; eq { hop { filter_eq { all_rows ; trim ; xr ( 2009 ) } ; transmission } ; 6 - speed 6t40 } } }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to richard hamilton . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; richard hamilton } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose results record of all rows is maximum . the week record of this row is 10 .",
            "output": [
                "eq { hop { argmax { all_rows ; results } ; week } ; 10 }"
            ]
        },
        {
            "input": "select the row whose overall wc points ( rank ) record of all rows is maximum . the name record of this row is thomas morgenstern .",
            "output": [
                "eq { hop { argmax { all_rows ; overall wc points ( rank ) } ; name } ; thomas morgenstern }"
            ]
        },
        {
            "input": "select the rows whose tv station record fuzzily matches to fuji tv . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tv station ; fuji tv } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose english name record fuzzily matches to capital region of denmark . take the population ( january 1 , 2008 ) record of this row . select the rows whose english name record fuzzily matches to region of southern denmark . take the population ( january 1 , 2008 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; english name ; capital region of denmark } ; population ( january 1 , 2008 ) } ; hop { filter_eq { all_rows ; english name ; region of southern denmark } ; population ( january 1 , 2008 ) } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to chad campbell . take the score record of this row . select the rows whose player record fuzzily matches to jim furyk . take the score record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; chad campbell } ; score } ; hop { filter_eq { all_rows ; player ; jim furyk } ; score } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly match . there is only one such row in the table . the date record of this unqiue row is september 27 , 1993 .",
            "output": [
                "and { only { filter_eq { all_rows ; competition ; friendly match } } ; eq { hop { filter_eq { all_rows ; competition ; friendly match } ; date } ; september 27 , 1993 } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to glenferrie oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to victoria park . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; glenferrie oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 20000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 20000 }"
            ]
        },
        {
            "input": "for the conversions records of all rows , most of them are greater than 50 .",
            "output": [
                "most_greater { all_rows ; conversions ; 50 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 1st minimum . the engine record of this row is m67d40 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 1 } ; engine } ; m67d40 }"
            ]
        },
        {
            "input": "for the class records of all rows , most of them fuzzily match to 250cc .",
            "output": [
                "most_eq { all_rows ; class ; 250cc }"
            ]
        },
        {
            "input": "select the rows whose rebounds per game record is equal to 3.4 . there is only one such row in the table . the tournament record of this unqiue row is 2011 eurobasket .",
            "output": [
                "and { only { filter_eq { all_rows ; rebounds per game ; 3.4 } } ; eq { hop { filter_eq { all_rows ; rebounds per game ; 3.4 } ; tournament } ; 2011 eurobasket } }"
            ]
        },
        {
            "input": "the average of the viewers record of all rows is 872100 .",
            "output": [
                "round_eq { avg { all_rows ; viewers } ; 872100 }"
            ]
        },
        {
            "input": "select the rows whose hometown record fuzzily matches to ca . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; hometown ; ca } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to minsk . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; minsk } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose moving parts record fuzzily matches to yes . there is only one such row in the table . the technology record of this unqiue row is flow .",
            "output": [
                "and { only { filter_eq { all_rows ; moving parts ; yes } } ; eq { hop { filter_eq { all_rows ; moving parts ; yes } ; technology } ; flow } }"
            ]
        },
        {
            "input": "select the row whose apps record of all rows is maximum . the name record of this row is j\u00fcrgen grabowski .",
            "output": [
                "eq { hop { argmax { all_rows ; apps } ; name } ; j\u00fcrgen grabowski }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to joe johnson .",
            "output": [
                "most_eq { all_rows ; high assists ; joe johnson }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to toronto maple leafs . the sum of the score record of these rows is 12 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; toronto maple leafs } ; score } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose year aired record fuzzily matches to 2007 . the maximum top prize record of these rows is 250000 .",
            "output": [
                "eq { max { filter_eq { all_rows ; year aired ; 2007 } ; top prize } ; 250000 }"
            ]
        },
        {
            "input": "select the row whose date of birth record of all rows is 2nd minimum . the president record of this row is jules rimet .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date of birth ; 2 } ; president } ; jules rimet }"
            ]
        },
        {
            "input": "select the rows whose 1st leg record fuzzily matches to 1 - 1 . there is only one such row in the table . the team 1 record of this unqiue row is bolton wanderers . the team 2 record of this unqiue row is sporting cp .",
            "output": [
                "and { only { filter_eq { all_rows ; 1st leg ; 1 - 1 } } ; and { eq { hop { filter_eq { all_rows ; 1st leg ; 1 - 1 } ; team 1 } ; bolton wanderers } ; eq { hop { filter_eq { all_rows ; 1st leg ; 1 - 1 } ; team 2 } ; sporting cp } } }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; points ; 10 }"
            ]
        },
        {
            "input": "the average of the episodes record of all rows is 10.72 .",
            "output": [
                "round_eq { avg { all_rows ; episodes } ; 10.72 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 19119 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 19119 }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 26.2 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 26.2 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 3rd maximum . the player record of this row is jean - fredric tremblay .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 3 } ; player } ; jean - fredric tremblay }"
            ]
        },
        {
            "input": "the average of the rank record of all rows is 20 .",
            "output": [
                "round_eq { avg { all_rows ; rank } ; 20 }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to soviet union .",
            "output": [
                "most_eq { all_rows ; country ; soviet union }"
            ]
        },
        {
            "input": "select the rows whose 3d support record fuzzily matches to no . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 3d support ; no } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose difference record of all rows is 2nd maximum . the team record of this row is americano - sp .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; difference ; 2 } ; team } ; americano - sp }"
            ]
        },
        {
            "input": "the maximum frequency record of all rows is 1000 mhz .",
            "output": [
                "eq { max { all_rows ; frequency } ; 1000 mhz }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the country record of this row is australia .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; country } ; australia }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to sergio rivero . take the year record of this row . select the rows whose winner record fuzzily matches to vicente segu\u00ed porres . take the year record of this row . the first record is 2 years larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; winner ; sergio rivero } ; year } ; hop { filter_eq { all_rows ; winner ; vicente segu\u00ed porres } ; year } } ; 2 years }"
            ]
        },
        {
            "input": "for the 2nd run records of all rows , most of them are less than 40 .",
            "output": [
                "most_less { all_rows ; 2nd run ; 40 }"
            ]
        },
        {
            "input": "select the row whose number of seasons in top division record of all rows is 3rd maximum . the club record of this row is atlante .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of seasons in top division ; 3 } ; club } ; atlante }"
            ]
        },
        {
            "input": "select the rows whose games record is greater than 30 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; games ; 30 } } ; 3 }"
            ]
        },
        {
            "input": "for the round records of all rows , most of them are greater than 3 .",
            "output": [
                "most_greater { all_rows ; round ; 3 }"
            ]
        },
        {
            "input": "select the rows whose ethnic group record fuzzily matches to tigrigna . take the christians record of this row . select the rows whose ethnic group record fuzzily matches to saho . take the christians record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ethnic group ; tigrigna } ; christians } ; hop { filter_eq { all_rows ; ethnic group ; saho } ; christians } }"
            ]
        },
        {
            "input": "select the rows whose round record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; round ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record is greater than 15 . there is only one such row in the table . the year record of this unqiue row is 2005 . the competition record of this unqiue row is world youth championships .",
            "output": [
                "and { only { filter_greater { all_rows ; position ; 15 } } ; and { eq { hop { filter_greater { all_rows ; position ; 15 } ; year } ; 2005 } ; eq { hop { filter_greater { all_rows ; position ; 15 } ; competition } ; world youth championships } } }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 20 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to mariana popova . take the televote / sms record of this row . select the rows whose artist record fuzzily matches to stefan dobrev . take the televote / sms record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; artist ; mariana popova } ; televote / sms } ; hop { filter_eq { all_rows ; artist ; stefan dobrev } ; televote / sms } }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 20,000 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { all_rows ; attendance ; 20,000 } } ; 5 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to arlington .",
            "output": [
                "most_eq { all_rows ; location ; arlington }"
            ]
        },
        {
            "input": "select the rows whose president record fuzzily matches to josiah bartlet . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; president ; josiah bartlet } } ; 5 }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them are greater than or equal to 2:00.00 .",
            "output": [
                "most_greater_eq { all_rows ; time ; 2:00.00 }"
            ]
        },
        {
            "input": "select the row whose departure pune record of all rows is 2nd minimum . the train number record of this row is 99806 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; departure pune ; 2 } ; train number } ; 99806 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to atlanta , ga . take the passengers record of this row . select the rows whose city record fuzzily matches to orlando , fl . take the passengers record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; city ; atlanta , ga } ; passengers } ; hop { filter_eq { all_rows ; city ; orlando , fl } ; passengers } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the location / attendance record of this row is conseco fieldhouse 8214 .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; location / attendance } ; conseco fieldhouse 8214 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 3 - 0 . take the competition record of this row . select the rows whose score record fuzzily matches to 3 - 2 . take the competition record of this row . the first record fuzzily matches to the second record . the competition record of the first row is friendly . the competition record of the second row is friendly .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; score ; 3 - 0 } ; competition } ; hop { filter_eq { all_rows ; score ; 3 - 2 } ; competition } } ; and { eq { hop { filter_eq { all_rows ; score ; 3 - 0 } ; competition } ; friendly } ; eq { hop { filter_eq { all_rows ; score ; 3 - 2 } ; competition } ; friendly } } }"
            ]
        },
        {
            "input": "select the rows whose erp w record is equal to 33 . there is only one such row in the table . the call sign record of this unqiue row is w267 am .",
            "output": [
                "and { only { filter_eq { all_rows ; erp w ; 33 } } ; eq { hop { filter_eq { all_rows ; erp w ; 33 } ; call sign } ; w267 am } }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to vince carter . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; vince carter } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to mile high stadium . the maximum attendance record of these rows is 74970 . the date record of the row with superlative attendance record is sep 21 .",
            "output": [
                "and { eq { max { filter_eq { all_rows ; game site ; mile high stadium } ; attendance } ; 74970 } ; eq { hop { argmax { filter_eq { all_rows ; game site ; mile high stadium } ; attendance } ; date } ; sep 21 } }"
            ]
        },
        {
            "input": "select the row whose races record of all rows is maximum . the year record of this row is 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; races } ; year } ; 2010 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to scotland . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; scotland } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose transfer fee record is greater than 0 . there is only one such row in the table . the player record of this unqiue row is matthew mills .",
            "output": [
                "and { only { filter_greater { all_rows ; transfer fee ; 0 } } ; eq { hop { filter_greater { all_rows ; transfer fee ; 0 } ; player } ; matthew mills } }"
            ]
        },
        {
            "input": "for the event records of all rows , most of them fuzzily match to monsters of rock .",
            "output": [
                "most_eq { all_rows ; event ; monsters of rock }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to still standing . take the launched record of this row . select the rows whose name record fuzzily matches to falling angel . take the launched record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; still standing } ; launched } ; hop { filter_eq { all_rows ; name ; falling angel } ; launched } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to buffalo braves . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; buffalo braves } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose introduced record is equal to 1958 . for the withdrawn records of these rows , most of them are less than 1970 .",
            "output": [
                "most_less { filter_eq { all_rows ; introduced ; 1958 } ; withdrawn ; 1970 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to pittsburgh . take the date record of this row . select the rows whose visitor record fuzzily matches to boston . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; visitor ; pittsburgh } ; date } ; hop { filter_eq { all_rows ; visitor ; boston } ; date } }"
            ]
        },
        {
            "input": "select the row whose density record of all rows is maximum . the english name record of this row is xinluo district .",
            "output": [
                "eq { hop { argmax { all_rows ; density } ; english name } ; xinluo district }"
            ]
        },
        {
            "input": "select the rows whose parishes record is greater than 60 . among these rows , select the rows whose high schools record is less than 5 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; parishes ; 60 } ; high schools ; 5 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is maximum . the official name record of this row is moncton .",
            "output": [
                "eq { hop { argmax { all_rows ; population } ; official name } ; moncton }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to north melbourne . take the home team score record of this row . select the rows whose home team record fuzzily matches to essendon . take the home team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score } ; hop { filter_eq { all_rows ; home team ; essendon } ; home team score } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is lake oval .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; lake oval }"
            ]
        },
        {
            "input": "select the row whose release - year of first charted record record of all rows is minimum . the artist record of this row is frank sinatra .",
            "output": [
                "eq { hop { argmin { all_rows ; release - year of first charted record } ; artist } ; frank sinatra }"
            ]
        },
        {
            "input": "select the row whose tdp record of all rows is 2nd maximum . the brand name ( list ) record of this row is core i3 - 32xx .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; tdp ; 2 } ; brand name ( list ) } ; core i3 - 32xx }"
            ]
        },
        {
            "input": "for the current status records of all rows , most of them fuzzily match to active .",
            "output": [
                "most_eq { all_rows ; current status ; active }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is maximum . the name record of this row is environmental sustainability index .",
            "output": [
                "eq { hop { argmax { all_rows ; rank } ; name } ; environmental sustainability index }"
            ]
        },
        {
            "input": "select the row whose against record of all rows is maximum . the opposing team record of this row is giqualand west .",
            "output": [
                "eq { hop { argmax { all_rows ; against } ; opposing team } ; giqualand west }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 16 . there is only one such row in the table . the team record of this unqiue row is ec s\u00e3o caetano .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 16 } } ; eq { hop { filter_eq { all_rows ; points ; 16 } ; team } ; ec s\u00e3o caetano } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september 6 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 22 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; september 6 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 22 } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose year record is less than 1967 . among these rows , select the rows whose result record fuzzily matches to 2nd . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; year ; 1967 } ; result ; 2nd } } ; 2 }"
            ]
        },
        {
            "input": "for the status records of all rows , all of them fuzzily match to running .",
            "output": [
                "all_eq { all_rows ; status ; running }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to us airways center 18422 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location attendance ; us airways center 18422 } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose price record of all rows is 2nd minimum . the internet plan record of this row is internet 30 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; price ; 2 } ; internet plan } ; internet 30 }"
            ]
        },
        {
            "input": "the average of the 1 - year peak record of all rows is 2869 .",
            "output": [
                "round_eq { avg { all_rows ; 1 - year peak } ; 2869 }"
            ]
        },
        {
            "input": "select the rows whose viewership record is greater than 6.00 million . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; viewership ; 6.00 million } } ; 4 }"
            ]
        },
        {
            "input": "for the open cup records of all rows , all of them fuzzily match to did not enter .",
            "output": [
                "all_eq { all_rows ; open cup ; did not enter }"
            ]
        },
        {
            "input": "select the row whose vuelta record of all rows is maximum . the name record of this row is tony rominger ( sui ) .",
            "output": [
                "eq { hop { argmax { all_rows ; vuelta } ; name } ; tony rominger ( sui ) }"
            ]
        },
        {
            "input": "for the notes records of all rows , all of them fuzzily match to high jump .",
            "output": [
                "all_eq { all_rows ; notes ; high jump }"
            ]
        },
        {
            "input": "the maximum primary ( 6 - 13 years ) record of all rows is 95.41 . the region record of the row with superlative primary ( 6 - 13 years ) record is o'higgins .",
            "output": [
                "and { eq { max { all_rows ; primary ( 6 - 13 years ) } ; 95.41 } ; eq { hop { argmax { all_rows ; primary ( 6 - 13 years ) } ; region } ; o'higgins } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to shane watson ( queensland ) . take the score record of this row . select the rows whose player record fuzzily matches to david hussey ( victoria ) . take the score record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; shane watson ( queensland ) } ; score } ; hop { filter_eq { all_rows ; player ; david hussey ( victoria ) } ; score } } ; -1 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to sunday . select the row whose week record of these rows is 6th minimum . the opponent record of this row is new york giants .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; date ; sunday } ; week ; 6 } ; opponent } ; new york giants }"
            ]
        },
        {
            "input": "select the row whose years for grizzlies record of all rows is 3rd minimum . the player record of this row is bobby jackson .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; years for grizzlies ; 3 } ; player } ; bobby jackson }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to spanish . take the padilla municipality record of this row . select the rows whose language record fuzzily matches to quechua . take the padilla municipality record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; language ; spanish } ; padilla municipality } ; hop { filter_eq { all_rows ; language ; quechua } ; padilla municipality } }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 471,075 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 471,075 }"
            ]
        },
        {
            "input": "the average of the other details record of all rows is 2250 .",
            "output": [
                "round_eq { avg { all_rows ; other details } ; 2250 }"
            ]
        },
        {
            "input": "the average of the apogee record of all rows is 645 .",
            "output": [
                "round_eq { avg { all_rows ; apogee } ; 645 }"
            ]
        },
        {
            "input": "select the rows whose tournaments played record is equal to 19 . there is only one such row in the table . the year record of this unqiue row is 2010 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournaments played ; 19 } } ; eq { hop { filter_eq { all_rows ; tournaments played ; 19 } ; year } ; 2010 } }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 1 . take the bronze record of this row . select the rows whose rank record fuzzily matches to 4 . take the bronze record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; rank ; 1 } ; bronze } ; hop { filter_eq { all_rows ; rank ; 4 } ; bronze } }"
            ]
        },
        {
            "input": "select the rows whose hare quota record is greater than 10000 . there is only one such row in the table . the year record of this unqiue row is 2005 .",
            "output": [
                "and { only { filter_greater { all_rows ; hare quota ; 10000 } } ; eq { hop { filter_greater { all_rows ; hare quota ; 10000 } ; year } ; 2005 } }"
            ]
        },
        {
            "input": "for the type records of all rows , all of them fuzzily match to private .",
            "output": [
                "all_eq { all_rows ; type ; private }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is maximum . the name ( year commissioned ) record of this row is dampier to bunbury natural gas pipeline ( 1984 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; length } ; name ( year commissioned ) } ; dampier to bunbury natural gas pipeline ( 1984 ) }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; democratic } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose stadium record fuzzily matches to eden gardens . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; stadium ; eden gardens } } ; 2 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to three rivers stadium .",
            "output": [
                "most_eq { all_rows ; location ; three rivers stadium }"
            ]
        },
        {
            "input": "the maximum best finish record of all rows is t - 17 . the year record of the row with superlative best finish record is 2000 .",
            "output": [
                "and { eq { max { all_rows ; best finish } ; t - 17 } ; eq { hop { argmax { all_rows ; best finish } ; year } ; 2000 } }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is 2nd maximum . the school record of this row is coastal carolina university .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; founded ; 2 } ; school } ; coastal carolina university }"
            ]
        },
        {
            "input": "select the rows whose date record is greater than 2007 . for the competition records of these rows , most of them fuzzily match to friendly .",
            "output": [
                "most_eq { filter_greater { all_rows ; date ; 2007 } ; competition ; friendly }"
            ]
        },
        {
            "input": "the average of the apparent magnitude record of all rows is 10.95 .",
            "output": [
                "round_eq { avg { all_rows ; apparent magnitude } ; 10.95 }"
            ]
        },
        {
            "input": "select the row whose no record of all rows is 4th maximum . the player record of this row is corliss williamson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; no ; 4 } ; player } ; corliss williamson }"
            ]
        },
        {
            "input": "select the row whose purse record of all rows is maximum . the tournament record of this row is peter jackson champions .",
            "output": [
                "eq { hop { argmax { all_rows ; purse } ; tournament } ; peter jackson champions }"
            ]
        },
        {
            "input": "the maximum points record of all rows is 51 . the club record of the row with superlative points record is rodiklis kaunas .",
            "output": [
                "and { eq { max { all_rows ; points } ; 51 } ; eq { hop { argmax { all_rows ; points } ; club } ; rodiklis kaunas } }"
            ]
        },
        {
            "input": "select the rows whose ends won record is less than 50 . the 1st maximum stolen ends record of these rows is 14 . the locale record of the row with 1st maximum stolen ends record is germany .",
            "output": [
                "and { eq { nth_max { filter_less { all_rows ; ends won ; 50 } ; stolen ends ; 1 } ; 14 } ; eq { hop { nth_argmax { filter_less { all_rows ; ends won ; 50 } ; stolen ends ; 1 } ; locale } ; germany } }"
            ]
        },
        {
            "input": "select the rows whose continent record fuzzily matches to asia . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; continent ; asia } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose sentence record fuzzily matches to fine . there is only one such row in the table . the name record of this unqiue row is boris picano - nacci .",
            "output": [
                "and { only { filter_eq { all_rows ; sentence ; fine } } ; eq { hop { filter_eq { all_rows ; sentence ; fine } ; name } ; boris picano - nacci } }"
            ]
        },
        {
            "input": "the average of the duration record of all rows is 54 .",
            "output": [
                "round_eq { avg { all_rows ; duration } ; 54 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to august . for the result records of these rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; august } ; result ; l }"
            ]
        },
        {
            "input": "select the rows whose 2nd venue record fuzzily matches to mexico city . there is only one such row in the table . the year record of this unqiue row is 2007 .",
            "output": [
                "and { only { filter_eq { all_rows ; 2nd venue ; mexico city } } ; eq { hop { filter_eq { all_rows ; 2nd venue ; mexico city } ; year } ; 2007 } }"
            ]
        },
        {
            "input": "select the row whose stadium capacity record of all rows is 2nd maximum . the university record of this row is universit\u00e9 laval .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; stadium capacity ; 2 } ; university } ; universit\u00e9 laval }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to swansea uplands rfc . take the tries for record of this row . select the rows whose club record fuzzily matches to trebanos rfc . take the tries for record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; club ; swansea uplands rfc } ; tries for } ; hop { filter_eq { all_rows ; club ; trebanos rfc } ; tries for } }"
            ]
        },
        {
            "input": "the average of the high points record of all rows is 20.8 .",
            "output": [
                "round_eq { avg { all_rows ; high points } ; 20.8 }"
            ]
        },
        {
            "input": "select the rows whose played record fuzzily matches to 30 . the number of such rows is 16 .",
            "output": [
                "eq { count { filter_eq { all_rows ; played ; 30 } } ; 16 }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the year record of this row is 2012 .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; year } ; 2012 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to czechoslovakia . among these rows , select the rows whose date record is less than 1980 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; place ; czechoslovakia } ; date ; 1980 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose name ( english ) record fuzzily matches to alliance '90 / the greens . take the votes ( 2011 ) record of this row . select the rows whose name ( english ) record fuzzily matches to free democratic party . take the votes ( 2011 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ( english ) ; alliance '90 / the greens } ; votes ( 2011 ) } ; hop { filter_eq { all_rows ; name ( english ) ; free democratic party } ; votes ( 2011 ) } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to power forward . there is only one such row in the table . the player record of this unqiue row is pete chilcutt .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; power forward } } ; eq { hop { filter_eq { all_rows ; position ; power forward } ; player } ; pete chilcutt } }"
            ]
        },
        {
            "input": "for the rebuilt records of all rows , most of them are less than 1930 .",
            "output": [
                "most_less { all_rows ; rebuilt ; 1930 }"
            ]
        },
        {
            "input": "select the rows whose dominant religion ( 2002 ) record fuzzily matches to orthodox christianity . among these rows , select the rows whose population ( 2011 ) record is less than 2100 . there is only one such row in the table . the settlement record of this unqiue row is stepanovi\u0107evo .",
            "output": [
                "and { only { filter_less { filter_eq { all_rows ; dominant religion ( 2002 ) ; orthodox christianity } ; population ( 2011 ) ; 2100 } } ; eq { hop { filter_less { filter_eq { all_rows ; dominant religion ( 2002 ) ; orthodox christianity } ; population ( 2011 ) ; 2100 } ; settlement } ; stepanovi\u0107evo } }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to pietersburg . take the population record of this row . select the rows whose place record fuzzily matches to alldays . take the population record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; place ; pietersburg } ; population } ; hop { filter_eq { all_rows ; place ; alldays } ; population } }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 70000 . among these rows , select the rows whose tv time record fuzzily matches to fox . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; attendance ; 70000 } ; tv time ; fox } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose months in malayalam era record fuzzily matches to chingam . take the gregorian calendar record of this row . select the rows whose months in malayalam era record fuzzily matches to tulam . take the gregorian calendar record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; months in malayalam era ; chingam } ; gregorian calendar } ; hop { filter_eq { all_rows ; months in malayalam era ; tulam } ; gregorian calendar } }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to beyer peacock & co . the average of the builder 's no record of these rows is 3442 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; builder ; beyer peacock & co } ; builder 's no } ; 3442 }"
            ]
        },
        {
            "input": "select the rows whose lec sport record fuzzily matches to men 's lacrosse . there is only one such row in the table . the institution record of this unqiue row is salem state university .",
            "output": [
                "and { only { filter_eq { all_rows ; lec sport ; men 's lacrosse } } ; eq { hop { filter_eq { all_rows ; lec sport ; men 's lacrosse } ; institution } ; salem state university } }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 4 . among these rows , select the rows whose draws record is less than 4 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; wins ; 4 } ; draws ; 4 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to luke youlden . there is only one such row in the table . the race title record of this unqiue row is mallala .",
            "output": [
                "and { only { filter_eq { all_rows ; winner ; luke youlden } } ; eq { hop { filter_eq { all_rows ; winner ; luke youlden } ; race title } ; mallala } }"
            ]
        },
        {
            "input": "the maximum score record of all rows is 7 - 1 . the home team record of the row with superlative score record is aston villa .",
            "output": [
                "and { eq { max { all_rows ; score } ; 7 - 1 } ; eq { hop { argmax { all_rows ; score } ; home team } ; aston villa } }"
            ]
        },
        {
            "input": "select the rows whose skip record fuzzily matches to cathy king . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; skip ; cathy king } }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 9 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 9 }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is 2nd maximum . the institution record of this row is high point university .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; founded ; 2 } ; institution } ; high point university }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to vilson ahmeti . take the term start record of this row . select the rows whose name record fuzzily matches to ilir meta . take the term start record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; vilson ahmeti } ; term start } ; hop { filter_eq { all_rows ; name ; ilir meta } ; term start } }"
            ]
        },
        {
            "input": "the average of the rank record of all rows is 11.53 .",
            "output": [
                "round_eq { avg { all_rows ; rank } ; 11.53 }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to reveal records . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; label ; reveal records } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose 2nd component record fuzzily matches to acetone . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2nd component ; acetone } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to st louis cardinals . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; st louis cardinals } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose competition record does not match to friendly . there is only one such row in the table .",
            "output": [
                "only { filter_not_eq { all_rows ; competition ; friendly } }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to santa elena . there is only one such row in the table . the brand record of this unqiue row is la poderosa .",
            "output": [
                "and { only { filter_eq { all_rows ; city of license ; santa elena } } ; eq { hop { filter_eq { all_rows ; city of license ; santa elena } ; brand } ; la poderosa } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to canada . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; canada } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose number record of all rows is maximum . the unit numbers record of this row is 254001 - 254032 .",
            "output": [
                "eq { hop { argmax { all_rows ; number } ; unit numbers } ; 254001 - 254032 }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to lawrence technological university . take the enrollment record of this row . select the rows whose institution record fuzzily matches to northern michigan university . take the enrollment record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; institution ; lawrence technological university } ; enrollment } ; hop { filter_eq { all_rows ; institution ; northern michigan university } ; enrollment } }"
            ]
        },
        {
            "input": "select the row whose points ( pts ) record of all rows is 2nd maximum . the team ( equipo ) record of this row is san francisco fc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ( pts ) ; 2 } ; team ( equipo ) } ; san francisco fc }"
            ]
        },
        {
            "input": "the sum of the wins record of all rows is 4 .",
            "output": [
                "round_eq { sum { all_rows ; wins } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose municipality record fuzzily matches to tecate . take the area ( km2 ) record of this row . select the rows whose municipality record fuzzily matches to tijuana . take the area ( km2 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; municipality ; tecate } ; area ( km2 ) } ; hop { filter_eq { all_rows ; municipality ; tijuana } ; area ( km2 ) } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to russia . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; russia } } ; 2 }"
            ]
        },
        {
            "input": "for the venue records of all rows , all of them fuzzily match to national stadium , tokyo , tokyo .",
            "output": [
                "all_eq { all_rows ; venue ; national stadium , tokyo , tokyo }"
            ]
        },
        {
            "input": "the average of the year erected record of all rows is 1965 .",
            "output": [
                "round_eq { avg { all_rows ; year erected } ; 1965 }"
            ]
        },
        {
            "input": "the average of the viewing figure record of all rows is 6.40 million .",
            "output": [
                "round_eq { avg { all_rows ; viewing figure } ; 6.40 million }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are less than 17000 .",
            "output": [
                "most_less { all_rows ; attendance ; 17000 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to john sullivan . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; john sullivan } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose rank record is equal to 12 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; rank ; 12 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose score record is greater than 400 . there is only one such row in the table . the batsmen record of this unqiue row is adrian dale and viv richards .",
            "output": [
                "and { only { filter_greater { all_rows ; score ; 400 } } ; eq { hop { filter_greater { all_rows ; score ; 400 } ; batsmen } ; adrian dale and viv richards } }"
            ]
        },
        {
            "input": "select the rows whose incoming manager record fuzzily matches to dar\u00edo franco . take the date hired record of this row . select the rows whose incoming manager record fuzzily matches to octavio becerril . take the date hired record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incoming manager ; dar\u00edo franco } ; date hired } ; hop { filter_eq { all_rows ; incoming manager ; octavio becerril } ; date hired } }"
            ]
        },
        {
            "input": "the average of the races record of all rows is 16.6 .",
            "output": [
                "round_eq { avg { all_rows ; races } ; 16.6 }"
            ]
        },
        {
            "input": "select the rows whose college / junior / club team record fuzzily matches to calgary centennials . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; college / junior / club team ; calgary centennials } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose shuji kondo record fuzzily matches to kondo ( 0:33 ) . there is only one such row in the table . the block a record of this unqiue row is ryuji hijikata .",
            "output": [
                "and { only { filter_eq { all_rows ; shuji kondo ; kondo ( 0:33 ) } } ; eq { hop { filter_eq { all_rows ; shuji kondo ; kondo ( 0:33 ) } ; block a } ; ryuji hijikata } }"
            ]
        },
        {
            "input": "select the row whose number of seasons in top division record of all rows is 3rd maximum . the club record of this row is rijeka a , b .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of seasons in top division ; 3 } ; club } ; rijeka a , b }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to may 27 . take the high rebounds record of this row . select the rows whose date record fuzzily matches to may 29 . take the high rebounds record of this row . the first record is 2 larger than the second record . the high rebounds record of the first row is duncan ( 17 ) . the high rebounds record of the second row is duncan ( 15 ) .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; date ; may 27 } ; high rebounds } ; hop { filter_eq { all_rows ; date ; may 29 } ; high rebounds } } ; 2 } ; and { eq { hop { filter_eq { all_rows ; date ; may 27 } ; high rebounds } ; duncan ( 17 ) } ; eq { hop { filter_eq { all_rows ; date ; may 29 } ; high rebounds } ; duncan ( 15 ) } } }"
            ]
        },
        {
            "input": "select the row whose points against record of all rows is maximum . the club record of this row is cwmgors rfc .",
            "output": [
                "eq { hop { argmax { all_rows ; points against } ; club } ; cwmgors rfc }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 9th minimum . the race record of this row is italian grand prix .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 9 } ; race } ; italian grand prix }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to 25 october .",
            "output": [
                "most_eq { all_rows ; date ; 25 october }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 21 july 1951 .",
            "output": [
                "all_eq { all_rows ; date ; 21 july 1951 }"
            ]
        },
        {
            "input": "select the rows whose namesake record fuzzily matches to assyrian town where ishtar was worshipped . there is only one such row in the table . the name record of this unqiue row is arbela sulcus .",
            "output": [
                "and { only { filter_eq { all_rows ; namesake ; assyrian town where ishtar was worshipped } } ; eq { hop { filter_eq { all_rows ; namesake ; assyrian town where ishtar was worshipped } ; name } ; arbela sulcus } }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to united kingdom . take the date record of this row . select the rows whose region record fuzzily matches to japan . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; region ; united kingdom } ; date } ; hop { filter_eq { all_rows ; region ; japan } ; date } }"
            ]
        },
        {
            "input": "select the rows whose laps record is less than 17 . there is only one such row in the table . the year record of this unqiue row is 1966 .",
            "output": [
                "and { only { filter_less { all_rows ; laps ; 17 } } ; eq { hop { filter_less { all_rows ; laps ; 17 } ; year } ; 1966 } }"
            ]
        },
        {
            "input": "select the row whose density square record of all rows is 1st maximum . the municipality record of this row is malm\u00f6 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; density square ; 1 } ; municipality } ; malm\u00f6 }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner - up . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome ; runner - up } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to english . the sum of the points record of these rows is 43 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; language ; english } ; points } ; 43 }"
            ]
        },
        {
            "input": "the average of the margin of victory record of all rows is 2 .",
            "output": [
                "round_eq { avg { all_rows ; margin of victory } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose film record fuzzily matches to chicago . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; film ; chicago } } ; 2 }"
            ]
        },
        {
            "input": "the average of the elevation ( m ) record of all rows is 4390 .",
            "output": [
                "round_eq { avg { all_rows ; elevation ( m ) } ; 4390 }"
            ]
        },
        {
            "input": "select the rows whose to par record is equal to 11 . there is only one such row in the table . the player record of this unqiue row is tiger woods .",
            "output": [
                "and { only { filter_eq { all_rows ; to par ; 11 } } ; eq { hop { filter_eq { all_rows ; to par ; 11 } ; player } ; tiger woods } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd minimum . the name record of this row is pieter van den hoogenband .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 2 } ; name } ; pieter van den hoogenband }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to win . for the orangemen points records of these rows , most of them are greater than 20 .",
            "output": [
                "most_greater { filter_eq { all_rows ; result ; win } ; orangemen points ; 20 }"
            ]
        },
        {
            "input": "for the pl gp records of all rows , all of them are equal to 0 .",
            "output": [
                "all_eq { all_rows ; pl gp ; 0 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is maximum . the title record of this row is identity crisis .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( million ) } ; title } ; identity crisis }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the date record of this row is november 27 , 1988 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; date } ; november 27 , 1988 }"
            ]
        },
        {
            "input": "select the rows whose number of electorates ( 2009 ) record is greater than 190000 . there is only one such row in the table . the name record of this unqiue row is suwasra .",
            "output": [
                "and { only { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } } ; eq { hop { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } ; name } ; suwasra } }"
            ]
        },
        {
            "input": "for the first aired records of all rows , most of them are greater than 1970 .",
            "output": [
                "most_greater { all_rows ; first aired ; 1970 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 149299 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 149299 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( millions ) record of all rows is maximum . the no in series record of this row is 8 .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( millions ) } ; no in series } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose arena record fuzzily matches to jobingcom arena . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; arena ; jobingcom arena } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet ( i ) . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; carpet ( i ) } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to italy . there is only one such row in the table . the date record of this unqiue row is june 10 , 1990 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; italy } } ; eq { hop { filter_eq { all_rows ; venue ; italy } ; date } ; june 10 , 1990 } }"
            ]
        },
        {
            "input": "select the rows whose womens singles record fuzzily matches to zhou mi . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; womens singles ; zhou mi } }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is 3rd maximum . the player record of this row is caner pek\u015fen .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; height ; 3 } ; player } ; caner pek\u015fen }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to usa . among these rows , select the rows whose position record fuzzily matches to rw . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; nationality ; usa } ; position ; rw } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to oregon . select the row whose year record of these rows is 2nd minimum . the result record of this row is resigned .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; state ; oregon } ; year ; 2 } ; result } ; resigned }"
            ]
        },
        {
            "input": "select the row whose size record of all rows is 2nd maximum . the building record of this row is copenhagen concert hall .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; size ; 2 } ; building } ; copenhagen concert hall }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to face / off . take the year record of this row . select the rows whose title record fuzzily matches to antz . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; face / off } ; year } ; hop { filter_eq { all_rows ; title ; antz } ; year } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60,000 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60,000 } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose money record of all rows is maximum . the place record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; money } ; place } ; 1 }"
            ]
        },
        {
            "input": "select the row whose earnings record of all rows is 3rd maximum . the player record of this row is arnold palmer .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; earnings ; 3 } ; player } ; arnold palmer }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to steve buscemi . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; steve buscemi } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose qual 1 record of all rows is 2nd minimum . the name record of this row is s\u00e9bastien bourdais .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; qual 1 ; 2 } ; name } ; s\u00e9bastien bourdais }"
            ]
        },
        {
            "input": "the average of the quantity made record of all rows is 3.83 .",
            "output": [
                "round_eq { avg { all_rows ; quantity made } ; 3.83 }"
            ]
        },
        {
            "input": "select the row whose runs record of all rows is 2nd maximum . the fielding team record of this row is india .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; runs ; 2 } ; fielding team } ; india }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is eastern university .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; eastern university }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than or equal to 10000 .",
            "output": [
                "most_greater_eq { all_rows ; crowd ; 10000 }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to scotland . take the against record of this row . select the rows whose opposing teams record fuzzily matches to wales . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposing teams ; scotland } ; against } ; hop { filter_eq { all_rows ; opposing teams ; wales } ; against } }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is maximum . the name record of this row is place hauteville .",
            "output": [
                "eq { hop { argmax { all_rows ; floors } ; name } ; place hauteville }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to villanova . there is only one such row in the table . the player record of this unqiue row is michael bradley .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; villanova } } ; eq { hop { filter_eq { all_rows ; school / club team ; villanova } ; player } ; michael bradley } }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to julian jones . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; julian jones } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is 2nd maximum . the nation record of this row is romania .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; gold ; 2 } ; nation } ; romania }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the team 1 record of this row is fc nantes ( d1 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; team 1 } ; fc nantes ( d1 ) }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are less than 15 .",
            "output": [
                "most_less { all_rows ; wins ; 15 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd minimum . the winner record of this row is paddy o'prado .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 2 } ; winner } ; paddy o'prado }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 0 . among these rows , select the rows whose silver record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; gold ; 0 } ; silver ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the total receipts record of all rows is 12444351 .",
            "output": [
                "round_eq { avg { all_rows ; total receipts } ; 12444351 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 58260 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 58260 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 9.0 . among these rows , select the rows whose crowd record is greater than 10000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; home team score ; 9.0 } ; crowd ; 10000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to english . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; language ; english } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to february . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; february } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to catchings . for the high points records of these rows , most of them fuzzily match to catchings .",
            "output": [
                "most_eq { filter_eq { all_rows ; high rebounds ; catchings } ; high points ; catchings }"
            ]
        },
        {
            "input": "select the rows whose congress record fuzzily matches to 111th congress . among these rows , select the rows whose date introduced record fuzzily matches to april . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; congress ; 111th congress } ; date introduced ; april } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose song record fuzzily matches to retour . take the place record of this row . select the rows whose song record fuzzily matches to waterman . take the place record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; song ; retour } ; place } ; hop { filter_eq { all_rows ; song ; waterman } ; place } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to john e wool . take the appointment date record of this row . select the rows whose name record fuzzily matches to david e twiggs . take the appointment date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; john e wool } ; appointment date } ; hop { filter_eq { all_rows ; name ; david e twiggs } ; appointment date } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to john kline . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to jim ramstad . take the first elected record of this row . the first record is greater than the second record . the first elected record of the first row is 2002 . the first elected record of the second row is 1990 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; incumbent ; john kline } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; jim ramstad } ; first elected } } ; and { eq { hop { filter_eq { all_rows ; incumbent ; john kline } ; first elected } ; 2002 } ; eq { hop { filter_eq { all_rows ; incumbent ; jim ramstad } ; first elected } ; 1990 } } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . among these rows , select the rows whose week record fuzzily matches to may . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; surface ; clay } ; week ; may } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the pubs 2010 record of all rows is 457 .",
            "output": [
                "round_eq { sum { all_rows ; pubs 2010 } ; 457 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1989 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 1989 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose roads intersected record fuzzily matches to route 53 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; roads intersected ; route 53 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1967 . take the laps record of this row . select the rows whose year record fuzzily matches to 1971 . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1967 } ; laps } ; hop { filter_eq { all_rows ; year ; 1971 } ; laps } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; carpet } } ; 2 }"
            ]
        },
        {
            "input": "for the subregion records of all rows , most of them fuzzily match to baixo vouga .",
            "output": [
                "most_eq { all_rows ; subregion ; baixo vouga }"
            ]
        },
        {
            "input": "select the rows whose average attendance as % of capacity record is greater than or equal to 90 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; average attendance as % of capacity ; 90 } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose 2011 ( imf ) record of all rows is 3rd maximum . the nation record of this row is uruguay .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; 2011 ( imf ) ; 3 } ; nation } ; uruguay }"
            ]
        },
        {
            "input": "select the rows whose singer record fuzzily matches to samanta karavello . take the points record of this row . select the rows whose singer record fuzzily matches to teuta kurti . take the points record of this row . the first record is 20 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; singer ; samanta karavello } ; points } ; hop { filter_eq { all_rows ; singer ; teuta kurti } ; points } } ; 20 }"
            ]
        },
        {
            "input": "select the rows whose spectators record is equal to 50000 . among these rows , select the rows whose res record fuzzily matches to 3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; spectators ; 50000 } ; res ; 3 } } ; 2 }"
            ]
        },
        {
            "input": "for the dominant religion ( 2002 ) records of all rows , all of them fuzzily match to orthodox christianity .",
            "output": [
                "all_eq { all_rows ; dominant religion ( 2002 ) ; orthodox christianity }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is 17 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; 17 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is ralph a gamble .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; ralph a gamble }"
            ]
        },
        {
            "input": "for the final - rank records of all rows , most of them are less than or equal to 5 .",
            "output": [
                "most_less_eq { all_rows ; final - rank ; 5 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 2nd . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; 2nd } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the nation record of this row is australia .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; nation } ; australia }"
            ]
        },
        {
            "input": "select the row whose distance record of all rows is minimum . the city 1 record of this row is s\u00e3o paulo . the city 2 record of this row is rio de janeiro .",
            "output": [
                "and { eq { hop { argmin { all_rows ; distance } ; city 1 } ; s\u00e3o paulo } ; eq { hop { argmin { all_rows ; distance } ; city 2 } ; rio de janeiro } }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to chip johannessen . there is only one such row in the table . the season record of this unqiue row is 17 .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; chip johannessen } } ; eq { hop { filter_eq { all_rows ; written by ; chip johannessen } ; season } ; 17 } }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to barisal . take the country record of this row . select the rows whose city record fuzzily matches to chittagong . take the country record of this row . the first record fuzzily matches to the second record . the country record of the first row is bangladesh . the country record of the second row is bangladesh .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; city ; barisal } ; country } ; hop { filter_eq { all_rows ; city ; chittagong } ; country } } ; and { eq { hop { filter_eq { all_rows ; city ; barisal } ; country } ; bangladesh } ; eq { hop { filter_eq { all_rows ; city ; chittagong } ; country } ; bangladesh } } }"
            ]
        },
        {
            "input": "select the rows whose home team score record is less than 10 . the average of the crowd record of these rows is 16600 .",
            "output": [
                "round_eq { avg { filter_less { all_rows ; home team score ; 10 } ; crowd } ; 16600 }"
            ]
        },
        {
            "input": "select the rows whose locomotive type record fuzzily matches to steam . select the row whose withdrawn record of these rows is 1st minimum . the number record of this row is 1 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; locomotive type ; steam } ; withdrawn ; 1 } ; number } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to left wing . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; left wing } } ; 4 }"
            ]
        },
        {
            "input": "for the directed by records of all rows , all of them fuzzily match to tyler perry .",
            "output": [
                "all_eq { all_rows ; directed by ; tyler perry }"
            ]
        },
        {
            "input": "the average of the round record of all rows is 3.7 .",
            "output": [
                "round_eq { avg { all_rows ; round } ; 3.7 }"
            ]
        },
        {
            "input": "select the rows whose time record is equal to 25.61 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time ; 25.61 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november 18 , 1962 . take the attendance record of this row . select the rows whose date record fuzzily matches to december 16 , 1962 . take the attendance record of this row . the first record is greater than the second record . the attendance record of the first row is 12500 . the attendance record of the second row is 8000 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; date ; november 18 , 1962 } ; attendance } ; hop { filter_eq { all_rows ; date ; december 16 , 1962 } ; attendance } } ; and { eq { hop { filter_eq { all_rows ; date ; november 18 , 1962 } ; attendance } ; 12500 } ; eq { hop { filter_eq { all_rows ; date ; december 16 , 1962 } ; attendance } ; 8000 } } }"
            ]
        },
        {
            "input": "select the rows whose viewers ( millions ) record is less than 4 million . there is only one such row in the table .",
            "output": [
                "only { filter_less { all_rows ; viewers ( millions ) ; 4 million } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to south africa . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; south africa } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to oklahoma city . select the row whose date record of these rows is 2nd minimum . the location attendance record of this row is toyota center 15316 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; team ; oklahoma city } ; date ; 2 } ; location attendance } ; toyota center 15316 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to apr 2003 . the sum of the time record of these rows is 3:00 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; apr 2003 } ; time } ; 3:00 }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is 2nd maximum . the player record of this row is argo meresaar ( c ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; height ; 2 } ; player } ; argo meresaar ( c ) }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the nation record of this row is germany .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; nation } ; germany }"
            ]
        },
        {
            "input": "for the 1890 census records of all rows , most of them fuzzily match to na .",
            "output": [
                "most_eq { all_rows ; 1890 census ; na }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to patrick collins . take the pick record of this row . select the rows whose player record fuzzily matches to sterling sharpe . take the pick record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; patrick collins } ; pick } ; hop { filter_eq { all_rows ; player ; sterling sharpe } ; pick } }"
            ]
        },
        {
            "input": "select the rows whose winner / nominee ( s ) record fuzzily matches to dev patel . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winner / nominee ( s ) ; dev patel } } ; 1 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to not nominated .",
            "output": [
                "most_eq { all_rows ; result ; not nominated }"
            ]
        },
        {
            "input": "select the rows whose candidate record fuzzily matches to kalevi kivist\u00f6 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; candidate ; kalevi kivist\u00f6 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose % of votes khuzestan record of all rows is maximum . the candidates record of this row is mehdi karroubi .",
            "output": [
                "eq { hop { argmax { all_rows ; % of votes khuzestan } ; candidates } ; mehdi karroubi }"
            ]
        },
        {
            "input": "select the rows whose location in park record fuzzily matches to baja ridge . select the row whose year first opened record of these rows is 1st minimum . the current name record of this row is revolution .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; location in park ; baja ridge } ; year first opened ; 1 } ; current name } ; revolution }"
            ]
        },
        {
            "input": "for the weight records of all rows , most of them are less than 200 .",
            "output": [
                "most_less { all_rows ; weight ; 200 }"
            ]
        },
        {
            "input": "select the rows whose difference record is less than 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { all_rows ; difference ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose description record fuzzily matches to heavy - lift helicopter . among these rows , select the rows whose total disk area record is greater than 8000 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; description ; heavy - lift helicopter } ; total disk area ; 8000 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose ceased to be duchess record fuzzily matches to husband 's execution . there is only one such row in the table . the name record of this unqiue row is louise marie ad\u00e9la\u00efde de bourbon .",
            "output": [
                "and { only { filter_eq { all_rows ; ceased to be duchess ; husband 's execution } } ; eq { hop { filter_eq { all_rows ; ceased to be duchess ; husband 's execution } ; name } ; louise marie ad\u00e9la\u00efde de bourbon } }"
            ]
        },
        {
            "input": "for the implementation records of all rows , most of them fuzzily match to software .",
            "output": [
                "most_eq { all_rows ; implementation ; software }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to team mad madison heights mi . there is only one such row in the table . the year record of this unqiue row is 1997 details .",
            "output": [
                "and { only { filter_eq { all_rows ; winner ; team mad madison heights mi } } ; eq { hop { filter_eq { all_rows ; winner ; team mad madison heights mi } ; year } ; 1997 details } }"
            ]
        },
        {
            "input": "for the first game records of all rows , most of them are equal to 1991 .",
            "output": [
                "most_eq { all_rows ; first game ; 1991 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 12 june 1937 . for the crowd records of these rows , most of them are less than 20000 .",
            "output": [
                "most_less { filter_eq { all_rows ; date ; 12 june 1937 } ; crowd ; 20000 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . for the events records of these rows , most of them are greater than 21 .",
            "output": [
                "most_greater { filter_eq { all_rows ; country ; united states } ; events ; 21 }"
            ]
        },
        {
            "input": "select the rows whose country of release record fuzzily matches to argentina . there is only one such row in the table . the title record of this unqiue row is demasiado candente .",
            "output": [
                "and { only { filter_eq { all_rows ; country of release ; argentina } } ; eq { hop { filter_eq { all_rows ; country of release ; argentina } ; title } ; demasiado candente } }"
            ]
        },
        {
            "input": "for the width records of all rows , all of them are equal to 96 .",
            "output": [
                "all_eq { all_rows ; width ; 96 }"
            ]
        },
        {
            "input": "select the row whose lost record of all rows is 2nd maximum . the club record of this row is tycroes rfc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; lost ; 2 } ; club } ; tycroes rfc }"
            ]
        },
        {
            "input": "select the row whose nor 1 record of all rows is 3rd maximum . the driver record of this row is jens klingmann .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; nor 1 ; 3 } ; driver } ; jens klingmann }"
            ]
        },
        {
            "input": "select the rows whose first season of current spell in segunda divisi\u00f3n record is equal to 2013 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first season of current spell in segunda divisi\u00f3n ; 2013 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose population ( 1991 ) record is greater than 15,000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; population ( 1991 ) ; 15,000 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to 3rd . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; place ; 3rd } } ; 5 }"
            ]
        },
        {
            "input": "the average of the home team score record of all rows is 10 .",
            "output": [
                "round_eq { avg { all_rows ; home team score } ; 10 }"
            ]
        },
        {
            "input": "select the row whose broadcast date record of all rows is 3rd minimum . the translation of title record of this row is hold out until you hit the wall .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; broadcast date ; 3 } ; translation of title } ; hold out until you hit the wall }"
            ]
        },
        {
            "input": "select the rows whose runs record is greater than 300 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_greater { all_rows ; runs ; 300 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose runner - up record fuzzily matches to corina morariu . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; runner - up ; corina morariu } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose ihsaa football class record fuzzily matches to aaaa . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; ihsaa football class ; aaaa } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose televotes record of all rows is maximum . the performer record of this row is vlado janevski .",
            "output": [
                "eq { hop { argmax { all_rows ; televotes } ; performer } ; vlado janevski }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to nolan . the average of the high points record of these rows is 25.25 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high points ; nolan } ; high points } ; 25.25 }"
            ]
        },
        {
            "input": "select the row whose place record of all rows is minimum . the player record of this row is davis love iii .",
            "output": [
                "eq { hop { argmin { all_rows ; place } ; player } ; davis love iii }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 136.82 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 136.82 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2010 . among these rows , select the rows whose recipient record fuzzily matches to the suite life on deck . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; year ; 2010 } ; recipient ; the suite life on deck } } ; 2 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 27.42 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 27.42 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to geelong . take the home team score record of this row . select the rows whose home team record fuzzily matches to richmond . take the home team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; geelong } ; home team score } ; hop { filter_eq { all_rows ; home team ; richmond } ; home team score } }"
            ]
        },
        {
            "input": "for the laps led records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; laps led ; 0 }"
            ]
        },
        {
            "input": "select the rows whose timeslot record fuzzily matches to live 3p-6p . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; timeslot ; live 3p-6p } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to andrew chappelle . take the round record of this row . select the rows whose opponent record fuzzily matches to danny payne . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; andrew chappelle } ; round } ; hop { filter_eq { all_rows ; opponent ; danny payne } ; round } }"
            ]
        },
        {
            "input": "select the rows whose constituency record fuzzily matches to south west devon . for the electorate records of these rows , most of them are greater than 9000 .",
            "output": [
                "most_greater { filter_eq { all_rows ; constituency ; south west devon } ; electorate ; 9000 }"
            ]
        },
        {
            "input": "the 3rd maximum date record of all rows is september 18 , 2005 .",
            "output": [
                "eq { nth_max { all_rows ; date ; 3 } ; september 18 , 2005 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 2.3 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 2.3 }"
            ]
        },
        {
            "input": "select the rows whose performer record fuzzily matches to kaliopi . take the rank record of this row . select the rows whose performer record fuzzily matches to marjan necak . take the rank record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; performer ; kaliopi } ; rank } ; hop { filter_eq { all_rows ; performer ; marjan necak } ; rank } }"
            ]
        },
        {
            "input": "the sum of the prize ( k ) record of all rows is 1920 .",
            "output": [
                "round_eq { sum { all_rows ; prize ( k ) } ; 1920 }"
            ]
        },
        {
            "input": "select the rows whose governorate record fuzzily matches to piotrk\u00f3w governorate . take the population , in thousands , ( 1905 ) record of this row . select the rows whose governorate record fuzzily matches to p\u0142ock governorate . take the population , in thousands , ( 1905 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; governorate ; piotrk\u00f3w governorate } ; population , in thousands , ( 1905 ) } ; hop { filter_eq { all_rows ; governorate ; p\u0142ock governorate } ; population , in thousands , ( 1905 ) } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to alvan adams . take the from record of this row . select the rows whose player record fuzzily matches to rafael addison . take the from record of this row . the second record is 11 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; alvan adams } ; from } ; hop { filter_eq { all_rows ; player ; rafael addison } ; from } } ; -11 }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to earl watson . the number of such rows is 13 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high assists ; earl watson } } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose episode record fuzzily matches to episode 4 . take the viewers ( millions ) record of this row . select the rows whose episode record fuzzily matches to episode 2 . take the viewers ( millions ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; episode ; episode 4 } ; viewers ( millions ) } ; hop { filter_eq { all_rows ; episode ; episode 2 } ; viewers ( millions ) } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to central . among these rows , select the rows whose capacity record is greater than 5000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; venue ; central } ; capacity ; 5000 } } ; 2 }"
            ]
        },
        {
            "input": "the maximum weight record of all rows is 247 . the name record of the row with superlative weight record is matt kleinmann .",
            "output": [
                "and { eq { max { all_rows ; weight } ; 247 } ; eq { hop { argmax { all_rows ; weight } ; name } ; matt kleinmann } }"
            ]
        },
        {
            "input": "for the platform ( s ) records of all rows , most of them fuzzily match to playstation 3 .",
            "output": [
                "most_eq { all_rows ; platform ( s ) ; playstation 3 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . there is only one such row in the table . the incumbent record of this unqiue row is robert cramer .",
            "output": [
                "and { only { filter_eq { all_rows ; party ; democratic } } ; eq { hop { filter_eq { all_rows ; party ; democratic } ; incumbent } ; robert cramer } }"
            ]
        },
        {
            "input": "select the rows whose bronze record is equal to 1 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; bronze ; 1 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose enrollment ( 2010 ) record of all rows is 2nd maximum . the school record of this row is heritage .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ( 2010 ) ; 2 } ; school } ; heritage }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to 197 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; 197 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose party record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; party } } ; 6 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 19.71 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 19.71 }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( in millions ) record is greater than 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; us viewers ( in millions ) ; 10 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is 3rd maximum . the title record of this row is blood and treasure .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 3 } ; title } ; blood and treasure }"
            ]
        },
        {
            "input": "for the object type records of all rows , most of them fuzzily match to globular cluster .",
            "output": [
                "most_eq { all_rows ; object type ; globular cluster }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to ( part . among these rows , select the rows whose directed by record fuzzily matches to tom tataranowicz . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; title ; ( part } ; directed by ; tom tataranowicz } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to emmanuel christian school . take the size record of this row . select the rows whose school record fuzzily matches to wabash high school . take the size record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; school ; emmanuel christian school } ; size } ; hop { filter_eq { all_rows ; school ; wabash high school } ; size } }"
            ]
        },
        {
            "input": "select the rows whose total record is equal to 24 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; total ; 24 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 7 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to tagawa . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; tagawa } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose wickets record of all rows is 2nd maximum . the player record of this row is tim bresnan .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; wickets ; 2 } ; player } ; tim bresnan }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april 18 . take the score record of this row . select the rows whose date record fuzzily matches to april 21 . take the score record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; date ; april 18 } ; score } ; hop { filter_eq { all_rows ; date ; april 21 } ; score } }"
            ]
        },
        {
            "input": "for the margin of victory records of all rows , most of them fuzzily match to 1 stroke .",
            "output": [
                "most_eq { all_rows ; margin of victory ; 1 stroke }"
            ]
        },
        {
            "input": "select the rows whose texas vs record fuzzily matches to missouri . take the current streak record of this row . select the rows whose texas vs record fuzzily matches to oklahoma . take the current streak record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; texas vs ; missouri } ; current streak } ; hop { filter_eq { all_rows ; texas vs ; oklahoma } ; current streak } }"
            ]
        },
        {
            "input": "the sum of the wins record of all rows is 286 .",
            "output": [
                "round_eq { sum { all_rows ; wins } ; 286 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to fernando verdasco . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; fernando verdasco } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose opponents record fuzzily matches to ashleigh barty casey dellacqua . there is only one such row in the table . the year record of this unqiue row is 2013 . the championship record of this unqiue row is australian open .",
            "output": [
                "and { only { filter_eq { all_rows ; opponents ; ashleigh barty casey dellacqua } } ; and { eq { hop { filter_eq { all_rows ; opponents ; ashleigh barty casey dellacqua } ; year } ; 2013 } ; eq { hop { filter_eq { all_rows ; opponents ; ashleigh barty casey dellacqua } ; championship } ; australian open } } }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to shea stadium . among these rows , select the rows whose attendance record is greater than 63000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; game site ; shea stadium } ; attendance ; 63000 } } ; 4 }"
            ]
        },
        {
            "input": "for the engine records of all rows , most of them fuzzily match to audi 3.6 l turbo v8 .",
            "output": [
                "most_eq { all_rows ; engine ; audi 3.6 l turbo v8 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to maserati straight - 6 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; engine ; maserati straight - 6 } }"
            ]
        },
        {
            "input": "select the rows whose born / died record fuzzily matches to present . the minimum born / died record of these rows is 1928 - present .",
            "output": [
                "eq { min { filter_eq { all_rows ; born / died ; present } ; born / died } ; 1928 - present }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to france . among these rows , select the rows whose weeks at 1 record is equal to 8 . there is only one such row in the table . the number - one single ( s ) record of this unqiue row is n'importe quoi .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; country ; france } ; weeks at 1 ; 8 } } ; eq { hop { filter_eq { filter_eq { all_rows ; country ; france } ; weeks at 1 ; 8 } ; number - one single ( s ) } ; n'importe quoi } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2013 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year ; 2013 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to dimension twist . take the original air date record of this row . select the rows whose title record fuzzily matches to team impossible . take the original air date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; dimension twist } ; original air date } ; hop { filter_eq { all_rows ; title ; team impossible } ; original air date } }"
            ]
        },
        {
            "input": "select the rows whose original west end performer record fuzzily matches to n / a . there is only one such row in the table . the character record of this unqiue row is ben weatherstaff .",
            "output": [
                "and { only { filter_eq { all_rows ; original west end performer ; n / a } } ; eq { hop { filter_eq { all_rows ; original west end performer ; n / a } ; character } ; ben weatherstaff } }"
            ]
        },
        {
            "input": "select the rows whose engine ( s ) record fuzzily matches to yamaha . there is only one such row in the table . the year record of this unqiue row is 1989 .",
            "output": [
                "and { only { filter_eq { all_rows ; engine ( s ) ; yamaha } } ; eq { hop { filter_eq { all_rows ; engine ( s ) ; yamaha } ; year } ; 1989 } }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than or equal to 1966 . the sum of the points record of these rows is 15 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; year ; 1966 } ; points } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to christchurch , new zealand . take the year record of this row . select the rows whose tournament record fuzzily matches to gstaad , switzerland . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; christchurch , new zealand } ; year } ; hop { filter_eq { all_rows ; tournament ; gstaad , switzerland } ; year } }"
            ]
        },
        {
            "input": "the minimum pick record of all rows is 1 . the player record of the row with superlative pick record is candace parker .",
            "output": [
                "and { eq { min { all_rows ; pick } ; 1 } ; eq { hop { argmin { all_rows ; pick } ; player } ; candace parker } }"
            ]
        },
        {
            "input": "select the rows whose cfl team record fuzzily matches to ottawa renegades . take the pick record of this row . select the rows whose cfl team record fuzzily matches to bc lions . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; cfl team ; ottawa renegades } ; pick } ; hop { filter_eq { all_rows ; cfl team ; bc lions } ; pick } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is maximum . the championship record of this row is newport , rhode island , us .",
            "output": [
                "eq { hop { argmax { all_rows ; date } ; championship } ; newport , rhode island , us }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1931 . take the laps record of this row . select the rows whose year record fuzzily matches to 1930 . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1931 } ; laps } ; hop { filter_eq { all_rows ; year ; 1930 } ; laps } }"
            ]
        },
        {
            "input": "select the row whose goals scored record of all rows is 2nd maximum . the team record of this row is san salvador fc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goals scored ; 2 } ; team } ; san salvador fc }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is 19th .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; 19th }"
            ]
        },
        {
            "input": "select the rows whose winning score record is less than 180 . there is only one such row in the table . the tournament record of this unqiue row is charles schwab cup championship .",
            "output": [
                "and { only { filter_less { all_rows ; winning score ; 180 } } ; eq { hop { filter_less { all_rows ; winning score ; 180 } ; tournament } ; charles schwab cup championship } }"
            ]
        },
        {
            "input": "the average of the catches record of all rows is 19.5 .",
            "output": [
                "round_eq { avg { all_rows ; catches } ; 19.5 }"
            ]
        },
        {
            "input": "select the rows whose image support record fuzzily matches to no . there is only one such row in the table . the format record of this unqiue row is plain text .",
            "output": [
                "and { only { filter_eq { all_rows ; image support ; no } } ; eq { hop { filter_eq { all_rows ; image support ; no } ; format } ; plain text } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to linebacker . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; position ; linebacker } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2000 . take the goals scored record of this row . select the rows whose year record fuzzily matches to 1999 . take the goals scored record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2000 } ; goals scored } ; hop { filter_eq { all_rows ; year ; 1999 } ; goals scored } }"
            ]
        },
        {
            "input": "select the rows whose sunday record fuzzily matches to rylan clark . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; sunday ; rylan clark } }"
            ]
        },
        {
            "input": "select the rows whose exited record is less than day 16 . for the finished records of these rows , most of them are less than 9th .",
            "output": [
                "most_less { filter_less { all_rows ; exited ; day 16 } ; finished ; 9th }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is los angeles rams .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; los angeles rams }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is maximum . the title record of this row is milfay .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( million ) } ; title } ; milfay }"
            ]
        },
        {
            "input": "select the row whose 1 usd = record of all rows is maximum . the currency record of this row is paraguayan guaran\u00ed ( pyg ) .",
            "output": [
                "eq { hop { argmax { all_rows ; 1 usd"
            ]
        },
        {
            "input": "the average of the erp / power w record of all rows is 6012 .",
            "output": [
                "round_eq { avg { all_rows ; erp / power w } ; 6012 }"
            ]
        },
        {
            "input": "for the station type records of all rows , most of them fuzzily match to relay .",
            "output": [
                "most_eq { all_rows ; station type ; relay }"
            ]
        },
        {
            "input": "for the first used as team song records of all rows , most of them are less than 2000 .",
            "output": [
                "most_less { all_rows ; first used as team song ; 2000 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is minimum . the english title record of this row is demon skyscraper .",
            "output": [
                "eq { hop { argmin { all_rows ; year } ; english title } ; demon skyscraper }"
            ]
        },
        {
            "input": "for the t c ( k ) records of all rows , most of them are greater than 80 .",
            "output": [
                "most_greater { all_rows ; t c ( k ) ; 80 }"
            ]
        },
        {
            "input": "the maximum drawn record of all rows is 2 .",
            "output": [
                "eq { max { all_rows ; drawn } ; 2 }"
            ]
        },
        {
            "input": "select the row whose channel record of all rows is 2nd maximum . the channel name record of this row is tv tokyo / teleto ( tx ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; channel ; 2 } ; channel name } ; tv tokyo / teleto ( tx ) }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is 10.9 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; 10.9 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 20188 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 20188 }"
            ]
        },
        {
            "input": "select the rows whose nominating festival record fuzzily matches to prix uip valladolid . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nominating festival ; prix uip valladolid } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose 1980 record of all rows is 2nd minimum . the greek national account record of this row is public debt 8 ( billion ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; 1980 ; 2 } ; greek national account } ; public debt 8 ( billion ) }"
            ]
        },
        {
            "input": "for the series ep records of all rows , all of them fuzzily match to 13 - .",
            "output": [
                "all_eq { all_rows ; series ep ; 13 - }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to australian open . take the score in the final record of this row . select the rows whose championship record fuzzily matches to wimbledon . take the score in the final record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; championship ; australian open } ; score in the final } ; hop { filter_eq { all_rows ; championship ; wimbledon } ; score in the final } }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to kevin durant .",
            "output": [
                "most_eq { all_rows ; high points ; kevin durant }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is maximum . the name record of this row is at & t building .",
            "output": [
                "eq { hop { argmax { all_rows ; floors } ; name } ; at & t building }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to shea stadium . select the row whose attendance record of these rows is maximum . the date record of this row is 1983 - 10 - 16 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; game site ; shea stadium } ; attendance } ; date } ; 1983 - 10 - 16 }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is maximum . the municipality record of this row is malm\u00f6 .",
            "output": [
                "eq { hop { argmax { all_rows ; population } ; municipality } ; malm\u00f6 }"
            ]
        },
        {
            "input": "the average of the enrollment 08 - 09 record of all rows is 923.5 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment 08 - 09 } ; 923.5 }"
            ]
        },
        {
            "input": "select the row whose championships record of all rows is maximum . the established record of this row is 1979 .",
            "output": [
                "eq { hop { argmax { all_rows ; championships } ; established } ; 1979 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 279 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 279 }"
            ]
        },
        {
            "input": "select the rows whose stadium record fuzzily matches to heinz field . there is only one such row in the table . the week record of this unqiue row is 4 .",
            "output": [
                "and { only { filter_eq { all_rows ; stadium ; heinz field } } ; eq { hop { filter_eq { all_rows ; stadium ; heinz field } ; week } ; 4 } }"
            ]
        },
        {
            "input": "for the high rebounds records of all rows , all of them fuzzily match to duncan .",
            "output": [
                "all_eq { all_rows ; high rebounds ; duncan }"
            ]
        },
        {
            "input": "for the jersey number ( s ) records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; jersey number ( s ) ; 10 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to gk . there is only one such row in the table . the player record of this unqiue row is doug warren .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; gk } } ; eq { hop { filter_eq { all_rows ; position ; gk } ; player } ; doug warren } }"
            ]
        },
        {
            "input": "the 1st minimum date record of all rows is march 22 .",
            "output": [
                "eq { nth_min { all_rows ; date ; 1 } ; march 22 }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is 2nd maximum . the stadium record of this row is sydney sports ground .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; capacity ; 2 } ; stadium } ; sydney sports ground }"
            ]
        },
        {
            "input": "select the row whose change ( 2010 to 2011 ) record of all rows is maximum . the country record of this row is uruguay .",
            "output": [
                "eq { hop { argmax { all_rows ; change ( 2010 to 2011 ) } ; country } ; uruguay }"
            ]
        },
        {
            "input": "select the rows whose date record is less than 1914 . the sum of the no built record of these rows is 910 .",
            "output": [
                "round_eq { sum { filter_less { all_rows ; date ; 1914 } ; no built } ; 910 }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 2nd maximum . the title record of this row is the western isles and shetland .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original air date ; 2 } ; title } ; the western isles and shetland }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to dwight howard . for the score records of these rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { filter_eq { all_rows ; high points ; dwight howard } ; score ; w }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to fiji . there is only one such row in the table . the player record of this unqiue row is vijay singh .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; fiji } } ; eq { hop { filter_eq { all_rows ; country ; fiji } ; player } ; vijay singh } }"
            ]
        },
        {
            "input": "select the row whose class pos record of all rows is minimum . the year record of this row is 2013 .",
            "output": [
                "eq { hop { argmin { all_rows ; class pos } ; year } ; 2013 }"
            ]
        },
        {
            "input": "select the rows whose current status record fuzzily matches to operational . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; current status ; operational } }"
            ]
        },
        {
            "input": "the average of the seasons record of all rows is 15 .",
            "output": [
                "round_eq { avg { all_rows ; seasons } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than or equal to 2002 . the sum of the laps record of these rows is 699 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; year ; 2002 } ; laps } ; 699 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to levie isaacks . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; levie isaacks } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is 1st minimum . the institution record of this row is erskine college . the location record of this row is due west , south carolina .",
            "output": [
                "and { eq { hop { nth_argmin { all_rows ; founded ; 1 } ; institution } ; erskine college } ; eq { hop { nth_argmin { all_rows ; founded ; 1 } ; location } ; due west , south carolina } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the title record of this row is the love letter .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; title } ; the love letter }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 3 . take the silver record of this row . select the rows whose rank record fuzzily matches to 2 . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; rank ; 3 } ; silver } ; hop { filter_eq { all_rows ; rank ; 2 } ; silver } }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is 2nd maximum . the home team record of this row is hawthorn .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; home team score ; 2 } ; home team } ; hawthorn }"
            ]
        },
        {
            "input": "the average of the epa rated combined fuel economy record of all rows is 100 mpg .",
            "output": [
                "round_eq { avg { all_rows ; epa rated combined fuel economy } ; 100 mpg }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row . select the rows whose away team record fuzzily matches to collingwood . take the away team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; hop { filter_eq { all_rows ; away team ; collingwood } ; away team score } }"
            ]
        },
        {
            "input": "for the population ( 2008 ) records of all rows , most of them are greater than 100000 .",
            "output": [
                "most_greater { all_rows ; population ( 2008 ) ; 100000 }"
            ]
        },
        {
            "input": "for the 2008 status records of all rows , all of them fuzzily match to re-election .",
            "output": [
                "all_eq { all_rows ; 2008 status ; re-election }"
            ]
        },
        {
            "input": "select the rows whose loss record is greater than 9 . there is only one such row in the table . the team record of this unqiue row is college of saint benilde .",
            "output": [
                "and { only { filter_greater { all_rows ; loss ; 9 } } ; eq { hop { filter_greater { all_rows ; loss ; 9 } ; team } ; college of saint benilde } }"
            ]
        },
        {
            "input": "for the decision records of all rows , most of them fuzzily match to theodore .",
            "output": [
                "most_eq { all_rows ; decision ; theodore }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to georgia . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; georgia } } ; 8 }"
            ]
        },
        {
            "input": "select the row whose original airdate record of all rows is maximum . the title record of this row is silent night .",
            "output": [
                "eq { hop { argmax { all_rows ; original airdate } ; title } ; silent night }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is minimum . the player record of this row is ed o'bannon .",
            "output": [
                "eq { hop { argmin { all_rows ; pick } ; player } ; ed o'bannon }"
            ]
        },
        {
            "input": "the 6th minimum rank record of all rows is 6 . the team record of the row with 6th minimum rank record is college of saint benilde . the loss record of the row with 6th minimum rank record is 4 .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 6 } ; 6 } ; and { eq { hop { nth_argmin { all_rows ; rank ; 6 } ; team } ; college of saint benilde } ; eq { hop { nth_argmin { all_rows ; rank ; 6 } ; loss } ; 4 } } }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to 0 - 6 - 6 - 0 fairlie type . there is only one such row in the table . the name record of this unqiue row is caledon .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; 0 - 6 - 6 - 0 fairlie type } } ; eq { hop { filter_eq { all_rows ; type ; 0 - 6 - 6 - 0 fairlie type } ; name } ; caledon } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60000 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60000 } }"
            ]
        },
        {
            "input": "for the height records of all rows , most of them are greater than or equal to 6 ' 0 .",
            "output": [
                "most_greater_eq { all_rows ; height ; 6 ' 0 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to olympic . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; title ; olympic } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than or equal to 40 . for the difference records of these rows , all of them are greater than 40 .",
            "output": [
                "all_greater { filter_greater_eq { all_rows ; points ; 40 } ; difference ; 40 }"
            ]
        },
        {
            "input": "select the rows whose races record is equal to 16 . there is only one such row in the table . the year record of this unqiue row is 2012 . the riders record of this unqiue row is alex de angelis .",
            "output": [
                "and { only { filter_eq { all_rows ; races ; 16 } } ; and { eq { hop { filter_eq { all_rows ; races ; 16 } ; year } ; 2012 } ; eq { hop { filter_eq { all_rows ; races ; 16 } ; riders } ; alex de angelis } } }"
            ]
        },
        {
            "input": "select the rows whose name record is arbitrary . the number of such rows is 13 .",
            "output": [
                "eq { count { filter_all { all_rows ; name } } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose games played record is greater than 100 . there is only one such row in the table . the rival record of this unqiue row is georgia .",
            "output": [
                "and { only { filter_greater { all_rows ; games played ; 100 } } ; eq { hop { filter_greater { all_rows ; games played ; 100 } ; rival } ; georgia } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to craig kieswetter . take the runs record of this row . select the rows whose player record fuzzily matches to zander de bruyn . take the runs record of this row . the first record is 7 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; craig kieswetter } ; runs } ; hop { filter_eq { all_rows ; player ; zander de bruyn } ; runs } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to target center . there is only one such row in the table . the date record of this unqiue row is march 3 .",
            "output": [
                "and { only { filter_eq { all_rows ; location attendance ; target center } } ; eq { hop { filter_eq { all_rows ; location attendance ; target center } ; date } ; march 3 } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to ger . there is only one such row in the table . the name record of this unqiue row is bopp .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; ger } } ; eq { hop { filter_eq { all_rows ; country ; ger } ; name } ; bopp } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to thomas wassberg . take the fis nordic world ski championships record of this row . select the rows whose winner record fuzzily matches to gunde svan . take the fis nordic world ski championships record of this row . the second record is 9 larger than the first record . the fis nordic world ski championships record of the first row is 1980 . the fis nordic world ski championships record of the second row is 1989 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } } ; -9 } ; and { eq { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; 1980 } ; eq { hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } ; 1989 } } }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to brm . select the row whose time / retired record of these rows is 3rd minimum . the driver record of this row is lucien bianchi .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; constructor ; brm } ; time / retired ; 3 } ; driver } ; lucien bianchi }"
            ]
        },
        {
            "input": "select the row whose fatalities record of all rows is maximum . the name record of this row is 1990 manjil - rudbar earthquake .",
            "output": [
                "eq { hop { argmax { all_rows ; fatalities } ; name } ; 1990 manjil - rudbar earthquake }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 20 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose outcome of election record fuzzily matches to minority in parliament . among these rows , select the rows whose number of pnc votes record is greater than 200000 . there is only one such row in the table . the election record of this unqiue row is 2000 .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; outcome of election ; minority in parliament } ; number of pnc votes ; 200000 } } ; eq { hop { filter_greater { filter_eq { all_rows ; outcome of election ; minority in parliament } ; number of pnc votes ; 200000 } ; election } ; 2000 } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 2004 afc asian cup qualification . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; 2004 afc asian cup qualification } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to los angeles rams . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; los angeles rams } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to southern illinois . there is only one such row in the table . the name record of this unqiue row is damon jones .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; southern illinois } } ; eq { hop { filter_eq { all_rows ; college ; southern illinois } ; name } ; damon jones } }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 0 . there is only one such row in the table . the team record of this unqiue row is s\u00edrio .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 0 } } ; eq { hop { filter_eq { all_rows ; points ; 0 } ; team } ; s\u00edrio } }"
            ]
        },
        {
            "input": "select the rows whose location / attendance record fuzzily matches to the omni . among these rows , select the rows whose score record fuzzily matches to l . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location / attendance ; the omni } ; score ; l } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to st pete times forum . select the row whose game record of these rows is 1st minimum . the attendance record of this row is 16104 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; location ; st pete times forum } ; game ; 1 } ; attendance } ; 16104 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to bobby clarke . among these rows , select the rows whose goals record is equal to 51 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; winner ; bobby clarke } ; goals ; 51 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose to par record of all rows is 2nd minimum . the player record of this row is jim colbert .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; to par ; 2 } ; player } ; jim colbert }"
            ]
        },
        {
            "input": "for the label records of all rows , most of them fuzzily match to alfa records .",
            "output": [
                "most_eq { all_rows ; label ; alfa records }"
            ]
        },
        {
            "input": "select the rows whose nickname record fuzzily matches to roadrunners . there is only one such row in the table . the institution record of this unqiue row is california state university , bakersfield .",
            "output": [
                "and { only { filter_eq { all_rows ; nickname ; roadrunners } } ; eq { hop { filter_eq { all_rows ; nickname ; roadrunners } ; institution } ; california state university , bakersfield } }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than 30 . among these rows , select the rows whose style record fuzzily matches to jive . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; total ; 30 } ; style ; jive } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose event record of all rows is minimum . the event record of this row is 1995 antholz .",
            "output": [
                "eq { hop { argmin { all_rows ; event } ; event } ; 1995 antholz }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the artist record of this row is niamh kavanagh .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; artist } ; niamh kavanagh }"
            ]
        },
        {
            "input": "select the row whose lions points record of all rows is maximum . the opponent record of this row is minnesota vikings .",
            "output": [
                "eq { hop { argmax { all_rows ; lions points } ; opponent } ; minnesota vikings }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "the maximum losses record of all rows is 4 . the quarterback record of the row with superlative losses record is dave krieg .",
            "output": [
                "and { eq { max { all_rows ; losses } ; 4 } ; eq { hop { argmax { all_rows ; losses } ; quarterback } ; dave krieg } }"
            ]
        },
        {
            "input": "select the rows whose team 2 record fuzzily matches to mp algiers . take the 1st leg record of this row . select the rows whose team 2 record fuzzily matches to fortior mahajanga . take the 1st leg record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team 2 ; mp algiers } ; 1st leg } ; hop { filter_eq { all_rows ; team 2 ; fortior mahajanga } ; 1st leg } }"
            ]
        },
        {
            "input": "select the rows whose release date record fuzzily matches to january 2011 . the average of the release price ( usd ) record of these rows is 507.71 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; release date ; january 2011 } ; release price ( usd ) } ; 507.71 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to clarksville . take the year joined record of this row . select the rows whose location record fuzzily matches to ramsey . take the year joined record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; location ; clarksville } ; year joined } ; hop { filter_eq { all_rows ; location ; ramsey } ; year joined } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 281 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 281 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is william j driver .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; william j driver }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2009 . take the finish position record of this row . select the rows whose year record fuzzily matches to 2008 . take the finish position record of this row . the second record is 4 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; hop { filter_eq { all_rows ; year ; 2008 } ; finish position } } ; -4 }"
            ]
        },
        {
            "input": "select the rows whose years record fuzzily matches to 9 - 15 . there is only one such row in the table . the name record of this unqiue row is gore high school .",
            "output": [
                "and { only { filter_eq { all_rows ; years ; 9 - 15 } } ; eq { hop { filter_eq { all_rows ; years ; 9 - 15 } ; name } ; gore high school } }"
            ]
        },
        {
            "input": "the average of the races record of all rows is 14.4 .",
            "output": [
                "round_eq { avg { all_rows ; races } ; 14.4 }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to newcomer . there is only one such row in the table . the year record of this unqiue row is 2008 . the result record of this unqiue row is won .",
            "output": [
                "and { only { filter_eq { all_rows ; category ; newcomer } } ; and { eq { hop { filter_eq { all_rows ; category ; newcomer } ; year } ; 2008 } ; eq { hop { filter_eq { all_rows ; category ; newcomer } ; result } ; won } } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to turi meyer . there is only one such row in the table . the - record of this unqiue row is 6 . the title record of this unqiue row is harvest .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; turi meyer } } ; and { eq { hop { filter_eq { all_rows ; directed by ; turi meyer } ; - } ; 6 } ; eq { hop { filter_eq { all_rows ; directed by ; turi meyer } ; title } ; harvest } } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd minimum . the perpetrator record of this row is wagner , ernst august , 38 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 2 } ; perpetrator } ; wagner , ernst august , 38 }"
            ]
        },
        {
            "input": "select the rows whose estd record is less than 1900 . there is only one such row in the table . the college name record of this unqiue row is madras medical college and research institute .",
            "output": [
                "and { only { filter_less { all_rows ; estd ; 1900 } } ; eq { hop { filter_less { all_rows ; estd ; 1900 } ; college name } ; madras medical college and research institute } }"
            ]
        },
        {
            "input": "select the row whose juries record of all rows is maximum . the artist record of this row is danny saucedo .",
            "output": [
                "eq { hop { argmax { all_rows ; juries } ; artist } ; danny saucedo }"
            ]
        },
        {
            "input": "select the rows whose league record fuzzily matches to aa . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; league ; aa } } ; 3 }"
            ]
        },
        {
            "input": "the average of the us viewers ( millions ) record of all rows is 11.34 .",
            "output": [
                "round_eq { avg { all_rows ; us viewers ( millions ) } ; 11.34 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 9.4 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 9.4 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to bordeaux , france . take the date record of this row . select the rows whose tournament record fuzzily matches to san marino . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; bordeaux , france } ; date } ; hop { filter_eq { all_rows ; tournament ; san marino } ; date } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to fb . there is only one such row in the table . the name record of this unqiue row is bob briggs .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; fb } } ; eq { hop { filter_eq { all_rows ; position ; fb } ; name } ; bob briggs } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 23360 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 23360 }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to lp . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; format ; lp } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose silver record is equal to 3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; silver ; 3 } } ; 2 }"
            ]
        },
        {
            "input": "for the party leader records of all rows , all of them fuzzily match to habib bourguiba .",
            "output": [
                "all_eq { all_rows ; party leader ; habib bourguiba }"
            ]
        },
        {
            "input": "select the rows whose to par record fuzzily matches to + 6 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; + 6 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose assumed office record of all rows is minimum . the district record of this row is american samoa .",
            "output": [
                "eq { hop { argmin { all_rows ; assumed office } ; district } ; american samoa }"
            ]
        },
        {
            "input": "select the rows whose attendance record is less than 1500 . there is only one such row in the table . the date record of this unqiue row is april 18 .",
            "output": [
                "and { only { filter_less { all_rows ; attendance ; 1500 } } ; eq { hop { filter_less { all_rows ; attendance ; 1500 } ; date } ; april 18 } }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 167 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 167 }"
            ]
        },
        {
            "input": "select the rows whose points record is less than 40 . there is only one such row in the table . the song record of this unqiue row is cold shoulder .",
            "output": [
                "and { only { filter_less { all_rows ; points ; 40 } } ; eq { hop { filter_less { all_rows ; points ; 40 } ; song } ; cold shoulder } }"
            ]
        },
        {
            "input": "select the rows whose songwriter ( s ) record fuzzily matches to wallis willis . there is only one such row in the table . the title record of this unqiue row is swing low , sweet chariot .",
            "output": [
                "and { only { filter_eq { all_rows ; songwriter ( s ) ; wallis willis } } ; eq { hop { filter_eq { all_rows ; songwriter ( s ) ; wallis willis } ; title } ; swing low , sweet chariot } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to italy . among these rows , select the rows whose opponent record fuzzily matches to marcel granollers . there is only one such row in the table . the date record of this unqiue row is 30 may 2006 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; tournament ; italy } ; opponent ; marcel granollers } } ; eq { hop { filter_eq { filter_eq { all_rows ; tournament ; italy } ; opponent ; marcel granollers } ; date } ; 30 may 2006 } }"
            ]
        },
        {
            "input": "select the rows whose street address record fuzzily matches to north franklin street . among these rows , select the rows whose height ft ( m ) record is greater than 200 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; street address ; north franklin street } ; height ft ( m ) ; 200 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to plainview , texas . take the frequency mhz record of this row . select the rows whose city of license record fuzzily matches to pampa , texas . take the frequency mhz record of this row . the second record is 0.8 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; city of license ; plainview , texas } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; pampa , texas } ; frequency mhz } } ; -0.8 }"
            ]
        },
        {
            "input": "for the preliminary average records of all rows , most of them are less than 9.0 .",
            "output": [
                "most_less { all_rows ; preliminary average ; 9.0 }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is maximum . the player record of this row is alec bedser .",
            "output": [
                "eq { hop { argmax { all_rows ; average } ; player } ; alec bedser }"
            ]
        },
        {
            "input": "select the rows whose goal difference record is equal to -2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; goal difference ; -2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to graham hill . take the time / retired record of this row . select the rows whose driver record fuzzily matches to jim clark . take the time / retired record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; driver ; graham hill } ; time / retired } ; hop { filter_eq { all_rows ; driver ; jim clark } ; time / retired } }"
            ]
        },
        {
            "input": "select the rows whose platelet count record fuzzily matches to decreased or unaffected . there is only one such row in the table . the condition record of this unqiue row is bernard - soulier syndrome .",
            "output": [
                "and { only { filter_eq { all_rows ; platelet count ; decreased or unaffected } } ; eq { hop { filter_eq { all_rows ; platelet count ; decreased or unaffected } ; condition } ; bernard - soulier syndrome } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united kingdom . take the date record of this row . select the rows whose country record fuzzily matches to united states . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; country ; united kingdom } ; date } ; hop { filter_eq { all_rows ; country ; united states } ; date } }"
            ]
        },
        {
            "input": "select the rows whose weight ( lb ) record is less than 200 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { all_rows ; weight ( lb ) ; 200 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose towns / villages record is greater than 350 . there is only one such row in the table . the name of county record of this unqiue row is borsod - aba\u00faj - zempl\u00e9n .",
            "output": [
                "and { only { filter_greater { all_rows ; towns / villages ; 350 } } ; eq { hop { filter_greater { all_rows ; towns / villages ; 350 } ; name of county } ; borsod - aba\u00faj - zempl\u00e9n } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to rome . take the date record of this row . select the rows whose venue record fuzzily matches to beijing . take the date record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; rome } ; date } ; hop { filter_eq { all_rows ; venue ; beijing } ; date } }"
            ]
        },
        {
            "input": "select the row whose innings record of all rows is maximum . the player record of this row is ricky ponting .",
            "output": [
                "eq { hop { argmax { all_rows ; innings } ; player } ; ricky ponting }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to kingdome . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; game site ; kingdome } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose episodes record is equal to 18 . there is only one such row in the table . the season record of this unqiue row is 8 .",
            "output": [
                "and { only { filter_eq { all_rows ; episodes ; 18 } } ; eq { hop { filter_eq { all_rows ; episodes ; 18 } ; season } ; 8 } }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than 15000 .",
            "output": [
                "most_greater { all_rows ; crowd ; 15000 }"
            ]
        },
        {
            "input": "select the row whose number of episodes record of all rows is maximum . the english title ( chinese title ) record of this row is secret of the heart \u5929\u5730\u8c6a\u60c5 .",
            "output": [
                "eq { hop { argmax { all_rows ; number of episodes } ; english title ( chinese title ) } ; secret of the heart \u5929\u5730\u8c6a\u60c5 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 18504 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 18504 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2004 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 2004 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose location in park record fuzzily matches to baja ridge . among these rows , select the rows whose thrill / intensity rating record fuzzily matches to maximum . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location in park ; baja ridge } ; thrill / intensity rating ; maximum } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 894532 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 894532 }"
            ]
        },
        {
            "input": "select the rows whose school / country record fuzzily matches to southern methodist . there is only one such row in the table . the player record of this unqiue row is jim krebs .",
            "output": [
                "and { only { filter_eq { all_rows ; school / country ; southern methodist } } ; eq { hop { filter_eq { all_rows ; school / country ; southern methodist } ; player } ; jim krebs } }"
            ]
        },
        {
            "input": "for the closed records of all rows , all of them are greater than 2005 .",
            "output": [
                "all_greater { all_rows ; closed ; 2005 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to ot . there is only one such row in the table . the date record of this unqiue row is december 26 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; ot } } ; eq { hop { filter_eq { all_rows ; score ; ot } ; date } ; december 26 } }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 3 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; rank ; 3 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the s risk - weighted asset , million record of all rows is 60551 .",
            "output": [
                "round_eq { avg { all_rows ; s risk - weighted asset , million } ; 60551 }"
            ]
        },
        {
            "input": "select the rows whose result record does not match to retired . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; result ; retired } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to bamboo blade . take the last issue record of this row . select the rows whose title record fuzzily matches to black butler . take the last issue record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; bamboo blade } ; last issue } ; hop { filter_eq { all_rows ; title ; black butler } ; last issue } }"
            ]
        },
        {
            "input": "the average of the erp w record of all rows is 66 .",
            "output": [
                "round_eq { avg { all_rows ; erp w } ; 66 }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to melbourne . among these rows , select the rows whose venue record fuzzily matches to windy hill . there is only one such row in the table . the home team record of this unqiue row is essendon .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; away team ; melbourne } ; venue ; windy hill } } ; eq { hop { filter_eq { filter_eq { all_rows ; away team ; melbourne } ; venue ; windy hill } ; home team } ; essendon } }"
            ]
        },
        {
            "input": "select the rows whose country record does not match to united states . select the row whose place record of these rows is 1st minimum . the player record of this row is seve ballesteros .",
            "output": [
                "eq { hop { nth_argmin { filter_not_eq { all_rows ; country ; united states } ; place ; 1 } ; player } ; seve ballesteros }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 105,000 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 105,000 }"
            ]
        },
        {
            "input": "select the rows whose top - 10 record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; top - 10 ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose 1st member record fuzzily matches to william hall . take the elected record of this row . select the rows whose 1st member record fuzzily matches to george gascoigne . take the elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; 1st member ; william hall } ; elected } ; hop { filter_eq { all_rows ; 1st member ; george gascoigne } ; elected } }"
            ]
        },
        {
            "input": "select the row whose finished record of all rows is minimum . the horse record of this row is big brown .",
            "output": [
                "eq { hop { argmin { all_rows ; finished } ; horse } ; big brown }"
            ]
        },
        {
            "input": "select the rows whose hometown record fuzzily matches to ca . there is only one such row in the table . the player record of this unqiue row is james kaprelian .",
            "output": [
                "and { only { filter_eq { all_rows ; hometown ; ca } } ; eq { hop { filter_eq { all_rows ; hometown ; ca } ; player } ; james kaprelian } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april 2 . take the location attendance record of this row . select the rows whose date record fuzzily matches to april 13 . take the location attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; april 2 } ; location attendance } ; hop { filter_eq { all_rows ; date ; april 13 } ; location attendance } }"
            ]
        },
        {
            "input": "select the rows whose developer ( s ) record fuzzily matches to ea games . take the release date record of this row . select the rows whose developer ( s ) record fuzzily matches to masthead studios . take the release date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; developer ( s ) ; ea games } ; release date } ; hop { filter_eq { all_rows ; developer ( s ) ; masthead studios } ; release date } }"
            ]
        },
        {
            "input": "select the row whose age record of all rows is minimum . the candidate record of this row is samuel sam hooper .",
            "output": [
                "eq { hop { argmin { all_rows ; age } ; candidate } ; samuel sam hooper }"
            ]
        },
        {
            "input": "for the result records of all rows , all of them fuzzily match to re-elected .",
            "output": [
                "all_eq { all_rows ; result ; re-elected }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is george h pendleton .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; george h pendleton }"
            ]
        },
        {
            "input": "the sum of the round record of all rows is 26 .",
            "output": [
                "round_eq { sum { all_rows ; round } ; 26 }"
            ]
        },
        {
            "input": "select the rows whose segment b record fuzzily matches to outboard motors . take the episode record of this row . select the rows whose segment b record fuzzily matches to s snowblower . take the episode record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; segment b ; outboard motors } ; episode } ; hop { filter_eq { all_rows ; segment b ; s snowblower } ; episode } }"
            ]
        },
        {
            "input": "for the directed by records of all rows , most of them fuzzily match to ciaran donnelly .",
            "output": [
                "most_eq { all_rows ; directed by ; ciaran donnelly }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to ca osasuna . take the wins record of this row . select the rows whose club record fuzzily matches to real oviedo . take the wins record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; ca osasuna } ; wins } ; hop { filter_eq { all_rows ; club ; real oviedo } ; wins } }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are greater than 50 .",
            "output": [
                "most_greater { all_rows ; points ; 50 }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to resigned . among these rows , select the rows whose date successor seated record fuzzily matches to november . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; reason for change ; resigned } ; date successor seated ; november } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose staffel a record fuzzily matches to tsg wismar . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; staffel a ; tsg wismar } }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to 196 . there is only one such row in the table . the incumbent record of this unqiue row is clarence long .",
            "output": [
                "and { only { filter_eq { all_rows ; first elected ; 196 } } ; eq { hop { filter_eq { all_rows ; first elected ; 196 } ; incumbent } ; clarence long } }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to gardening leave 1 . there is only one such row in the table . the club record of this unqiue row is kedah fa .",
            "output": [
                "and { only { filter_eq { all_rows ; manner of departure ; gardening leave 1 } } ; eq { hop { filter_eq { all_rows ; manner of departure ; gardening leave 1 } ; club } ; kedah fa } }"
            ]
        },
        {
            "input": "select the row whose top 10 record of all rows is maximum . the year record of this row is 2005 .",
            "output": [
                "eq { hop { argmax { all_rows ; top 10 } ; year } ; 2005 }"
            ]
        },
        {
            "input": "select the row whose viewership record of all rows is maximum . the episode record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; viewership } ; episode } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose race title record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; race title } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to alfred pfaff . take the goals record of this row . select the rows whose name record fuzzily matches to lothar sch\u00e4mer . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; alfred pfaff } ; goals } ; hop { filter_eq { all_rows ; name ; lothar sch\u00e4mer } ; goals } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2005 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year ; 2005 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose category record is equal to 1 . there is only one such row in the table . the leader at the summit record of this unqiue row is richard virenque .",
            "output": [
                "and { only { filter_eq { all_rows ; category ; 1 } } ; eq { hop { filter_eq { all_rows ; category ; 1 } ; leader at the summit } ; richard virenque } }"
            ]
        },
        {
            "input": "select the rows whose wins record is greater than 0 . there is only one such row in the table . the tournament record of this unqiue row is the open championship .",
            "output": [
                "and { only { filter_greater { all_rows ; wins ; 0 } } ; eq { hop { filter_greater { all_rows ; wins ; 0 } ; tournament } ; the open championship } }"
            ]
        },
        {
            "input": "the average of the first quarter record of all rows is 305221 .",
            "output": [
                "round_eq { avg { all_rows ; first quarter } ; 305221 }"
            ]
        },
        {
            "input": "the 1st minimum year record of all rows is 1996 . the year record of the row with 1st minimum year record is 1996 . the category record of the row with 1st minimum year record is 60 minute category . the result record of the row with 1st minimum year record is nominated .",
            "output": [
                "and { eq { nth_min { all_rows ; year ; 1 } ; 1996 } ; and { eq { hop { nth_argmin { all_rows ; year ; 1 } ; year } ; 1996 } ; and { eq { hop { nth_argmin { all_rows ; year ; 1 } ; category } ; 60 minute category } ; eq { hop { nth_argmin { all_rows ; year ; 1 } ; result } ; nominated } } } }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2 . take the potential prize money record of this row . select the rows whose season record fuzzily matches to 1 . take the potential prize money record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2 } ; potential prize money } ; hop { filter_eq { all_rows ; season ; 1 } ; potential prize money } }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to minnesota . among these rows , select the rows whose attendance record is greater than or equal to 19360 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { filter_eq { all_rows ; home ; minnesota } ; attendance ; 19360 } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 70 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 70 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to guard . select the row whose years in orlando record of these rows is minimum . the player record of this row is todd lichti .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; position ; guard } ; years in orlando } ; player } ; todd lichti }"
            ]
        },
        {
            "input": "select the rows whose weeks on top record is equal to 11 . there is only one such row in the table . the song record of this unqiue row is mambo no 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; weeks on top ; 11 } } ; eq { hop { filter_eq { all_rows ; weeks on top ; 11 } ; song } ; mambo no 5 } }"
            ]
        },
        {
            "input": "select the row whose number of electorates ( 2003 ) record of all rows is 2nd maximum . the constituency number record of this row is 49 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of electorates ( 2003 ) ; 2 } ; constituency number } ; 49 }"
            ]
        },
        {
            "input": "select the rows whose years owned record fuzzily matches to 1995 - 2008 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; years owned ; 1995 - 2008 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose average record is greater than 500 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; average ; 500 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to world cross country championships . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tournament ; world cross country championships } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to hamburg . take the week record of this row . select the rows whose tournament record fuzzily matches to rome . take the week record of this row . the first record is 7 days larger than the second record . the week record of the first row is may 14 . the week record of the second row is may 7 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; tournament ; hamburg } ; week } ; hop { filter_eq { all_rows ; tournament ; rome } ; week } } ; 7 days } ; and { eq { hop { filter_eq { all_rows ; tournament ; hamburg } ; week } ; may 14 } ; eq { hop { filter_eq { all_rows ; tournament ; rome } ; week } ; may 7 } } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to united kingdom . select the row whose date record of these rows is 2nd minimum . the surface record of this row is hard .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; tournament ; united kingdom } ; date ; 2 } ; surface } ; hard }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is minimum . the driver record of this row is emerson fittipaldi .",
            "output": [
                "eq { hop { argmin { all_rows ; result } ; driver } ; emerson fittipaldi }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is maximum . the incumbent record of this row is bill clay .",
            "output": [
                "eq { hop { argmax { all_rows ; candidates } ; incumbent } ; bill clay }"
            ]
        },
        {
            "input": "select the rows whose province record fuzzily matches to alberta . take the south asians 2011 record of this row . select the rows whose province record fuzzily matches to quebec . take the south asians 2011 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; province ; alberta } ; south asians 2011 } ; hop { filter_eq { all_rows ; province ; quebec } ; south asians 2011 } }"
            ]
        },
        {
            "input": "select the rows whose number of borough councilors record is equal to 4 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; number of borough councilors ; 4 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose notes record fuzzily matches to co - directed . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; notes ; co - directed } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose inhabitants record of all rows is maximum . the municipality record of this row is trento .",
            "output": [
                "eq { hop { argmax { all_rows ; inhabitants } ; municipality } ; trento }"
            ]
        },
        {
            "input": "the average of the raiders points record of all rows is 26.79 .",
            "output": [
                "round_eq { avg { all_rows ; raiders points } ; 26.79 }"
            ]
        },
        {
            "input": "select the row whose built record of all rows is minimum . the name record of this row is humpback .",
            "output": [
                "eq { hop { argmin { all_rows ; built } ; name } ; humpback }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to junction oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to western oval . take the crowd record of this row . the first record is 8099 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; venue ; junction oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; western oval } ; crowd } } ; 8099 }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to marlboro brm . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; entrant ; marlboro brm } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose steals record fuzzily matches to 3 tied . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; steals ; 3 tied } } ; 4 }"
            ]
        },
        {
            "input": "the maximum frequency mhz record of all rows is 107.3 . the city of license record of the row with superlative frequency mhz record is hill city , kansas .",
            "output": [
                "and { eq { max { all_rows ; frequency mhz } ; 107.3 } ; eq { hop { argmax { all_rows ; frequency mhz } ; city of license } ; hill city , kansas } }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to kevin martin .",
            "output": [
                "most_eq { all_rows ; high points ; kevin martin }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 94 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 94 }"
            ]
        },
        {
            "input": "for the fat16 records of all rows , all of them fuzzily match to yes .",
            "output": [
                "all_eq { all_rows ; fat16 ; yes }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 0 - . there is only one such row in the table . the game record of this unqiue row is 30 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 0 - } } ; eq { hop { filter_eq { all_rows ; score ; 0 - } ; game } ; 30 } }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 30 august 1975 .",
            "output": [
                "all_eq { all_rows ; date ; 30 august 1975 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to payne stewart . take the score record of this row . select the rows whose player record fuzzily matches to fred couples . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; payne stewart } ; score } ; hop { filter_eq { all_rows ; player ; fred couples } ; score } }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 2 . take the silver record of this row . select the rows whose rank record fuzzily matches to 1 . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; rank ; 2 } ; silver } ; hop { filter_eq { all_rows ; rank ; 1 } ; silver } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 206 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 206 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 15000 . among these rows , select the rows whose venue record fuzzily matches to lake oval . there is only one such row in the table . the home team record of this unqiue row is south melbourne .",
            "output": [
                "and { only { filter_eq { filter_less { all_rows ; crowd ; 15000 } ; venue ; lake oval } } ; eq { hop { filter_eq { filter_less { all_rows ; crowd ; 15000 } ; venue ; lake oval } ; home team } ; south melbourne } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 2nd maximum . the player record of this row is tom neville .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 2 } ; player } ; tom neville }"
            ]
        },
        {
            "input": "the average of the high points record of all rows is 30 .",
            "output": [
                "round_eq { avg { all_rows ; high points } ; 30 }"
            ]
        },
        {
            "input": "select the rows whose 2002 population record is greater than 20000 . there is only one such row in the table . the commune record of this unqiue row is province .",
            "output": [
                "and { only { filter_greater { all_rows ; 2002 population ; 20000 } } ; eq { hop { filter_greater { all_rows ; 2002 population ; 20000 } ; commune } ; province } }"
            ]
        },
        {
            "input": "the 2nd minimum date record of all rows is 31 may .",
            "output": [
                "eq { nth_min { all_rows ; date ; 2 } ; 31 may }"
            ]
        },
        {
            "input": "the sum of the result record of all rows is 456 .",
            "output": [
                "round_eq { sum { all_rows ; result } ; 456 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to ohio state . there is only one such row in the table . the player record of this unqiue row is kirk barton .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; ohio state } } ; eq { hop { filter_eq { all_rows ; college ; ohio state } ; player } ; kirk barton } }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to republican . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; republican } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose weight record of all rows is maximum . the diameter record of this row is 28 mm .",
            "output": [
                "eq { hop { argmax { all_rows ; weight } ; diameter } ; 28 mm }"
            ]
        },
        {
            "input": "select the rows whose runner ( s ) - up record fuzzily matches to phil mickelson . take the margin of victory record of this row . select the rows whose runner ( s ) - up record fuzzily matches to dudley hart . take the margin of victory record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; runner ( s ) - up ; phil mickelson } ; margin of victory } ; hop { filter_eq { all_rows ; runner ( s ) - up ; dudley hart } ; margin of victory } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to new york jets . among these rows , select the rows whose location record fuzzily matches to shea stadium . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; winner ; new york jets } ; location ; shea stadium } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose episode title record fuzzily matches to new york . take the original airdate record of this row . select the rows whose episode title record fuzzily matches to beneath vesuvius . take the original airdate record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; episode title ; new york } ; original airdate } ; hop { filter_eq { all_rows ; episode title ; beneath vesuvius } ; original airdate } }"
            ]
        },
        {
            "input": "the maximum margin record of all rows is 9 strokes . the year record of the row with superlative margin record is 4 . 1965 . the championship record of the row with superlative margin record is masters tournament ( 2 ) .",
            "output": [
                "and { eq { max { all_rows ; margin } ; 9 strokes } ; and { eq { hop { argmax { all_rows ; margin } ; year } ; 4 . 1965 } ; eq { hop { argmax { all_rows ; margin } ; championship } ; masters tournament ( 2 ) } } }"
            ]
        },
        {
            "input": "select the rows whose first place record is equal to 0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first place ; 0 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose omim record of all rows is maximum . the enzyme record of this row is uroporphyrinogen iii synthase .",
            "output": [
                "eq { hop { argmax { all_rows ; omim } ; enzyme } ; uroporphyrinogen iii synthase }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 10000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; crowd ; 10000 } } ; 4 }"
            ]
        },
        {
            "input": "for the radial velocity ( m / s ) records of all rows , most of them are less than 10 .",
            "output": [
                "most_less { all_rows ; radial velocity ( m / s ) ; 10 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them are greater than 2000 .",
            "output": [
                "most_greater { all_rows ; date ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 10 september . take the score record of this row . select the rows whose date record fuzzily matches to 20 august . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 10 september } ; score } ; hop { filter_eq { all_rows ; date ; 20 august } ; score } }"
            ]
        },
        {
            "input": "the maximum away record of all rows is 2 - 0 .",
            "output": [
                "eq { max { all_rows ; away } ; 2 - 0 }"
            ]
        },
        {
            "input": "select the rows whose ( m ) leading goalkicker record fuzzily matches to darren roffey . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; ( m ) leading goalkicker ; darren roffey } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 4 . there is only one such row in the table . the player record of this unqiue row is ernie toshack .",
            "output": [
                "and { only { filter_eq { all_rows ; matches ; 4 } } ; eq { hop { filter_eq { all_rows ; matches ; 4 } ; player } ; ernie toshack } }"
            ]
        },
        {
            "input": "select the rows whose time / retired record fuzzily matches to clutch . for the laps records of these rows , most of them are greater than 30 .",
            "output": [
                "most_greater { filter_eq { all_rows ; time / retired ; clutch } ; laps ; 30 }"
            ]
        },
        {
            "input": "select the rows whose goals record is greater than 120 . there is only one such row in the table . the club record of this unqiue row is real madrid .",
            "output": [
                "and { only { filter_greater { all_rows ; goals ; 120 } } ; eq { hop { filter_greater { all_rows ; goals ; 120 } ; club } ; real madrid } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the game record of this row is the elder scrolls v : skyrim .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; game } ; the elder scrolls v : skyrim }"
            ]
        },
        {
            "input": "the average of the assets 2013 ( bil ) record of all rows is 18.9 .",
            "output": [
                "round_eq { avg { all_rows ; assets 2013 ( bil ) } ; 18.9 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to antwerp . among these rows , select the rows whose winner record fuzzily matches to steve davis . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; venue ; antwerp } ; winner ; steve davis } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose urban settlement record fuzzily matches to sremska kamenica . take the population ( 2002 ) record of this row . select the rows whose urban settlement record fuzzily matches to sremski karlovci . take the population ( 2002 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; urban settlement ; sremska kamenica } ; population ( 2002 ) } ; hop { filter_eq { all_rows ; urban settlement ; sremski karlovci } ; population ( 2002 ) } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 14 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 14 }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to stuart , florida . take the frequency mhz record of this row . select the rows whose city of license record fuzzily matches to tradition , florida . take the frequency mhz record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; city of license ; stuart , florida } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; tradition , florida } ; frequency mhz } }"
            ]
        },
        {
            "input": "select the rows whose official name record fuzzily matches to hillsborough . take the population record of this row . select the rows whose official name record fuzzily matches to hopewell . take the population record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; official name ; hillsborough } ; population } ; hop { filter_eq { all_rows ; official name ; hopewell } ; population } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1967 . the sum of the points record of these rows is 2 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 1967 } ; points } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to golden state . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; golden state } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 9 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 9 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is richmond .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; richmond }"
            ]
        },
        {
            "input": "select the row whose winning score record of all rows is maximum . the tournament record of this row is us senior open .",
            "output": [
                "eq { hop { argmax { all_rows ; winning score } ; tournament } ; us senior open }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to unopposed . there is only one such row in the table . the incumbent record of this unqiue row is bob brady .",
            "output": [
                "and { only { filter_eq { all_rows ; candidates ; unopposed } } ; eq { hop { filter_eq { all_rows ; candidates ; unopposed } ; incumbent } ; bob brady } }"
            ]
        },
        {
            "input": "the sum of the round record of all rows is 37 .",
            "output": [
                "round_eq { sum { all_rows ; round } ; 37 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 14 march 1984 . there is only one such row in the table . the home team record of this unqiue row is derby county .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; 14 march 1984 } } ; eq { hop { filter_eq { all_rows ; date ; 14 march 1984 } ; home team } ; derby county } }"
            ]
        },
        {
            "input": "select the row whose casualties record of all rows is maximum . the date record of this row is 2009 - 09 - 16 .",
            "output": [
                "eq { hop { argmax { all_rows ; casualties } ; date } ; 2009 - 09 - 16 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to the tale of the time trap . take the us air date record of this row . select the rows whose title record fuzzily matches to the tale of the last dance . take the us air date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; the tale of the time trap } ; us air date } ; hop { filter_eq { all_rows ; title ; the tale of the last dance } ; us air date } }"
            ]
        },
        {
            "input": "select the rows whose candidates record does not match to unopposed . the average of the candidates record of these rows is 72 .",
            "output": [
                "round_eq { avg { filter_not_eq { all_rows ; candidates ; unopposed } ; candidates } ; 72 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to phil karn . take the goals record of this row . select the rows whose name record fuzzily matches to michael apple . take the goals record of this row . the first record is 2 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; phil karn } ; goals } ; hop { filter_eq { all_rows ; name ; michael apple } ; goals } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to episode 4 . take the original air date record of this row . select the rows whose title record fuzzily matches to episode 5 . take the original air date record of this row . the second record is 7 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; title ; episode 4 } ; original air date } ; hop { filter_eq { all_rows ; title ; episode 5 } ; original air date } } ; -7 }"
            ]
        },
        {
            "input": "select the row whose commissioned record of all rows is 1st minimum . the name record of this row is cygnet .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; commissioned ; 1 } ; name } ; cygnet }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to william h perry . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to william elliott . take the first elected record of this row . the first record is equal to the second record . the first elected record of the first row is 1884 . the first elected record of the second row is 1884 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; incumbent ; william h perry } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; william elliott } ; first elected } } ; and { eq { hop { filter_eq { all_rows ; incumbent ; william h perry } ; first elected } ; 1884 } ; eq { hop { filter_eq { all_rows ; incumbent ; william elliott } ; first elected } ; 1884 } } }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to petra kvitov\u00e1 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent in the final ; petra kvitov\u00e1 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose year ( s ) won record of all rows is maximum . the player record of this row is tiger woods .",
            "output": [
                "eq { hop { argmax { all_rows ; year ( s ) won } ; player } ; tiger woods }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is maximum . the player record of this row is andrew caddick .",
            "output": [
                "eq { hop { argmax { all_rows ; average } ; player } ; andrew caddick }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is march 20 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; march 20 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to ishara amerasinghe . take the wickets record of this row . select the rows whose name record fuzzily matches to muttiah muralitharan . take the wickets record of this row . the first record is equal to the second record . the wickets record of the first row is 9 . the wickets record of the second row is 9 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; name ; ishara amerasinghe } ; wickets } ; hop { filter_eq { all_rows ; name ; muttiah muralitharan } ; wickets } } ; and { eq { hop { filter_eq { all_rows ; name ; ishara amerasinghe } ; wickets } ; 9 } ; eq { hop { filter_eq { all_rows ; name ; muttiah muralitharan } ; wickets } ; 9 } } }"
            ]
        },
        {
            "input": "select the rows whose open cup record fuzzily matches to did not qualify . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; open cup ; did not qualify } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the opponent record of this row is buffalo bills .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; opponent } ; buffalo bills }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the surface record of this row is clay .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; surface } ; clay }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them fuzzily match to 21 . .",
            "output": [
                "most_eq { all_rows ; time ; 21 . }"
            ]
        },
        {
            "input": "select the row whose races record of all rows is maximum . the season record of this row is 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; races } ; season } ; 2010 }"
            ]
        },
        {
            "input": "the sum of the runs record of all rows is 3324 .",
            "output": [
                "round_eq { sum { all_rows ; runs } ; 3324 }"
            ]
        },
        {
            "input": "for the team records of all rows , most of them fuzzily match to iowa .",
            "output": [
                "most_eq { all_rows ; team ; iowa }"
            ]
        },
        {
            "input": "select the rows whose style record fuzzily matches to tango . the sum of the total record of these rows is 54 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; style ; tango } ; total } ; 54 }"
            ]
        },
        {
            "input": "for the results records of all rows , most of them fuzzily match to safe .",
            "output": [
                "most_eq { all_rows ; results ; safe }"
            ]
        },
        {
            "input": "the average of the won record of all rows is 26 .",
            "output": [
                "round_eq { avg { all_rows ; won } ; 26 }"
            ]
        },
        {
            "input": "select the row whose joined record of all rows is 3rd maximum . the school record of this row is south bend clay .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; joined ; 3 } ; school } ; south bend clay }"
            ]
        },
        {
            "input": "select the rows whose toxic materials record fuzzily matches to yes . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; toxic materials ; yes } } ; 4 }"
            ]
        },
        {
            "input": "for the power ( kw ) records of all rows , most of them fuzzily match to 10 kw .",
            "output": [
                "most_eq { all_rows ; power ( kw ) ; 10 kw }"
            ]
        },
        {
            "input": "the average of the duration ( days ) record of all rows is 56.37 .",
            "output": [
                "round_eq { avg { all_rows ; duration ( days ) } ; 56.37 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to ghana . there is only one such row in the table . the airport record of this unqiue row is kotoka international airport .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; ghana } } ; eq { hop { filter_eq { all_rows ; country ; ghana } ; airport } ; kotoka international airport } }"
            ]
        },
        {
            "input": "for the reason for change records of all rows , most of them fuzzily match to died .",
            "output": [
                "most_eq { all_rows ; reason for change ; died }"
            ]
        },
        {
            "input": "select the row whose start record of all rows is minimum . the year record of this row is 1952 .",
            "output": [
                "eq { hop { argmin { all_rows ; start } ; year } ; 1952 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to cavaliers . take the date record of this row . select the rows whose visitor record fuzzily matches to hornets . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; visitor ; cavaliers } ; date } ; hop { filter_eq { all_rows ; visitor ; hornets } ; date } }"
            ]
        },
        {
            "input": "the average of the height record of all rows is 6 - 5 .",
            "output": [
                "round_eq { avg { all_rows ; height } ; 6 - 5 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to liacouras center . for the location attendance records of these rows , most of them are greater than 5000 .",
            "output": [
                "most_greater { filter_eq { all_rows ; location attendance ; liacouras center } ; location attendance ; 5000 }"
            ]
        },
        {
            "input": "select the row whose round ( overall ) record of all rows is 2nd minimum . the player record of this row is quentin coryatt .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; round ( overall ) ; 2 } ; player } ; quentin coryatt }"
            ]
        },
        {
            "input": "the average of the roll record of all rows is 99.61 .",
            "output": [
                "round_eq { avg { all_rows ; roll } ; 99.61 }"
            ]
        },
        {
            "input": "select the rows whose decade record fuzzily matches to 2000s . there is only one such row in the table . the song title record of this unqiue row is dirty little secret .",
            "output": [
                "and { only { filter_eq { all_rows ; decade ; 2000s } } ; eq { hop { filter_eq { all_rows ; decade ; 2000s } ; song title } ; dirty little secret } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to james m ashley . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to samuel shellabarger . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; james m ashley } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; samuel shellabarger } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose owner record fuzzily matches to university . there is only one such row in the table . the frequency record of this unqiue row is fm 101.7 .",
            "output": [
                "and { only { filter_eq { all_rows ; owner ; university } } ; eq { hop { filter_eq { all_rows ; owner ; university } ; frequency } ; fm 101.7 } }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is maximum . the island record of this row is bute .",
            "output": [
                "eq { hop { argmax { all_rows ; population } ; island } ; bute }"
            ]
        },
        {
            "input": "select the rows whose yards record is equal to 39 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; yards ; 39 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is minimum . the club record of this row is sporting de gij\u00f3n .",
            "output": [
                "eq { hop { argmin { all_rows ; position } ; club } ; sporting de gij\u00f3n }"
            ]
        },
        {
            "input": "select the row whose number of episodes record of all rows is 3rd maximum . the english title ( chinese title ) record of this row is journey to the west ii \u897f\u904a\u8a18 ( \u8cb3 ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; number of episodes ; 3 } ; english title ( chinese title ) } ; journey to the west ii \u897f\u904a\u8a18 ( \u8cb3 ) }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is 2nd maximum . the nation record of this row is cyprus .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; silver ; 2 } ; nation } ; cyprus }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to tifton . there is only one such row in the table . the institution record of this unqiue row is abraham baldwin agricultural college .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; tifton } } ; eq { hop { filter_eq { all_rows ; location ; tifton } ; institution } ; abraham baldwin agricultural college } }"
            ]
        },
        {
            "input": "for the parish ( prestegjeld ) records of all rows , all of them fuzzily match to kinn parish .",
            "output": [
                "all_eq { all_rows ; parish ( prestegjeld ) ; kinn parish }"
            ]
        },
        {
            "input": "select the row whose south asians 2011 record of all rows is maximum . the province record of this row is ontario .",
            "output": [
                "eq { hop { argmax { all_rows ; south asians 2011 } ; province } ; ontario }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to wexford . there is only one such row in the table . the player record of this unqiue row is christy kehoe .",
            "output": [
                "and { only { filter_eq { all_rows ; county ; wexford } } ; eq { hop { filter_eq { all_rows ; county ; wexford } ; player } ; christy kehoe } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the location record of this row is cleveland , tennessee .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; location } ; cleveland , tennessee }"
            ]
        },
        {
            "input": "the sum of the charlton goals record of all rows is 178 .",
            "output": [
                "round_eq { sum { all_rows ; charlton goals } ; 178 }"
            ]
        },
        {
            "input": "for the population records of all rows , most of them are less than 1000 .",
            "output": [
                "most_less { all_rows ; population ; 1000 }"
            ]
        },
        {
            "input": "select the rows whose manager record does not match to warren buffett . among these rows , select the rows whose fund record fuzzily matches to ltd . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_not_eq { all_rows ; manager ; warren buffett } ; fund ; ltd } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the fatalities record of all rows is 899 .",
            "output": [
                "round_eq { sum { all_rows ; fatalities } ; 899 }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to unopposed . select the row whose first elected record of these rows is 1st minimum . the incumbent record of this row is john h kerr .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; candidates ; unopposed } ; first elected ; 1 } ; incumbent } ; john h kerr }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 58 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; laps ; 58 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose ship record fuzzily matches to nagara . take the date record of this row . select the rows whose ship record fuzzily matches to moldanger . take the date record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ship ; nagara } ; date } ; hop { filter_eq { all_rows ; ship ; moldanger } ; date } }"
            ]
        },
        {
            "input": "select the row whose torque record of all rows is 2nd minimum . the model record of this row is 320td ( diesel ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; torque ; 2 } ; model } ; 320td ( diesel ) }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to martinsville . take the enrollment record of this row . select the rows whose school record fuzzily matches to mooresville . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; school ; martinsville } ; enrollment } ; hop { filter_eq { all_rows ; school ; mooresville } ; enrollment } }"
            ]
        },
        {
            "input": "select the rows whose matches record is greater than or equal to 3 . for the average records of these rows , most of them are greater than or equal to 8 .",
            "output": [
                "most_greater_eq { filter_greater_eq { all_rows ; matches ; 3 } ; average ; 8 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 5 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose races record is equal to 20 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; races ; 20 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the high school record of this row is mount tahoma .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; high school } ; mount tahoma }"
            ]
        },
        {
            "input": "select the row whose minutes played record of all rows is maximum . the year record of this row is 1999 .",
            "output": [
                "eq { hop { argmax { all_rows ; minutes played } ; year } ; 1999 }"
            ]
        },
        {
            "input": "select the row whose votes record of all rows is maximum . the artist record of this row is sahlene .",
            "output": [
                "eq { hop { argmax { all_rows ; votes } ; artist } ; sahlene }"
            ]
        },
        {
            "input": "select the rows whose time / retired record fuzzily matches to off course . there is only one such row in the table . the driver record of this unqiue row is gast\u00f3n mazzacane .",
            "output": [
                "and { only { filter_eq { all_rows ; time / retired ; off course } } ; eq { hop { filter_eq { all_rows ; time / retired ; off course } ; driver } ; gast\u00f3n mazzacane } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is brunswick street oval .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; brunswick street oval }"
            ]
        },
        {
            "input": "the average of the episode record of all rows is 32.5 .",
            "output": [
                "round_eq { avg { all_rows ; episode } ; 32.5 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to nominated . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; nominated } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose unit record is equal to 23 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; unit ; 23 } }"
            ]
        },
        {
            "input": "select the rows whose role record fuzzily matches to guest . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; role ; guest } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to cb . there is only one such row in the table . the player record of this unqiue row is dounia whitehouse .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; cb } } ; eq { hop { filter_eq { all_rows ; position ; cb } ; player } ; dounia whitehouse } }"
            ]
        },
        {
            "input": "select the rows whose site record fuzzily matches to memorial stadium minneapolis , mn . the maximum attendance record of these rows is 58000 .",
            "output": [
                "eq { max { filter_eq { all_rows ; site ; memorial stadium minneapolis , mn } ; attendance } ; 58000 }"
            ]
        },
        {
            "input": "the average of the home team score record of all rows is 13.98 .",
            "output": [
                "round_eq { avg { all_rows ; home team score } ; 13.98 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose fatalities record is equal to 0 . there is only one such row in the table . the date record of this unqiue row is 2 february 1969 .",
            "output": [
                "and { only { filter_eq { all_rows ; fatalities ; 0 } } ; eq { hop { filter_eq { all_rows ; fatalities ; 0 } ; date } ; 2 february 1969 } }"
            ]
        },
        {
            "input": "select the rows whose 2006 - 10 record is equal to 0.29 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2006 - 10 ; 0.29 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to china . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; venue ; china } }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 25000 . among these rows , select the rows whose date record fuzzily matches to october . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; attendance ; 25000 } ; date ; october } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose podiums record is equal to 4 . there is only one such row in the table . the season record of this unqiue row is 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; podiums ; 4 } } ; eq { hop { filter_eq { all_rows ; podiums ; 4 } ; season } ; 2008 } }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to norton , virginia . take the frequency mhz record of this row . select the rows whose city of license record fuzzily matches to pound , virginia . take the frequency mhz record of this row . the first record is 0.4 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; city of license ; norton , virginia } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; pound , virginia } ; frequency mhz } } ; 0.4 }"
            ]
        },
        {
            "input": "select the rows whose equipment record fuzzily matches to husaberg - wht . there is only one such row in the table . the driver / passenger record of this unqiue row is daniel millard / joe millard .",
            "output": [
                "and { only { filter_eq { all_rows ; equipment ; husaberg - wht } } ; eq { hop { filter_eq { all_rows ; equipment ; husaberg - wht } ; driver / passenger } ; daniel millard / joe millard } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost re - election democratic gain . there is only one such row in the table . the incumbent record of this unqiue row is fred e busbey .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost re - election democratic gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re - election democratic gain } ; incumbent } ; fred e busbey } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to pepsi center . select the row whose location attendance record of these rows is maximum . the date record of this row is november 1 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; location attendance ; pepsi center } ; location attendance } ; date } ; november 1 }"
            ]
        },
        {
            "input": "select the row whose uci protour points record of all rows is maximum . the country record of this row is spain .",
            "output": [
                "eq { hop { argmax { all_rows ; uci protour points } ; country } ; spain }"
            ]
        },
        {
            "input": "select the rows whose adopted record fuzzily matches to 1999 . among these rows , select the rows whose population ( 2011 - 01 - 01 ) record is less than 1000000 . there is only one such row in the table . the state record of this unqiue row is luxembourg .",
            "output": [
                "and { only { filter_less { filter_eq { all_rows ; adopted ; 1999 } ; population ( 2011 - 01 - 01 ) ; 1000000 } } ; eq { hop { filter_less { filter_eq { all_rows ; adopted ; 1999 } ; population ( 2011 - 01 - 01 ) ; 1000000 } ; state } ; luxembourg } }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to rafer alston . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high assists ; rafer alston } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the district record of this row is louisiana 2 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; district } ; louisiana 2 }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to 195 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; 195 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2006 . the average of the margin record of these rows is 3.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; year ; 2006 } ; margin } ; 3.5 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2005 . take the money ( \uffe5 ) record of this row . select the rows whose year record fuzzily matches to 2006 . take the money ( \uffe5 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2005 } ; money ( \uffe5 ) } ; hop { filter_eq { all_rows ; year ; 2006 } ; money ( \uffe5 ) } }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to unopposed . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; candidates ; unopposed } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose final position / round record fuzzily matches to runner - up . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; final position / round ; runner - up } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose fixtures record is equal to 8 . there is only one such row in the table . the round record of this unqiue row is fifth round .",
            "output": [
                "and { only { filter_eq { all_rows ; fixtures ; 8 } } ; eq { hop { filter_eq { all_rows ; fixtures ; 8 } ; round } ; fifth round } }"
            ]
        },
        {
            "input": "the average of the area ( km square ) record of all rows is 47 .",
            "output": [
                "round_eq { avg { all_rows ; area ( km square ) } ; 47 }"
            ]
        },
        {
            "input": "select the rows whose gymnast record fuzzily matches to ( chn ) . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gymnast ; ( chn ) } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is 7th minimum . the nation record of this row is bulgaria .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; rank ; 7 } ; nation } ; bulgaria }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is 2nd maximum . the call sign record of this row is w291aq .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; call sign } ; w291aq }"
            ]
        },
        {
            "input": "select the rows whose time record fuzzily matches to accident . there is only one such row in the table . the rider record of this unqiue row is kousuke akiyoshi .",
            "output": [
                "and { only { filter_eq { all_rows ; time ; accident } } ; eq { hop { filter_eq { all_rows ; time ; accident } ; rider } ; kousuke akiyoshi } }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is .12 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; .12 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to newt v mills . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to jared y sanders , jr . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; newt v mills } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; jared y sanders , jr } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to nigeria . among these rows , select the rows whose country record fuzzily matches to nigeria . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; nigeria } ; country ; nigeria } } ; 2 }"
            ]
        },
        {
            "input": "for the storyteller records of all rows , most of them fuzzily match to tucker .",
            "output": [
                "most_eq { all_rows ; storyteller ; tucker }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 139 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 139 }"
            ]
        },
        {
            "input": "the 4th minimum date record of all rows is december 20 . the team record of the row with 4th minimum date record is kansas .",
            "output": [
                "and { eq { nth_min { all_rows ; date ; 4 } ; december 20 } ; eq { hop { nth_argmin { all_rows ; date ; 4 } ; team } ; kansas } }"
            ]
        },
        {
            "input": "select the rows whose acquired record is greater than 2001 . select the row whose capacity , mln tpa record of these rows is minimum . the name record of this row is trn .",
            "output": [
                "eq { hop { argmin { filter_greater { all_rows ; acquired ; 2001 } ; capacity , mln tpa } ; name } ; trn }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them fuzzily match to tackle .",
            "output": [
                "most_eq { all_rows ; position ; tackle }"
            ]
        },
        {
            "input": "select the rows whose platform ( s ) record fuzzily matches to playstation 3 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; platform ( s ) ; playstation 3 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is great britain .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; great britain }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are greater than 1920 .",
            "output": [
                "most_greater { all_rows ; first elected ; 1920 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september . the sum of the attendance record of these rows is 226814 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; september } ; attendance } ; 226814 }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 10 . there is only one such row in the table . the entrant record of this unqiue row is braun tyrrell honda .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 10 } } ; eq { hop { filter_eq { all_rows ; points ; 10 } ; entrant } ; braun tyrrell honda } }"
            ]
        },
        {
            "input": "for the overall records of all rows , most of them are less than 10 .",
            "output": [
                "most_less { all_rows ; overall ; 10 }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is minimum . the year record of this row is 2009 .",
            "output": [
                "eq { hop { argmin { all_rows ; position } ; year } ; 2009 }"
            ]
        },
        {
            "input": "select the rows whose census ranking record is greater than 1000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; census ranking ; 1000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; clay } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose outgoing manager record fuzzily matches to kevin bond . take the date of vacancy record of this row . select the rows whose outgoing manager record fuzzily matches to alan buckley . take the date of vacancy record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; outgoing manager ; kevin bond } ; date of vacancy } ; hop { filter_eq { all_rows ; outgoing manager ; alan buckley } ; date of vacancy } }"
            ]
        },
        {
            "input": "for the story by records of all rows , all of them fuzzily match to david simon & ed burns .",
            "output": [
                "all_eq { all_rows ; story by ; david simon & ed burns }"
            ]
        },
        {
            "input": "select the row whose place record of all rows is minimum . the player record of this row is chris dimarco .",
            "output": [
                "eq { hop { argmin { all_rows ; place } ; player } ; chris dimarco }"
            ]
        },
        {
            "input": "select the rows whose period active record fuzzily matches to 199 . select the row whose claimed sales record of these rows is maximum . the artist record of this row is the black eyed peas .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; period active ; 199 } ; claimed sales } ; artist } ; the black eyed peas }"
            ]
        },
        {
            "input": "the average of the position record of all rows is 100 .",
            "output": [
                "round_eq { avg { all_rows ; position } ; 100 }"
            ]
        },
        {
            "input": "select the rows whose time record is less than 2:00 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_less { all_rows ; time ; 2:00 } } ; 5 }"
            ]
        },
        {
            "input": "for the start source records of all rows , most of them fuzzily match to bbc sport .",
            "output": [
                "most_eq { all_rows ; start source ; bbc sport }"
            ]
        },
        {
            "input": "select the row whose born - died record of all rows is 2nd minimum . the name record of this row is sali berisha .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; born - died ; 2 } ; name } ; sali berisha }"
            ]
        },
        {
            "input": "for the result records of all rows , all of them fuzzily match to re - elected .",
            "output": [
                "all_eq { all_rows ; result ; re - elected }"
            ]
        },
        {
            "input": "select the row whose runs record of all rows is 2nd maximum . the partnerships record of this row is herschelle gibbs / justin kemp .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; runs ; 2 } ; partnerships } ; herschelle gibbs / justin kemp }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is maximum . the home team record of this row is hawthorn .",
            "output": [
                "eq { hop { argmax { all_rows ; home team score } ; home team } ; hawthorn }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 5th minimum . the athlete record of this row is craig virgin .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 5 } ; athlete } ; craig virgin }"
            ]
        },
        {
            "input": "for the decision records of all rows , most of them fuzzily match to biron .",
            "output": [
                "most_eq { all_rows ; decision ; biron }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the athlete record of this row is monica pinette .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; athlete } ; monica pinette }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . for the result records of these rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; october } ; result ; l }"
            ]
        },
        {
            "input": "the 2nd minimum match number record of all rows is 2 . the date record of the row with 2nd minimum match number record is april 10 . the team 1 record of the row with 2nd minimum match number record is icl pakistan . the team 2 record of the row with 2nd minimum match number record is icl world .",
            "output": [
                "and { eq { nth_min { all_rows ; match number ; 2 } ; 2 } ; and { eq { hop { nth_argmin { all_rows ; match number ; 2 } ; date } ; april 10 } ; and { eq { hop { nth_argmin { all_rows ; match number ; 2 } ; team 1 } ; icl pakistan } ; eq { hop { nth_argmin { all_rows ; match number ; 2 } ; team 2 } ; icl world } } } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to wilbur mills . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to james william trimble . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; wilbur mills } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; james william trimble } ; first elected } }"
            ]
        },
        {
            "input": "for the title records of all rows , most of them fuzzily match to duke .",
            "output": [
                "most_eq { all_rows ; title ; duke }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to died . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; reason for change ; died } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose year record is less than 1998 . among these rows , select the rows whose country record fuzzily matches to sweden . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; year ; 1998 } ; country ; sweden } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose population ( in 2008 ) record of all rows is 2nd minimum . the suburb record of this row is phillip .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; population ( in 2008 ) ; 2 } ; suburb } ; phillip }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to walker racing . there is only one such row in the table . the driver record of this unqiue row is mario haberfeld .",
            "output": [
                "and { only { filter_eq { all_rows ; team ; walker racing } } ; eq { hop { filter_eq { all_rows ; team ; walker racing } ; driver } ; mario haberfeld } }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to dire straits . take the claimed sales record of this row . select the rows whose artist record fuzzily matches to barbra streisand . take the claimed sales record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; artist ; dire straits } ; claimed sales } ; hop { filter_eq { all_rows ; artist ; barbra streisand } ; claimed sales } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the circuit record of this row is calder park raceway .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; circuit } ; calder park raceway }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 636 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 636 }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 50000 . among these rows , select the rows whose result record fuzzily matches to w . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; attendance ; 50000 } ; result ; w } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to to enter the us army . there is only one such row in the table . the vacator record of this unqiue row is charles i faddis ( d ) .",
            "output": [
                "and { only { filter_eq { all_rows ; reason for change ; to enter the us army } } ; eq { hop { filter_eq { all_rows ; reason for change ; to enter the us army } ; vacator } ; charles i faddis ( d ) } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is university of new hampshire club sports .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; university of new hampshire club sports }"
            ]
        },
        {
            "input": "select the rows whose date record is equal to 1939 . there is only one such row in the table . the name record of this unqiue row is garrett .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; 1939 } } ; eq { hop { filter_eq { all_rows ; date ; 1939 } ; name } ; garrett } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose length of game record is less than 80:00 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; date ; december } ; length of game ; 80:00 } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 881037 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 881037 }"
            ]
        },
        {
            "input": "the 1st minimum pos record of all rows is 1 . the diff record of the row with 1st minimum pos record is + 176 .",
            "output": [
                "and { eq { nth_min { all_rows ; pos ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; pos ; 1 } ; diff } ; + 176 } }"
            ]
        },
        {
            "input": "select the rows whose successor record fuzzily matches to thomas tillinghast ( f ) . take the date successor seated record of this row . select the rows whose successor record fuzzily matches to robert waln ( f ) . take the date successor seated record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; successor ; thomas tillinghast ( f ) } ; date successor seated } ; hop { filter_eq { all_rows ; successor ; robert waln ( f ) } ; date successor seated } }"
            ]
        },
        {
            "input": "for the ends records of all rows , most of them are equal to 2010 .",
            "output": [
                "most_eq { all_rows ; ends ; 2010 }"
            ]
        },
        {
            "input": "the sum of the apps record of all rows is 137 .",
            "output": [
                "round_eq { sum { all_rows ; apps } ; 137 }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 15 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 10000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; crowd ; 10000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose elevation ( m ) record is less than 2400 . there is only one such row in the table . the peak record of this unqiue row is pietrosul rodnei .",
            "output": [
                "and { only { filter_less { all_rows ; elevation ( m ) ; 2400 } } ; eq { hop { filter_less { all_rows ; elevation ( m ) ; 2400 } ; peak } ; pietrosul rodnei } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to junior . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year ; junior } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose population ( 2011 ) record of all rows is maximum . the settlement record of this row is srpska crnja .",
            "output": [
                "eq { hop { argmax { all_rows ; population ( 2011 ) } ; settlement } ; srpska crnja }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to kansai . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; region ; kansai } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the pts record of all rows is 23 .",
            "output": [
                "round_eq { sum { all_rows ; pts } ; 23 }"
            ]
        },
        {
            "input": "select the rows whose episode record fuzzily matches to 4 . take the ratings ( kanto ) record of this row . select the rows whose episode record fuzzily matches to 3 . take the ratings ( kanto ) record of this row . the first record is less than the second record . the ratings ( kanto ) record of the first row is 4.3 . the ratings ( kanto ) record of the second row is 4.6 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; episode ; 4 } ; ratings ( kanto ) } ; hop { filter_eq { all_rows ; episode ; 3 } ; ratings ( kanto ) } } ; and { eq { hop { filter_eq { all_rows ; episode ; 4 } ; ratings ( kanto ) } ; 4.3 } ; eq { hop { filter_eq { all_rows ; episode ; 3 } ; ratings ( kanto ) } ; 4.6 } } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to bursa atat\u00fcrk stadium . take the capacity record of this row . select the rows whose venue record fuzzily matches to \u015f\u00fckr\u00fc saraco\u011flu stadium . take the capacity record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; venue ; bursa atat\u00fcrk stadium } ; capacity } ; hop { filter_eq { all_rows ; venue ; \u015f\u00fckr\u00fc saraco\u011flu stadium } ; capacity } }"
            ]
        },
        {
            "input": "select the rows whose height record fuzzily matches to 6-4 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; height ; 6-4 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose points for record of all rows is maximum . the team record of this row is swansea .",
            "output": [
                "eq { hop { argmax { all_rows ; points for } ; team } ; swansea }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is november 22 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; november 22 }"
            ]
        },
        {
            "input": "select the row whose first air date record of all rows is minimum . the city record of this row is townsville .",
            "output": [
                "eq { hop { argmin { all_rows ; first air date } ; city } ; townsville }"
            ]
        },
        {
            "input": "select the rows whose winning party / coalition record fuzzily matches to indian national congress . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning party / coalition ; indian national congress } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the nation record of this row is japan ( jpn ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; japan ( jpn ) }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to alexander krasnorutskiy . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; alexander krasnorutskiy } } ; 5 }"
            ]
        },
        {
            "input": "the maximum took office record of all rows is 27 july 2011 .",
            "output": [
                "eq { max { all_rows ; took office } ; 27 july 2011 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to avon community . take the enrollment record of this row . select the rows whose school record fuzzily matches to brownsburg . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; school ; avon community } ; enrollment } ; hop { filter_eq { all_rows ; school ; brownsburg } ; enrollment } }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is 3rd maximum . the stadium record of this row is stadion gradski vrt .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; capacity ; 3 } ; stadium } ; stadion gradski vrt }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 1st maximum . the player record of this row is bill daley .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 1 } ; player } ; bill daley }"
            ]
        },
        {
            "input": "select the rows whose games record is greater than 700 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; games ; 700 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose year built record of all rows is minimum . the church name record of this row is urnes stavkyrkje .",
            "output": [
                "eq { hop { argmin { all_rows ; year built } ; church name } ; urnes stavkyrkje }"
            ]
        },
        {
            "input": "the average of the apparent magnitude record of all rows is 12.9 .",
            "output": [
                "round_eq { avg { all_rows ; apparent magnitude } ; 12.9 }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are equal to 1940 .",
            "output": [
                "most_eq { all_rows ; first elected ; 1940 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is november 12 , 2000 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; november 12 , 2000 }"
            ]
        },
        {
            "input": "select the rows whose award record fuzzily matches to laurence olivier award . take the category record of this row . select the rows whose award record fuzzily matches to theatregoers ' choice award . take the category record of this row . the first record fuzzily matches to the second record . the category record of the first row is best actress in a musical . the category record of the second row is best actress in a musical .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; award ; laurence olivier award } ; category } ; hop { filter_eq { all_rows ; award ; theatregoers ' choice award } ; category } } ; and { eq { hop { filter_eq { all_rows ; award ; laurence olivier award } ; category } ; best actress in a musical } ; eq { hop { filter_eq { all_rows ; award ; theatregoers ' choice award } ; category } ; best actress in a musical } } }"
            ]
        },
        {
            "input": "select the row whose number of viewers record of all rows is maximum . the show record of this row is 1966 world cup final .",
            "output": [
                "eq { hop { argmax { all_rows ; number of viewers } ; show } ; 1966 world cup final }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is alianza fc .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; alianza fc }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to judd v8 . there is only one such row in the table . the year record of this unqiue row is 1989 .",
            "output": [
                "and { only { filter_eq { all_rows ; engine ; judd v8 } } ; eq { hop { filter_eq { all_rows ; engine ; judd v8 } ; year } ; 1989 } }"
            ]
        },
        {
            "input": "for the partner records of all rows , most of them fuzzily match to sherwood stewart .",
            "output": [
                "most_eq { all_rows ; partner ; sherwood stewart }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york giants . there is only one such row in the table . the week record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; new york giants } } ; eq { hop { filter_eq { all_rows ; opponent ; new york giants } ; week } ; 1 } }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 8:17.94 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 8:17.94 }"
            ]
        },
        {
            "input": "for the 3:26.00 records of all rows , most of them are less than 3:30 .",
            "output": [
                "most_less { all_rows ; 3:26.00 ; 3:30 }"
            ]
        },
        {
            "input": "for the age records of all rows , most of them are greater than 18 .",
            "output": [
                "most_greater { all_rows ; age ; 18 }"
            ]
        },
        {
            "input": "for the construction completed records of all rows , most of them fuzzily match to - .",
            "output": [
                "most_eq { all_rows ; construction completed ; - }"
            ]
        },
        {
            "input": "the 1st minimum date of vacancy record of all rows is 7 sep 2010 . the outgoing head coach record of the row with 1st minimum date of vacancy record is rasoul korbekandi .",
            "output": [
                "and { eq { nth_min { all_rows ; date of vacancy ; 1 } ; 7 sep 2010 } ; eq { hop { nth_argmin { all_rows ; date of vacancy ; 1 } ; outgoing head coach } ; rasoul korbekandi } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to june . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; june } } ; 2 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 13841 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 13841 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 58252 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 58252 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to philadelphia soul . take the date record of this row . select the rows whose opponent record fuzzily matches to georgia force . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; philadelphia soul } ; date } ; hop { filter_eq { all_rows ; opponent ; georgia force } ; date } }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to hassard short . there is only one such row in the table . the date record of this unqiue row is june 3 , 1931 .",
            "output": [
                "and { only { filter_eq { all_rows ; director ; hassard short } } ; eq { hop { filter_eq { all_rows ; director ; hassard short } ; date } ; june 3 , 1931 } }"
            ]
        },
        {
            "input": "the average of the design flow ( lpm ) record of all rows is 823.57 .",
            "output": [
                "round_eq { avg { all_rows ; design flow ( lpm ) } ; 823.57 }"
            ]
        },
        {
            "input": "select the rows whose 1961 democratic primary record fuzzily matches to robert f wagner , jr . take the total record of this row . select the rows whose 1961 democratic primary record fuzzily matches to arthur levitt . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; 1961 democratic primary ; robert f wagner , jr } ; total } ; hop { filter_eq { all_rows ; 1961 democratic primary ; arthur levitt } ; total } }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than 1850 . the average of the enrollment record of these rows is 2939 .",
            "output": [
                "round_eq { avg { filter_greater { all_rows ; founded ; 1850 } ; enrollment } ; 2939 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 74.8 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 74.8 }"
            ]
        },
        {
            "input": "select the rows whose nation record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; nation } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the new jersey record of this row is paramus ll paramus .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; new jersey } ; paramus ll paramus }"
            ]
        },
        {
            "input": "select the row whose away team score record of all rows is maximum . the home team score record of this row is 15.21 ( 111 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; away team score } ; home team score } ; 15.21 ( 111 ) }"
            ]
        },
        {
            "input": "for the distance / duration records of all rows , all of them are greater than 40 laps .",
            "output": [
                "all_greater { all_rows ; distance / duration ; 40 laps }"
            ]
        },
        {
            "input": "for the ihsaa class records of all rows , all of them fuzzily match to aaaa .",
            "output": [
                "all_eq { all_rows ; ihsaa class ; aaaa }"
            ]
        },
        {
            "input": "select the row whose away team score record of all rows is 2nd maximum . the home team record of this row is collingwood .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; away team score ; 2 } ; home team } ; collingwood }"
            ]
        },
        {
            "input": "select the row whose administrative panel record of all rows is maximum . the party record of this row is fine gael .",
            "output": [
                "eq { hop { argmax { all_rows ; administrative panel } ; party } ; fine gael }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose score record fuzzily matches to 138 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; united states } ; score ; 138 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to nc . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; nc } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose nation record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; nation } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is 2nd maximum . the nation record of this row is argentina ( arg ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; gold ; 2 } ; nation } ; argentina ( arg ) }"
            ]
        },
        {
            "input": "select the row whose research funding ( 000 ) record of all rows is maximum . the institution record of this row is loughborough university .",
            "output": [
                "eq { hop { argmax { all_rows ; research funding ( 000 ) } ; institution } ; loughborough university }"
            ]
        },
        {
            "input": "select the rows whose no in series record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; no in series } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to draw . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; draw } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose game record fuzzily matches to 1 . take the date record of this row . select the rows whose game record fuzzily matches to 2 . take the date record of this row . the second record is 2 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; game ; 1 } ; date } ; hop { filter_eq { all_rows ; game ; 2 } ; date } } ; -2 }"
            ]
        },
        {
            "input": "the average of the viewers ( in millions ) record of all rows is 9.1 .",
            "output": [
                "round_eq { avg { all_rows ; viewers ( in millions ) } ; 9.1 }"
            ]
        },
        {
            "input": "the 3rd maximum winnings record of all rows is 160261 .",
            "output": [
                "eq { nth_max { all_rows ; winnings ; 3 } ; 160261 }"
            ]
        },
        {
            "input": "select the rows whose seasons record is equal to 4 . there is only one such row in the table . the country record of this unqiue row is south korea .",
            "output": [
                "and { only { filter_eq { all_rows ; seasons ; 4 } } ; eq { hop { filter_eq { all_rows ; seasons ; 4 } ; country } ; south korea } }"
            ]
        },
        {
            "input": "select the row whose per capita withdrawal record of all rows is maximum . the record of this row is turkmenistan .",
            "output": [
                "eq { hop { argmax { all_rows ; per capita withdrawal } ; } ; turkmenistan }"
            ]
        },
        {
            "input": "select the rows whose nba draft record fuzzily matches to clippers . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; nba draft ; clippers } }"
            ]
        },
        {
            "input": "the average of the goals against record of all rows is 53 .",
            "output": [
                "round_eq { avg { all_rows ; goals against } ; 53 }"
            ]
        },
        {
            "input": "the average of the away team score record of all rows is 13.81 .",
            "output": [
                "round_eq { avg { all_rows ; away team score } ; 13.81 }"
            ]
        },
        {
            "input": "select the row whose transfer fee record of all rows is 2nd maximum . the name record of this row is snodgrass .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; transfer fee ; 2 } ; name } ; snodgrass }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to colorado . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; visitor ; colorado } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to usa . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; usa } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose left record of all rows is minimum . the institution record of this row is east carolina university .",
            "output": [
                "eq { hop { argmin { all_rows ; left } ; institution } ; east carolina university }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to hakim akbar . take the round record of this row . select the rows whose player record fuzzily matches to leonard myers . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; hakim akbar } ; round } ; hop { filter_eq { all_rows ; player ; leonard myers } ; round } }"
            ]
        },
        {
            "input": "the average of the top speed ( in operation ) \uff08 km / h \uff09 record of all rows is 106.33 .",
            "output": [
                "round_eq { avg { all_rows ; top speed ( in operation ) \uff08 km / h \uff09 } ; 106.33 }"
            ]
        },
        {
            "input": "select the row whose opened record of all rows is maximum . the name record of this row is ben 10 - ultimate mission .",
            "output": [
                "eq { hop { argmax { all_rows ; opened } ; name } ; ben 10 - ultimate mission }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to florida state . there is only one such row in the table . the name record of this unqiue row is e g green .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; florida state } } ; eq { hop { filter_eq { all_rows ; college ; florida state } ; name } ; e g green } }"
            ]
        },
        {
            "input": "select the row whose catches record of all rows is maximum . the player record of this row is m kaif .",
            "output": [
                "eq { hop { argmax { all_rows ; catches } ; player } ; m kaif }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 111 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 111 }"
            ]
        },
        {
            "input": "select the row whose avg attend record of all rows is 2nd maximum . the indoor year record of this row is 1978 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; avg attend ; 2 } ; indoor year } ; 1978 }"
            ]
        },
        {
            "input": "the average of the age record of all rows is 25.6 .",
            "output": [
                "round_eq { avg { all_rows ; age } ; 25.6 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to philipp oswald . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; philipp oswald } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 14 jun 2005 . take the margin of victory record of this row . select the rows whose date record fuzzily matches to 12 jul 2006 . take the margin of victory record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 14 jun 2005 } ; margin of victory } ; hop { filter_eq { all_rows ; date ; 12 jul 2006 } ; margin of victory } }"
            ]
        },
        {
            "input": "select the rows whose model record fuzzily matches to amd 800 chipset series . take the tdp ( w ) record of this row . select the rows whose model record fuzzily matches to amd 700 chipset series . take the tdp ( w ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; model ; amd 800 chipset series } ; tdp ( w ) } ; hop { filter_eq { all_rows ; model ; amd 700 chipset series } ; tdp ( w ) } }"
            ]
        },
        {
            "input": "select the rows whose co - drivers record fuzzily matches to olivier pla guy smith . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; co - drivers ; olivier pla guy smith } } ; 2 }"
            ]
        },
        {
            "input": "for the most wkts records of all rows , most of them fuzzily match to george davidson .",
            "output": [
                "most_eq { all_rows ; most wkts ; george davidson }"
            ]
        },
        {
            "input": "select the rows whose results record fuzzily matches to retired to run for us senate democratic hold . there is only one such row in the table . the incumbent record of this unqiue row is harold ford jr .",
            "output": [
                "and { only { filter_eq { all_rows ; results ; retired to run for us senate democratic hold } } ; eq { hop { filter_eq { all_rows ; results ; retired to run for us senate democratic hold } ; incumbent } ; harold ford jr } }"
            ]
        },
        {
            "input": "select the rows whose namesake record fuzzily matches to sumerian town . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; namesake ; sumerian town } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the televotes record of all rows is 147968 .",
            "output": [
                "round_eq { sum { all_rows ; televotes } ; 147968 }"
            ]
        },
        {
            "input": "for the region records of all rows , all of them fuzzily match to japan .",
            "output": [
                "all_eq { all_rows ; region ; japan }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to guard . for the number records of these rows , most of them are less than 20 .",
            "output": [
                "most_less { filter_eq { all_rows ; position ; guard } ; number ; 20 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 22,800 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 22,800 }"
            ]
        },
        {
            "input": "for the completed records of all rows , all of them fuzzily match to no .",
            "output": [
                "all_eq { all_rows ; completed ; no }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 10 . for the worldwide gross records of these rows , all of them are greater than 300,000,000 .",
            "output": [
                "all_greater { filter_less_eq { all_rows ; rank ; 10 } ; worldwide gross ; 300,000,000 }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to april . for the us viewers ( million ) records of these rows , most of them are greater than or equal to 9 .",
            "output": [
                "most_greater_eq { filter_eq { all_rows ; original air date ; april } ; us viewers ( million ) ; 9 }"
            ]
        },
        {
            "input": "select the rows whose tdp record fuzzily matches to 17 w . there is only one such row in the table . the brand name ( list ) record of this unqiue row is core i7 - 3xx7u , i7 - 3xx7ue .",
            "output": [
                "and { only { filter_eq { all_rows ; tdp ; 17 w } } ; eq { hop { filter_eq { all_rows ; tdp ; 17 w } ; brand name ( list ) } ; core i7 - 3xx7u , i7 - 3xx7ue } }"
            ]
        },
        {
            "input": "select the rows whose country record does not match to china / hong kong . among these rows , select the rows whose year record is less than 2004 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { filter_not_eq { all_rows ; country ; china / hong kong } ; year ; 2004 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose best record is greater than 1:25.000 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater { all_rows ; best ; 1:25.000 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . there is only one such row in the table . the date record of this unqiue row is april 20 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; w } } ; eq { hop { filter_eq { all_rows ; score ; w } ; date } ; april 20 } }"
            ]
        },
        {
            "input": "select the row whose round record of all rows is 3rd minimum . the player record of this row is glen irwin .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; round ; 3 } ; player } ; glen irwin }"
            ]
        },
        {
            "input": "select the rows whose days record is greater than 110 . there is only one such row in the table . the series record of this unqiue row is season 3 .",
            "output": [
                "and { only { filter_greater { all_rows ; days ; 110 } } ; eq { hop { filter_greater { all_rows ; days ; 110 } ; series } ; season 3 } }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to 19 . for the party records of these rows , all of them fuzzily match to democratic .",
            "output": [
                "all_eq { filter_eq { all_rows ; first elected ; 19 } ; party ; democratic }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to south korea . there is only one such row in the table . the tournament record of this unqiue row is summer olympics .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; south korea } } ; eq { hop { filter_eq { all_rows ; venue ; south korea } ; tournament } ; summer olympics } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd minimum . the formula record of this row is grand prix .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 2 } ; formula } ; grand prix }"
            ]
        },
        {
            "input": "select the rows whose away team score record is greater than 13.0 . among these rows , select the rows whose crowd record is greater than 19000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; away team score ; 13.0 } ; crowd ; 19000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose sfc in lb / ( lbf h ) record is greater than 10 . there is only one such row in the table . the engine type record of this unqiue row is nk - 33 rocket engine .",
            "output": [
                "and { only { filter_greater { all_rows ; sfc in lb / ( lbf h ) ; 10 } } ; eq { hop { filter_greater { all_rows ; sfc in lb / ( lbf h ) ; 10 } ; engine type } ; nk - 33 rocket engine } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 270 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ; 270 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose cars per set record of all rows is 1st maximum . the class record of this row is class 254 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; cars per set ; 1 } ; class } ; class 254 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to perry central . take the size record of this row . select the rows whose school record fuzzily matches to springs valley . take the size record of this row . the first record is 15 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; school ; perry central } ; size } ; hop { filter_eq { all_rows ; school ; springs valley } ; size } } ; 15 }"
            ]
        },
        {
            "input": "select the row whose rnag ( mhz ) record of all rows is maximum . the transmitter record of this row is clermont carn .",
            "output": [
                "eq { hop { argmax { all_rows ; rnag ( mhz ) } ; transmitter } ; clermont carn }"
            ]
        },
        {
            "input": "select the rows whose weapon record fuzzily matches to razor boomerang . there is only one such row in the table . the eagle riders record of this unqiue row is hunter harris .",
            "output": [
                "and { only { filter_eq { all_rows ; weapon ; razor boomerang } } ; eq { hop { filter_eq { all_rows ; weapon ; razor boomerang } ; eagle riders } ; hunter harris } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to australia . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nation ; australia } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose individual record of all rows is 2nd minimum . the event record of this row is 2004 oberhof .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; individual ; 2 } ; event } ; 2004 oberhof }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to team jlr . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; team jlr } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to creighton . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; school / club team ; creighton } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2010 . take the attendance / g record of this row . select the rows whose season record fuzzily matches to 2009 . take the attendance / g record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2010 } ; attendance / g } ; hop { filter_eq { all_rows ; season ; 2009 } ; attendance / g } }"
            ]
        },
        {
            "input": "select the rows whose current affiliation record fuzzily matches to nbc affiliate owned by gannett company . there is only one such row in the table . the station record of this unqiue row is kyw - tv ( now wkyc - tv ) .",
            "output": [
                "and { only { filter_eq { all_rows ; current affiliation ; nbc affiliate owned by gannett company } } ; eq { hop { filter_eq { all_rows ; current affiliation ; nbc affiliate owned by gannett company } ; station } ; kyw - tv ( now wkyc - tv ) } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost . there is only one such row in the table . the date record of this unqiue row is october 7 , 1994 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost } } ; eq { hop { filter_eq { all_rows ; result ; lost } ; date } ; october 7 , 1994 } }"
            ]
        },
        {
            "input": "the average of the rating record of all rows is 0.6 .",
            "output": [
                "round_eq { avg { all_rows ; rating } ; 0.6 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the incumbent record of this row is s otis bland .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; incumbent } ; s otis bland }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jeff urban . take the pick record of this row . select the rows whose player record fuzzily matches to chris george . take the pick record of this row . the first record is greater than the second record . the pick record of the first row is 41 . the pick record of the second row is 31 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; player ; jeff urban } ; pick } ; hop { filter_eq { all_rows ; player ; chris george } ; pick } } ; and { eq { hop { filter_eq { all_rows ; player ; jeff urban } ; pick } ; 41 } ; eq { hop { filter_eq { all_rows ; player ; chris george } ; pick } ; 31 } } }"
            ]
        },
        {
            "input": "select the row whose location / attendance record of all rows is minimum . the date record of this row is july 2 .",
            "output": [
                "eq { hop { argmin { all_rows ; location / attendance } ; date } ; july 2 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to nominee . there is only one such row in the table . the english title record of this unqiue row is paradise now .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; nominee } } ; eq { hop { filter_eq { all_rows ; result ; nominee } ; english title } ; paradise now } }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to icl india by 4 wickets .",
            "output": [
                "most_eq { all_rows ; result ; icl india by 4 wickets }"
            ]
        },
        {
            "input": "select the rows whose nation record is arbitrary . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_all { all_rows ; nation } } ; 9 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is minimum . the nhl team record of this row is hartford whalers .",
            "output": [
                "eq { hop { argmin { all_rows ; pick } ; nhl team } ; hartford whalers }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 2nd maximum . the player record of this row is spencer wadsworth .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 2 } ; player } ; spencer wadsworth }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is overton brooks .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; overton brooks }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 70.46 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 70.46 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 4th minimum . the song title record of this row is hrudayam ekkadunnadi .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 4 } ; song title } ; hrudayam ekkadunnadi }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is minimum . the date record of this row is october 14 , 1962 .",
            "output": [
                "eq { hop { argmin { all_rows ; attendance } ; date } ; october 14 , 1962 }"
            ]
        },
        {
            "input": "for the manner records of all rows , most of them fuzzily match to sacked .",
            "output": [
                "most_eq { all_rows ; manner ; sacked }"
            ]
        },
        {
            "input": "for the introduction records of all rows , all of them fuzzily match to 12 december 1928 .",
            "output": [
                "all_eq { all_rows ; introduction ; 12 december 1928 }"
            ]
        },
        {
            "input": "select the rows whose series ep record is arbitrary . the number of such rows is 13 .",
            "output": [
                "eq { count { filter_all { all_rows ; series ep } } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose capacity record is equal to 15042 . there is only one such row in the table . the home venue record of this unqiue row is sangju civic stadium .",
            "output": [
                "and { only { filter_eq { all_rows ; capacity ; 15042 } } ; eq { hop { filter_eq { all_rows ; capacity ; 15042 } ; home venue } ; sangju civic stadium } }"
            ]
        },
        {
            "input": "select the row whose episodes record of all rows is minimum . the character record of this row is aiden burn csi detective .",
            "output": [
                "eq { hop { argmin { all_rows ; episodes } ; character } ; aiden burn csi detective }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than 50000 .",
            "output": [
                "most_greater { all_rows ; attendance ; 50000 }"
            ]
        },
        {
            "input": "select the rows whose money record is greater than 100000 . there is only one such row in the table . the player record of this unqiue row is ben crenshaw .",
            "output": [
                "and { only { filter_greater { all_rows ; money ; 100000 } } ; eq { hop { filter_greater { all_rows ; money ; 100000 } ; player } ; ben crenshaw } }"
            ]
        },
        {
            "input": "select the rows whose business intelligence record fuzzily matches to no . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; business intelligence ; no } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose album record fuzzily matches to lost souls . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; album ; lost souls } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to best series - drama . the minimum year record of these rows is 1994 .",
            "output": [
                "eq { min { filter_eq { all_rows ; category ; best series - drama } ; year } ; 1994 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to sheffield , england . among these rows , select the rows whose type record fuzzily matches to club trophy . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location ; sheffield , england } ; type ; club trophy } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose airline record fuzzily matches to tam . take the rank record of this row . select the rows whose airline record fuzzily matches to gol . take the rank record of this row . the second record is 1 better larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; airline ; tam } ; rank } ; hop { filter_eq { all_rows ; airline ; gol } ; rank } } ; -1 better }"
            ]
        },
        {
            "input": "select the rows whose pitcher record fuzzily matches to toad ramsey . take the strikeouts record of this row . select the rows whose pitcher record fuzzily matches to old hoss radbourn . take the strikeouts record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; pitcher ; toad ramsey } ; strikeouts } ; hop { filter_eq { all_rows ; pitcher ; old hoss radbourn } ; strikeouts } }"
            ]
        },
        {
            "input": "for the candidates records of all rows , most of them fuzzily match to unopposed .",
            "output": [
                "most_eq { all_rows ; candidates ; unopposed }"
            ]
        },
        {
            "input": "select the rows whose nationality record does not match to ger . among these rows , select the rows whose points record is greater than 257.0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_not_eq { all_rows ; nationality ; ger } ; points ; 257.0 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the opponent record of this row is ma\u0161a zec pe\u0161kiri\u010d .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; opponent } ; ma\u0161a zec pe\u0161kiri\u010d }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is -4.64 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; -4.64 }"
            ]
        },
        {
            "input": "select the rows whose contestant record is arbitrary . the number of such rows is 19 .",
            "output": [
                "eq { count { filter_all { all_rows ; contestant } } ; 19 }"
            ]
        },
        {
            "input": "the average of the driver - matched db record of all rows is 0.07 .",
            "output": [
                "round_eq { avg { all_rows ; driver - matched db } ; 0.07 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 2 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 2 }"
            ]
        },
        {
            "input": "for the team records of all rows , most of them fuzzily match to triple eight race engineering .",
            "output": [
                "most_eq { all_rows ; team ; triple eight race engineering }"
            ]
        },
        {
            "input": "select the rows whose official name record fuzzily matches to madawaska . take the area km 2 record of this row . select the rows whose official name record fuzzily matches to baker brook . take the area km 2 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; official name ; madawaska } ; area km 2 } ; hop { filter_eq { all_rows ; official name ; baker brook } ; area km 2 } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd minimum . the event record of this row is gladiator challenge 87 : collision course .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 2 } ; event } ; gladiator challenge 87 : collision course }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is april 22 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; april 22 }"
            ]
        },
        {
            "input": "select the rows whose result record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; result } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to may . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; date ; may } }"
            ]
        },
        {
            "input": "the sum of the laps record of all rows is 2021 .",
            "output": [
                "round_eq { sum { all_rows ; laps } ; 2021 }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to petri suvanto . select the row whose date record of these rows is 1st maximum . the circuit record of this row is road america .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; winning driver ; petri suvanto } ; date ; 1 } ; circuit } ; road america }"
            ]
        },
        {
            "input": "the average of the laps record of all rows is 200 .",
            "output": [
                "round_eq { avg { all_rows ; laps } ; 200 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is victoria park .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; victoria park }"
            ]
        },
        {
            "input": "for the best jump records of all rows , most of them are greater than over 7 meters .",
            "output": [
                "most_greater { all_rows ; best jump ; over 7 meters }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to west germany . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; west germany } } ; 2 }"
            ]
        },
        {
            "input": "the average of the height ( m ) record of all rows is 261.3 .",
            "output": [
                "round_eq { avg { all_rows ; height ( m ) } ; 261.3 }"
            ]
        },
        {
            "input": "select the row whose population ( 2011 ) record of all rows is 2nd maximum . the urban settlement record of this row is ruma .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ( 2011 ) ; 2 } ; urban settlement } ; ruma }"
            ]
        },
        {
            "input": "select the rows whose to par record is equal to -3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; -3 } } ; 2 }"
            ]
        },
        {
            "input": "the 2nd maximum attendance record of all rows is 55400 .",
            "output": [
                "eq { nth_max { all_rows ; attendance ; 2 } ; 55400 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to trent bridge . there is only one such row in the table . the date record of this unqiue row is 23 , 24 , 25 , 26 , 27 july 1998 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; trent bridge } } ; eq { hop { filter_eq { all_rows ; venue ; trent bridge } ; date } ; 23 , 24 , 25 , 26 , 27 july 1998 } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to austria . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; austria } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to jolly club spa . there is only one such row in the table . the engine record of this unqiue row is motori moderni tipo 615 - 90 1.5 v6 t .",
            "output": [
                "and { only { filter_eq { all_rows ; entrant ; jolly club spa } } ; eq { hop { filter_eq { all_rows ; entrant ; jolly club spa } ; engine } ; motori moderni tipo 615 - 90 1.5 v6 t } }"
            ]
        },
        {
            "input": "select the row whose sales ( billion ) record of all rows is maximum . the company record of this row is wal - mart stores .",
            "output": [
                "eq { hop { argmax { all_rows ; sales ( billion ) } ; company } ; wal - mart stores }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 36859 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 36859 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to mark fidler . take the goals record of this row . select the rows whose player record fuzzily matches to david sacco . take the goals record of this row . the first record is 3 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; mark fidler } ; goals } ; hop { filter_eq { all_rows ; player ; david sacco } ; goals } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose won record is less than or equal to 5 . the sum of the points record of these rows is 75 .",
            "output": [
                "round_eq { sum { filter_less_eq { all_rows ; won ; 5 } ; points } ; 75 }"
            ]
        },
        {
            "input": "select the rows whose shooter record fuzzily matches to sergei pyzhianov . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; shooter ; sergei pyzhianov } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is vfl park .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; vfl park }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is november 10 , 2002 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; november 10 , 2002 }"
            ]
        },
        {
            "input": "select the row whose % of global catholic pop record of all rows is 2nd maximum . the region record of this row is south asia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; % of global catholic pop ; 2 } ; region } ; south asia }"
            ]
        },
        {
            "input": "select the rows whose transfer window record fuzzily matches to winter . there is only one such row in the table . the name record of this unqiue row is burke .",
            "output": [
                "and { only { filter_eq { all_rows ; transfer window ; winter } } ; eq { hop { filter_eq { all_rows ; transfer window ; winter } ; name } ; burke } }"
            ]
        },
        {
            "input": "for the class records of all rows , most of them fuzzily match to cat a .",
            "output": [
                "most_eq { all_rows ; class ; cat a }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to august . select the row whose us viewers ( million ) record of these rows is 2nd maximum . the title record of this row is a little death .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; original air date ; august } ; us viewers ( million ) ; 2 } ; title } ; a little death }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to new seat republican gain . there is only one such row in the table . the first elected record of this unqiue row is none ( district created ) .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; new seat republican gain } } ; eq { hop { filter_eq { all_rows ; result ; new seat republican gain } ; first elected } ; none ( district created ) } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is university of cincinnati .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; university of cincinnati }"
            ]
        },
        {
            "input": "select the row whose redshift ( km / s ) record of all rows is maximum . the name record of this row is ngc 1596 .",
            "output": [
                "eq { hop { argmax { all_rows ; redshift ( km / s ) } ; name } ; ngc 1596 }"
            ]
        },
        {
            "input": "select the rows whose rufus guest record fuzzily matches to jimmy carr . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; rufus guest ; jimmy carr } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to brad jones . for the team records of these rows , all of them fuzzily match to brad jones racing .",
            "output": [
                "all_eq { filter_eq { all_rows ; winner ; brad jones } ; team ; brad jones racing }"
            ]
        },
        {
            "input": "for the of which currently forests , km square records of all rows , most of them are less than 1000 .",
            "output": [
                "most_less { all_rows ; of which currently forests , km square ; 1000 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to point guard . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; point guard } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the overall record of all rows is 503 .",
            "output": [
                "round_eq { sum { all_rows ; overall } ; 503 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the player record of this row is tom kite .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; player } ; tom kite }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is canada ( can ) .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; canada ( can ) }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to loss .",
            "output": [
                "most_eq { all_rows ; result ; loss }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the school record of this row is northview .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; school } ; northview }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to freshman . the average of the weight record of these rows is 215 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; year ; freshman } ; weight } ; 215 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to morena camilleri . the average of the place record of these rows is 3 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; artist ; morena camilleri } ; place } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to buck baker . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; team ; buck baker } }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 2nd maximum . the competition record of this row is 2007 afc asian cup qualification .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; score ; 2 } ; competition } ; 2007 afc asian cup qualification }"
            ]
        },
        {
            "input": "select the row whose f bolt ( kgf ) record of all rows is maximum . the chambering record of this row is .454 casull .",
            "output": [
                "eq { hop { argmax { all_rows ; f bolt ( kgf ) } ; chambering } ; .454 casull }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to alatri . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; nationality ; alatri } }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to south melbourne . for the crowd records of these rows , all of them are greater than 20000 .",
            "output": [
                "all_greater { filter_eq { all_rows ; away team ; south melbourne } ; crowd ; 20000 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 140 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 140 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the rider record of this row is chas mortimer .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; rider } ; chas mortimer }"
            ]
        },
        {
            "input": "select the rows whose parent record fuzzily matches to the cheviot . the average of the height ( m ) record of these rows is 642 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; parent ; the cheviot } ; height ( m ) } ; 642 }"
            ]
        },
        {
            "input": "for the country of origin records of all rows , most of them fuzzily match to united states .",
            "output": [
                "most_eq { all_rows ; country of origin ; united states }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 21500 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 21500 }"
            ]
        },
        {
            "input": "the average of the days with frost record of all rows is 15.67 .",
            "output": [
                "round_eq { avg { all_rows ; days with frost } ; 15.67 }"
            ]
        },
        {
            "input": "select the row whose mccain % record of all rows is maximum . the county record of this row is eureka .",
            "output": [
                "eq { hop { argmax { all_rows ; mccain % } ; county } ; eureka }"
            ]
        },
        {
            "input": "select the row whose international tourism expenditure ( 2012 ) record of all rows is 1st maximum . the country record of this row is china .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; international tourism expenditure ( 2012 ) ; 1 } ; country } ; china }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to dx . take the number in service record of this row . select the rows whose class record fuzzily matches to dsc . take the number in service record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; class ; dx } ; number in service } ; hop { filter_eq { all_rows ; class ; dsc } ; number in service } }"
            ]
        },
        {
            "input": "select the rows whose escorts record is equal to - . there is only one such row in the table . the nato member record of this unqiue row is belgium .",
            "output": [
                "and { only { filter_eq { all_rows ; escorts ; - } } ; eq { hop { filter_eq { all_rows ; escorts ; - } ; nato member } ; belgium } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to 50 km . there is only one such row in the table . the year record of this unqiue row is 2011 . the competition record of this unqiue row is world championships .",
            "output": [
                "and { only { filter_eq { all_rows ; event ; 50 km } } ; and { eq { hop { filter_eq { all_rows ; event ; 50 km } ; year } ; 2011 } ; eq { hop { filter_eq { all_rows ; event ; 50 km } ; competition } ; world championships } } }"
            ]
        },
        {
            "input": "select the rows whose team ( league ) record fuzzily matches to london knights . there is only one such row in the table . the player record of this unqiue row is jim sandlak .",
            "output": [
                "and { only { filter_eq { all_rows ; team ( league ) ; london knights } } ; eq { hop { filter_eq { all_rows ; team ( league ) ; london knights } ; player } ; jim sandlak } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 5 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; 5 } } ; 2 }"
            ]
        },
        {
            "input": "the maximum final score record of all rows is w 41 - 31 . the opponent record of the row with superlative final score record is hamburg sea devils .",
            "output": [
                "and { eq { max { all_rows ; final score } ; w 41 - 31 } ; eq { hop { argmax { all_rows ; final score } ; opponent } ; hamburg sea devils } }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 88.4 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 88.4 }"
            ]
        },
        {
            "input": "select the rows whose opponents record fuzzily matches to fulham . among these rows , select the rows whose result record fuzzily matches to 1-1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; opponents ; fulham } ; result ; 1-1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to western oval . there is only one such row in the table . the home team record of this unqiue row is footscray . the away team record of this unqiue row is essendon .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; western oval } } ; and { eq { hop { filter_eq { all_rows ; venue ; western oval } ; home team } ; footscray } ; eq { hop { filter_eq { all_rows ; venue ; western oval } ; away team } ; essendon } } }"
            ]
        },
        {
            "input": "for the length records of all rows , most of them are greater than 4:00 .",
            "output": [
                "most_greater { all_rows ; length ; 4:00 }"
            ]
        },
        {
            "input": "for the episodes records of all rows , most of them are greater than or equal to 40 .",
            "output": [
                "most_greater_eq { all_rows ; episodes ; 40 }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are greater than or equal to 10 .",
            "output": [
                "most_greater_eq { all_rows ; points ; 10 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to colorado . among these rows , select the rows whose attendance record is greater than 20000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; visitor ; colorado } ; attendance ; 20000 } } ; 2 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to brandon roy .",
            "output": [
                "most_eq { all_rows ; high points ; brandon roy }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to hampden park , glasgow , scotland . take the date record of this row . select the rows whose venue record fuzzily matches to varsity stadium , toronto , canada . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; venue ; hampden park , glasgow , scotland } ; date } ; hop { filter_eq { all_rows ; venue ; varsity stadium , toronto , canada } ; date } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to gene carr . take the pick record of this row . select the rows whose player record fuzzily matches to bernie doan . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; gene carr } ; pick } ; hop { filter_eq { all_rows ; player ; bernie doan } ; pick } }"
            ]
        },
        {
            "input": "for the directed by records of all rows , all of them fuzzily match to don colliver .",
            "output": [
                "all_eq { all_rows ; directed by ; don colliver }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 1st maximum . the title record of this row is weeping willows .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; title } ; weeping willows }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is october 11 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; october 11 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to defensive end . select the row whose pick record of these rows is 2nd minimum . the player record of this row is leif larsen .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; position ; defensive end } ; pick ; 2 } ; player } ; leif larsen }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to pascal chimbonda . take the total record of this row . select the rows whose player record fuzzily matches to robbie keane . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; pascal chimbonda } ; total } ; hop { filter_eq { all_rows ; player ; robbie keane } ; total } }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than 2000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; year ; 2000 } } ; 3 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 8 july 1933 .",
            "output": [
                "all_eq { all_rows ; date ; 8 july 1933 }"
            ]
        },
        {
            "input": "select the row whose mintage record of all rows is maximum . the design record of this row is diamonds .",
            "output": [
                "eq { hop { argmax { all_rows ; mintage } ; design } ; diamonds }"
            ]
        },
        {
            "input": "select the rows whose crew record fuzzily matches to none . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; crew ; none } } ; 8 }"
            ]
        },
        {
            "input": "the 3rd minimum year record of all rows is 2006 . the team record of the row with 3rd minimum year record is rollcentre racing .",
            "output": [
                "and { eq { nth_min { all_rows ; year ; 3 } ; 2006 } ; eq { hop { nth_argmin { all_rows ; year ; 3 } ; team } ; rollcentre racing } }"
            ]
        },
        {
            "input": "select the row whose entered service record of all rows is 3rd minimum . the locomotive record of this row is c503 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; entered service ; 3 } ; locomotive } ; c503 }"
            ]
        },
        {
            "input": "select the rows whose developer record fuzzily matches to cloud imperium games corporation . there is only one such row in the table . the title record of this unqiue row is star citizen .",
            "output": [
                "and { only { filter_eq { all_rows ; developer ; cloud imperium games corporation } } ; eq { hop { filter_eq { all_rows ; developer ; cloud imperium games corporation } ; title } ; star citizen } }"
            ]
        },
        {
            "input": "select the rows whose name record is arbitrary . the number of such rows is 18 .",
            "output": [
                "eq { count { filter_all { all_rows ; name } } ; 18 }"
            ]
        },
        {
            "input": "select the row whose ties record of all rows is maximum . the season record of this row is 2011 .",
            "output": [
                "eq { hop { argmax { all_rows ; ties } ; season } ; 2011 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is minimum . the player record of this row is tim simpson .",
            "output": [
                "eq { hop { argmin { all_rows ; score } ; player } ; tim simpson }"
            ]
        },
        {
            "input": "select the rows whose time / retired record is less than 10 secs . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_less { all_rows ; time / retired ; 10 secs } } ; 6 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 34.5 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 34.5 }"
            ]
        },
        {
            "input": "the average of the rebounds record of all rows is 269 .",
            "output": [
                "round_eq { avg { all_rows ; rebounds } ; 269 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to guard . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; guard } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to minot state university . take the enrollment record of this row . select the rows whose institution record fuzzily matches to dakota state university . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; institution ; minot state university } ; enrollment } ; hop { filter_eq { all_rows ; institution ; dakota state university } ; enrollment } }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to arkansas state . there is only one such row in the table . the name record of this unqiue row is robert speer .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; arkansas state } } ; eq { hop { filter_eq { all_rows ; college ; arkansas state } ; name } ; robert speer } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the nation record of this row is soviet union .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; soviet union }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . there is only one such row in the table . the category record of this unqiue row is choice summer tv star : male .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; won } } ; eq { hop { filter_eq { all_rows ; result ; won } ; category } ; choice summer tv star : male } }"
            ]
        },
        {
            "input": "select the row whose power notation record of all rows is 2nd maximum . the short scale record of this row is one billion a thousand million .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; power notation ; 2 } ; short scale } ; one billion a thousand million }"
            ]
        },
        {
            "input": "select the rows whose result record is less than 10 . there is only one such row in the table . the date record of this unqiue row is sunday , september 27 .",
            "output": [
                "and { only { filter_less { all_rows ; result ; 10 } } ; eq { hop { filter_less { all_rows ; result ; 10 } ; date } ; sunday , september 27 } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the name record of this row is tai babilonia / randy gardner .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; name } ; tai babilonia / randy gardner }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to the open championship . take the events record of this row . select the rows whose tournament record fuzzily matches to pga championship . take the events record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; the open championship } ; events } ; hop { filter_eq { all_rows ; tournament ; pga championship } ; events } }"
            ]
        },
        {
            "input": "select the row whose shot % record of all rows is minimum . the skip record of this row is anna kube\u0161kov\u00e1 .",
            "output": [
                "eq { hop { argmin { all_rows ; shot % } ; skip } ; anna kube\u0161kov\u00e1 }"
            ]
        },
        {
            "input": "the average of the matches record of all rows is 4.1 .",
            "output": [
                "round_eq { avg { all_rows ; matches } ; 4.1 }"
            ]
        },
        {
            "input": "select the rows whose city / state record fuzzily matches to phillip island , victoria . among these rows , select the rows whose team record fuzzily matches to volvo racing . there is only one such row in the table .",
            "output": [
                "only { filter_eq { filter_eq { all_rows ; city / state ; phillip island , victoria } ; team ; volvo racing } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to leicester city . there is only one such row in the table . the date record of this unqiue row is 30 january 2000 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; leicester city } } ; eq { hop { filter_eq { all_rows ; opponent ; leicester city } ; date } ; 30 january 2000 } }"
            ]
        },
        {
            "input": "select the row whose imports record of all rows is maximum . the country record of this row is china .",
            "output": [
                "eq { hop { argmax { all_rows ; imports } ; country } ; china }"
            ]
        },
        {
            "input": "select the row whose total ( kg ) record of all rows is 2nd maximum . the name record of this row is pedro stetsiuk ( arg ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ( kg ) ; 2 } ; name } ; pedro stetsiuk ( arg ) }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd maximum . the country record of this row is slovenia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; time ; 2 } ; country } ; slovenia }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to japan . take the against record of this row . select the rows whose opposing teams record fuzzily matches to usa . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opposing teams ; japan } ; against } ; hop { filter_eq { all_rows ; opposing teams ; usa } ; against } }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 476 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 476 }"
            ]
        },
        {
            "input": "select the row whose population ( 2011 ) record of all rows is 2nd maximum . the settlement record of this row is aleksandrovo .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population ( 2011 ) ; 2 } ; settlement } ; aleksandrovo }"
            ]
        },
        {
            "input": "select the rows whose snatch record is greater than 150 . select the row whose bodyweight record of these rows is maximum . the name record of this row is herbys m\u00e1rquez ( ven ) .",
            "output": [
                "eq { hop { argmax { filter_greater { all_rows ; snatch ; 150 } ; bodyweight } ; name } ; herbys m\u00e1rquez ( ven ) }"
            ]
        },
        {
            "input": "for the res records of all rows , most of them fuzzily match to win .",
            "output": [
                "most_eq { all_rows ; res ; win }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 20240 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 20240 }"
            ]
        },
        {
            "input": "select the rows whose time / retired record fuzzily matches to accident . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time / retired ; accident } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to hastings college . there is only one such row in the table . the player record of this unqiue row is adam kossack .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; hastings college } } ; eq { hop { filter_eq { all_rows ; college ; hastings college } ; player } ; adam kossack } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to fleetcenter . the minimum date record of these rows is fri mar 1 .",
            "output": [
                "eq { min { filter_eq { all_rows ; location ; fleetcenter } ; date } ; fri mar 1 }"
            ]
        },
        {
            "input": "select the row whose winnings record of all rows is maximum . the year record of this row is 2006 .",
            "output": [
                "eq { hop { argmax { all_rows ; winnings } ; year } ; 2006 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 3:09 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 3:09 }"
            ]
        },
        {
            "input": "for the place records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; place ; 10 }"
            ]
        },
        {
            "input": "select the rows whose audition city record fuzzily matches to s\u00e3o paulo . there is only one such row in the table . the guest fourth judge record of this unqiue row is peninha .",
            "output": [
                "and { only { filter_eq { all_rows ; audition city ; s\u00e3o paulo } } ; eq { hop { filter_eq { all_rows ; audition city ; s\u00e3o paulo } ; guest fourth judge } ; peninha } }"
            ]
        },
        {
            "input": "select the row whose height ( cm ) record of all rows is 2nd maximum . the name record of this row is al iafrate .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; height ( cm ) ; 2 } ; name } ; al iafrate }"
            ]
        },
        {
            "input": "select the row whose matches record of all rows is 2nd maximum . the goalkeeper record of this row is joel rodr\u00edguez .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; matches ; 2 } ; goalkeeper } ; joel rodr\u00edguez }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them are less than or equal to 15 .",
            "output": [
                "most_less_eq { all_rows ; position ; 15 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to aermacchi . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; team ; aermacchi } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . among these rows , select the rows whose result record fuzzily matches to l . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; october } ; result ; l } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the wickets record of all rows is 90 .",
            "output": [
                "round_eq { sum { all_rows ; wickets } ; 90 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose result record fuzzily matches to l . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; november } ; result ; l } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose call sign record fuzzily matches to cimo - fm . take the frequency record of this row . select the rows whose call sign record fuzzily matches to cfak - fm . take the frequency record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; call sign ; cimo - fm } ; frequency } ; hop { filter_eq { all_rows ; call sign ; cfak - fm } ; frequency } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to adam gilchrist . take the matches record of this row . select the rows whose player record fuzzily matches to steve rixon . take the matches record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; adam gilchrist } ; matches } ; hop { filter_eq { all_rows ; player ; steve rixon } ; matches } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to edvald boasson hagen . the minimum stage record of these rows is 4 .",
            "output": [
                "eq { min { filter_eq { all_rows ; winner ; edvald boasson hagen } ; stage } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to oct . among these rows , select the rows whose opponent record fuzzily matches to new england patriots . there is only one such row in the table .",
            "output": [
                "only { filter_eq { filter_eq { all_rows ; date ; oct } ; opponent ; new england patriots } }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 16 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 16 }"
            ]
        },
        {
            "input": "select the rows whose competition record is equal to 2014 . there is only one such row in the table . the venue record of this unqiue row is prince mohamed bin fahd stadium , dammam .",
            "output": [
                "and { only { filter_eq { all_rows ; competition ; 2014 } } ; eq { hop { filter_eq { all_rows ; competition ; 2014 } ; venue } ; prince mohamed bin fahd stadium , dammam } }"
            ]
        },
        {
            "input": "for the single day net gross records of all rows , most of them are greater than 25 , 00 , 00000 .",
            "output": [
                "most_greater { all_rows ; single day net gross ; 25 , 00 , 00000 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1987 . the average of the winning score record of these rows is 305.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; date ; 1987 } ; winning score } ; 305.5 }"
            ]
        },
        {
            "input": "for the format records of all rows , most of them fuzzily match to lp .",
            "output": [
                "most_eq { all_rows ; format ; lp }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is vfl park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; vfl park }"
            ]
        },
        {
            "input": "select the row whose s risk - weighted asset , million record of all rows is maximum . the institution record of this row is allied irish banks .",
            "output": [
                "eq { hop { argmax { all_rows ; s risk - weighted asset , million } ; institution } ; allied irish banks }"
            ]
        },
        {
            "input": "the maximum saturated fat record of all rows is 52 g ( 55 % ) . the record of the row with superlative saturated fat record is suet .",
            "output": [
                "and { eq { max { all_rows ; saturated fat } ; 52 g ( 55 % ) } ; eq { hop { argmax { all_rows ; saturated fat } ; } ; suet } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to road to the north pole . take the original air date record of this row . select the rows whose title record fuzzily matches to road to europe . take the original air date record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; road to the north pole } ; original air date } ; hop { filter_eq { all_rows ; title ; road to europe } ; original air date } }"
            ]
        },
        {
            "input": "for the performer 1 records of all rows , all of them fuzzily match to wayne brady .",
            "output": [
                "all_eq { all_rows ; performer 1 ; wayne brady }"
            ]
        },
        {
            "input": "select the rows whose race winner record fuzzily matches to carlos pace . take the date record of this row . select the rows whose race winner record fuzzily matches to niki lauda . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; race winner ; carlos pace } ; date } ; hop { filter_eq { all_rows ; race winner ; niki lauda } ; date } }"
            ]
        },
        {
            "input": "the average of the games record of all rows is 70 .",
            "output": [
                "round_eq { avg { all_rows ; games } ; 70 }"
            ]
        },
        {
            "input": "select the rows whose general classification record fuzzily matches to igor ant\u00f3n . among these rows , select the rows whose winner record fuzzily matches to markus fothen . there is only one such row in the table . the stage record of this unqiue row is 5 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; general classification ; igor ant\u00f3n } ; winner ; markus fothen } } ; eq { hop { filter_eq { filter_eq { all_rows ; general classification ; igor ant\u00f3n } ; winner ; markus fothen } ; stage } ; 5 } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is minimum . the player record of this row is patrick kabongo .",
            "output": [
                "eq { hop { argmin { all_rows ; pick } ; player } ; patrick kabongo }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd minimum . the date record of this row is january 2 , 2005 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; attendance ; 2 } ; date } ; january 2 , 2005 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 2:08.00.0 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 2:08.00.0 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd minimum . the date record of this row is december 16 , 1962 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; attendance ; 2 } ; date } ; december 16 , 1962 }"
            ]
        },
        {
            "input": "select the rows whose site / stadium record fuzzily matches to goodwin field . there is only one such row in the table . the date record of this unqiue row is may 25 . the opponent record of this unqiue row is cal state fullerton .",
            "output": [
                "and { only { filter_eq { all_rows ; site / stadium ; goodwin field } } ; and { eq { hop { filter_eq { all_rows ; site / stadium ; goodwin field } ; date } ; may 25 } ; eq { hop { filter_eq { all_rows ; site / stadium ; goodwin field } ; opponent } ; cal state fullerton } } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to grass . among these rows , select the rows whose outcome record fuzzily matches to winner . there is only one such row in the table . the tournament record of this unqiue row is newport , rhode island , usa .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; surface ; grass } ; outcome ; winner } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; grass } ; outcome ; winner } ; tournament } ; newport , rhode island , usa } }"
            ]
        },
        {
            "input": "for the nationality records of all rows , all of them fuzzily match to canada .",
            "output": [
                "all_eq { all_rows ; nationality ; canada }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the venue record of this row is mcg .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; venue } ; mcg }"
            ]
        },
        {
            "input": "select the rows whose school type record fuzzily matches to public . among these rows , select the rows whose joined acc record fuzzily matches to 197 . there is only one such row in the table . the institution record of this unqiue row is georgia tech .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; school type ; public } ; joined acc ; 197 } } ; eq { hop { filter_eq { filter_eq { all_rows ; school type ; public } ; joined acc ; 197 } ; institution } ; georgia tech } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to masters tournament . take the top - 25 record of this row . select the rows whose tournament record fuzzily matches to pga championship . take the top - 25 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 25 } ; hop { filter_eq { all_rows ; tournament ; pga championship } ; top - 25 } }"
            ]
        },
        {
            "input": "select the rows whose lost record is equal to 0 . there is only one such row in the table . the team record of this unqiue row is paulistano .",
            "output": [
                "and { only { filter_eq { all_rows ; lost ; 0 } } ; eq { hop { filter_eq { all_rows ; lost ; 0 } ; team } ; paulistano } }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 11 }"
            ]
        },
        {
            "input": "select the row whose % of popular vote record of all rows is minimum . the election record of this row is 1984 .",
            "output": [
                "eq { hop { argmin { all_rows ; % of popular vote } ; election } ; 1984 }"
            ]
        },
        {
            "input": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % . take the first elected record of this row . select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % . take the first elected record of this row . the first record is less than the second record . the first elected record of the first row is 1942 . the first elected record of the second row is 1943 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } } ; and { eq { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; 1942 } ; eq { hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } ; 1943 } } }"
            ]
        },
        {
            "input": "the average of the floors record of all rows is 21.43 .",
            "output": [
                "round_eq { avg { all_rows ; floors } ; 21.43 }"
            ]
        },
        {
            "input": "for the faxing records of all rows , most of them fuzzily match to no .",
            "output": [
                "most_eq { all_rows ; faxing ; no }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to vancouver canucks . take the points record of this row . select the rows whose opponent record fuzzily matches to washington capitals . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; vancouver canucks } ; points } ; hop { filter_eq { all_rows ; opponent ; washington capitals } ; points } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to jeremy podeswa . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; jeremy podeswa } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 10 march 1984 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 10 march 1984 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the weight record of all rows is 250.5 .",
            "output": [
                "round_eq { avg { all_rows ; weight } ; 250.5 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to forward / center . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; forward / center } } ; 2 }"
            ]
        },
        {
            "input": "for the round records of all rows , most of them are equal to 1 .",
            "output": [
                "most_eq { all_rows ; round ; 1 }"
            ]
        },
        {
            "input": "select the rows whose position in 2004 record fuzzily matches to first league . there is only one such row in the table . the team record of this unqiue row is lokomotiv .",
            "output": [
                "and { only { filter_eq { all_rows ; position in 2004 ; first league } } ; eq { hop { filter_eq { all_rows ; position in 2004 ; first league } ; team } ; lokomotiv } }"
            ]
        },
        {
            "input": "select the rows whose locale record fuzzily matches to canada . take the ends won record of this row . select the rows whose locale record fuzzily matches to scotland . take the ends won record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; locale ; canada } ; ends won } ; hop { filter_eq { all_rows ; locale ; scotland } ; ends won } }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are less than 5 .",
            "output": [
                "most_less { all_rows ; score ; 5 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; united states } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to duke . there is only one such row in the table . the player record of this unqiue row is antonio lang .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; duke } } ; eq { hop { filter_eq { all_rows ; school / club team ; duke } ; player } ; antonio lang } }"
            ]
        },
        {
            "input": "select the rows whose type of game record fuzzily matches to friendly . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; type of game ; friendly } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose viewership record of all rows is maximum . the original title record of this row is testing times .",
            "output": [
                "eq { hop { argmax { all_rows ; viewership } ; original title } ; testing times }"
            ]
        },
        {
            "input": "for the average attendance home records of all rows , most of them are less than 3200 .",
            "output": [
                "most_less { all_rows ; average attendance home ; 3200 }"
            ]
        },
        {
            "input": "for the charleston southerns head coach records of all rows , most of them fuzzily match to jay mills .",
            "output": [
                "most_eq { all_rows ; charleston southerns head coach ; jay mills }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 5 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . there is only one such row in the table . the tournament record of this unqiue row is trivandrum .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; clay } } ; eq { hop { filter_eq { all_rows ; surface ; clay } ; tournament } ; trivandrum } }"
            ]
        },
        {
            "input": "select the rows whose year record is less than 1990 . among these rows , select the rows whose 250 cc record fuzzily matches to sito pons . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; year ; 1990 } ; 250 cc ; sito pons } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; hard } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose train no record fuzzily matches to 5037 . take the arrival record of this row . select the rows whose train no record fuzzily matches to 4723 . take the arrival record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; train no ; 5037 } ; arrival } ; hop { filter_eq { all_rows ; train no ; 4723 } ; arrival } }"
            ]
        },
        {
            "input": "the 1st minimum date record of all rows is 03 oct . the time record of the row with 1st minimum date record is 12:00 .",
            "output": [
                "and { eq { nth_min { all_rows ; date ; 1 } ; 03 oct } ; eq { hop { nth_argmin { all_rows ; date ; 1 } ; time } ; 12:00 } }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner - up . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome ; runner - up } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose overall record of all rows is 2nd maximum . the name record of this row is wayne millner .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; overall ; 2 } ; name } ; wayne millner }"
            ]
        },
        {
            "input": "for the party records of all rows , most of them fuzzily match to democratic - republican .",
            "output": [
                "most_eq { all_rows ; party ; democratic - republican }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to south korea .",
            "output": [
                "most_eq { all_rows ; country ; south korea }"
            ]
        },
        {
            "input": "select the rows whose average annual rainfall ( mm ) record is less than 100 . among these rows , select the rows whose average annual runoff ( mm ) record is less than 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_less { all_rows ; average annual rainfall ( mm ) ; 100 } ; average annual runoff ( mm ) ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose issue date ( s ) record of all rows is minimum . the artist record of this row is eiffel 65 .",
            "output": [
                "eq { hop { argmin { all_rows ; issue date ( s ) } ; artist } ; eiffel 65 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to grass . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; grass } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 6 june 2010 ( round 13 ) . take the total record of this row . select the rows whose date record fuzzily matches to 5 april 2008 ( round 4 ) . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 6 june 2010 ( round 13 ) } ; total } ; hop { filter_eq { all_rows ; date ; 5 april 2008 ( round 4 ) } ; total } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december 30 , 2007 . take the attendance record of this row . select the rows whose date record fuzzily matches to december 23 , 2007 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; december 30 , 2007 } ; attendance } ; hop { filter_eq { all_rows ; date ; december 23 , 2007 } ; attendance } }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the venue record of this row is est\u00e1dio campo desportivo , macau .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; venue } ; est\u00e1dio campo desportivo , macau }"
            ]
        },
        {
            "input": "select the row whose price ( usd ) record of all rows is 1st maximum . the model number record of this row is itanium 2 9040 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; price ( usd ) ; 1 } ; model number } ; itanium 2 9040 }"
            ]
        },
        {
            "input": "the average of the mintage record of all rows is 22800 .",
            "output": [
                "round_eq { avg { all_rows ; mintage } ; 22800 }"
            ]
        },
        {
            "input": "the average of the candidates record of all rows is 13 .",
            "output": [
                "round_eq { avg { all_rows ; candidates } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to amy van dyken . take the time record of this row . select the rows whose name record fuzzily matches to vivienne rignall . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; amy van dyken } ; time } ; hop { filter_eq { all_rows ; name ; vivienne rignall } ; time } }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to the playtones . take the total record of this row . select the rows whose artist record fuzzily matches to brolle . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; artist ; the playtones } ; total } ; hop { filter_eq { all_rows ; artist ; brolle } ; total } }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to east . among these rows , select the rows whose state record fuzzily matches to virginia . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; region ; east } ; state ; virginia } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose distance ( ly ) record of all rows is 1st minimum . the constellation record of this row is ursa major .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; distance ( ly ) ; 1 } ; constellation } ; ursa major }"
            ]
        },
        {
            "input": "select the rows whose partial thromboplastin time record fuzzily matches to shortened . there is only one such row in the table . the condition record of this unqiue row is c1inh deficiency .",
            "output": [
                "and { only { filter_eq { all_rows ; partial thromboplastin time ; shortened } } ; eq { hop { filter_eq { all_rows ; partial thromboplastin time ; shortened } ; condition } ; c1inh deficiency } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to venezuela . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; venezuela } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to franck esposito . take the time record of this row . select the rows whose name record fuzzily matches to andrew livingston . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; franck esposito } ; time } ; hop { filter_eq { all_rows ; name ; andrew livingston } ; time } }"
            ]
        },
        {
            "input": "select the row whose average ratings record of all rows is maximum . the romaji title record of this row is karei - naru ichizoku .",
            "output": [
                "eq { hop { argmax { all_rows ; average ratings } ; romaji title } ; karei - naru ichizoku }"
            ]
        },
        {
            "input": "the average of the seats record of all rows is 55 .",
            "output": [
                "round_eq { avg { all_rows ; seats } ; 55 }"
            ]
        },
        {
            "input": "select the row whose qual 1 record of all rows is minimum . the name record of this row is paul tracy .",
            "output": [
                "eq { hop { argmin { all_rows ; qual 1 } ; name } ; paul tracy }"
            ]
        },
        {
            "input": "the average of the best score record of all rows is 37 .",
            "output": [
                "round_eq { avg { all_rows ; best score } ; 37 }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to sovereign .",
            "output": [
                "most_eq { all_rows ; type ; sovereign }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 79,000 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 79,000 }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 2 . among these rows , select the rows whose total record is equal to 4 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; gold ; 2 } ; total ; 4 } } ; 2 }"
            ]
        },
        {
            "input": "for the best score records of all rows , most of them are greater than or equal to 29 .",
            "output": [
                "most_greater_eq { all_rows ; best score ; 29 }"
            ]
        },
        {
            "input": "select the rows whose island record fuzzily matches to north island . the maximum elevation ( m ) record of these rows is 2797 .",
            "output": [
                "eq { max { filter_eq { all_rows ; island ; north island } ; elevation ( m ) } ; 2797 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to billy casper . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winner ; billy casper } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to lamborghini v12 . the sum of the points record of these rows is 10 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; engine ; lamborghini v12 } ; points } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to melbourne . the sum of the crowd record of these rows is 25000 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; away team ; melbourne } ; crowd } ; 25000 }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to submission ( triangle choke ) . there is only one such row in the table . the res record of this unqiue row is loss .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; submission ( triangle choke ) } } ; eq { hop { filter_eq { all_rows ; method ; submission ( triangle choke ) } ; res } ; loss } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to greece . there is only one such row in the table . the name record of this unqiue row is anastasios gousis .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; greece } } ; eq { hop { filter_eq { all_rows ; nationality ; greece } ; name } ; anastasios gousis } }"
            ]
        },
        {
            "input": "select the rows whose goals record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; goals ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to village . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; status ; village } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose closed record of all rows is 2nd minimum . the venue record of this row is jim crockett park .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; closed ; 2 } ; venue } ; jim crockett park }"
            ]
        },
        {
            "input": "select the rows whose time record is less than 2:01 . among these rows , select the rows whose nationality record fuzzily matches to australia . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; time ; 2:01 } ; nationality ; australia } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the date record of this unqiue row is 28 october 2007 .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; date } ; 28 october 2007 } }"
            ]
        },
        {
            "input": "the average of the speed record of all rows is 92.14 .",
            "output": [
                "round_eq { avg { all_rows ; speed } ; 92.14 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to kuwait . there is only one such row in the table . the date record of this unqiue row is 26 jan 2005 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; kuwait } } ; eq { hop { filter_eq { all_rows ; venue ; kuwait } ; date } ; 26 jan 2005 } }"
            ]
        },
        {
            "input": "select the rows whose extinct record is equal to 1924 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; extinct ; 1924 } } ; 4 }"
            ]
        },
        {
            "input": "the sum of the gold record of all rows is 14 .",
            "output": [
                "round_eq { sum { all_rows ; gold } ; 14 }"
            ]
        },
        {
            "input": "select the row whose year established record of all rows is minimum . the members record of this row is university of t\u00fcbingen .",
            "output": [
                "eq { hop { argmin { all_rows ; year established } ; members } ; university of t\u00fcbingen }"
            ]
        },
        {
            "input": "select the rows whose mascot record fuzzily matches to scorpion . there is only one such row in the table . the elementary schools record of this unqiue row is san tan ( home ) .",
            "output": [
                "and { only { filter_eq { all_rows ; mascot ; scorpion } } ; eq { hop { filter_eq { all_rows ; mascot ; scorpion } ; elementary schools } ; san tan ( home ) } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to colombo . there is only one such row in the table . the date record of this unqiue row is 6 june 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; colombo } } ; eq { hop { filter_eq { all_rows ; venue ; colombo } ; date } ; 6 june 2008 } }"
            ]
        },
        {
            "input": "select the rows whose 2013 population ( july est ) record is greater than 7000000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; 2013 population ( july est ) ; 7000000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to turkey . take the gold record of this row . select the rows whose nation record fuzzily matches to soviet union . take the gold record of this row . the first record is greater than the second record . the gold record of the first row is 4 . the gold record of the second row is 2 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; nation ; turkey } ; gold } ; hop { filter_eq { all_rows ; nation ; soviet union } ; gold } } ; and { eq { hop { filter_eq { all_rows ; nation ; turkey } ; gold } ; 4 } ; eq { hop { filter_eq { all_rows ; nation ; soviet union } ; gold } ; 2 } } }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 8th . there is only one such row in the table . the year record of this unqiue row is 1988 .",
            "output": [
                "and { only { filter_eq { all_rows ; rank ; 8th } } ; eq { hop { filter_eq { all_rows ; rank ; 8th } ; year } ; 1988 } }"
            ]
        },
        {
            "input": "the average of the avg attendance record of all rows is 6854 .",
            "output": [
                "round_eq { avg { all_rows ; avg attendance } ; 6854 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to rhein fire . the average of the capacity record of these rows is 56308 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; team ; rhein fire } ; capacity } ; 56308 }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 59000 . there is only one such row in the table . the date record of this unqiue row is october 30 , 1977 .",
            "output": [
                "and { only { filter_greater { all_rows ; attendance ; 59000 } } ; eq { hop { filter_greater { all_rows ; attendance ; 59000 } ; date } ; october 30 , 1977 } }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is maximum . the team record of this row is dinamo zagreb .",
            "output": [
                "eq { hop { argmax { all_rows ; capacity } ; team } ; dinamo zagreb }"
            ]
        },
        {
            "input": "select the rows whose crystal structure record fuzzily matches to orthorhombic . there is only one such row in the table . the formula record of this unqiue row is yba 2 cu 3 o 7 .",
            "output": [
                "and { only { filter_eq { all_rows ; crystal structure ; orthorhombic } } ; eq { hop { filter_eq { all_rows ; crystal structure ; orthorhombic } ; formula } ; yba 2 cu 3 o 7 } }"
            ]
        },
        {
            "input": "select the rows whose lost record is equal to 17 . there is only one such row in the table . the club record of this unqiue row is milford haven rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; lost ; 17 } } ; eq { hop { filter_eq { all_rows ; lost ; 17 } ; club } ; milford haven rfc } }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to reno , nevada .",
            "output": [
                "most_eq { all_rows ; location ; reno , nevada }"
            ]
        },
        {
            "input": "select the rows whose date of vacancy record fuzzily matches to 1 april 2008 . there is only one such row in the table . the outgoing manager record of this unqiue row is andy ritchie .",
            "output": [
                "and { only { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } ; outgoing manager } ; andy ritchie } }"
            ]
        },
        {
            "input": "select the rows whose show record fuzzily matches to dynamo : magician impossible . for the number of viewers records of these rows , most of them are greater than 1000000 .",
            "output": [
                "most_greater { filter_eq { all_rows ; show ; dynamo : magician impossible } ; number of viewers ; 1000000 }"
            ]
        },
        {
            "input": "the average of the stages won record of all rows is 1.6 .",
            "output": [
                "round_eq { avg { all_rows ; stages won } ; 1.6 }"
            ]
        },
        {
            "input": "select the row whose black knights points record of all rows is maximum . the date record of this row is oct 13 .",
            "output": [
                "eq { hop { argmax { all_rows ; black knights points } ; date } ; oct 13 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to det . among these rows , select the rows whose goal record fuzzily matches to jiri hudler . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; team ; det } ; goal ; jiri hudler } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose barrel length record of all rows is minimum . the colt model no record of this row is le6921sp .",
            "output": [
                "eq { hop { argmin { all_rows ; barrel length } ; colt model no } ; le6921sp }"
            ]
        },
        {
            "input": "select the row whose join date record of all rows is 2nd maximum . the school record of this row is lake .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; join date ; 2 } ; school } ; lake }"
            ]
        },
        {
            "input": "the sum of the worcs f - c matches record of all rows is 1239 .",
            "output": [
                "round_eq { sum { all_rows ; worcs f - c matches } ; 1239 }"
            ]
        },
        {
            "input": "the sum of the poles record of all rows is 20 .",
            "output": [
                "round_eq { sum { all_rows ; poles } ; 20 }"
            ]
        },
        {
            "input": "for the average records of all rows , most of them are greater than 1 .",
            "output": [
                "most_greater { all_rows ; average ; 1 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 0 . there is only one such row in the table . the visitor record of this unqiue row is los angeles .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 0 } } ; eq { hop { filter_eq { all_rows ; score ; 0 } ; visitor } ; los angeles } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; friendly } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to 1st . there is only one such row in the table . the date record of this unqiue row is 7 dec 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; place ; 1st } } ; eq { hop { filter_eq { all_rows ; place ; 1st } ; date } ; 7 dec 2008 } }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wins ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose first elected record is equal to 1972 . there is only one such row in the table . the incumbent record of this unqiue row is gene taylor .",
            "output": [
                "and { only { filter_eq { all_rows ; first elected ; 1972 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1972 } ; incumbent } ; gene taylor } }"
            ]
        },
        {
            "input": "select the rows whose played record is equal to 114 . for the points records of these rows , most of them are greater than 100 .",
            "output": [
                "most_greater { filter_eq { all_rows ; played ; 114 } ; points ; 100 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to portland trail blazers . take the date record of this row . select the rows whose team record fuzzily matches to detroit pistons . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; team ; portland trail blazers } ; date } ; hop { filter_eq { all_rows ; team ; detroit pistons } ; date } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the name record of this row is natalia linichuk / gennadi karponosov .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; name } ; natalia linichuk / gennadi karponosov }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose to par record is equal to -6 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; united states } ; to par ; -6 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd maximum . the school record of this row is triton central .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ; 2 } ; school } ; triton central }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2005 - 10 - 08 . take the scored record of this row . select the rows whose date record fuzzily matches to 2005 - 02 - 09 . take the scored record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; date ; 2005 - 10 - 08 } ; scored } ; hop { filter_eq { all_rows ; date ; 2005 - 02 - 09 } ; scored } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 60 . among these rows , select the rows whose tries for record is less than 60 . there is only one such row in the table . the club record of this unqiue row is kidwelly rfc .",
            "output": [
                "and { only { filter_less { filter_greater { all_rows ; points ; 60 } ; tries for ; 60 } } ; eq { hop { filter_less { filter_greater { all_rows ; points ; 60 } ; tries for ; 60 } ; club } ; kidwelly rfc } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to tsirion stadium , limassol . take the date record of this row . select the rows whose venue record fuzzily matches to king abdullah stadium , amman . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; venue ; tsirion stadium , limassol } ; date } ; hop { filter_eq { all_rows ; venue ; king abdullah stadium , amman } ; date } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 57797 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 57797 }"
            ]
        },
        {
            "input": "for the date made records of all rows , most of them are less than 1900 .",
            "output": [
                "most_less { all_rows ; date made ; 1900 }"
            ]
        },
        {
            "input": "for the soap opera records of all rows , most of them fuzzily match to un posto al sole .",
            "output": [
                "most_eq { all_rows ; soap opera ; un posto al sole }"
            ]
        },
        {
            "input": "for the shooter records of all rows , most of them do not match to usa .",
            "output": [
                "most_not_eq { all_rows ; shooter ; usa }"
            ]
        },
        {
            "input": "select the row whose events record of all rows is maximum . the player record of this row is mark o'meara .",
            "output": [
                "eq { hop { argmax { all_rows ; events } ; player } ; mark o'meara }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the home record of this row is warriors .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; home } ; warriors }"
            ]
        },
        {
            "input": "select the rows whose version record fuzzily matches to german radio edit . take the length record of this row . select the rows whose version record fuzzily matches to album version . take the length record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; version ; german radio edit } ; length } ; hop { filter_eq { all_rows ; version ; album version } ; length } }"
            ]
        },
        {
            "input": "select the row whose years record of all rows is minimum . the player record of this row is jake ford .",
            "output": [
                "eq { hop { argmin { all_rows ; years } ; player } ; jake ford }"
            ]
        },
        {
            "input": "the sum of the overall record record of all rows is 31-31 .",
            "output": [
                "round_eq { sum { all_rows ; overall record } ; 31-31 }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them are less than 21.0 .",
            "output": [
                "most_less { all_rows ; time ; 21.0 }"
            ]
        },
        {
            "input": "select the row whose away team score record of all rows is maximum . the away team record of this row is south melbourne .",
            "output": [
                "eq { hop { argmax { all_rows ; away team score } ; away team } ; south melbourne }"
            ]
        },
        {
            "input": "select the rows whose runner - up record fuzzily matches to asc jeanne d'arc . the minimum season record of these rows is 1947 .",
            "output": [
                "eq { min { filter_eq { all_rows ; runner - up ; asc jeanne d'arc } ; season } ; 1947 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to r pierce .",
            "output": [
                "most_eq { all_rows ; high points ; r pierce }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is 2nd maximum . the year record of this row is 1994 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; year } ; 1994 }"
            ]
        },
        {
            "input": "select the row whose original air date ( uk ) record of all rows is 1st maximum . the episode title record of this row is loyalties ii .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original air date ( uk ) ; 1 } ; episode title } ; loyalties ii }"
            ]
        },
        {
            "input": "select the rows whose to par record is less than or equal to -1 . the average of the score record of these rows is 284.2 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; to par ; -1 } ; score } ; 284.2 }"
            ]
        },
        {
            "input": "for the country records of all rows , all of them fuzzily match to italy .",
            "output": [
                "all_eq { all_rows ; country ; italy }"
            ]
        },
        {
            "input": "select the rows whose make record fuzzily matches to toyota . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; make ; toyota } } ; 4 }"
            ]
        },
        {
            "input": "the sum of the podiums record of all rows is 18 .",
            "output": [
                "round_eq { sum { all_rows ; podiums } ; 18 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the game record of this row is 10 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; game } ; 10 }"
            ]
        },
        {
            "input": "for the award ceremony records of all rows , most of them fuzzily match to drama desk award .",
            "output": [
                "most_eq { all_rows ; award ceremony ; drama desk award }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jason doig . take the round record of this row . select the rows whose player record fuzzily matches to robert deciantis . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; jason doig } ; round } ; hop { filter_eq { all_rows ; player ; robert deciantis } ; round } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team 1 record of this row is san lorenzo .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team 1 } ; san lorenzo }"
            ]
        },
        {
            "input": "select the rows whose country of origin record fuzzily matches to united kingdom . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country of origin ; united kingdom } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is september 30 , 1990 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; september 30 , 1990 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to may .",
            "output": [
                "most_eq { all_rows ; date ; may }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to runs . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; result ; runs } }"
            ]
        },
        {
            "input": "the average of the top - 10 record of all rows is 3.75 .",
            "output": [
                "round_eq { avg { all_rows ; top - 10 } ; 3.75 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to spain . there is only one such row in the table . the date record of this unqiue row is 11 february 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; spain } } ; eq { hop { filter_eq { all_rows ; tournament ; spain } ; date } ; 11 february 2008 } }"
            ]
        },
        {
            "input": "select the rows whose attendance record fuzzily matches to gund arena . the sum of the attendance record of these rows is 123371 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; attendance ; gund arena } ; attendance } ; 123371 }"
            ]
        },
        {
            "input": "for the class records of all rows , most of them fuzzily match to d .",
            "output": [
                "most_eq { all_rows ; class ; d }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . there is only one such row in the table . the player record of this unqiue row is ed hospodar .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; united states } } ; eq { hop { filter_eq { all_rows ; nationality ; united states } ; player } ; ed hospodar } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 8 - . there is only one such row in the table . the date record of this unqiue row is february 22 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 8 - } } ; eq { hop { filter_eq { all_rows ; score ; 8 - } ; date } ; february 22 } }"
            ]
        },
        {
            "input": "select the rows whose first elected record fuzzily matches to 1878 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; 1878 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose host city record fuzzily matches to buffalo , new york . take the year record of this row . select the rows whose host city record fuzzily matches to orlando , florida . take the year record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; host city ; buffalo , new york } ; year } ; hop { filter_eq { all_rows ; host city ; orlando , florida } ; year } } ; -1 }"
            ]
        },
        {
            "input": "select the rows whose planet type record fuzzily matches to ice giant . there is only one such row in the table . the planet record of this unqiue row is neptune .",
            "output": [
                "and { only { filter_eq { all_rows ; planet type ; ice giant } } ; eq { hop { filter_eq { all_rows ; planet type ; ice giant } ; planet } ; neptune } }"
            ]
        },
        {
            "input": "select the row whose agg score record of all rows is 7th maximum . the team 1 record of this row is ilisiakos .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; agg score ; 7 } ; team 1 } ; ilisiakos }"
            ]
        },
        {
            "input": "the average of the away team score record of all rows is 11.94 .",
            "output": [
                "round_eq { avg { all_rows ; away team score } ; 11.94 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is maximum . the line color record of this row is orange .",
            "output": [
                "eq { hop { argmax { all_rows ; length } ; line color } ; orange }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the party record of this row is conservative .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; party } ; conservative }"
            ]
        },
        {
            "input": "select the row whose total trade record of all rows is 1st minimum . the country record of this row is iran .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; total trade ; 1 } ; country } ; iran }"
            ]
        },
        {
            "input": "the average of the weight ( kg ) record of all rows is 55.625 .",
            "output": [
                "round_eq { avg { all_rows ; weight ( kg ) } ; 55.625 }"
            ]
        },
        {
            "input": "select the rows whose jersey number ( s ) record fuzzily matches to , . there is only one such row in the table . the player record of this unqiue row is reggie evans .",
            "output": [
                "and { only { filter_eq { all_rows ; jersey number ( s ) ; , } } ; eq { hop { filter_eq { all_rows ; jersey number ( s ) ; , } ; player } ; reggie evans } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 265 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 265 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to toronto , canada . take the date record of this row . select the rows whose tournament record fuzzily matches to paris , france . take the date record of this row . the first record is less than the second record . the date record of the first row is 11 august 1997 . the date record of the second row is 22 february 1999 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; tournament ; toronto , canada } ; date } ; hop { filter_eq { all_rows ; tournament ; paris , france } ; date } } ; and { eq { hop { filter_eq { all_rows ; tournament ; toronto , canada } ; date } ; 11 august 1997 } ; eq { hop { filter_eq { all_rows ; tournament ; paris , france } ; date } ; 22 february 1999 } } }"
            ]
        },
        {
            "input": "for the uk broadcast date records of all rows , all of them are equal to 1996 .",
            "output": [
                "all_eq { all_rows ; uk broadcast date ; 1996 }"
            ]
        },
        {
            "input": "select the row whose overall record of all rows is minimum . the name record of this row is art monk .",
            "output": [
                "eq { hop { argmin { all_rows ; overall } ; name } ; art monk }"
            ]
        },
        {
            "input": "for the country records of all rows , all of them fuzzily match to soviet union .",
            "output": [
                "all_eq { all_rows ; country ; soviet union }"
            ]
        },
        {
            "input": "for the founded records of all rows , most of them are greater than 1950 .",
            "output": [
                "most_greater { all_rows ; founded ; 1950 }"
            ]
        },
        {
            "input": "select the rows whose 1st leg record fuzzily matches to 1 - 0 . among these rows , select the rows whose 2nd leg record fuzzily matches to 0-0 . there is only one such row in the table . the team 2 record of this unqiue row is jeunesse esch .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; 1st leg ; 1 - 0 } ; 2nd leg ; 0-0 } } ; eq { hop { filter_eq { filter_eq { all_rows ; 1st leg ; 1 - 0 } ; 2nd leg ; 0-0 } ; team 2 } ; jeunesse esch } }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to north carolina . select the row whose height record of these rows is maximum . the player record of this row is jeff lebo .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; college ; north carolina } ; height } ; player } ; jeff lebo }"
            ]
        },
        {
            "input": "select the rows whose dominant religion ( 2002 ) record fuzzily matches to orthodox christianity . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; dominant religion ( 2002 ) ; orthodox christianity } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose livery record fuzzily matches to br rail blue . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; livery ; br rail blue } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to wachovia center . there is only one such row in the table . the game record of this unqiue row is 10 .",
            "output": [
                "and { only { filter_eq { all_rows ; location attendance ; wachovia center } } ; eq { hop { filter_eq { all_rows ; location attendance ; wachovia center } ; game } ; 10 } }"
            ]
        },
        {
            "input": "select the row whose apparent magnitude record of all rows is maximum . the ngc number record of this row is 5003 .",
            "output": [
                "eq { hop { argmax { all_rows ; apparent magnitude } ; ngc number } ; 5003 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is minimum . the incumbent record of this row is jim kolbe .",
            "output": [
                "eq { hop { argmin { all_rows ; first elected } ; incumbent } ; jim kolbe }"
            ]
        },
        {
            "input": "the 1st minimum place record of all rows is 1 . the player record of the row with 1st minimum place record is vijay singh .",
            "output": [
                "and { eq { nth_min { all_rows ; place ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; place ; 1 } ; player } ; vijay singh } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to chicago . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; chicago } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 14 may 1949 .",
            "output": [
                "all_eq { all_rows ; date ; 14 may 1949 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 1st minimum . the opponent record of this row is south sydney rabbitohs .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 1 } ; opponent } ; south sydney rabbitohs }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 1st maximum . the nation record of this row is united states ( usa ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 1 } ; nation } ; united states ( usa ) }"
            ]
        },
        {
            "input": "select the rows whose ihsaa class record fuzzily matches to aaa . there is only one such row in the table . the school record of this unqiue row is indian creek .",
            "output": [
                "and { only { filter_eq { all_rows ; ihsaa class ; aaa } } ; eq { hop { filter_eq { all_rows ; ihsaa class ; aaa } ; school } ; indian creek } }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are equal to 1986 .",
            "output": [
                "most_eq { all_rows ; year ; 1986 }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to world cross country championships .",
            "output": [
                "most_eq { all_rows ; competition ; world cross country championships }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to terang . take the wins record of this row . select the rows whose club record fuzzily matches to terang mortlake . take the wins record of this row . the first record is 501 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; club ; terang } ; wins } ; hop { filter_eq { all_rows ; club ; terang mortlake } ; wins } } ; 501 }"
            ]
        },
        {
            "input": "select the row whose gore % record of all rows is maximum . the county record of this row is clark .",
            "output": [
                "eq { hop { argmax { all_rows ; gore % } ; county } ; clark }"
            ]
        },
        {
            "input": "the average of the pop record of all rows is 38009 .",
            "output": [
                "round_eq { avg { all_rows ; pop } ; 38009 }"
            ]
        },
        {
            "input": "select the rows whose points - record is greater than 1200 . for the points + records of these rows , most of them are greater than 1000 .",
            "output": [
                "most_greater { filter_greater { all_rows ; points - ; 1200 } ; points + ; 1000 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to bun b . take the number of reviews record of this row . select the rows whose artist record fuzzily matches to black milk . take the number of reviews record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; artist ; bun b } ; number of reviews } ; hop { filter_eq { all_rows ; artist ; black milk } ; number of reviews } }"
            ]
        },
        {
            "input": "for the colors records of all rows , most of them fuzzily match to black .",
            "output": [
                "most_eq { all_rows ; colors ; black }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to wilbur mills . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to james william trimble . take the first elected record of this row . the second record is 6 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; incumbent ; wilbur mills } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; james william trimble } ; first elected } } ; -6 years }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2012 . take the podiums record of this row . select the rows whose season record fuzzily matches to 2011 . take the podiums record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2012 } ; podiums } ; hop { filter_eq { all_rows ; season ; 2011 } ; podiums } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to china . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; china } } ; 3 }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; wins ; 0 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to yukiya naito . take the round record of this row . select the rows whose opponent record fuzzily matches to maxim tarasov . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; yukiya naito } ; round } ; hop { filter_eq { all_rows ; opponent ; maxim tarasov } ; round } }"
            ]
        },
        {
            "input": "select the row whose hosted 4 teams since record of all rows is minimum . the metropolitan area record of this row is detroit , michigan .",
            "output": [
                "eq { hop { argmin { all_rows ; hosted 4 teams since } ; metropolitan area } ; detroit , michigan }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost re - election . there is only one such row in the table . the incumbent record of this unqiue row is ralph r eltse .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost re - election } } ; eq { hop { filter_eq { all_rows ; result ; lost re - election } ; incumbent } ; ralph r eltse } }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to j johnson .",
            "output": [
                "most_eq { all_rows ; high points ; j johnson }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd minimum . the athlete record of this row is peter hardcastle .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 2 } ; athlete } ; peter hardcastle }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september 8 , 2002 . take the attendance record of this row . select the rows whose date record fuzzily matches to september 15 , 2002 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; september 8 , 2002 } ; attendance } ; hop { filter_eq { all_rows ; date ; september 15 , 2002 } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to august . among these rows , select the rows whose written by record fuzzily matches to dana calvo . there is only one such row in the table . the title record of this unqiue row is houses of the holy .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; original air date ; august } ; written by ; dana calvo } } ; eq { hop { filter_eq { filter_eq { all_rows ; original air date ; august } ; written by ; dana calvo } ; title } ; houses of the holy } }"
            ]
        },
        {
            "input": "for the margin of victory records of all rows , most of them are less than 2 .",
            "output": [
                "most_less { all_rows ; margin of victory ; 2 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 18729 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 18729 }"
            ]
        },
        {
            "input": "select the rows whose tournaments played record is less than 20 . there is only one such row in the table . the year record of this unqiue row is 2002 .",
            "output": [
                "and { only { filter_less { all_rows ; tournaments played ; 20 } } ; eq { hop { filter_less { all_rows ; tournaments played ; 20 } ; year } ; 2002 } }"
            ]
        },
        {
            "input": "select the row whose peak record of all rows is 2nd maximum . the english title record of this row is la femme desperado .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; peak ; 2 } ; english title } ; la femme desperado }"
            ]
        },
        {
            "input": "for the series records of all rows , most of them fuzzily match to iowa .",
            "output": [
                "most_eq { all_rows ; series ; iowa }"
            ]
        },
        {
            "input": "the average of the barrel length record of all rows is 16.5 inches .",
            "output": [
                "round_eq { avg { all_rows ; barrel length } ; 16.5 inches }"
            ]
        },
        {
            "input": "for the year records of all rows , all of them fuzzily match to 199 .",
            "output": [
                "all_eq { all_rows ; year ; 199 }"
            ]
        },
        {
            "input": "select the rows whose match points record fuzzily matches to 4 - 0 . for the points margin records of these rows , most of them are greater than 30 .",
            "output": [
                "most_greater { filter_eq { all_rows ; match points ; 4 - 0 } ; points margin ; 30 }"
            ]
        },
        {
            "input": "the average of the losses record of all rows is 13 .",
            "output": [
                "round_eq { avg { all_rows ; losses } ; 13 }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 14950 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 14950 }"
            ]
        },
        {
            "input": "the average of the finish record of all rows is 4th .",
            "output": [
                "round_eq { avg { all_rows ; finish } ; 4th }"
            ]
        },
        {
            "input": "the sum of the capacity ( mw ) record of all rows is 815.6 .",
            "output": [
                "round_eq { sum { all_rows ; capacity ( mw ) } ; 815.6 }"
            ]
        },
        {
            "input": "select the row whose length ( m ) record of all rows is 2nd maximum . the name record of this row is berg ter stene .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; length ( m ) ; 2 } ; name } ; berg ter stene }"
            ]
        },
        {
            "input": "for the speed records of all rows , most of them are greater than 93 .",
            "output": [
                "most_greater { all_rows ; speed ; 93 }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 67 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; points ; 67 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to alco - schenectady . the minimum year made record of these rows is 1904 - 1907 .",
            "output": [
                "eq { min { filter_eq { all_rows ; manufacturer ; alco - schenectady } ; year made } ; 1904 - 1907 }"
            ]
        },
        {
            "input": "select the rows whose first elected record is equal to 1941 . there is only one such row in the table . the incumbent record of this unqiue row is thomas j lane .",
            "output": [
                "and { only { filter_eq { all_rows ; first elected ; 1941 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1941 } ; incumbent } ; thomas j lane } }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are greater than or equal to 5 .",
            "output": [
                "most_greater_eq { all_rows ; score ; 5 }"
            ]
        },
        {
            "input": "select the rows whose height record fuzzily matches to 6 - 4 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; height ; 6 - 4 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to hermanos rodriguez . among these rows , select the rows whose constructor record fuzzily matches to williams - renault . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location ; hermanos rodriguez } ; constructor ; williams - renault } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose host record fuzzily matches to jack arute . there is only one such row in the table . the year record of this unqiue row is 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; host ; jack arute } } ; eq { hop { filter_eq { all_rows ; host ; jack arute } ; year } ; 2008 } }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 284.5 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 284.5 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 1-1 . there is only one such row in the table . the april record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 1-1 } } ; eq { hop { filter_eq { all_rows ; score ; 1-1 } ; april } ; 1 } }"
            ]
        },
        {
            "input": "select the rows whose team 1 record fuzzily matches to young africans . take the agg record of this row . select the rows whose team 1 record fuzzily matches to secteur 6 . take the agg record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team 1 ; young africans } ; agg } ; hop { filter_eq { all_rows ; team 1 ; secteur 6 } ; agg } }"
            ]
        },
        {
            "input": "select the rows whose 14 july 1998 record fuzzily matches to 28 august 2005 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 14 july 1998 ; 28 august 2005 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than or equal to 55 . among these rows , select the rows whose opponent record fuzzily matches to new york rangers . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater_eq { all_rows ; points ; 55 } ; opponent ; new york rangers } } ; 2 }"
            ]
        },
        {
            "input": "for the city of license records of all rows , most of them fuzzily match to nuevo laredo .",
            "output": [
                "most_eq { all_rows ; city of license ; nuevo laredo }"
            ]
        },
        {
            "input": "select the rows whose date closed record does not match to open . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; date closed ; open } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose nicky record of all rows is 2nd maximum . the couple record of this row is melinda & fred .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; nicky ; 2 } ; couple } ; melinda & fred }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to estonia . the minimum time record of these rows is 6:27.95 .",
            "output": [
                "eq { min { filter_eq { all_rows ; country ; estonia } ; time } ; 6:27.95 }"
            ]
        },
        {
            "input": "the average of the earnings record of all rows is 22046805 .",
            "output": [
                "round_eq { avg { all_rows ; earnings } ; 22046805 }"
            ]
        },
        {
            "input": "select the row whose sets lost record of all rows is 2nd maximum . the team record of this row is far eastern university .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; sets lost ; 2 } ; team } ; far eastern university }"
            ]
        },
        {
            "input": "for the laps records of all rows , most of them are greater than or equal to 250 .",
            "output": [
                "most_greater_eq { all_rows ; laps ; 250 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to otto passman . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to t ashton thompson . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; otto passman } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; t ashton thompson } ; first elected } }"
            ]
        },
        {
            "input": "select the row whose attendance / g record of all rows is minimum . the season record of this row is 2007 .",
            "output": [
                "eq { hop { argmin { all_rows ; attendance / g } ; season } ; 2007 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to merchants of brooklyn . take the year record of this row . select the rows whose title record fuzzily matches to crysis warhead . take the year record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; merchants of brooklyn } ; year } ; hop { filter_eq { all_rows ; title ; crysis warhead } ; year } }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 4 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to princes park . take the crowd record of this row . select the rows whose venue record fuzzily matches to victoria park . take the crowd record of this row . the first record is 1000 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; venue ; princes park } ; crowd } ; hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } } ; 1000 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 17863 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 17863 }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is 2nd maximum . the team record of this row is boca juniors .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; average ; 2 } ; team } ; boca juniors }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to cincinnati bengals . take the attendance record of this row . select the rows whose opponent record fuzzily matches to houston oilers . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; cincinnati bengals } ; attendance } ; hop { filter_eq { all_rows ; opponent ; houston oilers } ; attendance } }"
            ]
        },
        {
            "input": "the average of the speed record of all rows is 97.34 .",
            "output": [
                "round_eq { avg { all_rows ; speed } ; 97.34 }"
            ]
        },
        {
            "input": "select the rows whose age ( as of 1 february 2014 ) record is greater than or equal to 102 years 242 days . the average of the age ( as of 1 february 2014 ) record of these rows is 103 years 28 days .",
            "output": [
                "round_eq { avg { filter_greater_eq { all_rows ; age ( as of 1 february 2014 ) ; 102 years 242 days } ; age ( as of 1 february 2014 ) } ; 103 years 28 days }"
            ]
        },
        {
            "input": "the average of the frequency record of all rows is 95.9 mega hertz .",
            "output": [
                "round_eq { avg { all_rows ; frequency } ; 95.9 mega hertz }"
            ]
        },
        {
            "input": "select the row whose total passengers record of all rows is 3rd maximum . the rank record of this row is 3 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total passengers ; 3 } ; rank } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to beyer , peacock & co . among these rows , select the rows whose manufacturer record fuzzily matches to beyer , peacock & co . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; manufacturer ; beyer , peacock & co } ; manufacturer ; beyer , peacock & co } } ; 3 }"
            ]
        },
        {
            "input": "the maximum points record of all rows is 11 . the entrant record of the row with superlative points record is team lotus .",
            "output": [
                "and { eq { max { all_rows ; points } ; 11 } ; eq { hop { argmax { all_rows ; points } ; entrant } ; team lotus } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to ifc wc 13 - warriors challenge . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; event ; ifc wc 13 - warriors challenge } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose runners up record fuzzily matches to canterbury - bankstown bulldogs . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; runners up ; canterbury - bankstown bulldogs } } ; 2 }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to caron butler .",
            "output": [
                "most_eq { all_rows ; high assists ; caron butler }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to dan schneider . for the us viewers ( millions ) records of these rows , most of them are less than 5 million .",
            "output": [
                "most_less { filter_eq { all_rows ; written by ; dan schneider } ; us viewers ( millions ) ; 5 million }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to china . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; china } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost renomination democratic hold . there is only one such row in the table . the incumbent record of this unqiue row is clyde l garrett .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost renomination democratic hold } } ; eq { hop { filter_eq { all_rows ; result ; lost renomination democratic hold } ; incumbent } ; clyde l garrett } }"
            ]
        },
        {
            "input": "select the rows whose capital record fuzzily matches to warsaw . select the row whose area in 1000 km square ( 1930 ) record of these rows is 1st maximum . the voivodeship separate city record of this row is warszawskie .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; capital ; warsaw } ; area in 1000 km square ( 1930 ) ; 1 } ; voivodeship separate city } ; warszawskie }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is 2nd maximum . the nation record of this row is canada .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; silver ; 2 } ; nation } ; canada }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to brazil . take the change ( 2011 to 2012 ) record of this row . select the rows whose country record fuzzily matches to canada . take the change ( 2011 to 2012 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; country ; brazil } ; change ( 2011 to 2012 ) } ; hop { filter_eq { all_rows ; country ; canada } ; change ( 2011 to 2012 ) } }"
            ]
        },
        {
            "input": "select the rows whose city / town record fuzzily matches to wabash . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; city / town ; wabash } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to iran . take the 2011 gdp ( ppp ) billions of usd record of this row . select the rows whose country record fuzzily matches to lebanon . take the 2011 gdp ( ppp ) billions of usd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; country ; iran } ; 2011 gdp ( ppp ) billions of usd } ; hop { filter_eq { all_rows ; country ; lebanon } ; 2011 gdp ( ppp ) billions of usd } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose currency record fuzzily matches to latvian lats . take the official target date record of this row . select the rows whose currency record fuzzily matches to lithuanian litas . take the official target date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; currency ; latvian lats } ; official target date } ; hop { filter_eq { all_rows ; currency ; lithuanian litas } ; official target date } }"
            ]
        },
        {
            "input": "select the rows whose owner record fuzzily matches to royal thai army . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; owner ; royal thai army } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose international tourist arrivals ( 2012 ) record is greater than 40 million . select the row whose change ( 2011 to 2012 ) record of these rows is 1st maximum . the country record of this row is spain .",
            "output": [
                "eq { hop { nth_argmax { filter_greater { all_rows ; international tourist arrivals ( 2012 ) ; 40 million } ; change ( 2011 to 2012 ) ; 1 } ; country } ; spain }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 3rd minimum . the race record of this row is san marino grand prix .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 3 } ; race } ; san marino grand prix }"
            ]
        },
        {
            "input": "select the rows whose date successor seated record fuzzily matches to november . among these rows , select the rows whose successor record fuzzily matches to ( r ) . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date successor seated ; november } ; successor ; ( r ) } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is wright patman .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; wright patman }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to guatemala . take the silver record of this row . select the rows whose nation record fuzzily matches to el salvador . take the silver record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; nation ; guatemala } ; silver } ; hop { filter_eq { all_rows ; nation ; el salvador } ; silver } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose gold record fuzzily matches to wu yanan . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gold ; wu yanan } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the opponent record of this row is rhein fire .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; opponent } ; rhein fire }"
            ]
        },
        {
            "input": "for the capacity records of all rows , most of them are greater than 40000 .",
            "output": [
                "most_greater { all_rows ; capacity ; 40000 }"
            ]
        },
        {
            "input": "select the rows whose platform ( s ) record fuzzily matches to wii . there is only one such row in the table . the game record of this unqiue row is super mario galaxy 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; platform ( s ) ; wii } } ; eq { hop { filter_eq { all_rows ; platform ( s ) ; wii } ; game } ; super mario galaxy 2 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; april } } ; 4 }"
            ]
        },
        {
            "input": "for the new entries this round records of all rows , most of them fuzzily match to none .",
            "output": [
                "most_eq { all_rows ; new entries this round ; none }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the date record of this row is 9 october 2012 .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; date } ; 9 october 2012 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to bottom . there is only one such row in the table . the theme record of this unqiue row is country pop .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; bottom } } ; eq { hop { filter_eq { all_rows ; result ; bottom } ; theme } ; country pop } }"
            ]
        },
        {
            "input": "for the top division titles records of all rows , most of them are less than 10 .",
            "output": [
                "most_less { all_rows ; top division titles ; 10 }"
            ]
        },
        {
            "input": "select the row whose regular season 1 record of all rows is minimum . the season record of this row is 2004 - 05 .",
            "output": [
                "eq { hop { argmin { all_rows ; regular season 1 } ; season } ; 2004 - 05 }"
            ]
        },
        {
            "input": "for the completion records of all rows , most of them are greater than or equal to 2000 .",
            "output": [
                "most_greater_eq { all_rows ; completion ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose elimination move record fuzzily matches to pinfall after a diving headbutt . there is only one such row in the table . the wrestler record of this unqiue row is zach gowen .",
            "output": [
                "and { only { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } } ; eq { hop { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } ; wrestler } ; zach gowen } }"
            ]
        },
        {
            "input": "select the rows whose broadcast record fuzzily matches to espn . for the attendance records of these rows , most of them are less than 100000 .",
            "output": [
                "most_less { filter_eq { all_rows ; broadcast ; espn } ; attendance ; 100000 }"
            ]
        },
        {
            "input": "the average of the quantity record of all rows is 25.14 .",
            "output": [
                "round_eq { avg { all_rows ; quantity } ; 25.14 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to australia . there is only one such row in the table . the player record of this unqiue row is mark hensby .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; australia } } ; eq { hop { filter_eq { all_rows ; country ; australia } ; player } ; mark hensby } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 2014 world cup qualifier . take the goal record of this row . select the rows whose competition record fuzzily matches to 2011 copa am\u00e9rica . take the goal record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; competition ; 2014 world cup qualifier } ; goal } ; hop { filter_eq { all_rows ; competition ; 2011 copa am\u00e9rica } ; goal } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the race name record of this row is datsun twin 200 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; race name } ; datsun twin 200 }"
            ]
        },
        {
            "input": "select the row whose winnings record of all rows is maximum . the year record of this row is 1994 .",
            "output": [
                "eq { hop { argmax { all_rows ; winnings } ; year } ; 1994 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to penang , malaysia . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; penang , malaysia } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the capacity record of all rows is 185080 .",
            "output": [
                "round_eq { sum { all_rows ; capacity } ; 185080 }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 10 . for the crowd records of these rows , all of them are greater than 17000 .",
            "output": [
                "all_greater { filter_less { all_rows ; away team score ; 10 } ; crowd ; 17000 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to mel damski . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; mel damski } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to general dynamics , quincy . among these rows , select the rows whose commissioned - decommissioned record fuzzily matches to 1969 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; builder ; general dynamics , quincy } ; commissioned - decommissioned ; 1969 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose height ( ft ) record is greater than or equal to 800 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; height ( ft ) ; 800 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is melbourne storm .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; melbourne storm }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to kelowna . there is only one such row in the table . the skip record of this unqiue row is bob ursel .",
            "output": [
                "and { only { filter_eq { all_rows ; city ; kelowna } } ; eq { hop { filter_eq { all_rows ; city ; kelowna } ; skip } ; bob ursel } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to tokyo , japan . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; tokyo , japan } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose bank record fuzzily matches to mellat bank . take the total assets ( score ) record of this row . select the rows whose bank record fuzzily matches to bank of industry and mine . take the total assets ( score ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; bank ; mellat bank } ; total assets ( score ) } ; hop { filter_eq { all_rows ; bank ; bank of industry and mine } ; total assets ( score ) } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the driver record of this row is bruno junqueira .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; driver } ; bruno junqueira }"
            ]
        },
        {
            "input": "the 3rd maximum silver record of all rows is 42 . the rank record of the row with 3rd maximum silver record is 2 .",
            "output": [
                "and { eq { nth_max { all_rows ; silver ; 3 } ; 42 } ; eq { hop { nth_argmax { all_rows ; silver ; 3 } ; rank } ; 2 } }"
            ]
        },
        {
            "input": "the average of the weeks on top record of all rows is 3 .",
            "output": [
                "round_eq { avg { all_rows ; weeks on top } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to ol . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; ol } } ; 3 }"
            ]
        },
        {
            "input": "for the designer , year records of all rows , most of them are less than 1950 .",
            "output": [
                "most_less { all_rows ; designer , year ; 1950 }"
            ]
        },
        {
            "input": "select the rows whose content record fuzzily matches to general television . for the language records of these rows , all of them fuzzily match to italian .",
            "output": [
                "all_eq { filter_eq { all_rows ; content ; general television } ; language ; italian }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is 3rd maximum . the rank record of this row is 2 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; bronze ; 3 } ; rank } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner - up . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; outcome ; runner - up } }"
            ]
        },
        {
            "input": "the average of the viewing figure record of all rows is 6.73 million .",
            "output": [
                "round_eq { avg { all_rows ; viewing figure } ; 6.73 million }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the date record of this row is 8 december 1999 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; date } ; 8 december 1999 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to antwaan randle el . take the yards record of this row . select the rows whose player record fuzzily matches to ladell betts . take the yards record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; antwaan randle el } ; yards } ; hop { filter_eq { all_rows ; player ; ladell betts } ; yards } }"
            ]
        },
        {
            "input": "select the row whose away team score record of all rows is maximum . the away team record of this row is essendon .",
            "output": [
                "eq { hop { argmax { all_rows ; away team score } ; away team } ; essendon }"
            ]
        },
        {
            "input": "the sum of the swedish championship titles record of all rows is 81 .",
            "output": [
                "round_eq { sum { all_rows ; swedish championship titles } ; 81 }"
            ]
        },
        {
            "input": "the average of the stations served record of all rows is 17.5 .",
            "output": [
                "round_eq { avg { all_rows ; stations served } ; 17.5 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 45557.14 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 45557.14 }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is maximum . the official name record of this row is saint george .",
            "output": [
                "eq { hop { argmax { all_rows ; population } ; official name } ; saint george }"
            ]
        },
        {
            "input": "select the rows whose power rpm record is equal to 6800 . there is only one such row in the table . the model record of this unqiue row is sl 63 amg .",
            "output": [
                "and { only { filter_eq { all_rows ; power rpm ; 6800 } } ; eq { hop { filter_eq { all_rows ; power rpm ; 6800 } ; model } ; sl 63 amg } }"
            ]
        },
        {
            "input": "for the country records of all rows , most of them fuzzily match to belgium .",
            "output": [
                "most_eq { all_rows ; country ; belgium }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 779652 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 779652 }"
            ]
        },
        {
            "input": "select the row whose sales record of all rows is maximum . the title record of this row is m .",
            "output": [
                "eq { hop { argmax { all_rows ; sales } ; title } ; m }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to australia . take the time record of this row . select the rows whose country record fuzzily matches to united states . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; country ; australia } ; time } ; hop { filter_eq { all_rows ; country ; united states } ; time } }"
            ]
        },
        {
            "input": "select the row whose commissioned record of all rows is 2nd minimum . the name record of this row is ledbury .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; commissioned ; 2 } ; name } ; ledbury }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to arizona . there is only one such row in the table . the player record of this unqiue row is jerome gladney .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; arizona } } ; eq { hop { filter_eq { all_rows ; college ; arizona } ; player } ; jerome gladney } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 21000-22000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 21000-22000 }"
            ]
        },
        {
            "input": "for the 2nd place records of all rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { all_rows ; 2nd place ; 1 }"
            ]
        },
        {
            "input": "the average of the points ( pts ) record of all rows is 24.6 .",
            "output": [
                "round_eq { avg { all_rows ; points ( pts ) } ; 24.6 }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them are less than 7:00:00 .",
            "output": [
                "most_less { all_rows ; time ; 7:00:00 }"
            ]
        },
        {
            "input": "for the competition or tour records of all rows , most of them fuzzily match to friendly .",
            "output": [
                "most_eq { all_rows ; competition or tour ; friendly }"
            ]
        },
        {
            "input": "select the rows whose county team record fuzzily matches to kilkenny . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; county team ; kilkenny } } ; 4 }"
            ]
        },
        {
            "input": "for the decision records of all rows , most of them fuzzily match to backstrom .",
            "output": [
                "most_eq { all_rows ; decision ; backstrom }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them are greater than 1930 .",
            "output": [
                "most_greater { all_rows ; date ; 1930 }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to sarah fisher . take the laps record of this row . select the rows whose driver record fuzzily matches to dan wheldon . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; driver ; sarah fisher } ; laps } ; hop { filter_eq { all_rows ; driver ; dan wheldon } ; laps } }"
            ]
        },
        {
            "input": "for the origin of programming records of all rows , most of them fuzzily match to india .",
            "output": [
                "most_eq { all_rows ; origin of programming ; india }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to grass . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; grass } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose performer 4 record fuzzily matches to john bird . there is only one such row in the table . the episode record of this unqiue row is 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; performer 4 ; john bird } } ; eq { hop { filter_eq { all_rows ; performer 4 ; john bird } ; episode } ; 5 } }"
            ]
        },
        {
            "input": "the average of the overall nt points record of all rows is 375.6 .",
            "output": [
                "round_eq { avg { all_rows ; overall nt points } ; 375.6 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 51 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 51 }"
            ]
        },
        {
            "input": "select the row whose time ( et ) record of all rows is maximum . the week record of this row is 9 . the opponent record of this row is pittsburgh steelers .",
            "output": [
                "and { eq { hop { argmax { all_rows ; time ( et ) } ; week } ; 9 } ; eq { hop { argmax { all_rows ; time ( et ) } ; opponent } ; pittsburgh steelers } }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to dayton , oh . there is only one such row in the table . the date record of this unqiue row is 8 february 1976 .",
            "output": [
                "and { only { filter_eq { all_rows ; championship ; dayton , oh } } ; eq { hop { filter_eq { all_rows ; championship ; dayton , oh } ; date } ; 8 february 1976 } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is maximum . the date record of this row is february 21 .",
            "output": [
                "eq { hop { argmax { all_rows ; location attendance } ; date } ; february 21 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 2000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose focal plane in ft ( m ) record fuzzily matches to n / a . there is only one such row in the table . the lighthouse record of this unqiue row is basco .",
            "output": [
                "and { only { filter_eq { all_rows ; focal plane in ft ( m ) ; n / a } } ; eq { hop { filter_eq { all_rows ; focal plane in ft ( m ) ; n / a } ; lighthouse } ; basco } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to los angeles raiders . take the date record of this row . select the rows whose opponent record fuzzily matches to st louis cardinals . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; los angeles raiders } ; date } ; hop { filter_eq { all_rows ; opponent ; st louis cardinals } ; date } }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to trade . there is only one such row in the table . the name record of this unqiue row is pel\u00e9 .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; trade } } ; eq { hop { filter_eq { all_rows ; type ; trade } ; name } ; pel\u00e9 } }"
            ]
        },
        {
            "input": "select the row whose from record of all rows is 1st minimum . the player record of this row is jim pollard .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; from ; 1 } ; player } ; jim pollard }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to waverley park . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; waverley park } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose song record fuzzily matches to endless love . take the weeks on top record of this row . select the rows whose song record fuzzily matches to morning train . take the weeks on top record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; song ; endless love } ; weeks on top } ; hop { filter_eq { all_rows ; song ; morning train } ; weeks on top } }"
            ]
        },
        {
            "input": "the average of the candidates record of all rows is 65 % .",
            "output": [
                "round_eq { avg { all_rows ; candidates } ; 65 % }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to march . among these rows , select the rows whose directed by record fuzzily matches to andy wolk . there is only one such row in the table . the episode title record of this unqiue row is all the world 's a stage .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; original air date ; march } ; directed by ; andy wolk } } ; eq { hop { filter_eq { filter_eq { all_rows ; original air date ; march } ; directed by ; andy wolk } ; episode title } ; all the world 's a stage } }"
            ]
        },
        {
            "input": "select the rows whose previous conference record fuzzily matches to three rivers . there is only one such row in the table . the school record of this unqiue row is caston .",
            "output": [
                "and { only { filter_eq { all_rows ; previous conference ; three rivers } } ; eq { hop { filter_eq { all_rows ; previous conference ; three rivers } ; school } ; caston } }"
            ]
        },
        {
            "input": "select the rows whose population ( 2013 ) record is less than 2,000,000 . there is only one such row in the table . the province record of this unqiue row is northern cape .",
            "output": [
                "and { only { filter_less { all_rows ; population ( 2013 ) ; 2,000,000 } } ; eq { hop { filter_less { all_rows ; population ( 2013 ) ; 2,000,000 } ; province } ; northern cape } }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than 20000 .",
            "output": [
                "most_greater { all_rows ; attendance ; 20000 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to carolina . among these rows , select the rows whose attendance record is greater than 19000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; visitor ; carolina } ; attendance ; 19000 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 17th minimum . the competition record of this row is 2012 philippine peace cup .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 17 } ; competition } ; 2012 philippine peace cup }"
            ]
        },
        {
            "input": "select the rows whose trainer record fuzzily matches to d wayne lukas . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; trainer ; d wayne lukas } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to signed by fc fredericia . there is only one such row in the table . the team record of this unqiue row is fc hj\u00f8rring .",
            "output": [
                "and { only { filter_eq { all_rows ; manner of departure ; signed by fc fredericia } } ; eq { hop { filter_eq { all_rows ; manner of departure ; signed by fc fredericia } ; team } ; fc hj\u00f8rring } }"
            ]
        },
        {
            "input": "select the row whose location / attendance record of all rows is maximum . the date record of this row is september 5 .",
            "output": [
                "eq { hop { argmax { all_rows ; location / attendance } ; date } ; september 5 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to margaret court . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; margaret court } } ; 6 }"
            ]
        },
        {
            "input": "for the broadcast date records of all rows , most of them fuzzily match to august .",
            "output": [
                "most_eq { all_rows ; broadcast date ; august }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 2nd maximum . the production code record of this row is 407 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original air date ; 2 } ; production code } ; 407 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to america . the average of the average fencers rank record of these rows is 6.58 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; team ; america } ; average fencers rank } ; 6.58 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to new delhi . the 1st maximum date record of these rows is 22 august 2009 .",
            "output": [
                "eq { nth_max { filter_eq { all_rows ; venue ; new delhi } ; date ; 1 } ; 22 august 2009 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to sam torrance . take the to par record of this row . select the rows whose player record fuzzily matches to ben crenshaw . take the to par record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; sam torrance } ; to par } ; hop { filter_eq { all_rows ; player ; ben crenshaw } ; to par } }"
            ]
        },
        {
            "input": "for the shot pct records of all rows , most of them are greater than 65 % .",
            "output": [
                "most_greater { all_rows ; shot pct ; 65 % }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to none . there is only one such row in the table . the week record of this unqiue row is 3 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; none } } ; eq { hop { filter_eq { all_rows ; result ; none } ; week } ; 3 } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to the open championship . there is only one such row in the table . the wins record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; the open championship } } ; eq { hop { filter_eq { all_rows ; tournament ; the open championship } ; wins } ; 1 } }"
            ]
        },
        {
            "input": "select the rows whose gross record is greater than 300000000 . there is only one such row in the table . the title record of this unqiue row is fatal attraction .",
            "output": [
                "and { only { filter_greater { all_rows ; gross ; 300000000 } } ; eq { hop { filter_greater { all_rows ; gross ; 300000000 } ; title } ; fatal attraction } }"
            ]
        },
        {
            "input": "select the rows whose successor record fuzzily matches to hopkins holsey ( j ) . take the date successor seated record of this row . select the rows whose successor record fuzzily matches to john young ( aj ) . take the date successor seated record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; successor ; hopkins holsey ( j ) } ; date successor seated } ; hop { filter_eq { all_rows ; successor ; john young ( aj ) } ; date successor seated } }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to bottom 3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; status ; bottom 3 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to matthew clay . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to john w eppes . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; matthew clay } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; john w eppes } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose silver record is greater than 0 . among these rows , select the rows whose gold record is equal to 4 . there is only one such row in the table . the athlete record of this unqiue row is mohammad nassiri .",
            "output": [
                "and { only { filter_eq { filter_greater { all_rows ; silver ; 0 } ; gold ; 4 } } ; eq { hop { filter_eq { filter_greater { all_rows ; silver ; 0 } ; gold ; 4 } ; athlete } ; mohammad nassiri } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to amway arena . among these rows , select the rows whose high points record fuzzily matches to andre iguodala . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location attendance ; amway arena } ; high points ; andre iguodala } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to carver arena . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; carver arena } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 64 . for the points records of these rows , most of them are greater than or equal to 15 .",
            "output": [
                "most_greater_eq { filter_eq { all_rows ; laps ; 64 } ; points ; 15 }"
            ]
        },
        {
            "input": "select the rows whose hosted 4 teams since record is equal to 1993 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; hosted 4 teams since ; 1993 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly . there is only one such row in the table . the date record of this unqiue row is 15 august 2012 .",
            "output": [
                "and { only { filter_eq { all_rows ; competition ; friendly } } ; eq { hop { filter_eq { all_rows ; competition ; friendly } ; date } ; 15 august 2012 } }"
            ]
        },
        {
            "input": "for the population density ( per km square ) records of all rows , all of them are greater than 100 .",
            "output": [
                "all_greater { all_rows ; population density ( per km square ) ; 100 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to jeddah . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; city ; jeddah } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose nickname record fuzzily matches to bulldogs . there is only one such row in the table . the institution record of this unqiue row is georgia military college .",
            "output": [
                "and { only { filter_eq { all_rows ; nickname ; bulldogs } } ; eq { hop { filter_eq { all_rows ; nickname ; bulldogs } ; institution } ; georgia military college } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . among these rows , select the rows whose position record fuzzily matches to center . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; nationality ; united states } ; position ; center } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose singer record fuzzily matches to pedro migu\u00e9is . take the points record of this row . select the rows whose singer record fuzzily matches to jo\u00e3o portugal . take the points record of this row . the first record is 20 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; singer ; pedro migu\u00e9is } ; points } ; hop { filter_eq { all_rows ; singer ; jo\u00e3o portugal } ; points } } ; 20 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re-elected . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re-elected } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is november 14 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; november 14 }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is -3.4 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; -3.4 }"
            ]
        },
        {
            "input": "the average of the top - 10 record of all rows is 5-6 .",
            "output": [
                "round_eq { avg { all_rows ; top - 10 } ; 5-6 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to spain . there is only one such row in the table . the english title record of this unqiue row is bad education .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; spain } } ; eq { hop { filter_eq { all_rows ; country ; spain } ; english title } ; bad education } }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to jason richardson . the average of the high points record of these rows is 31 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high points ; jason richardson } ; high points } ; 31 }"
            ]
        },
        {
            "input": "select the rows whose publisher record fuzzily matches to bethesda softworks . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; publisher ; bethesda softworks } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose years for grizzlies record of all rows is minimum . the player record of this row is pete chilcutt .",
            "output": [
                "eq { hop { argmin { all_rows ; years for grizzlies } ; player } ; pete chilcutt }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to erna hanfstaengl . take the life record of this row . select the rows whose name record fuzzily matches to maria reiter . take the life record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; erna hanfstaengl } ; life } ; hop { filter_eq { all_rows ; name ; maria reiter } ; life } }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to kingdome . among these rows , select the rows whose attendance record is less than 62000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; game site ; kingdome } ; attendance ; 62000 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 24248 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 24248 }"
            ]
        },
        {
            "input": "select the rows whose fsb record fuzzily matches to 100 mt/s . for the mult records of these rows , all of them are greater than 4 .",
            "output": [
                "all_greater { filter_eq { all_rows ; fsb ; 100 mt/s } ; mult ; 4 }"
            ]
        },
        {
            "input": "select the rows whose td 's record is equal to 12 . there is only one such row in the table . the player record of this unqiue row is jerome riley .",
            "output": [
                "and { only { filter_eq { all_rows ; td 's ; 12 } } ; eq { hop { filter_eq { all_rows ; td 's ; 12 } ; player } ; jerome riley } }"
            ]
        },
        {
            "input": "select the row whose worldwide gross record of all rows is 3rd maximum . the title record of this row is mission : impossible .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; worldwide gross ; 3 } ; title } ; mission : impossible }"
            ]
        },
        {
            "input": "select the row whose area km 2 record of all rows is maximum . the official name record of this row is kent .",
            "output": [
                "eq { hop { argmax { all_rows ; area km 2 } ; official name } ; kent }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to edison international field of anaheim .",
            "output": [
                "most_eq { all_rows ; location ; edison international field of anaheim }"
            ]
        },
        {
            "input": "the average of the mark record of all rows is 47.05 .",
            "output": [
                "round_eq { avg { all_rows ; mark } ; 47.05 }"
            ]
        },
        {
            "input": "the average of the viewers record of all rows is 44 .",
            "output": [
                "round_eq { avg { all_rows ; viewers } ; 44 }"
            ]
        },
        {
            "input": "select the rows whose object type record fuzzily matches to open cluster . select the row whose apparent magnitude record of these rows is 2nd maximum . the constellation record of this row is hydra .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; object type ; open cluster } ; apparent magnitude ; 2 } ; constellation } ; hydra }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; october } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to fitzroy . take the home team score record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the home team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; home team score } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score } }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to portuguese . take the points record of this row . select the rows whose language record fuzzily matches to spanish . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; language ; portuguese } ; points } ; hop { filter_eq { all_rows ; language ; spanish } ; points } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . select the row whose date record of these rows is 1st minimum . the opponent record of this row is pittsburgh steelers .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; date ; october } ; date ; 1 } ; opponent } ; pittsburgh steelers }"
            ]
        },
        {
            "input": "select the rows whose remixed by record fuzzily matches to laurent boutonnat . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; remixed by ; laurent boutonnat } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose apps record is equal to 37 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; apps ; 37 } } ; 2 }"
            ]
        },
        {
            "input": "for the visitor records of all rows , most of them fuzzily match to warriors .",
            "output": [
                "most_eq { all_rows ; visitor ; warriors }"
            ]
        },
        {
            "input": "select the row whose number record of all rows is maximum . the language record of this row is polish .",
            "output": [
                "eq { hop { argmax { all_rows ; number } ; language } ; polish }"
            ]
        },
        {
            "input": "select the rows whose contributions record is less than 5000000 . there is only one such row in the table . the candidate record of this unqiue row is dennis kucinich .",
            "output": [
                "and { only { filter_less { all_rows ; contributions ; 5000000 } } ; eq { hop { filter_less { all_rows ; contributions ; 5000000 } ; candidate } ; dennis kucinich } }"
            ]
        },
        {
            "input": "select the row whose against record of all rows is maximum . the opposing teams record of this row is argentina .",
            "output": [
                "eq { hop { argmax { all_rows ; against } ; opposing teams } ; argentina }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wins ; 0 } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the enrollment record of all rows is 44185 .",
            "output": [
                "round_eq { sum { all_rows ; enrollment } ; 44185 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to three rivers stadium . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; three rivers stadium } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose webcast record is not equal to - . the average of the frequency record of these rows is 958 .",
            "output": [
                "round_eq { avg { filter_not_eq { all_rows ; webcast ; - } ; frequency } ; 958 }"
            ]
        },
        {
            "input": "select the rows whose deleted record is not equal to - . there is only one such row in the table . the name record of this unqiue row is mowbray engineering .",
            "output": [
                "and { only { filter_not_eq { all_rows ; deleted ; - } } ; eq { hop { filter_not_eq { all_rows ; deleted ; - } ; name } ; mowbray engineering } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; united states } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose goals record fuzzily matches to ( 1 ) . there is only one such row in the table . the player record of this unqiue row is dario vido\u0161i\u0107 .",
            "output": [
                "and { only { filter_eq { all_rows ; goals ; ( 1 ) } } ; eq { hop { filter_eq { all_rows ; goals ; ( 1 ) } ; player } ; dario vido\u0161i\u0107 } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to egypt . there is only one such row in the table . the date record of this unqiue row is 31 october 2010 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; egypt } } ; eq { hop { filter_eq { all_rows ; tournament ; egypt } ; date } ; 31 october 2010 } }"
            ]
        },
        {
            "input": "the average of the seats won record of all rows is 112 .",
            "output": [
                "round_eq { avg { all_rows ; seats won } ; 112 }"
            ]
        },
        {
            "input": "select the rows whose party record does not match to totals . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; party ; totals } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to windy hill . there is only one such row in the table . the home team record of this unqiue row is essendon . the away team record of this unqiue row is st kilda .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; windy hill } } ; and { eq { hop { filter_eq { all_rows ; venue ; windy hill } ; home team } ; essendon } ; eq { hop { filter_eq { all_rows ; venue ; windy hill } ; away team } ; st kilda } } }"
            ]
        },
        {
            "input": "select the row whose overall record record of all rows is maximum . the school record of this row is delmar .",
            "output": [
                "eq { hop { argmax { all_rows ; overall record } ; school } ; delmar }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 70000 . among these rows , select the rows whose tv time record fuzzily matches to nbc . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; attendance ; 70000 } ; tv time ; nbc } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to hubert green . take the to par record of this row . select the rows whose player record fuzzily matches to dave stockton . take the to par record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; hubert green } ; to par } ; hop { filter_eq { all_rows ; player ; dave stockton } ; to par } }"
            ]
        },
        {
            "input": "for the memory bandwidth ( gb / s ) records of all rows , most of them are greater than or equal to 17.1 .",
            "output": [
                "most_greater_eq { all_rows ; memory bandwidth ( gb / s ) ; 17.1 }"
            ]
        },
        {
            "input": "select the rows whose became duke record fuzzily matches to uncles death . there is only one such row in the table . the name record of this unqiue row is louis antoine de rohan - chabot .",
            "output": [
                "and { only { filter_eq { all_rows ; became duke ; uncles death } } ; eq { hop { filter_eq { all_rows ; became duke ; uncles death } ; name } ; louis antoine de rohan - chabot } }"
            ]
        },
        {
            "input": "for the nature of incident records of all rows , most of them fuzzily match to hostile .",
            "output": [
                "most_eq { all_rows ; nature of incident ; hostile }"
            ]
        },
        {
            "input": "select the rows whose notes record fuzzily matches to not published in book form . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; notes ; not published in book form } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to team australia . the average of the best record of these rows is 50.12 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; team ; team australia } ; best } ; 50.12 }"
            ]
        },
        {
            "input": "select the row whose total points record of all rows is maximum . the player record of this row is carlos yates .",
            "output": [
                "eq { hop { argmax { all_rows ; total points } ; player } ; carlos yates }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to wc rio de janeiro . the maximum rank points record of these rows is 10 . the shooter record of the row with superlative rank points record is leuris pupo ( cub ) .",
            "output": [
                "and { eq { max { filter_eq { all_rows ; event ; wc rio de janeiro } ; rank points } ; 10 } ; eq { hop { argmax { filter_eq { all_rows ; event ; wc rio de janeiro } ; rank points } ; shooter } ; leuris pupo ( cub ) } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 1st maximum . the team record of this row is washington .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 1 } ; team } ; washington }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to united states . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; united states } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose outgoing manager record fuzzily matches to mesut bakkal . take the date of vacancy record of this row . select the rows whose outgoing manager record fuzzily matches to samet aybaba . take the date of vacancy record of this row . the second record is 1 day larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; outgoing manager ; mesut bakkal } ; date of vacancy } ; hop { filter_eq { all_rows ; outgoing manager ; samet aybaba } ; date of vacancy } } ; -1 day }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to virginia beach . there is only one such row in the table . the goal record of this unqiue row is 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; virginia beach } } ; eq { hop { filter_eq { all_rows ; location ; virginia beach } ; goal } ; 2 } }"
            ]
        },
        {
            "input": "select the rows whose government financial liabilities as % of gdp ( end 2003 ) record fuzzily matches to 157.5 % . there is only one such row in the table . the currency record of this unqiue row is yen . the country record of this unqiue row is japan .",
            "output": [
                "and { only { filter_eq { all_rows ; government financial liabilities as % of gdp ( end 2003 ) ; 157.5 % } } ; and { eq { hop { filter_eq { all_rows ; government financial liabilities as % of gdp ( end 2003 ) ; 157.5 % } ; currency } ; yen } ; eq { hop { filter_eq { all_rows ; government financial liabilities as % of gdp ( end 2003 ) ; 157.5 % } ; country } ; japan } } }"
            ]
        },
        {
            "input": "select the rows whose year record is less than 2000 . the sum of the starts record of these rows is 28 .",
            "output": [
                "round_eq { sum { filter_less { all_rows ; year ; 2000 } ; starts } ; 28 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 12 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; home team score ; 12 } ; crowd ; 20000 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose overall record of all rows is 2nd minimum . the name record of this row is charley holm .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; overall ; 2 } ; name } ; charley holm }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 11 april 1981 .",
            "output": [
                "all_eq { all_rows ; date ; 11 april 1981 }"
            ]
        },
        {
            "input": "select the row whose production num record of all rows is maximum . the title record of this row is bosko 's fox hunt .",
            "output": [
                "eq { hop { argmax { all_rows ; production num } ; title } ; bosko 's fox hunt }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is 2nd maximum . the province record of this row is chonburi .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; silver ; 2 } ; province } ; chonburi }"
            ]
        },
        {
            "input": "select the row whose registered voters record of all rows is 3rd maximum . the city record of this row is encinitas .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; registered voters ; 3 } ; city } ; encinitas }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is frank wolf .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; frank wolf }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to limited edition . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; format ; limited edition } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1996 . take the laps record of this row . select the rows whose year record fuzzily matches to 1997 . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1996 } ; laps } ; hop { filter_eq { all_rows ; year ; 1997 } ; laps } }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to 16 v . for the power records of these rows , all of them are greater than or equal to at4000 rpm .",
            "output": [
                "all_greater_eq { filter_eq { all_rows ; engine ; 16 v } ; power ; at4000 rpm }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april 2 . take the high points record of this row . select the rows whose date record fuzzily matches to april 15 . take the high points record of this row . the first record does not match to the second record .",
            "output": [
                "not_eq { hop { filter_eq { all_rows ; date ; april 2 } ; high points } ; hop { filter_eq { all_rows ; date ; april 15 } ; high points } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to donlavey . there is only one such row in the table . the year record of this unqiue row is 1990 .",
            "output": [
                "and { only { filter_eq { all_rows ; team ; donlavey } } ; eq { hop { filter_eq { all_rows ; team ; donlavey } ; year } ; 1990 } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re-elected . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re-elected } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to tom nijssen . there is only one such row in the table . the year record of this unqiue row is 1992 . the championship record of this unqiue row is us open .",
            "output": [
                "and { only { filter_eq { all_rows ; partner ; tom nijssen } } ; and { eq { hop { filter_eq { all_rows ; partner ; tom nijssen } ; year } ; 1992 } ; eq { hop { filter_eq { all_rows ; partner ; tom nijssen } ; championship } ; us open } } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to bms scuderia italia . take the laps record of this row . select the rows whose team record fuzzily matches to jb racing . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; bms scuderia italia } ; laps } ; hop { filter_eq { all_rows ; team ; jb racing } ; laps } }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { all_rows ; wins ; 1 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to sergio gald\u00f3s . there is only one such row in the table . the tournament record of this unqiue row is panama city .",
            "output": [
                "and { only { filter_eq { all_rows ; partner ; sergio gald\u00f3s } } ; eq { hop { filter_eq { all_rows ; partner ; sergio gald\u00f3s } ; tournament } ; panama city } }"
            ]
        },
        {
            "input": "select the rows whose site record fuzzily matches to cedar rapids . there is only one such row in the table . the date record of this unqiue row is september 4 , 2007 .",
            "output": [
                "and { only { filter_eq { all_rows ; site ; cedar rapids } } ; eq { hop { filter_eq { all_rows ; site ; cedar rapids } ; date } ; september 4 , 2007 } }"
            ]
        },
        {
            "input": "select the rows whose party affiliation record fuzzily matches to dravida munnetra kazhagam . among these rows , select the rows whose name of mp record fuzzily matches to t r baalu . there is only one such row in the table . the duration record of this unqiue row is 2009 - incumbent .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; party affiliation ; dravida munnetra kazhagam } ; name of mp ; t r baalu } } ; eq { hop { filter_eq { filter_eq { all_rows ; party affiliation ; dravida munnetra kazhagam } ; name of mp ; t r baalu } ; duration } ; 2009 - incumbent } }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to labour party . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; labour party } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is minimum . the club record of this row is fk vojvodina .",
            "output": [
                "eq { hop { argmin { all_rows ; founded } ; club } ; fk vojvodina }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1961 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year ; 1961 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 1st minimum . the race record of this row is maiden .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 1 } ; race } ; maiden }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is 1st minimum . the institution record of this row is midway college 1 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; founded ; 1 } ; institution } ; midway college 1 }"
            ]
        },
        {
            "input": "select the rows whose northumberland senior benevolent bowl record fuzzily matches to blyth town . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; northumberland senior benevolent bowl ; blyth town } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to waddon . the sum of the platforms record of these rows is 4 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; place ; waddon } ; platforms } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose no record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; no } } ; 11 }"
            ]
        },
        {
            "input": "the average of the laps record of all rows is 164 .",
            "output": [
                "round_eq { avg { all_rows ; laps } ; 164 }"
            ]
        },
        {
            "input": "for the date of birth records of all rows , most of them are less than 1980 .",
            "output": [
                "most_less { all_rows ; date of birth ; 1980 }"
            ]
        },
        {
            "input": "select the row whose listed record of all rows is 3rd maximum . the county record of this row is lake .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; listed ; 3 } ; county } ; lake }"
            ]
        },
        {
            "input": "the maximum average record of all rows is 25.29 . the player record of the row with superlative average record is clarrie grimmett ( vic / sa ) .",
            "output": [
                "and { eq { max { all_rows ; average } ; 25.29 } ; eq { hop { argmax { all_rows ; average } ; player } ; clarrie grimmett ( vic / sa ) } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to cavendish ( ex - sibyl ) . take the launched record of this row . select the rows whose name record fuzzily matches to caesar ( ex - ranger ) . take the launched record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; cavendish ( ex - sibyl ) } ; launched } ; hop { filter_eq { all_rows ; name ; caesar ( ex - ranger ) } ; launched } }"
            ]
        },
        {
            "input": "select the rows whose 1st round record fuzzily matches to 0-0 . there is only one such row in the table . the team 1 record of this unqiue row is as angoul\u00eame ( d2 ) . the team 2 record of this unqiue row is fc sochaux - montb\u00e9liard ( d1 ) .",
            "output": [
                "and { only { filter_eq { all_rows ; 1st round ; 0-0 } } ; and { eq { hop { filter_eq { all_rows ; 1st round ; 0-0 } ; team 1 } ; as angoul\u00eame ( d2 ) } ; eq { hop { filter_eq { all_rows ; 1st round ; 0-0 } ; team 2 } ; fc sochaux - montb\u00e9liard ( d1 ) } } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september . for the score records of these rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; september } ; score ; w }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the team record of this row is germnia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; team } ; germnia }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is minimum . the city of license record of this row is port st lucie , florida .",
            "output": [
                "eq { hop { argmin { all_rows ; frequency mhz } ; city of license } ; port st lucie , florida }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to ben handlogten . take the years for jazz record of this row . select the rows whose player record fuzzily matches to bobby hansen . take the years for jazz record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; ben handlogten } ; years for jazz } ; hop { filter_eq { all_rows ; player ; bobby hansen } ; years for jazz } }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is .667 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; .667 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is 1st maximum . the incumbent record of this row is john lewis .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; result ; 1 } ; incumbent } ; john lewis }"
            ]
        },
        {
            "input": "select the rows whose pole position record fuzzily matches to chris goodwin andrew kirkaldy . there is only one such row in the table . the round record of this unqiue row is 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; pole position ; chris goodwin andrew kirkaldy } } ; eq { hop { filter_eq { all_rows ; pole position ; chris goodwin andrew kirkaldy } ; round } ; 5 } }"
            ]
        },
        {
            "input": "the average of the location attendance record of all rows is 917 .",
            "output": [
                "round_eq { avg { all_rows ; location attendance } ; 917 }"
            ]
        },
        {
            "input": "select the rows whose int ' l debut record fuzzily matches to france . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; int ' l debut ; france } } ; 2 }"
            ]
        },
        {
            "input": "the average of the apparent magnitude record of all rows is 12.01 .",
            "output": [
                "round_eq { avg { all_rows ; apparent magnitude } ; 12.01 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to allan arkush . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; allan arkush } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose season record is equal to 2002 . select the row whose points record of these rows is maximum . the series record of this row is british formula three .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; season ; 2002 } ; points } ; series } ; british formula three }"
            ]
        },
        {
            "input": "select the rows whose turbines record is equal to 1 . there is only one such row in the table . the wind farm record of this unqiue row is glenough extension .",
            "output": [
                "and { only { filter_eq { all_rows ; turbines ; 1 } } ; eq { hop { filter_eq { all_rows ; turbines ; 1 } ; wind farm } ; glenough extension } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 57 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 57 }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to tyrus thomas . the sum of the high rebounds record of these rows is 58 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; high rebounds ; tyrus thomas } ; high rebounds } ; 58 }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to six . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; status ; six } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 139 . there is only one such row in the table . the team record of this unqiue row is darlington .",
            "output": [
                "and { only { filter_eq { all_rows ; matches ; 139 } } ; eq { hop { filter_eq { all_rows ; matches ; 139 } ; team } ; darlington } }"
            ]
        },
        {
            "input": "for the writer records of all rows , most of them fuzzily match to bill gallagher .",
            "output": [
                "most_eq { all_rows ; writer ; bill gallagher }"
            ]
        },
        {
            "input": "the sum of the silver record of all rows is 27 .",
            "output": [
                "round_eq { sum { all_rows ; silver } ; 27 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to republican . among these rows , select the rows whose result record fuzzily matches to lost . there is only one such row in the table . the incumbent record of this unqiue row is dan crane .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; party ; republican } ; result ; lost } } ; eq { hop { filter_eq { filter_eq { all_rows ; party ; republican } ; result ; lost } ; incumbent } ; dan crane } }"
            ]
        },
        {
            "input": "select the rows whose years record fuzzily matches to 192 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; years ; 192 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to adam barr . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; adam barr } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the time record of all rows is 15:41 .",
            "output": [
                "round_eq { sum { all_rows ; time } ; 15:41 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tom bladon . take the round record of this row . select the rows whose player record fuzzily matches to jim watson . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; tom bladon } ; round } ; hop { filter_eq { all_rows ; player ; jim watson } ; round } }"
            ]
        },
        {
            "input": "select the rows whose margin of victory record does not match to playoff . the average of the margin of victory record of these rows is 2.5 .",
            "output": [
                "round_eq { avg { filter_not_eq { all_rows ; margin of victory ; playoff } ; margin of victory } ; 2.5 }"
            ]
        },
        {
            "input": "select the rows whose city of license record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; city of license } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose year born record is equal to 1978 . among these rows , select the rows whose year born record is equal to 1978 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; year born ; 1978 } ; year born ; 1978 } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the wins record of all rows is 45 .",
            "output": [
                "round_eq { sum { all_rows ; wins } ; 45 }"
            ]
        },
        {
            "input": "select the rows whose series name record fuzzily matches to 3000 pro series . there is only one such row in the table . the season record of this unqiue row is 2005 .",
            "output": [
                "and { only { filter_eq { all_rows ; series name ; 3000 pro series } } ; eq { hop { filter_eq { all_rows ; series name ; 3000 pro series } ; season } ; 2005 } }"
            ]
        },
        {
            "input": "select the rows whose to par record fuzzily matches to +1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; +1 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the date record of this row is september 29 , 2003 .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; date } ; september 29 , 2003 }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are less than 1960 .",
            "output": [
                "most_less { all_rows ; year ; 1960 }"
            ]
        },
        {
            "input": "for the wheels records of all rows , most of them fuzzily match to 0-4 .",
            "output": [
                "most_eq { all_rows ; wheels ; 0-4 }"
            ]
        },
        {
            "input": "select the row whose vote percentage record of all rows is 2nd maximum . the party record of this row is social democratic party ( spd ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; vote percentage ; 2 } ; party } ; social democratic party ( spd ) }"
            ]
        },
        {
            "input": "select the rows whose colour record fuzzily matches to brown . there is only one such row in the table . the name record of this unqiue row is ted .",
            "output": [
                "and { only { filter_eq { all_rows ; colour ; brown } } ; eq { hop { filter_eq { all_rows ; colour ; brown } ; name } ; ted } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the artist record of this row is sirusho .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; artist } ; sirusho }"
            ]
        },
        {
            "input": "for the certification records of all rows , most of them fuzzily match to platinum .",
            "output": [
                "most_eq { all_rows ; certification ; platinum }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to australian international . take the year record of this row . select the rows whose tournament record fuzzily matches to canadian open . take the year record of this row . the first record is 1 year larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; tournament ; australian international } ; year } ; hop { filter_eq { all_rows ; tournament ; canadian open } ; year } } ; 1 year }"
            ]
        },
        {
            "input": "select the rows whose under - 13 record fuzzily matches to emily park . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; under - 13 ; emily park } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose transfer fee record of all rows is maximum . the name record of this row is becchio .",
            "output": [
                "eq { hop { argmax { all_rows ; transfer fee } ; name } ; becchio }"
            ]
        },
        {
            "input": "for the transfer fee ( millions ) records of all rows , most of them are greater than 26 .",
            "output": [
                "most_greater { all_rows ; transfer fee ( millions ) ; 26 }"
            ]
        },
        {
            "input": "the average of the voltage record of all rows is 1.75 .",
            "output": [
                "round_eq { avg { all_rows ; voltage } ; 1.75 }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than 70000 .",
            "output": [
                "most_greater { all_rows ; attendance ; 70000 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to omega european masters . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to madrid masters . take the margin of victory record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; omega european masters } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; madrid masters } ; margin of victory } }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to newcastle . take the erp ( analog / digital ) record of this row . select the rows whose city record fuzzily matches to lismore . take the erp ( analog / digital ) record of this row . the first record is greater than the second record . the erp ( analog / digital ) record of the first row is 1200 kw 500 kw . the erp ( analog / digital ) record of the second row is 200 kw 200 kw .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; city ; newcastle } ; erp ( analog / digital ) } ; hop { filter_eq { all_rows ; city ; lismore } ; erp ( analog / digital ) } } ; and { eq { hop { filter_eq { all_rows ; city ; newcastle } ; erp ( analog / digital ) } ; 1200 kw 500 kw } ; eq { hop { filter_eq { all_rows ; city ; lismore } ; erp ( analog / digital ) } ; 200 kw 200 kw } } }"
            ]
        },
        {
            "input": "the sum of the total produced record of all rows is 229 .",
            "output": [
                "round_eq { sum { all_rows ; total produced } ; 229 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the opponent record of this row is toronto maple leafs .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; opponent } ; toronto maple leafs }"
            ]
        },
        {
            "input": "select the rows whose men 's singles record fuzzily matches to nicholas hall . take the year record of this row . select the rows whose men 's singles record fuzzily matches to andrew smith . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; men 's singles ; nicholas hall } ; year } ; hop { filter_eq { all_rows ; men 's singles ; andrew smith } ; year } }"
            ]
        },
        {
            "input": "the average of the area ( km square ) record of all rows is 110,129 .",
            "output": [
                "round_eq { avg { all_rows ; area ( km square ) } ; 110,129 }"
            ]
        },
        {
            "input": "the average of the tournaments record of all rows is 11.46 .",
            "output": [
                "round_eq { avg { all_rows ; tournaments } ; 11.46 }"
            ]
        },
        {
            "input": "select the rows whose capacity record is greater than 84000 . there is only one such row in the table . the stadium record of this unqiue row is soccer city .",
            "output": [
                "and { only { filter_greater { all_rows ; capacity ; 84000 } } ; eq { hop { filter_greater { all_rows ; capacity ; 84000 } ; stadium } ; soccer city } }"
            ]
        },
        {
            "input": "for the high rebounds records of all rows , most of them fuzzily match to chris bosh .",
            "output": [
                "most_eq { all_rows ; high rebounds ; chris bosh }"
            ]
        },
        {
            "input": "select the rows whose erp w record is equal to 8 . there is only one such row in the table . the call sign record of this unqiue row is k251ah .",
            "output": [
                "and { only { filter_eq { all_rows ; erp w ; 8 } } ; eq { hop { filter_eq { all_rows ; erp w ; 8 } ; call sign } ; k251ah } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to sally foster . take the time record of this row . select the rows whose name record fuzzily matches to anne poleska . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; sally foster } ; time } ; hop { filter_eq { all_rows ; name ; anne poleska } ; time } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to coyotes . the sum of the attendance record of these rows is 26,689 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; coyotes } ; attendance } ; 26,689 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 2nd maximum . the player record of this row is jason clemett .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 2 } ; player } ; jason clemett }"
            ]
        },
        {
            "input": "select the row whose round record of all rows is minimum . the name record of this row is sean weatherspoon .",
            "output": [
                "eq { hop { argmin { all_rows ; round } ; name } ; sean weatherspoon }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1975 . take the stages record of this row . select the rows whose year record fuzzily matches to 1976 . take the stages record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1975 } ; stages } ; hop { filter_eq { all_rows ; year ; 1976 } ; stages } }"
            ]
        },
        {
            "input": "select the rows whose ihsaa class record fuzzily matches to aa . for the county records of these rows , most of them fuzzily match to 28 greene .",
            "output": [
                "most_eq { filter_eq { all_rows ; ihsaa class ; aa } ; county ; 28 greene }"
            ]
        },
        {
            "input": "select the rows whose cuts made record is equal to 3 . there is only one such row in the table . the tournament record of this unqiue row is us open .",
            "output": [
                "and { only { filter_eq { all_rows ; cuts made ; 3 } } ; eq { hop { filter_eq { all_rows ; cuts made ; 3 } ; tournament } ; us open } }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 16.6 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 16.6 }"
            ]
        },
        {
            "input": "select the rows whose segment b record fuzzily matches to cheesecake . there is only one such row in the table . the series ep record of this unqiue row is 9 - 01 .",
            "output": [
                "and { only { filter_eq { all_rows ; segment b ; cheesecake } } ; eq { hop { filter_eq { all_rows ; segment b ; cheesecake } ; series ep } ; 9 - 01 } }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 8561 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 8561 }"
            ]
        },
        {
            "input": "the average of the weight ( lb ) record of all rows is 212.14 .",
            "output": [
                "round_eq { avg { all_rows ; weight ( lb ) } ; 212.14 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to grodno . there is only one such row in the table . the team record of this unqiue row is neman .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; grodno } } ; eq { hop { filter_eq { all_rows ; location ; grodno } ; team } ; neman } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tom watson . take the earnings record of this row . select the rows whose player record fuzzily matches to lee trevino . take the earnings record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; tom watson } ; earnings } ; hop { filter_eq { all_rows ; player ; lee trevino } ; earnings } }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 1133 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 1133 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to merrillville . take the year joined record of this row . select the rows whose school record fuzzily matches to laporte . take the year joined record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; school ; merrillville } ; year joined } ; hop { filter_eq { all_rows ; school ; laporte } ; year joined } }"
            ]
        },
        {
            "input": "select the row whose championship record of all rows is 2nd maximum . the name record of this row is robert page .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; championship ; 2 } ; name } ; robert page }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to jeff bleckner . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; jeff bleckner } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is less than 15 . among these rows , select the rows whose crowd record is greater than 15000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_less { all_rows ; home team score ; 15 } ; crowd ; 15000 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 26593 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 26593 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to new haven . for the proposed records of these rows , most of them are less than 2000 .",
            "output": [
                "most_less { filter_eq { all_rows ; county ; new haven } ; proposed ; 2000 }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to group h . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; round ; group h } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose start record fuzzily matches to aurillac . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; start ; aurillac } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose playoffs record fuzzily matches to league finals . there is only one such row in the table . the year record of this unqiue row is 1978 .",
            "output": [
                "and { only { filter_eq { all_rows ; playoffs ; league finals } } ; eq { hop { filter_eq { all_rows ; playoffs ; league finals } ; year } ; 1978 } }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to united states .",
            "output": [
                "most_eq { all_rows ; location ; united states }"
            ]
        },
        {
            "input": "select the rows whose team record does not match to n/a . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; team ; n/a } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to decision . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; method ; decision } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is maximum . the district record of this row is georgia 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; candidates } ; district } ; georgia 1 }"
            ]
        },
        {
            "input": "select the row whose appearances record of all rows is maximum . the name record of this row is philippe jeannol .",
            "output": [
                "eq { hop { argmax { all_rows ; appearances } ; name } ; philippe jeannol }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 63.78 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 63.78 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to tomcat racing . select the row whose season record of these rows is 3rd minimum . the races record of this row is 12 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; team ; tomcat racing } ; season ; 3 } ; races } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than 1884 . the sum of the enrollment record of these rows is 7,500 .",
            "output": [
                "round_eq { sum { filter_greater { all_rows ; founded ; 1884 } ; enrollment } ; 7,500 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 142 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 142 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 3rd minimum . the title of movie record of this row is a flight to yesterday \u300a \u98db\u5f80\u6628\u5929\u7684ci006 \u300b .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 3 } ; title of movie } ; a flight to yesterday \u300a \u98db\u5f80\u6628\u5929\u7684ci006 \u300b }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 16583.33 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 16583.33 }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is 2nd maximum . the venue record of this row is osaka , japan .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; position ; 2 } ; venue } ; osaka , japan }"
            ]
        },
        {
            "input": "the average of the international tourist arrivals ( 2012 ) record of all rows is 13.4 million .",
            "output": [
                "round_eq { avg { all_rows ; international tourist arrivals ( 2012 ) } ; 13.4 million }"
            ]
        },
        {
            "input": "the average of the haat record of all rows is 261 .",
            "output": [
                "round_eq { avg { all_rows ; haat } ; 261 }"
            ]
        },
        {
            "input": "select the row whose total tackles record of all rows is maximum . the team record of this row is baltimore .",
            "output": [
                "eq { hop { argmax { all_rows ; total tackles } ; team } ; baltimore }"
            ]
        },
        {
            "input": "select the row whose speed ( knots ) record of all rows is maximum . the warship record of this row is magallanes .",
            "output": [
                "eq { hop { argmax { all_rows ; speed ( knots ) } ; warship } ; magallanes }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; score ; 10 }"
            ]
        },
        {
            "input": "for the power ( kw ) records of all rows , most of them are equal to 5 .",
            "output": [
                "most_eq { all_rows ; power ( kw ) ; 5 }"
            ]
        },
        {
            "input": "for the co - drivers records of all rows , most of them fuzzily match to mark blundell .",
            "output": [
                "most_eq { all_rows ; co - drivers ; mark blundell }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to offenhauser l4 . among these rows , select the rows whose chassis record fuzzily matches to trevis . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; engine ; offenhauser l4 } ; chassis ; trevis } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 2000 summer olympics . take the class record of this row . select the rows whose competition record fuzzily matches to 1996 summer olympics . take the class record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; competition ; 2000 summer olympics } ; class } ; hop { filter_eq { all_rows ; competition ; 1996 summer olympics } ; class } }"
            ]
        },
        {
            "input": "the sum of the championships record of all rows is 2 .",
            "output": [
                "round_eq { sum { all_rows ; championships } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to chevrolet . there is only one such row in the table . the year record of this unqiue row is 1992 .",
            "output": [
                "and { only { filter_eq { all_rows ; engine ; chevrolet } } ; eq { hop { filter_eq { all_rows ; engine ; chevrolet } ; year } ; 1992 } }"
            ]
        },
        {
            "input": "select the rows whose wins record is not equal to 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; wins ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 20.8 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 20.8 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the score record of this row is 3 - 6 , 2 - 6 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; score } ; 3 - 6 , 2 - 6 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to brunswick street oval . there is only one such row in the table . the home team record of this unqiue row is fitzroy . the away team record of this unqiue row is collingwood .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; brunswick street oval } } ; and { eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team } ; fitzroy } ; eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; away team } ; collingwood } } }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is minimum . the english name record of this row is zhangping city .",
            "output": [
                "eq { hop { argmin { all_rows ; population } ; english name } ; zhangping city }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to eastern washington . there is only one such row in the table . the player record of this unqiue row is henry bekkering .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; eastern washington } } ; eq { hop { filter_eq { all_rows ; school / club team ; eastern washington } ; player } ; henry bekkering } }"
            ]
        },
        {
            "input": "the maximum score record of all rows is 9 - 0 .",
            "output": [
                "eq { max { all_rows ; score } ; 9 - 0 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table . the tournament record of this unqiue row is australia f2 , australia .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; tournament } ; australia f2 , australia } }"
            ]
        },
        {
            "input": "select the rows whose studio host record fuzzily matches to craig mustard . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; studio host ; craig mustard } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is maximum . the cover model record of this row is lauren hill .",
            "output": [
                "eq { hop { argmax { all_rows ; date } ; cover model } ; lauren hill }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to amsterdam admirals . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; amsterdam admirals } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . there is only one such row in the table . the tournament record of this unqiue row is valencia , spain .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; clay } } ; eq { hop { filter_eq { all_rows ; surface ; clay } ; tournament } ; valencia , spain } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to tyler hansbrough . take the height record of this row . select the rows whose name record fuzzily matches to wes miller . take the height record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; tyler hansbrough } ; height } ; hop { filter_eq { all_rows ; name ; wes miller } ; height } }"
            ]
        },
        {
            "input": "for the net capacity records of all rows , most of them are greater than 300 mw .",
            "output": [
                "most_greater { all_rows ; net capacity ; 300 mw }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to bmw . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; engine ; bmw } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the opponent record of this row is new york giants .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent } ; new york giants }"
            ]
        },
        {
            "input": "select the rows whose no of series record is equal to 3 . select the row whose episodes record of these rows is minimum . the actor record of this row is ellen thomas .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; no of series ; 3 } ; episodes } ; actor } ; ellen thomas }"
            ]
        },
        {
            "input": "select the row whose episode record of all rows is 1st minimum . the original airdate ( uk ) record of this row is 26 march 2005 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; episode ; 1 } ; original airdate ( uk ) } ; 26 march 2005 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to running back . among these rows , select the rows whose round record is greater than 4 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; position ; running back } ; round ; 4 } } ; 3 }"
            ]
        },
        {
            "input": "for the previous conference records of all rows , most of them fuzzily match to independents .",
            "output": [
                "most_eq { all_rows ; previous conference ; independents }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to patricia sosa ( esa ) . take the total ( kg ) record of this row . select the rows whose name record fuzzily matches to nancy niro ( can ) . take the total ( kg ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; patricia sosa ( esa ) } ; total ( kg ) } ; hop { filter_eq { all_rows ; name ; nancy niro ( can ) } ; total ( kg ) } }"
            ]
        },
        {
            "input": "the average of the length record of all rows is 5:04 .",
            "output": [
                "round_eq { avg { all_rows ; length } ; 5:04 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1996 . take the length record of this row . select the rows whose year record fuzzily matches to 2000 . take the length record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1996 } ; length } ; hop { filter_eq { all_rows ; year ; 2000 } ; length } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to windy hill . take the crowd record of this row . select the rows whose venue record fuzzily matches to princes park . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; windy hill } ; crowd } ; hop { filter_eq { all_rows ; venue ; princes park } ; crowd } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to london , england . there is only one such row in the table . the date record of this unqiue row is 6 february 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; london , england } } ; eq { hop { filter_eq { all_rows ; venue ; london , england } ; date } ; 6 february 2008 } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to ray allen . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; ray allen } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose constellation record fuzzily matches to orion . there is only one such row in the table . the designation hd record of this unqiue row is hd 245409 .",
            "output": [
                "and { only { filter_eq { all_rows ; constellation ; orion } } ; eq { hop { filter_eq { all_rows ; constellation ; orion } ; designation hd } ; hd 245409 } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to george h tinkham . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to james a gallivan . take the first elected record of this row . the first record is equal to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; incumbent ; george h tinkham } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; james a gallivan } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to telmatosaurus . take the location record of this row . select the rows whose name record fuzzily matches to brachiosaurus . take the location record of this row . the first record does not match to the second record . the location record of the first row is romania . the location record of the second row is usa .",
            "output": [
                "and { not_eq { hop { filter_eq { all_rows ; name ; telmatosaurus } ; location } ; hop { filter_eq { all_rows ; name ; brachiosaurus } ; location } } ; and { eq { hop { filter_eq { all_rows ; name ; telmatosaurus } ; location } ; romania } ; eq { hop { filter_eq { all_rows ; name ; brachiosaurus } ; location } ; usa } } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 1-0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; 1-0 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose school enrollment ( 200810 ) record is greater than 70 . among these rows , select the rows whose football record fuzzily matches to y . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; school enrollment ( 200810 ) ; 70 } ; football ; y } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose release price ( usd ) record fuzzily matches to oem . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; release price ( usd ) ; oem } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to oval . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; oval } } ; 3 }"
            ]
        },
        {
            "input": "for the label records of all rows , all of them fuzzily match to linfair records .",
            "output": [
                "all_eq { all_rows ; label ; linfair records }"
            ]
        },
        {
            "input": "select the rows whose top - 10 record is equal to 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; top - 10 ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october 7 , 2011 . take the score record of this row . select the rows whose date record fuzzily matches to june 8 , 2012 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; october 7 , 2011 } ; score } ; hop { filter_eq { all_rows ; date ; june 8 , 2012 } ; score } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1999 . there is only one such row in the table . the championship record of this unqiue row is french open .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 1999 } } ; eq { hop { filter_eq { all_rows ; year ; 1999 } ; championship } ; french open } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the gymnast record of this row is li xiaopeng ( chn ) .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; gymnast } ; li xiaopeng ( chn ) }"
            ]
        },
        {
            "input": "the minimum result record of all rows is 2nd .",
            "output": [
                "eq { min { all_rows ; result } ; 2nd }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2010 . take the races record of this row . select the rows whose season record fuzzily matches to 2012 . take the races record of this row . the first record is 6 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; season ; 2010 } ; races } ; hop { filter_eq { all_rows ; season ; 2012 } ; races } } ; 6 }"
            ]
        },
        {
            "input": "for the status records of all rows , most of them fuzzily match to tour match .",
            "output": [
                "most_eq { all_rows ; status ; tour match }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to marianne witmeyer . there is only one such row in the table . the tournament record of this unqiue row is hong kong .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent in the final ; marianne witmeyer } } ; eq { hop { filter_eq { all_rows ; opponent in the final ; marianne witmeyer } ; tournament } ; hong kong } }"
            ]
        },
        {
            "input": "select the rows whose games record is greater than 48 . among these rows , select the rows whose goals record is equal to 27 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; games ; 48 } ; goals ; 27 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the swimsuit record of all rows is 8.255 .",
            "output": [
                "round_eq { avg { all_rows ; swimsuit } ; 8.255 }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to jermaine o'neal . there is only one such row in the table . the team record of this unqiue row is new orleans .",
            "output": [
                "and { only { filter_eq { all_rows ; high points ; jermaine o'neal } } ; eq { hop { filter_eq { all_rows ; high points ; jermaine o'neal } ; team } ; new orleans } }"
            ]
        },
        {
            "input": "for the 5th venue records of all rows , all of them fuzzily match to na .",
            "output": [
                "all_eq { all_rows ; 5th venue ; na }"
            ]
        },
        {
            "input": "select the rows whose english ( streamline ) record fuzzily matches to unknown . among these rows , select the rows whose english ( pioneer / geneon ) record fuzzily matches to richard cansino . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; english ( streamline ) ; unknown } ; english ( pioneer / geneon ) ; richard cansino } } ; 2 }"
            ]
        },
        {
            "input": "for the us viewers ( million ) records of all rows , most of them are greater than or equal to 1.0 .",
            "output": [
                "most_greater_eq { all_rows ; us viewers ( million ) ; 1.0 }"
            ]
        },
        {
            "input": "select the rows whose nominee record fuzzily matches to michael cerveris . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nominee ; michael cerveris } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to pga championship . take the top - 25 record of this row . select the rows whose tournament record fuzzily matches to masters tournament . take the top - 25 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; pga championship } ; top - 25 } ; hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 25 } }"
            ]
        },
        {
            "input": "select the row whose rounds record of all rows is 1st maximum . the team record of this row is phil parsons racing .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; rounds ; 1 } ; team } ; phil parsons racing }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to carlos boozer . among these rows , select the rows whose score record fuzzily matches to w . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; leading scorer ; carlos boozer } ; score ; w } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to tokyo , japan . the average of the record record of these rows is 3.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; location ; tokyo , japan } ; record } ; 3.5 }"
            ]
        },
        {
            "input": "for the top - 10 records of all rows , most of them are greater than 0 .",
            "output": [
                "most_greater { all_rows ; top - 10 ; 0 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 1 may 1926 .",
            "output": [
                "all_eq { all_rows ; date ; 1 may 1926 }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 2nd maximum . the date record of this row is february 16 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; february 16 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 3 - 1 . there is only one such row in the table . the date record of this unqiue row is december 14 , 1994 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 3 - 1 } } ; eq { hop { filter_eq { all_rows ; score ; 3 - 1 } ; date } ; december 14 , 1994 } }"
            ]
        },
        {
            "input": "select the rows whose theme record fuzzily matches to gold rush era . there is only one such row in the table . the casino record of this unqiue row is golden nugget .",
            "output": [
                "and { only { filter_eq { all_rows ; theme ; gold rush era } } ; eq { hop { filter_eq { all_rows ; theme ; gold rush era } ; casino } ; golden nugget } }"
            ]
        },
        {
            "input": "select the row whose magnitude record of all rows is 2nd maximum . the name record of this row is 2003 bam earthquake .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; magnitude ; 2 } ; name } ; 2003 bam earthquake }"
            ]
        },
        {
            "input": "the sum of the rainfall by depth ( mm / year ) record of all rows is 19537 .",
            "output": [
                "round_eq { sum { all_rows ; rainfall by depth ( mm / year ) } ; 19537 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to mar . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; mar } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose ceased to be queen record fuzzily matches to divorced . there is only one such row in the table . the father record of this unqiue row is leopold vi , duke of austria .",
            "output": [
                "and { only { filter_eq { all_rows ; ceased to be queen ; divorced } } ; eq { hop { filter_eq { all_rows ; ceased to be queen ; divorced } ; father } ; leopold vi , duke of austria } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to win . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; win } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to lokomotiva b . take the number of seasons in prva hnl record of this row . select the rows whose club record fuzzily matches to slaven belupo b . take the number of seasons in prva hnl record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; club ; lokomotiva b } ; number of seasons in prva hnl } ; hop { filter_eq { all_rows ; club ; slaven belupo b } ; number of seasons in prva hnl } }"
            ]
        },
        {
            "input": "select the rows whose pick record is equal to 3 . there is only one such row in the table . the player record of this unqiue row is dennis ververgaert .",
            "output": [
                "and { only { filter_eq { all_rows ; pick ; 3 } } ; eq { hop { filter_eq { all_rows ; pick ; 3 } ; player } ; dennis ververgaert } }"
            ]
        },
        {
            "input": "select the rows whose assets ( us billion ) record is greater than 100 billion . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; assets ( us billion ) ; 100 billion } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose tenure record of all rows is 5th minimum . the school record of this row is coventry .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; tenure ; 5 } ; school } ; coventry }"
            ]
        },
        {
            "input": "the average of the diameter ( km ) record of all rows is 512.6 .",
            "output": [
                "round_eq { avg { all_rows ; diameter ( km ) } ; 512.6 }"
            ]
        },
        {
            "input": "select the rows whose won record is greater than 10 . among these rows , select the rows whose lost record is equal to 3 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; won ; 10 } ; lost ; 3 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose score record is equal to 137 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; country ; united states } ; score ; 137 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to yankee stadium . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; yankee stadium } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose lost record fuzzily matches to 15 . take the lost record of this row . select the rows whose lost record fuzzily matches to 15 . take the lost record of this row . the first record is equal to the second record . the lost record of the first row is 15 . the lost record of the second row is 15 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; lost ; 15 } ; lost } ; hop { filter_eq { all_rows ; lost ; 15 } ; lost } } ; and { eq { hop { filter_eq { all_rows ; lost ; 15 } ; lost } ; 15 } ; eq { hop { filter_eq { all_rows ; lost ; 15 } ; lost } ; 15 } } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to ruler . there is only one such row in the table . the state record of this unqiue row is qin .",
            "output": [
                "and { only { filter_eq { all_rows ; title ; ruler } } ; eq { hop { filter_eq { all_rows ; title ; ruler } ; state } ; qin } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the home team record of this row is horsham .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; home team } ; horsham }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to eninho . take the goals record of this row . select the rows whose name record fuzzily matches to ko jeong - woon . take the goals record of this row . the first record is greater than the second record . the goals record of the first row is 51 . the goals record of the second row is 42 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } } ; and { eq { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; 51 } ; eq { hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } ; 42 } } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to gus otto . take the pick record of this row . select the rows whose player record fuzzily matches to otis taylor . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; gus otto } ; pick } ; hop { filter_eq { all_rows ; player ; otis taylor } ; pick } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the home record of this row is montreal .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; home } ; montreal }"
            ]
        },
        {
            "input": "select the row whose from record of all rows is 3rd minimum . the player record of this row is lamar green .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; from ; 3 } ; player } ; lamar green }"
            ]
        },
        {
            "input": "for the nationality records of all rows , most of them fuzzily match to estonia .",
            "output": [
                "most_eq { all_rows ; nationality ; estonia }"
            ]
        },
        {
            "input": "select the rows whose new adherents per year record is greater than 1000000 . among these rows , select the rows whose growth rate record is greater than 1.70 % . there is only one such row in the table . the religion record of this unqiue row is islam .",
            "output": [
                "and { only { filter_greater { filter_greater { all_rows ; new adherents per year ; 1000000 } ; growth rate ; 1.70 % } } ; eq { hop { filter_greater { filter_greater { all_rows ; new adherents per year ; 1000000 } ; growth rate ; 1.70 % } ; religion } ; islam } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 50 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ; 50 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose broadcast record fuzzily matches to espn2 . there is only one such row in the table . the visiting team record of this unqiue row is no 23 west virginia . the home team record of this unqiue row is marshall .",
            "output": [
                "and { only { filter_eq { all_rows ; broadcast ; espn2 } } ; and { eq { hop { filter_eq { all_rows ; broadcast ; espn2 } ; visiting team } ; no 23 west virginia } ; eq { hop { filter_eq { all_rows ; broadcast ; espn2 } ; home team } ; marshall } } }"
            ]
        },
        {
            "input": "select the rows whose agricultural panel record is equal to 0 . there is only one such row in the table . the party record of this unqiue row is independent .",
            "output": [
                "and { only { filter_eq { all_rows ; agricultural panel ; 0 } } ; eq { hop { filter_eq { all_rows ; agricultural panel ; 0 } ; party } ; independent } }"
            ]
        },
        {
            "input": "select the row whose championships record of all rows is 2nd maximum . the teams record of this row is new york nets .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; championships ; 2 } ; teams } ; new york nets }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 1994 fifa world cup qualification . select the row whose date record of these rows is minimum . the venue record of this row is estadio rigoberto l\u00f3pez , managua , nicaragua .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; competition ; 1994 fifa world cup qualification } ; date } ; venue } ; estadio rigoberto l\u00f3pez , managua , nicaragua }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to machinist union racing team . the average of the finish record of these rows is 22 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; entrant ; machinist union racing team } ; finish } ; 22 }"
            ]
        },
        {
            "input": "the sum of the uk viewers ( million ) record of all rows is 96.41 .",
            "output": [
                "round_eq { sum { all_rows ; uk viewers ( million ) } ; 96.41 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to australia . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; australia } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to guard . there is only one such row in the table . the name record of this unqiue row is justin anderson .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; guard } } ; eq { hop { filter_eq { all_rows ; position ; guard } ; name } ; justin anderson } }"
            ]
        },
        {
            "input": "select the row whose height record of all rows is maximum . the player record of this row is pape badiane .",
            "output": [
                "eq { hop { argmax { all_rows ; height } ; player } ; pape badiane }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to cooper t53 . there is only one such row in the table . the year record of this unqiue row is 1961 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; cooper t53 } } ; eq { hop { filter_eq { all_rows ; chassis ; cooper t53 } ; year } ; 1961 } }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is -2.19 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; -2.19 }"
            ]
        },
        {
            "input": "select the rows whose date record is less than or equal to february 5 . the sum of the attendance record of these rows is 37097 .",
            "output": [
                "round_eq { sum { filter_less_eq { all_rows ; date ; february 5 } ; attendance } ; 37097 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is john conyers jr .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; john conyers jr }"
            ]
        },
        {
            "input": "select the rows whose model record fuzzily matches to stls2f . take the frequency record of this row . select the rows whose model record fuzzily matches to stls2e . take the frequency record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; model ; stls2f } ; frequency } ; hop { filter_eq { all_rows ; model ; stls2e } ; frequency } }"
            ]
        },
        {
            "input": "select the rows whose attendance record is equal to 15000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; attendance ; 15000 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the tournament record of this row is san jose , usa .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; tournament } ; san jose , usa }"
            ]
        },
        {
            "input": "select the row whose record record of all rows is 2nd maximum . the year record of this row is 1979 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; record ; 2 } ; year } ; 1979 }"
            ]
        },
        {
            "input": "the 2nd minimum date record of all rows is 2 - 95 . the interview subject record of the row with 2nd minimum date record is tim robbins .",
            "output": [
                "and { eq { nth_min { all_rows ; date ; 2 } ; 2 - 95 } ; eq { hop { nth_argmin { all_rows ; date ; 2 } ; interview subject } ; tim robbins } }"
            ]
        },
        {
            "input": "select the row whose first broadcast record of all rows is maximum . the episode record of this row is 3x08 .",
            "output": [
                "eq { hop { argmax { all_rows ; first broadcast } ; episode } ; 3x08 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the venue record of this row is lake oval .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; venue } ; lake oval }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to adam smith . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to dave reichert . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; adam smith } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; dave reichert } ; first elected } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 48976.33 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 48976.33 }"
            ]
        },
        {
            "input": "for the opponent records of all rows , all of them fuzzily match to new york islanders .",
            "output": [
                "all_eq { all_rows ; opponent ; new york islanders }"
            ]
        },
        {
            "input": "select the rows whose air force cross record fuzzily matches to lifesaving medal . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; air force cross ; lifesaving medal } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to mca . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; label ; mca } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to february . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; february } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 2004 afc asian cup qualification . the 1st minimum date record of these rows is september 26 , 2003 .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; competition ; 2004 afc asian cup qualification } ; date ; 1 } ; september 26 , 2003 }"
            ]
        },
        {
            "input": "select the row whose event record of all rows is 3rd minimum . the circuit record of this row is wakefield park .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; event ; 3 } ; circuit } ; wakefield park }"
            ]
        },
        {
            "input": "select the row whose total personnel record of all rows is maximum . the type of unit record of this row is heavy bombardment group .",
            "output": [
                "eq { hop { argmax { all_rows ; total personnel } ; type of unit } ; heavy bombardment group }"
            ]
        },
        {
            "input": "select the rows whose segment a record fuzzily matches to three wheeled vehicles . take the episode record of this row . select the rows whose segment a record fuzzily matches to air filters . take the episode record of this row . the first record is less than the second record . the episode record of the first row is 66 . the episode record of the second row is 70 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; segment a ; three wheeled vehicles } ; episode } ; hop { filter_eq { all_rows ; segment a ; air filters } ; episode } } ; and { eq { hop { filter_eq { all_rows ; segment a ; three wheeled vehicles } ; episode } ; 66 } ; eq { hop { filter_eq { all_rows ; segment a ; air filters } ; episode } ; 70 } } }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 116.5 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 116.5 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to tahiti . there is only one such row in the table . the date record of this unqiue row is 11 may 1996 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; tahiti } } ; eq { hop { filter_eq { all_rows ; venue ; tahiti } ; date } ; 11 may 1996 } }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are equal to 1982 .",
            "output": [
                "most_eq { all_rows ; first elected ; 1982 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 1 august .",
            "output": [
                "all_eq { all_rows ; date ; 1 august }"
            ]
        },
        {
            "input": "select the rows whose champions record fuzzily matches to jimmy connors . take the year record of this row . select the rows whose champions record fuzzily matches to john mcenroe . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; champions ; jimmy connors } ; year } ; hop { filter_eq { all_rows ; champions ; john mcenroe } ; year } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to july . among these rows , select the rows whose fastest lap record fuzzily matches to nigel mansell . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; july } ; fastest lap ; nigel mansell } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose composer record fuzzily matches to alexander lunyov . there is only one such row in the table . the song record of this unqiue row is never let you go 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; composer ; alexander lunyov } } ; eq { hop { filter_eq { all_rows ; composer ; alexander lunyov } ; song } ; never let you go 2 } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the average of the score record of these rows is 139.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; country ; united states } ; score } ; 139.5 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 16325 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 16325 }"
            ]
        },
        {
            "input": "select the rows whose years for jazz record fuzzily matches to present . there is only one such row in the table . the player record of this unqiue row is jamaal tinsley .",
            "output": [
                "and { only { filter_eq { all_rows ; years for jazz ; present } } ; eq { hop { filter_eq { all_rows ; years for jazz ; present } ; player } ; jamaal tinsley } }"
            ]
        },
        {
            "input": "select the row whose no of barangays record of all rows is maximum . the city / municipality record of this row is binangonan .",
            "output": [
                "eq { hop { argmax { all_rows ; no of barangays } ; city / municipality } ; binangonan }"
            ]
        },
        {
            "input": "select the row whose uk viewers ( million ) record of all rows is 5th maximum . the title record of this row is episode 4 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; uk viewers ( million ) ; 5 } ; title } ; episode 4 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the race name record of this row is vi glover trophy .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; race name } ; vi glover trophy }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to - . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gold ; - } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to men 's . the average of the swim ( 1.5 km ) record of these rows is 18:41 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; event ; men 's } ; swim ( 1.5 km ) } ; 18:41 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . for the distance records of these rows , most of them fuzzily match to 1400 m .",
            "output": [
                "most_eq { filter_eq { all_rows ; result ; won } ; distance ; 1400 m }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to baylor university . select the row whose enrollment record of these rows is maximum . the affiliation record of this row is private / baptist .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; institution ; baylor university } ; enrollment } ; affiliation } ; private / baptist }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united kingdom . select the row whose seats record of these rows is 1st maximum . the model record of this row is bae atp .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; country ; united kingdom } ; seats ; 1 } ; model } ; bae atp }"
            ]
        },
        {
            "input": "select the rows whose average annual rainfall ( mm ) record is less than 100 . select the row whose average annual runoff ( mm ) record of these rows is 1st maximum . the administrative region record of this row is i - tarapac\u00e1 .",
            "output": [
                "eq { hop { nth_argmax { filter_less { all_rows ; average annual rainfall ( mm ) ; 100 } ; average annual runoff ( mm ) ; 1 } ; administrative region } ; i - tarapac\u00e1 }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than or equal to 1980 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; founded ; 1980 } } ; 3 }"
            ]
        },
        {
            "input": "for the league records of all rows , most of them fuzzily match to aviva premiership .",
            "output": [
                "most_eq { all_rows ; league ; aviva premiership }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to richard philippe . take the nor 1 record of this row . select the rows whose driver record fuzzily matches to stefano coletti . take the nor 1 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; driver ; richard philippe } ; nor 1 } ; hop { filter_eq { all_rows ; driver ; stefano coletti } ; nor 1 } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the opponent in the final record of this row is monica niculescu .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opponent in the final } ; monica niculescu }"
            ]
        },
        {
            "input": "select the rows whose to par record fuzzily matches to +5 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; +5 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to dale kildee . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to fred upton . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; dale kildee } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; fred upton } ; first elected } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the location record of this row is memorial stadium clemson , sc .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; location } ; memorial stadium clemson , sc }"
            ]
        },
        {
            "input": "select the row whose population served record of all rows is maximum . the location record of this row is marcala , hon .",
            "output": [
                "eq { hop { argmax { all_rows ; population served } ; location } ; marcala , hon }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to ept barcelona open . take the date record of this row . select the rows whose event record fuzzily matches to 2008 european poker championships . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; event ; ept barcelona open } ; date } ; hop { filter_eq { all_rows ; event ; 2008 european poker championships } ; date } }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to atlantic records . among these rows , select the rows whose region record fuzzily matches to united states . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; label ; atlantic records } ; region ; united states } } ; 4 }"
            ]
        },
        {
            "input": "the average of the international tourism expenditure 2011 record of all rows is 45-48 billion .",
            "output": [
                "round_eq { avg { all_rows ; international tourism expenditure 2011 } ; 45-48 billion }"
            ]
        },
        {
            "input": "the sum of the total record of all rows is 119 .",
            "output": [
                "round_eq { sum { all_rows ; total } ; 119 }"
            ]
        },
        {
            "input": "select the rows whose ride record fuzzily matches to flight deck . take the rating record of this row . select the rows whose ride record fuzzily matches to woodstock express . take the rating record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ride ; flight deck } ; rating } ; hop { filter_eq { all_rows ; ride ; woodstock express } ; rating } }"
            ]
        },
        {
            "input": "select the row whose population density ( / km 2 ) record of all rows is maximum . the administrative district record of this row is jaffna .",
            "output": [
                "eq { hop { argmax { all_rows ; population density ( / km 2 ) } ; administrative district } ; jaffna }"
            ]
        },
        {
            "input": "the average of the first downs record of all rows is 19.42 .",
            "output": [
                "round_eq { avg { all_rows ; first downs } ; 19.42 }"
            ]
        },
        {
            "input": "select the rows whose outcome of election record fuzzily matches to ndc opposition . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome of election ; ndc opposition } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose days with frost record is equal to 0 . there is only one such row in the table . the city / town record of this unqiue row is a coru\u00f1a .",
            "output": [
                "and { only { filter_eq { all_rows ; days with frost ; 0 } } ; eq { hop { filter_eq { all_rows ; days with frost ; 0 } ; city / town } ; a coru\u00f1a } }"
            ]
        },
        {
            "input": "select the rows whose oberbayern a record fuzzily matches to bsc sendling . take the season record of this row . select the rows whose oberbayern a record fuzzily matches to fc oberau . take the season record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; oberbayern a ; bsc sendling } ; season } ; hop { filter_eq { all_rows ; oberbayern a ; fc oberau } ; season } }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to i1 . take the no built record of this row . select the rows whose class record fuzzily matches to i2 . take the no built record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; class ; i1 } ; no built } ; hop { filter_eq { all_rows ; class ; i2 } ; no built } }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to tko . there is only one such row in the table . the opponent record of this unqiue row is gegard mousasi .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; tko } } ; eq { hop { filter_eq { all_rows ; method ; tko } ; opponent } ; gegard mousasi } }"
            ]
        },
        {
            "input": "select the rows whose launched record fuzzily matches to november 21 , 1964 . take the ceased operation record of this row . select the rows whose launched record fuzzily matches to december 12 , 1962 . take the ceased operation record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; launched ; november 21 , 1964 } ; ceased operation } ; hop { filter_eq { all_rows ; launched ; december 12 , 1962 } ; ceased operation } }"
            ]
        },
        {
            "input": "select the row whose frequency record of all rows is maximum . the format record of this row is classic rock / sports radio .",
            "output": [
                "eq { hop { argmax { all_rows ; frequency } ; format } ; classic rock / sports radio }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 22250 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 22250 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to l . the 2nd minimum date record of these rows is october 11 , 1998 . the opponent record of the row with 2nd minimum date record is new england patriots .",
            "output": [
                "and { eq { nth_min { filter_eq { all_rows ; result ; l } ; date ; 2 } ; october 11 , 1998 } ; eq { hop { nth_argmin { filter_eq { all_rows ; result ; l } ; date ; 2 } ; opponent } ; new england patriots } }"
            ]
        },
        {
            "input": "select the rows whose cardinalatial order and title record fuzzily matches to bishop . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; cardinalatial order and title ; bishop } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose gender record fuzzily matches to male . for the status records of these rows , most of them fuzzily match to dead .",
            "output": [
                "most_eq { filter_eq { all_rows ; gender ; male } ; status ; dead }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is maximum . the player record of this row is oleg veretennikov .",
            "output": [
                "eq { hop { argmax { all_rows ; goals } ; player } ; oleg veretennikov }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 11th minimum . the field record of this row is cawley memorial stadium .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 11 } ; field } ; cawley memorial stadium }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to 8th . there is only one such row in the table . the season record of this unqiue row is 1946 - 47 .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; 8th } } ; eq { hop { filter_eq { all_rows ; position ; 8th } ; season } ; 1946 - 47 } }"
            ]
        },
        {
            "input": "select the row whose cores record of all rows is 2nd maximum . the model record of this row is l3c .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; cores ; 2 } ; model } ; l3c }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to stephen kay . among these rows , select the rows whose written by record fuzzily matches to norman morrill . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; directed by ; stephen kay } ; written by ; norman morrill } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the champion record of this row is toronto marlboros ( oha ) .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; champion } ; toronto marlboros ( oha ) }"
            ]
        },
        {
            "input": "select the rows whose member countries record fuzzily matches to france . take the gdp per capita ( us ) record of this row . select the rows whose member countries record fuzzily matches to west germany . take the gdp per capita ( us ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; member countries ; france } ; gdp per capita ( us ) } ; hop { filter_eq { all_rows ; member countries ; west germany } ; gdp per capita ( us ) } }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to j clark mathis . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; director ; j clark mathis } }"
            ]
        },
        {
            "input": "for the owner records of all rows , most of them fuzzily match to greentrains .",
            "output": [
                "most_eq { all_rows ; owner ; greentrains }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 30000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; attendance ; 30000 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is austria .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; austria }"
            ]
        },
        {
            "input": "the average of the of episodes record of all rows is 33.2 .",
            "output": [
                "round_eq { avg { all_rows ; of episodes } ; 33.2 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2013 . the sum of the result record of these rows is over 50 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 2013 } ; result } ; over 50 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 96 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 96 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to 49th . take the attendance record of this row . select the rows whose title record fuzzily matches to 48th . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; 49th } ; attendance } ; hop { filter_eq { all_rows ; title ; 48th } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose season finale date record fuzzily matches to march . there is only one such row in the table . the season record of this unqiue row is 4 .",
            "output": [
                "and { only { filter_eq { all_rows ; season finale date ; march } } ; eq { hop { filter_eq { all_rows ; season finale date ; march } ; season } ; 4 } }"
            ]
        },
        {
            "input": "select the rows whose revenues record is greater than 10000 koku . there is only one such row in the table . the name record of this unqiue row is \u014doka tadatomo ( \u5927\u5ca1\u5fe0\u8207 ) .",
            "output": [
                "and { only { filter_greater { all_rows ; revenues ; 10000 koku } } ; eq { hop { filter_greater { all_rows ; revenues ; 10000 koku } ; name } ; \u014doka tadatomo ( \u5927\u5ca1\u5fe0\u8207 ) } }"
            ]
        },
        {
            "input": "select the rows whose recipient record fuzzily matches to debby ryan . there is only one such row in the table . the year record of this unqiue row is 2010 . the award record of this unqiue row is hollywood teen tv awards . the result record of this unqiue row is nominated .",
            "output": [
                "and { only { filter_eq { all_rows ; recipient ; debby ryan } } ; and { eq { hop { filter_eq { all_rows ; recipient ; debby ryan } ; year } ; 2010 } ; and { eq { hop { filter_eq { all_rows ; recipient ; debby ryan } ; award } ; hollywood teen tv awards } ; eq { hop { filter_eq { all_rows ; recipient ; debby ryan } ; result } ; nominated } } } }"
            ]
        },
        {
            "input": "select the row whose f bolt ( kgf ) record of all rows is maximum . the chambering record of this row is .50 bmg .",
            "output": [
                "eq { hop { argmax { all_rows ; f bolt ( kgf ) } ; chambering } ; .50 bmg }"
            ]
        },
        {
            "input": "select the rows whose won record is equal to 16 . there is only one such row in the table . the club record of this unqiue row is northampton saints ( sf ) .",
            "output": [
                "and { only { filter_eq { all_rows ; won ; 16 } } ; eq { hop { filter_eq { all_rows ; won ; 16 } ; club } ; northampton saints ( sf ) } }"
            ]
        },
        {
            "input": "select the rows whose sprints classification record fuzzily matches to no award . there is only one such row in the table . the stage record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; sprints classification ; no award } } ; eq { hop { filter_eq { all_rows ; sprints classification ; no award } ; stage } ; 1 } }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to ashley stott . there is only one such row in the table . the year record of this unqiue row is 2008 - 09 .",
            "output": [
                "and { only { filter_eq { all_rows ; leading scorer ; ashley stott } } ; eq { hop { filter_eq { all_rows ; leading scorer ; ashley stott } ; year } ; 2008 - 09 } }"
            ]
        },
        {
            "input": "select the rows whose population ( in 2008 ) record is less than 1000 . there is only one such row in the table . the suburb record of this unqiue row is o'malley .",
            "output": [
                "and { only { filter_less { all_rows ; population ( in 2008 ) ; 1000 } } ; eq { hop { filter_less { all_rows ; population ( in 2008 ) ; 1000 } ; suburb } ; o'malley } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the year record of this row is 1984 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; year } ; 1984 }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to adriano panatta . there is only one such row in the table . the championship record of this unqiue row is bologna , italy .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent in the final ; adriano panatta } } ; eq { hop { filter_eq { all_rows ; opponent in the final ; adriano panatta } ; championship } ; bologna , italy } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 16 june 1956 . the average of the crowd record of these rows is 24,570 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; date ; 16 june 1956 } ; crowd } ; 24,570 }"
            ]
        },
        {
            "input": "the sum of the feet record of all rows is 2968 .",
            "output": [
                "round_eq { sum { all_rows ; feet } ; 2968 }"
            ]
        },
        {
            "input": "select the rows whose trailing party record fuzzily matches to indian national congress . among these rows , select the rows whose party won record fuzzily matches to praja socialist party . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; trailing party ; indian national congress } ; party won ; praja socialist party } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose affiliation record fuzzily matches to private . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; affiliation ; private } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose bike ( 40 km ) record of all rows is 1st minimum . the athlete record of this row is olivier marceau .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; bike ( 40 km ) ; 1 } ; athlete } ; olivier marceau }"
            ]
        },
        {
            "input": "the average of the margin of victory record of all rows is 4 .",
            "output": [
                "round_eq { avg { all_rows ; margin of victory } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose pos record fuzzily matches to 2nd . there is only one such row in the table . the year record of this unqiue row is 2012 .",
            "output": [
                "and { only { filter_eq { all_rows ; pos ; 2nd } } ; eq { hop { filter_eq { all_rows ; pos ; 2nd } ; year } ; 2012 } }"
            ]
        },
        {
            "input": "select the rows whose navy record fuzzily matches to lithuanian naval force . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; navy ; lithuanian naval force } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose weight ( kg ) record is equal to 53 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; weight ( kg ) ; 53 } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to usa . the sum of the goals record of these rows is 74 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; nation ; usa } ; goals } ; 74 }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to a - 4 . take the quantity made record of this row . select the rows whose class record fuzzily matches to a - 3 . take the quantity made record of this row . the first record is equal to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; class ; a - 4 } ; quantity made } ; hop { filter_eq { all_rows ; class ; a - 3 } ; quantity made } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york giants . take the attendance record of this row . select the rows whose opponent record fuzzily matches to new york jets . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; new york giants } ; attendance } ; hop { filter_eq { all_rows ; opponent ; new york jets } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose opposing teams record fuzzily matches to new zealand . the sum of the against record of these rows is 18 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opposing teams ; new zealand } ; against } ; 18 }"
            ]
        },
        {
            "input": "select the row whose location / attendance record of all rows is 1st maximum . the opponent record of this row is new york liberty outdoor classic .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location / attendance ; 1 } ; opponent } ; new york liberty outdoor classic }"
            ]
        },
        {
            "input": "the maximum result record of all rows is kuwait won by 72 runs scorecard . the details record of the row with superlative result record is 2011 division seven .",
            "output": [
                "and { eq { max { all_rows ; result } ; kuwait won by 72 runs scorecard } ; eq { hop { argmax { all_rows ; result } ; details } ; 2011 division seven } }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to sports . there is only one such row in the table . the station record of this unqiue row is wing - am .",
            "output": [
                "and { only { filter_eq { all_rows ; format ; sports } } ; eq { hop { filter_eq { all_rows ; format ; sports } ; station } ; wing - am } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to new zealand . there is only one such row in the table . the company record of this unqiue row is enernoc new zealand limited .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; new zealand } } ; eq { hop { filter_eq { all_rows ; country ; new zealand } ; company } ; enernoc new zealand limited } }"
            ]
        },
        {
            "input": "for the elevation ( m ) records of all rows , most of them are greater than 2000 .",
            "output": [
                "most_greater { all_rows ; elevation ( m ) ; 2000 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the host record of this row is marty reid .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; host } ; marty reid }"
            ]
        },
        {
            "input": "select the rows whose dance record fuzzily matches to lyrical jazz . take the week record of this row . select the rows whose dance record fuzzily matches to jive . take the week record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; dance ; lyrical jazz } ; week } ; hop { filter_eq { all_rows ; dance ; jive } ; week } }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to favorite music group . there is only one such row in the table . the year record of this unqiue row is 2011 .",
            "output": [
                "and { only { filter_eq { all_rows ; category ; favorite music group } } ; eq { hop { filter_eq { all_rows ; category ; favorite music group } ; year } ; 2011 } }"
            ]
        },
        {
            "input": "select the rows whose championship record is greater than or equal to 5 . among these rows , select the rows whose fa cup record is equal to 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater_eq { all_rows ; championship ; 5 } ; fa cup ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose gp - gs record is equal to 14 . there is only one such row in the table . the season record of this unqiue row is 2009 .",
            "output": [
                "and { only { filter_eq { all_rows ; gp - gs ; 14 } } ; eq { hop { filter_eq { all_rows ; gp - gs ; 14 } ; season } ; 2009 } }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the team 1 record of this row is ogc nice ( d1 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; team 1 } ; ogc nice ( d1 ) }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to arrowtown school . take the decile record of this row . select the rows whose name record fuzzily matches to glenorchy school . take the decile record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; arrowtown school } ; decile } ; hop { filter_eq { all_rows ; name ; glenorchy school } ; decile } }"
            ]
        },
        {
            "input": "for the first elected records of all rows , most of them are less than 1920 .",
            "output": [
                "most_less { all_rows ; first elected ; 1920 }"
            ]
        },
        {
            "input": "for the nominated work records of all rows , most of them fuzzily match to 71 : into the fire .",
            "output": [
                "most_eq { all_rows ; nominated work ; 71 : into the fire }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to wachovia center . the sum of the location attendance record of these rows is 89767 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; location attendance ; wachovia center } ; location attendance } ; 89767 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the acc team record of this row is 4 duke .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; acc team } ; 4 duke }"
            ]
        },
        {
            "input": "select the row whose 2011 gdp ( ppp ) billions of usd record of all rows is maximum . the country record of this row is iran .",
            "output": [
                "eq { hop { argmax { all_rows ; 2011 gdp ( ppp ) billions of usd } ; country } ; iran }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to paris . take the population m ( luz ) record of this row . select the rows whose city record fuzzily matches to london . take the population m ( luz ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; city ; paris } ; population m ( luz ) } ; hop { filter_eq { all_rows ; city ; london } ; population m ( luz ) } }"
            ]
        },
        {
            "input": "select the row whose margin record of all rows is 2nd maximum . the club record of this row is geelong .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; margin ; 2 } ; club } ; geelong }"
            ]
        },
        {
            "input": "select the rows whose host location record fuzzily matches to plainview , tx . there is only one such row in the table . the year record of this unqiue row is 1952 .",
            "output": [
                "and { only { filter_eq { all_rows ; host location ; plainview , tx } } ; eq { hop { filter_eq { all_rows ; host location ; plainview , tx } ; year } ; 1952 } }"
            ]
        },
        {
            "input": "select the rows whose position record is greater than 0 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater { all_rows ; position ; 0 } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is maximum . the circuit record of this row is donington park .",
            "output": [
                "eq { hop { argmax { all_rows ; length } ; circuit } ; donington park }"
            ]
        },
        {
            "input": "select the rows whose frequency mhz record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; frequency mhz } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose no party preference record fuzzily matches to 22.6 % . there is only one such row in the table . the city record of this unqiue row is lemon grove .",
            "output": [
                "and { only { filter_eq { all_rows ; no party preference ; 22.6 % } } ; eq { hop { filter_eq { all_rows ; no party preference ; 22.6 % } ; city } ; lemon grove } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 25000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; crowd ; 25000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose year record is less than 1960 . among these rows , select the rows whose laps record is equal to 200 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; year ; 1960 } ; laps ; 200 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose events record is greater than 10 . among these rows , select the rows whose top - 10 record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; events ; 10 } ; top - 10 ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose caps record of all rows is maximum . the player record of this row is nick rimando .",
            "output": [
                "eq { hop { argmax { all_rows ; caps } ; player } ; nick rimando }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the candidate 's name record of this row is michael mackay .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; candidate 's name } ; michael mackay }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 14 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 14 }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is minimum . the rider record of this row is carlos checa .",
            "output": [
                "eq { hop { argmin { all_rows ; laps } ; rider } ; carlos checa }"
            ]
        },
        {
            "input": "select the rows whose polyunsaturated fat record fuzzily matches to 3 % . there is only one such row in the table . the total fat record of this unqiue row is 94 g .",
            "output": [
                "and { only { filter_eq { all_rows ; polyunsaturated fat ; 3 % } } ; eq { hop { filter_eq { all_rows ; polyunsaturated fat ; 3 % } ; total fat } ; 94 g } }"
            ]
        },
        {
            "input": "select the rows whose power record fuzzily matches to 20 kw . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; power ; 20 kw } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to fitzroy . take the home team score record of this row . select the rows whose home team record fuzzily matches to collingwood . take the home team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; home team score } ; hop { filter_eq { all_rows ; home team ; collingwood } ; home team score } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; w } } ; 8 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the date record of this row is friday , 1 august .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; date } ; friday , 1 august }"
            ]
        },
        {
            "input": "select the rows whose final position / round record does not match to runner-up . there is only one such row in the table . the competition record of this unqiue row is fa cup .",
            "output": [
                "and { only { filter_not_eq { all_rows ; final position / round ; runner-up } } ; eq { hop { filter_not_eq { all_rows ; final position / round ; runner-up } ; competition } ; fa cup } }"
            ]
        },
        {
            "input": "select the rows whose wheels record is equal to 5 . there is only one such row in the table . the class record of this unqiue row is 0 - 6 - 0t .",
            "output": [
                "and { only { filter_eq { all_rows ; wheels ; 5 } } ; eq { hop { filter_eq { all_rows ; wheels ; 5 } ; class } ; 0 - 6 - 0t } }"
            ]
        },
        {
            "input": "select the rows whose new adherents per year record is greater than 0 . for the growth rate records of these rows , most of them are greater than 1.00 % .",
            "output": [
                "most_greater { filter_greater { all_rows ; new adherents per year ; 0 } ; growth rate ; 1.00 % }"
            ]
        },
        {
            "input": "for the ends records of all rows , all of them are equal to 2008 .",
            "output": [
                "all_eq { all_rows ; ends ; 2008 }"
            ]
        },
        {
            "input": "select the rows whose division record fuzzily matches to on hiatus . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; division ; on hiatus } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is maximum . the driver record of this row is toni teittinen .",
            "output": [
                "eq { hop { argmax { all_rows ; year } ; driver } ; toni teittinen }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to jammu & kashmir . the maximum total capacity ( mw ) record of these rows is 330 . the power plant record of the row with superlative total capacity ( mw ) record is kishenganga .",
            "output": [
                "and { eq { max { filter_eq { all_rows ; state ; jammu & kashmir } ; total capacity ( mw ) } ; 330 } ; eq { hop { argmax { filter_eq { all_rows ; state ; jammu & kashmir } ; total capacity ( mw ) } ; power plant } ; kishenganga } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to skydome . for the high points records of these rows , most of them fuzzily match to damon stoudamire .",
            "output": [
                "most_eq { filter_eq { all_rows ; location attendance ; skydome } ; high points ; damon stoudamire }"
            ]
        },
        {
            "input": "the 1st maximum carpet record of all rows is 1 - 0 .",
            "output": [
                "eq { nth_max { all_rows ; carpet ; 1 } ; 1 - 0 }"
            ]
        },
        {
            "input": "for the chassis records of all rows , most of them fuzzily match to bmw sauber .",
            "output": [
                "most_eq { all_rows ; chassis ; bmw sauber }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to sania mirza . there is only one such row in the table . the championship record of this unqiue row is hyderabad , india .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent in the final ; sania mirza } } ; eq { hop { filter_eq { all_rows ; opponent in the final ; sania mirza } ; championship } ; hyderabad , india } }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to contested election . there is only one such row in the table . the vacator record of this unqiue row is jos\u00e3 m gallegos ( d ) .",
            "output": [
                "and { only { filter_eq { all_rows ; reason for change ; contested election } } ; eq { hop { filter_eq { all_rows ; reason for change ; contested election } ; vacator } ; jos\u00e3 m gallegos ( d ) } }"
            ]
        },
        {
            "input": "select the rows whose week record fuzzily matches to 8 . take the attendance record of this row . select the rows whose week record fuzzily matches to 10 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; week ; 8 } ; attendance } ; hop { filter_eq { all_rows ; week ; 10 } ; attendance } }"
            ]
        },
        {
            "input": "the average of the normal total record of all rows is 88 .",
            "output": [
                "round_eq { avg { all_rows ; normal total } ; 88 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is 2nd maximum . the - record of this row is 1 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; - } ; 1 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 4th minimum . the incumbent record of this row is robert aderholt .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 4 } ; incumbent } ; robert aderholt }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to win . the sum of the cowboys points record of these rows is 154 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; result ; win } ; cowboys points } ; 154 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to ga . among these rows , select the rows whose champion record fuzzily matches to emory . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location ; ga } ; champion ; emory } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is 3rd maximum . the opponent record of this row is arizona cardinals .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; result ; 3 } ; opponent } ; arizona cardinals }"
            ]
        },
        {
            "input": "select the row whose strike rate record of all rows is maximum . the player record of this row is paul harris .",
            "output": [
                "eq { hop { argmax { all_rows ; strike rate } ; player } ; paul harris }"
            ]
        },
        {
            "input": "select the rows whose individual wins record is equal to 4 . there is only one such row in the table . the nation record of this unqiue row is england .",
            "output": [
                "and { only { filter_eq { all_rows ; individual wins ; 4 } } ; eq { hop { filter_eq { all_rows ; individual wins ; 4 } ; nation } ; england } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired jacksonian hold . there is only one such row in the table . the incumbent record of this unqiue row is john floyd .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; retired jacksonian hold } } ; eq { hop { filter_eq { all_rows ; result ; retired jacksonian hold } ; incumbent } ; john floyd } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to east fife . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; east fife } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to mario chalmers . the average of the high assists record of these rows is 8.33 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; high assists ; mario chalmers } ; high assists } ; 8.33 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to world junior championships . take the position record of this row . select the rows whose competition record fuzzily matches to world championships . take the position record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; competition ; world junior championships } ; position } ; hop { filter_eq { all_rows ; competition ; world championships } ; position } }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 77,000 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 77,000 }"
            ]
        },
        {
            "input": "select the row whose votes record of all rows is maximum . the candidate 's name record of this row is scott simms .",
            "output": [
                "eq { hop { argmax { all_rows ; votes } ; candidate 's name } ; scott simms }"
            ]
        },
        {
            "input": "select the row whose originalairdate record of all rows is 2nd minimum . the title record of this row is a bright and shiny future .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; originalairdate ; 2 } ; title } ; a bright and shiny future }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 121000 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 121000 }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is maximum . the home team record of this row is carlton .",
            "output": [
                "eq { hop { argmax { all_rows ; home team score } ; home team } ; carlton }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd minimum . the date record of this row is april 23 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; attendance ; 3 } ; date } ; april 23 }"
            ]
        },
        {
            "input": "select the rows whose definition record fuzzily matches to civil parish . select the row whose population record of these rows is 1st maximum . the town record of this row is ripon .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; definition ; civil parish } ; population ; 1 } ; town } ; ripon }"
            ]
        },
        {
            "input": "select the rows whose top 5 record is not equal to 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; top 5 ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose college name record fuzzily matches to government thiruvarur medical college . take the estd record of this row . select the rows whose college name record fuzzily matches to government theni medical college . take the estd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; college name ; government thiruvarur medical college } ; estd } ; hop { filter_eq { all_rows ; college name ; government theni medical college } ; estd } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is minimum . the title record of this row is face / off .",
            "output": [
                "eq { hop { argmin { all_rows ; year } ; title } ; face / off }"
            ]
        },
        {
            "input": "select the rows whose record fuzzily matches to thailand . take the total freshwater withdrawal record of this row . select the rows whose record fuzzily matches to ecuador . take the total freshwater withdrawal record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ; thailand } ; total freshwater withdrawal } ; hop { filter_eq { all_rows ; ; ecuador } ; total freshwater withdrawal } }"
            ]
        },
        {
            "input": "select the rows whose call sign record fuzzily matches to w207af . take the fcc info record of this row . select the rows whose call sign record fuzzily matches to w211ae . take the fcc info record of this row . the first record fuzzily matches to the second record . the fcc info record of the first row is fcc . the fcc info record of the second row is fcc .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; call sign ; w207af } ; fcc info } ; hop { filter_eq { all_rows ; call sign ; w211ae } ; fcc info } } ; and { eq { hop { filter_eq { all_rows ; call sign ; w207af } ; fcc info } ; fcc } ; eq { hop { filter_eq { all_rows ; call sign ; w211ae } ; fcc info } ; fcc } } }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to bayam\u00f3n , puerto rico .",
            "output": [
                "most_eq { all_rows ; location ; bayam\u00f3n , puerto rico }"
            ]
        },
        {
            "input": "select the rows whose place record is less than or equal to 3 . the average of the score record of these rows is 68 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; place ; 3 } ; score } ; 68 }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( in millions ) record is equal to 3.69 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; us viewers ( in millions ) ; 3.69 } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 23 may 1936 .",
            "output": [
                "all_eq { all_rows ; date ; 23 may 1936 }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than 51,000 .",
            "output": [
                "most_greater { all_rows ; attendance ; 51,000 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to laura diaz . take the score record of this row . select the rows whose player record fuzzily matches to kristy mcpherson . take the score record of this row . the first record is less than the second record . the score record of the first row is 66 . the score record of the second row is 67 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } } ; and { eq { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; 66 } ; eq { hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } ; 67 } } }"
            ]
        },
        {
            "input": "select the row whose slalom record of all rows is 3rd maximum . the season record of this row is 1996 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; slalom ; 3 } ; season } ; 1996 }"
            ]
        },
        {
            "input": "the sum of the runs record of all rows is 3423 .",
            "output": [
                "round_eq { sum { all_rows ; runs } ; 3423 }"
            ]
        },
        {
            "input": "select the row whose popular votes record of all rows is maximum . the candidate record of this row is colleen bonniwell .",
            "output": [
                "eq { hop { argmax { all_rows ; popular votes } ; candidate } ; colleen bonniwell }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is 2nd maximum . the stadium record of this row is somerset park .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; capacity ; 2 } ; stadium } ; somerset park }"
            ]
        },
        {
            "input": "for the average score records of all rows , most of them are greater than 82 .",
            "output": [
                "most_greater { all_rows ; average score ; 82 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1999 . there is only one such row in the table . the version record of this unqiue row is album version .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 1999 } } ; eq { hop { filter_eq { all_rows ; year ; 1999 } ; version } ; album version } }"
            ]
        },
        {
            "input": "select the rows whose recipients and nominees record fuzzily matches to gillian anderson . among these rows , select the rows whose result record fuzzily matches to nominated . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; recipients and nominees ; gillian anderson } ; result ; nominated } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to mike hercus . for the tries records of these rows , most of them are equal to 0 .",
            "output": [
                "most_eq { filter_eq { all_rows ; player ; mike hercus } ; tries ; 0 }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is minimum . the film title used in nomination record of this row is the child of man .",
            "output": [
                "eq { hop { argmin { all_rows ; year ( ceremony ) } ; film title used in nomination } ; the child of man }"
            ]
        },
        {
            "input": "select the rows whose sixes record is equal to 8 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; sixes ; 8 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to london , uk . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; london , uk } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose wins record is less than 5 . there is only one such row in the table . the club record of this unqiue row is jfc olimps r\u012bga .",
            "output": [
                "and { only { filter_less { all_rows ; wins ; 5 } } ; eq { hop { filter_less { all_rows ; wins ; 5 } ; club } ; jfc olimps r\u012bga } }"
            ]
        },
        {
            "input": "the minimum original airdate record of all rows is november 02 .",
            "output": [
                "eq { min { all_rows ; original airdate } ; november 02 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 20000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; crowd ; 20000 } } ; 4 }"
            ]
        },
        {
            "input": "for the sat 29 may records of all rows , all of them fuzzily match to cancelled no time .",
            "output": [
                "all_eq { all_rows ; sat 29 may ; cancelled no time }"
            ]
        },
        {
            "input": "select the row whose height in ft record of all rows is maximum . the player record of this row is carroll , joe barry joe barry carroll .",
            "output": [
                "eq { hop { argmax { all_rows ; height in ft } ; player } ; carroll , joe barry joe barry carroll }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to townsville crocodiles . take the score record of this row . select the rows whose home team record fuzzily matches to cairns taipans . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; townsville crocodiles } ; score } ; hop { filter_eq { all_rows ; home team ; cairns taipans } ; score } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2005 . there is only one such row in the table . the group record of this unqiue row is method fest independent film festival .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 2005 } } ; eq { hop { filter_eq { all_rows ; year ; 2005 } ; group } ; method fest independent film festival } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to beirut . among these rows , select the rows whose result record does not match to win . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_not_eq { filter_eq { all_rows ; venue ; beirut } ; result ; win } } ; 2 }"
            ]
        },
        {
            "input": "for the address records of all rows , most of them fuzzily match to gilbert , az .",
            "output": [
                "most_eq { all_rows ; address ; gilbert , az }"
            ]
        },
        {
            "input": "the average of the games record of all rows is 26.8 .",
            "output": [
                "round_eq { avg { all_rows ; games } ; 26.8 }"
            ]
        },
        {
            "input": "select the row whose took office record of all rows is 2nd maximum . the name record of this row is lamberto zannier .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; took office ; 2 } ; name } ; lamberto zannier }"
            ]
        },
        {
            "input": "select the rows whose candidate record fuzzily matches to ron strynadka . take the votes record of this row . select the rows whose candidate record fuzzily matches to patricia cordner . take the votes record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; candidate ; ron strynadka } ; votes } ; hop { filter_eq { all_rows ; candidate ; patricia cordner } ; votes } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the district record of this row is texas 1 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; district } ; texas 1 }"
            ]
        },
        {
            "input": "select the row whose no of installments record of all rows is 2nd maximum . the book series record of this row is the hardy boys .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; no of installments ; 2 } ; book series } ; the hardy boys }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 4736 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 4736 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly match . there is only one such row in the table . the date record of this unqiue row is 23 march 1993 .",
            "output": [
                "and { only { filter_eq { all_rows ; competition ; friendly match } } ; eq { hop { filter_eq { all_rows ; competition ; friendly match } ; date } ; 23 march 1993 } }"
            ]
        },
        {
            "input": "for the platforms records of all rows , most of them are equal to 2 .",
            "output": [
                "most_eq { all_rows ; platforms ; 2 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the name record of this row is giuseppe meazza .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; name } ; giuseppe meazza }"
            ]
        },
        {
            "input": "select the rows whose week record is less than or equal to 5 . the average of the attendance record of these rows is 74,287 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; week ; 5 } ; attendance } ; 74,287 }"
            ]
        },
        {
            "input": "select the rows whose commissioned record fuzzily matches to 1930 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; commissioned ; 1930 } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is minimum . the winner record of this row is deep gold .",
            "output": [
                "eq { hop { argmin { all_rows ; year } ; winner } ; deep gold }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to february 2010 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; original air date ; february 2010 } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 86100 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 86100 }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 29 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 29 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is thomas j bliley , jr .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; thomas j bliley , jr }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to central . select the row whose population ( 2000 census ) record of these rows is 1st maximum . the village record of this row is mangilao .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; region ; central } ; population ( 2000 census ) ; 1 } ; village } ; mangilao }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 3 . among these rows , select the rows whose silver record is equal to 4 . there is only one such row in the table . the nation record of this unqiue row is china .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; gold ; 3 } ; silver ; 4 } } ; eq { hop { filter_eq { filter_eq { all_rows ; gold ; 3 } ; silver ; 4 } ; nation } ; china } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to japan . take the bronze record of this row . select the rows whose nation record fuzzily matches to indonesia . take the bronze record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; japan } ; bronze } ; hop { filter_eq { all_rows ; nation ; indonesia } ; bronze } }"
            ]
        },
        {
            "input": "for the 2008 status records of all rows , most of them fuzzily match to re - election .",
            "output": [
                "most_eq { all_rows ; 2008 status ; re - election }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd maximum . the incumbent record of this row is louis capozzoli .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; first elected ; 2 } ; incumbent } ; louis capozzoli }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to draw . there is only one such row in the table . the date record of this unqiue row is 8 september 2007 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; draw } } ; eq { hop { filter_eq { all_rows ; result ; draw } ; date } ; 8 september 2007 } }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than or equal to 10 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; total ; 10 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the laps record of all rows is 19 .",
            "output": [
                "round_eq { avg { all_rows ; laps } ; 19 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the player record of this row is dave allerdice .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; player } ; dave allerdice }"
            ]
        },
        {
            "input": "for the station records of all rows , most of them fuzzily match to kstc - tv .",
            "output": [
                "most_eq { all_rows ; station ; kstc - tv }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 10 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; matches ; 10 } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the votes record of all rows is 2176341 .",
            "output": [
                "round_eq { sum { all_rows ; votes } ; 2176341 }"
            ]
        },
        {
            "input": "select the rows whose tracks record fuzzily matches to that 's how the whole thing started . take the length record of this row . select the rows whose tracks record fuzzily matches to do what you do . take the length record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tracks ; that 's how the whole thing started } ; length } ; hop { filter_eq { all_rows ; tracks ; do what you do } ; length } }"
            ]
        },
        {
            "input": "select the rows whose club / team record fuzzily matches to brisbane broncos . take the established record of this row . select the rows whose club / team record fuzzily matches to brisbane bandits . take the established record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; club / team ; brisbane broncos } ; established } ; hop { filter_eq { all_rows ; club / team ; brisbane bandits } ; established } }"
            ]
        },
        {
            "input": "the 2nd maximum frequency record of all rows is 933 mhz .",
            "output": [
                "eq { nth_max { all_rows ; frequency ; 2 } ; 933 mhz }"
            ]
        },
        {
            "input": "select the row whose winning score record of all rows is 2nd maximum . the tournament record of this row is corning classic .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; winning score ; 2 } ; tournament } ; corning classic }"
            ]
        },
        {
            "input": "for the shot pct records of all rows , most of them are less than 80 % .",
            "output": [
                "most_less { all_rows ; shot pct ; 80 % }"
            ]
        },
        {
            "input": "for the venue records of all rows , most of them fuzzily match to india .",
            "output": [
                "most_eq { all_rows ; venue ; india }"
            ]
        },
        {
            "input": "select the row whose date of vacancy record of all rows is 1st minimum . the outgoing manager record of this row is j\u00fcrgen r\u00f6ber .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date of vacancy ; 1 } ; outgoing manager } ; j\u00fcrgen r\u00f6ber }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1 april 2006 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 1 april 2006 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to fedexforum . there is only one such row in the table . the date record of this unqiue row is march 7 .",
            "output": [
                "and { only { filter_eq { all_rows ; location attendance ; fedexforum } } ; eq { hop { filter_eq { all_rows ; location attendance ; fedexforum } ; date } ; march 7 } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to john senst . take the pick record of this row . select the rows whose player record fuzzily matches to paul brown . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; john senst } ; pick } ; hop { filter_eq { all_rows ; player ; paul brown } ; pick } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to chopra . take the started record of this row . select the rows whose name record fuzzily matches to routledge . take the started record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; chopra } ; started } ; hop { filter_eq { all_rows ; name ; routledge } ; started } }"
            ]
        },
        {
            "input": "for the established records of all rows , most of them are greater than or equal to 2000 .",
            "output": [
                "most_greater_eq { all_rows ; established ; 2000 }"
            ]
        },
        {
            "input": "select the row whose year left record of all rows is minimum . the school record of this row is south central ( union mills ) .",
            "output": [
                "eq { hop { argmin { all_rows ; year left } ; school } ; south central ( union mills ) }"
            ]
        },
        {
            "input": "the sum of the quantity record of all rows is 427 .",
            "output": [
                "round_eq { sum { all_rows ; quantity } ; 427 }"
            ]
        },
        {
            "input": "the average of the first elected record of all rows is 1996 .",
            "output": [
                "round_eq { avg { all_rows ; first elected } ; 1996 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; won } } ; 3 }"
            ]
        },
        {
            "input": "for the championship records of all rows , most of them fuzzily match to french open .",
            "output": [
                "most_eq { all_rows ; championship ; french open }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to powe . the sum of the high points record of these rows is 39 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; high points ; powe } ; high points } ; 39 }"
            ]
        },
        {
            "input": "select the rows whose round record is equal to 7 . the average of the overall record of these rows is 245 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; round ; 7 } ; overall } ; 245 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to bull shaw . take the time record of this row . select the rows whose opponent record fuzzily matches to robert burnell . take the time record of this row . the first record is greater than the second record . the time record of the first row is 20:00 . the time record of the second row is 1:23 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; opponent ; bull shaw } ; time } ; hop { filter_eq { all_rows ; opponent ; robert burnell } ; time } } ; and { eq { hop { filter_eq { all_rows ; opponent ; bull shaw } ; time } ; 20:00 } ; eq { hop { filter_eq { all_rows ; opponent ; robert burnell } ; time } ; 1:23 } } }"
            ]
        },
        {
            "input": "for the crowd records of all rows , all of them are greater than 10000 .",
            "output": [
                "all_greater { all_rows ; crowd ; 10000 }"
            ]
        },
        {
            "input": "for the northumberland senior cup records of all rows , most of them fuzzily match to newcastle united reserves .",
            "output": [
                "most_eq { all_rows ; northumberland senior cup ; newcastle united reserves }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to damon stoudamire . among these rows , select the rows whose team record fuzzily matches to miami . there is only one such row in the table . the date record of this unqiue row is april 5 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; high points ; damon stoudamire } ; team ; miami } } ; eq { hop { filter_eq { filter_eq { all_rows ; high points ; damon stoudamire } ; team ; miami } ; date } ; april 5 } }"
            ]
        },
        {
            "input": "the average of the react record of all rows is .19025 .",
            "output": [
                "round_eq { avg { all_rows ; react } ; .19025 }"
            ]
        },
        {
            "input": "select the rows whose date ( s ) conducted record fuzzily matches to 27 october 2010 . take the green record of this row . select the rows whose date ( s ) conducted record fuzzily matches to 24 november 2010 . take the green record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; date ( s ) conducted ; 27 october 2010 } ; green } ; hop { filter_eq { all_rows ; date ( s ) conducted ; 24 november 2010 } ; green } } ; -1 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to gandhi . take the gross record of this row . select the rows whose title record fuzzily matches to the dark crystal . take the gross record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; gandhi } ; gross } ; hop { filter_eq { all_rows ; title ; the dark crystal } ; gross } }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to v6 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; engine ; v6 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose passengers record of all rows is maximum . the city record of this row is atlanta , ga .",
            "output": [
                "eq { hop { argmax { all_rows ; passengers } ; city } ; atlanta , ga }"
            ]
        },
        {
            "input": "select the rows whose president record fuzzily matches to chris maclean . there is only one such row in the table . the year record of this unqiue row is 2013 .",
            "output": [
                "and { only { filter_eq { all_rows ; president ; chris maclean } } ; eq { hop { filter_eq { all_rows ; president ; chris maclean } ; year } ; 2013 } }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 15 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose season record is greater than 2005 . among these rows , select the rows whose teams record is equal to 16 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; season ; 2005 } ; teams ; 16 } } ; 4 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to 2 .",
            "output": [
                "most_eq { all_rows ; result ; 2 }"
            ]
        },
        {
            "input": "select the rows whose team ( s ) record fuzzily matches to dingman brothers racing . there is only one such row in the table . the year record of this unqiue row is 1987 .",
            "output": [
                "and { only { filter_eq { all_rows ; team ( s ) ; dingman brothers racing } } ; eq { hop { filter_eq { all_rows ; team ( s ) ; dingman brothers racing } ; year } ; 1987 } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is new york giants .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; new york giants }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 17944 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 17944 }"
            ]
        },
        {
            "input": "for the analogue power records of all rows , most of them are greater than 1000 kw .",
            "output": [
                "most_greater { all_rows ; analogue power ; 1000 kw }"
            ]
        },
        {
            "input": "select the rows whose release date record fuzzily matches to 2008 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; release date ; 2008 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose lost ( pp ) record is equal to 1 . there is only one such row in the table . the team ( equipo ) record of this unqiue row is tauro fc .",
            "output": [
                "and { only { filter_eq { all_rows ; lost ( pp ) ; 1 } } ; eq { hop { filter_eq { all_rows ; lost ( pp ) ; 1 } ; team ( equipo ) } ; tauro fc } }"
            ]
        },
        {
            "input": "the 2nd maximum revenue in usd record of all rows is 469.2 billion . the company record of the row with 2nd maximum revenue in usd record is walmart .",
            "output": [
                "and { eq { nth_max { all_rows ; revenue in usd ; 2 } ; 469.2 billion } ; eq { hop { nth_argmax { all_rows ; revenue in usd ; 2 } ; company } ; walmart } }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 7 . for the goals records of these rows , most of them are greater than 10 .",
            "output": [
                "most_greater { filter_less_eq { all_rows ; rank ; 7 } ; goals ; 10 }"
            ]
        },
        {
            "input": "select the rows whose province record fuzzily matches to santiago de cuba . take the density record of this row . select the rows whose province record fuzzily matches to pinar del r\u00edo . take the density record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; province ; santiago de cuba } ; density } ; hop { filter_eq { all_rows ; province ; pinar del r\u00edo } ; density } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to coby fleener . take the round record of this row . select the rows whose name record fuzzily matches to josh chapman . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; coby fleener } ; round } ; hop { filter_eq { all_rows ; name ; josh chapman } ; round } }"
            ]
        },
        {
            "input": "for the score records of all rows , all of them fuzzily match to 1 .",
            "output": [
                "all_eq { all_rows ; score ; 1 }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them are greater than 0 .",
            "output": [
                "most_greater { all_rows ; result ; 0 }"
            ]
        },
        {
            "input": "select the row whose ends won record of all rows is maximum . the skip ( club ) record of this row is chris gardner ( renfrew ) .",
            "output": [
                "eq { hop { argmax { all_rows ; ends won } ; skip ( club ) } ; chris gardner ( renfrew ) }"
            ]
        },
        {
            "input": "select the rows whose res record fuzzily matches to win . among these rows , select the rows whose event record fuzzily matches to extreme challenge . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; res ; win } ; event ; extreme challenge } } ; 2 }"
            ]
        },
        {
            "input": "for the rank records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; rank ; 10 }"
            ]
        },
        {
            "input": "select the rows whose high assists record does not match to devin harris . there is only one such row in the table . the date record of this unqiue row is january 8 .",
            "output": [
                "and { only { filter_not_eq { all_rows ; high assists ; devin harris } } ; eq { hop { filter_not_eq { all_rows ; high assists ; devin harris } ; date } ; january 8 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 11 october . take the result record of this row . select the rows whose date record fuzzily matches to 19 october . take the result record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 11 october } ; result } ; hop { filter_eq { all_rows ; date ; 19 october } ; result } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to learco guerra . the 2nd minimum date record of these rows is 18 may .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; winner ; learco guerra } ; date ; 2 } ; 18 may }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to draw . there is only one such row in the table . the res record of this unqiue row is draw .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; draw } } ; eq { hop { filter_eq { all_rows ; method ; draw } ; res } ; draw } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to rangers . for the score records of these rows , most of them are greater than 0 .",
            "output": [
                "most_greater { filter_eq { all_rows ; winner ; rangers } ; score ; 0 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is march 14 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; march 14 }"
            ]
        },
        {
            "input": "the sum of the quantity made record of all rows is 22 .",
            "output": [
                "round_eq { sum { all_rows ; quantity made } ; 22 }"
            ]
        },
        {
            "input": "select the row whose opening week nett gross record of all rows is maximum . the movie record of this row is chennai express .",
            "output": [
                "eq { hop { argmax { all_rows ; opening week nett gross } ; movie } ; chennai express }"
            ]
        },
        {
            "input": "select the rows whose total elected 2001 record is equal to 0 . there is only one such row in the table . the party record of this unqiue row is independents .",
            "output": [
                "and { only { filter_eq { all_rows ; total elected 2001 ; 0 } } ; eq { hop { filter_eq { all_rows ; total elected 2001 ; 0 } ; party } ; independents } }"
            ]
        },
        {
            "input": "for the tournament location records of all rows , most of them fuzzily match to beaver meadow golf course .",
            "output": [
                "most_eq { all_rows ; tournament location ; beaver meadow golf course }"
            ]
        },
        {
            "input": "select the row whose final round record of all rows is minimum . the city / state record of this row is texas .",
            "output": [
                "eq { hop { argmin { all_rows ; final round } ; city / state } ; texas }"
            ]
        },
        {
            "input": "the average of the weeks at 1 record of all rows is 4.8 .",
            "output": [
                "round_eq { avg { all_rows ; weeks at 1 } ; 4.8 }"
            ]
        },
        {
            "input": "select the rows whose department record is arbitrary . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_all { all_rows ; department } } ; 7 }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to imari sawyer .",
            "output": [
                "most_eq { all_rows ; high assists ; imari sawyer }"
            ]
        },
        {
            "input": "select the rows whose order record fuzzily matches to cardinal - bishop . there is only one such row in the table . the elector record of this unqiue row is francesco moricotti prignani .",
            "output": [
                "and { only { filter_eq { all_rows ; order ; cardinal - bishop } } ; eq { hop { filter_eq { all_rows ; order ; cardinal - bishop } ; elector } ; francesco moricotti prignani } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is maximum . the number & name record of this row is no 07005 .",
            "output": [
                "eq { hop { argmax { all_rows ; date } ; number & name } ; no 07005 }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 1 . there is only one such row in the table . the player record of this unqiue row is harold henning .",
            "output": [
                "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; player } ; harold henning } }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to university of dayton . take the founded record of this row . select the rows whose institution record fuzzily matches to university of memphis . take the founded record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; institution ; university of dayton } ; founded } ; hop { filter_eq { all_rows ; institution ; university of memphis } ; founded } }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is 0 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; 0 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2011 . take the tournaments played record of this row . select the rows whose year record fuzzily matches to 2007 . take the tournaments played record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2011 } ; tournaments played } ; hop { filter_eq { all_rows ; year ; 2007 } ; tournaments played } }"
            ]
        },
        {
            "input": "select the row whose goal difference record of all rows is 3rd maximum . the club record of this row is real oviedo .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goal difference ; 3 } ; club } ; real oviedo }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them fuzzily match to n / a .",
            "output": [
                "most_eq { all_rows ; time ; n / a }"
            ]
        },
        {
            "input": "select the rows whose score record is equal to 64 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; 64 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose qual 2 record of all rows is 2nd minimum . the name record of this row is paul tracy .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; qual 2 ; 2 } ; name } ; paul tracy }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . for the party records of these rows , all of them fuzzily match to democratic .",
            "output": [
                "all_eq { filter_eq { all_rows ; result ; re - elected } ; party ; democratic }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to james . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; player ; james } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose manager record fuzzily matches to bob didier . there is only one such row in the table . the year record of this unqiue row is 1977 .",
            "output": [
                "and { only { filter_eq { all_rows ; manager ; bob didier } } ; eq { hop { filter_eq { all_rows ; manager ; bob didier } ; year } ; 1977 } }"
            ]
        },
        {
            "input": "the sum of the aggregate record of all rows is 20-39 .",
            "output": [
                "round_eq { sum { all_rows ; aggregate } ; 20-39 }"
            ]
        },
        {
            "input": "for the year joined records of all rows , most of them are equal to 1971 .",
            "output": [
                "most_eq { all_rows ; year joined ; 1971 }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them are less than or equal to equal to or less than 15th .",
            "output": [
                "most_less_eq { all_rows ; position ; equal to or less than 15th }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the tournament record of this row is cincinnati , united states .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; tournament } ; cincinnati , united states }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to 7th . there is only one such row in the table . the player record of this unqiue row is jim norton .",
            "output": [
                "and { only { filter_eq { all_rows ; round ; 7th } } ; eq { hop { filter_eq { all_rows ; round ; 7th } ; player } ; jim norton } }"
            ]
        },
        {
            "input": "the sum of the won record of all rows is 128 .",
            "output": [
                "round_eq { sum { all_rows ; won } ; 128 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to stan berkowitz . there is only one such row in the table . the title record of this unqiue row is simple .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; stan berkowitz } } ; eq { hop { filter_eq { all_rows ; written by ; stan berkowitz } ; title } ; simple } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the performer record of this row is kiev connolly & the missing passengers .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; performer } ; kiev connolly & the missing passengers }"
            ]
        },
        {
            "input": "select the row whose quantity record of all rows is maximum . the make record of this row is gm new look .",
            "output": [
                "eq { hop { argmax { all_rows ; quantity } ; make } ; gm new look }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to over the deel . take the age record of this row . select the rows whose name record fuzzily matches to captain dibble . take the age record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; over the deel } ; age } ; hop { filter_eq { all_rows ; name ; captain dibble } ; age } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to sept 15 . take the attendance record of this row . select the rows whose date record fuzzily matches to nov 3 . take the attendance record of this row . the first record is greater than the second record . the opponent record of the first row is green bay packers . the opponent record of the second row is chicago bears .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; date ; sept 15 } ; attendance } ; hop { filter_eq { all_rows ; date ; nov 3 } ; attendance } } ; and { eq { hop { filter_eq { all_rows ; date ; sept 15 } ; opponent } ; green bay packers } ; eq { hop { filter_eq { all_rows ; date ; nov 3 } ; opponent } ; chicago bears } } }"
            ]
        },
        {
            "input": "select the row whose expected year of completion record of all rows is 1st maximum . the country record of this row is india .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; expected year of completion ; 1 } ; country } ; india }"
            ]
        },
        {
            "input": "for the website records of all rows , most of them fuzzily match to english .",
            "output": [
                "most_eq { all_rows ; website ; english }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to romania . take the bronze record of this row . select the rows whose nation record fuzzily matches to soviet union . take the bronze record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; romania } ; bronze } ; hop { filter_eq { all_rows ; nation ; soviet union } ; bronze } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is equal to 15000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; crowd ; 15000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose results record fuzzily matches to retired . there is only one such row in the table . the incumbent record of this unqiue row is ernest istook .",
            "output": [
                "and { only { filter_eq { all_rows ; results ; retired } } ; eq { hop { filter_eq { all_rows ; results ; retired } ; incumbent } ; ernest istook } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to rcd espa\u00f1ol . take the wins record of this row . select the rows whose club record fuzzily matches to pontevedra cf . take the wins record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; club ; rcd espa\u00f1ol } ; wins } ; hop { filter_eq { all_rows ; club ; pontevedra cf } ; wins } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to retirement . there is only one such row in the table . the name record of this unqiue row is machlas .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; retirement } } ; eq { hop { filter_eq { all_rows ; type ; retirement } ; name } ; machlas } }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to chuck jones . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; director ; chuck jones } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to edd kimber . take the premiere record of this row . select the rows whose winner record fuzzily matches to joanne wheatley . take the premiere record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; winner ; edd kimber } ; premiere } ; hop { filter_eq { all_rows ; winner ; joanne wheatley } ; premiere } }"
            ]
        },
        {
            "input": "for the environment records of all rows , most of them fuzzily match to open air .",
            "output": [
                "most_eq { all_rows ; environment ; open air }"
            ]
        },
        {
            "input": "select the rows whose school colors record fuzzily matches to orange & black . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; school colors ; orange & black } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose writer ( s ) record fuzzily matches to joseph kuhr . among these rows , select the rows whose us original airdate record fuzzily matches to march . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; writer ( s ) ; joseph kuhr } ; us original airdate ; march } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to indianapolis colts . the sum of the attendance record of these rows is 100807 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; indianapolis colts } ; attendance } ; 100807 }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( million ) record is greater than 1.7 . there is only one such row in the table . the no record of this unqiue row is 7 .",
            "output": [
                "and { only { filter_greater { all_rows ; us viewers ( million ) ; 1.7 } } ; eq { hop { filter_greater { all_rows ; us viewers ( million ) ; 1.7 } ; no } ; 7 } }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to roy : . the average of the leading scorer record of these rows is 25.75 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; leading scorer ; roy : } ; leading scorer } ; 25.75 }"
            ]
        },
        {
            "input": "the maximum hydropathy index record of all rows is 4.5 .",
            "output": [
                "eq { max { all_rows ; hydropathy index } ; 4.5 }"
            ]
        },
        {
            "input": "select the rows whose laps record is less than 5 . there is only one such row in the table . the year record of this unqiue row is 1953 .",
            "output": [
                "and { only { filter_less { all_rows ; laps ; 5 } } ; eq { hop { filter_less { all_rows ; laps ; 5 } ; year } ; 1953 } }"
            ]
        },
        {
            "input": "select the rows whose rider record fuzzily matches to steve plater . take the speed record of this row . select the rows whose rider record fuzzily matches to denver robb . take the speed record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; rider ; steve plater } ; speed } ; hop { filter_eq { all_rows ; rider ; denver robb } ; speed } }"
            ]
        },
        {
            "input": "for the days records of all rows , most of them are equal to 99 .",
            "output": [
                "most_eq { all_rows ; days ; 99 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . select the row whose week record of these rows is 3rd minimum . the opponent record of this row is pittsburgh steelers .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 3 } ; opponent } ; pittsburgh steelers }"
            ]
        },
        {
            "input": "select the row whose average ratings record of all rows is maximum . the romaji title record of this row is my \u2606 boss my \u2606 hero .",
            "output": [
                "eq { hop { argmax { all_rows ; average ratings } ; romaji title } ; my \u2606 boss my \u2606 hero }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to open . the sum of the cuts made record of these rows is 17 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; tournament ; open } ; cuts made } ; 17 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to august . the sum of the attendance record of these rows is 83969 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; august } ; attendance } ; 83969 }"
            ]
        },
        {
            "input": "select the row whose played record of all rows is maximum . the manager record of this row is juan carlos ch\u00e1vez .",
            "output": [
                "eq { hop { argmax { all_rows ; played } ; manager } ; juan carlos ch\u00e1vez }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is maximum . the nation record of this row is cuba .",
            "output": [
                "eq { hop { argmax { all_rows ; silver } ; nation } ; cuba }"
            ]
        },
        {
            "input": "for the wins records of all rows , all of them are equal to 0 .",
            "output": [
                "all_eq { all_rows ; wins ; 0 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york giants . the 1st minimum date record of these rows is september 17 , 1967 .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; opponent ; new york giants } ; date ; 1 } ; september 17 , 1967 }"
            ]
        },
        {
            "input": "select the rows whose previous conference record fuzzily matches to northern indiana . among these rows , select the rows whose mascot record fuzzily matches to roughriders . there is only one such row in the table . the school record of this unqiue row is east chicago roosevelt .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; previous conference ; northern indiana } ; mascot ; roughriders } } ; eq { hop { filter_eq { filter_eq { all_rows ; previous conference ; northern indiana } ; mascot ; roughriders } ; school } ; east chicago roosevelt } }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is maximum . the year record of this row is 1989 .",
            "output": [
                "eq { hop { argmax { all_rows ; laps } ; year } ; 1989 }"
            ]
        },
        {
            "input": "select the row whose extra points 1 point record of all rows is maximum . the player record of this row is bruce shorts .",
            "output": [
                "eq { hop { argmax { all_rows ; extra points 1 point } ; player } ; bruce shorts }"
            ]
        },
        {
            "input": "select the row whose % of votes khuzestan record of all rows is 2nd maximum . the candidates record of this row is akbar hashemi rafsanjani .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; % of votes khuzestan ; 2 } ; candidates } ; akbar hashemi rafsanjani }"
            ]
        },
        {
            "input": "the average of the elevation ( m ) record of all rows is 1952 .",
            "output": [
                "round_eq { avg { all_rows ; elevation ( m ) } ; 1952 }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to maserati . among these rows , select the rows whose laps record is less than 92 . there is only one such row in the table . the driver record of this unqiue row is luigi piotti .",
            "output": [
                "and { only { filter_less { filter_eq { all_rows ; constructor ; maserati } ; laps ; 92 } } ; eq { hop { filter_less { filter_eq { all_rows ; constructor ; maserati } ; laps ; 92 } ; driver } ; luigi piotti } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to roker park . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; roker park } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is greater than or equal to 23000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { filter_less { all_rows ; away team score ; 10 } ; crowd ; 23000 } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 434 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 434 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 476,381 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 476,381 }"
            ]
        },
        {
            "input": "select the row whose laps led record of all rows is maximum . the driver record of this row is dario franchitti .",
            "output": [
                "eq { hop { argmax { all_rows ; laps led } ; driver } ; dario franchitti }"
            ]
        },
        {
            "input": "for the linda mccartney records of all rows , most of them fuzzily match to keyboards .",
            "output": [
                "most_eq { all_rows ; linda mccartney ; keyboards }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; w } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to plain stage . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_eq { all_rows ; type ; plain stage } } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wins ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose gdp per capita ( us ) record of all rows is maximum . the member countries record of this row is luxembourg .",
            "output": [
                "eq { hop { argmax { all_rows ; gdp per capita ( us ) } ; member countries } ; luxembourg }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 1st maximum . the player record of this row is hal sutton .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 1 } ; player } ; hal sutton }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the location record of this row is hallandale beach , florida .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; location } ; hallandale beach , florida }"
            ]
        },
        {
            "input": "select the rows whose born record fuzzily matches to 30 november 1874 . take the left house record of this row . select the rows whose born record fuzzily matches to 16 january 1905 . take the left house record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; born ; 30 november 1874 } ; left house } ; hop { filter_eq { all_rows ; born ; 16 january 1905 } ; left house } }"
            ]
        },
        {
            "input": "for the start datum records of all rows , most of them fuzzily match to wgs84 .",
            "output": [
                "most_eq { all_rows ; start datum ; wgs84 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 2 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose note record fuzzily matches to reportedly still active as of 2009 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; note ; reportedly still active as of 2009 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose extra record fuzzily matches to short race . among these rows , select the rows whose result record is less than 10th . there is only one such row in the table . the year record of this unqiue row is 2002 . the venue record of this unqiue row is dublin , ireland .",
            "output": [
                "and { only { filter_less { filter_eq { all_rows ; extra ; short race } ; result ; 10th } } ; and { eq { hop { filter_less { filter_eq { all_rows ; extra ; short race } ; result ; 10th } ; year } ; 2002 } ; eq { hop { filter_less { filter_eq { all_rows ; extra ; short race } ; result ; 10th } ; venue } ; dublin , ireland } } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the opponent record of this row is denver broncos .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; opponent } ; denver broncos }"
            ]
        },
        {
            "input": "select the row whose money requested record of all rows is maximum . the entrepreneur ( s ) record of this row is emmie matthews & ed stevens .",
            "output": [
                "eq { hop { argmax { all_rows ; money requested } ; entrepreneur ( s ) } ; emmie matthews & ed stevens }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 1.4 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 1.4 }"
            ]
        },
        {
            "input": "the average of the year left record of all rows is 1977 .",
            "output": [
                "round_eq { avg { all_rows ; year left } ; 1977 }"
            ]
        },
        {
            "input": "select the row whose elevation ( m ) record of all rows is 2nd maximum . the peak record of this row is sn\u00f8hetta .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; elevation ( m ) ; 2 } ; peak } ; sn\u00f8hetta }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to argentina . there is only one such row in the table . the name record of this unqiue row is lionel messi .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; argentina } } ; eq { hop { filter_eq { all_rows ; nationality ; argentina } ; name } ; lionel messi } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to weytech . there is only one such row in the table . the driver record of this unqiue row is donny crevels .",
            "output": [
                "and { only { filter_eq { all_rows ; team ; weytech } } ; eq { hop { filter_eq { all_rows ; team ; weytech } ; driver } ; donny crevels } }"
            ]
        },
        {
            "input": "select the row whose vote percentage record of all rows is maximum . the player record of this row is hamit alt\u0131ntop .",
            "output": [
                "eq { hop { argmax { all_rows ; vote percentage } ; player } ; hamit alt\u0131ntop }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to western oval . the maximum crowd record of these rows is 7000 .",
            "output": [
                "eq { max { filter_eq { all_rows ; venue ; western oval } ; crowd } ; 7000 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to netherlands . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tournament ; netherlands } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 17 june 1939 .",
            "output": [
                "all_eq { all_rows ; date ; 17 june 1939 }"
            ]
        },
        {
            "input": "select the rows whose country record does not match to united states . there is only one such row in the table . the player record of this unqiue row is david graham .",
            "output": [
                "and { only { filter_not_eq { all_rows ; country ; united states } } ; eq { hop { filter_not_eq { all_rows ; country ; united states } ; player } ; david graham } }"
            ]
        },
        {
            "input": "select the rows whose brand record fuzzily matches to gmc . take the year founded record of this row . select the rows whose brand record fuzzily matches to chevrolet . take the year founded record of this row . the second record is 10 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; brand ; gmc } ; year founded } ; hop { filter_eq { all_rows ; brand ; chevrolet } ; year founded } } ; -10 }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to medley . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; event ; medley } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose segment d record fuzzily matches to wigs . there is only one such row in the table . the episode record of this unqiue row is 71 .",
            "output": [
                "and { only { filter_eq { all_rows ; segment d ; wigs } } ; eq { hop { filter_eq { all_rows ; segment d ; wigs } ; episode } ; 71 } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 48.8 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 48.8 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to january . among these rows , select the rows whose crowd record is less than 4000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; date ; january } ; crowd ; 4000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to m . among these rows , select the rows whose pick record is greater than 27 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; position ; m } ; pick ; 27 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 4th minimum . the player record of this row is geoff ogilvy .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; score ; 4 } ; player } ; geoff ogilvy }"
            ]
        },
        {
            "input": "select the rows whose transfer window record fuzzily matches to winter . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; transfer window ; winter } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to lee wallard . take the date record of this row . select the rows whose winning driver record fuzzily matches to alberto ascari . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; winning driver ; lee wallard } ; date } ; hop { filter_eq { all_rows ; winning driver ; alberto ascari } ; date } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd maximum . the year record of this row is 1991 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 2 } ; year } ; 1991 }"
            ]
        },
        {
            "input": "select the rows whose date record is greater than december 16 . the maximum high points record of these rows is zach randolph ( 34 ) .",
            "output": [
                "eq { max { filter_greater { all_rows ; date ; december 16 } ; high points } ; zach randolph ( 34 ) }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to maynard evans hs . there is only one such row in the table . the player record of this unqiue row is darryl dawkins .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; maynard evans hs } } ; eq { hop { filter_eq { all_rows ; school / club team ; maynard evans hs } ; player } ; darryl dawkins } }"
            ]
        },
        {
            "input": "for the engine records of all rows , all of them fuzzily match to motori moderni tipo 615 - 90 1.5 v6 t .",
            "output": [
                "all_eq { all_rows ; engine ; motori moderni tipo 615 - 90 1.5 v6 t }"
            ]
        },
        {
            "input": "the sum of the money record of all rows is 4769400 .",
            "output": [
                "round_eq { sum { all_rows ; money } ; 4769400 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to trail blazers . select the row whose date record of these rows is 2nd minimum . the score record of this row is w 99 - 95 ( ot ) .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; team ; trail blazers } ; date ; 2 } ; score } ; w 99 - 95 ( ot ) }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 14 . among these rows , select the rows whose crowd record is greater than 9999 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; home team score ; 14 } ; crowd ; 9999 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the visitor record of this row is anaheim .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; visitor } ; anaheim }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the score record of this row is 3 - 2 .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; score } ; 3 - 2 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to melbourne cricket ground . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; melbourne cricket ground } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose affiliation record fuzzily matches to pbs . there is only one such row in the table . the call sign record of this unqiue row is kawe .",
            "output": [
                "and { only { filter_eq { all_rows ; affiliation ; pbs } } ; eq { hop { filter_eq { all_rows ; affiliation ; pbs } ; call sign } ; kawe } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to nathan deal . take the elected record of this row . select the rows whose incumbent record fuzzily matches to charlie norwood . take the elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; nathan deal } ; elected } ; hop { filter_eq { all_rows ; incumbent ; charlie norwood } ; elected } }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to runner-up . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; outcome ; runner-up } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to 7th . there is only one such row in the table . the competition record of this unqiue row is 58th national sports festival of japan .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; 7th } } ; eq { hop { filter_eq { all_rows ; position ; 7th } ; competition } ; 58th national sports festival of japan } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to canada . for the round records of these rows , most of them are equal to 1 .",
            "output": [
                "most_eq { filter_eq { all_rows ; location ; canada } ; round ; 1 }"
            ]
        },
        {
            "input": "select the row whose market value ( usd million ) record of all rows is maximum . the name record of this row is microsoft .",
            "output": [
                "eq { hop { argmax { all_rows ; market value ( usd million ) } ; name } ; microsoft }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; united states } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose apps record is equal to 12 . there is only one such row in the table . the season record of this unqiue row is 2004 - 2005 .",
            "output": [
                "and { only { filter_eq { all_rows ; apps ; 12 } } ; eq { hop { filter_eq { all_rows ; apps ; 12 } ; season } ; 2004 - 2005 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . there is only one such row in the table . the region record of this unqiue row is japan .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; december } } ; eq { hop { filter_eq { all_rows ; date ; december } ; region } ; japan } }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2005 - 06 . take the wins record of this row . select the rows whose season record fuzzily matches to 2006 - 07 . take the wins record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2005 - 06 } ; wins } ; hop { filter_eq { all_rows ; season ; 2006 - 07 } ; wins } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the performer 4 record of this row is ryan stiles .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; performer 4 } ; ryan stiles }"
            ]
        },
        {
            "input": "the sum of the canadian chapters record of all rows is 48 .",
            "output": [
                "round_eq { sum { all_rows ; canadian chapters } ; 48 }"
            ]
        },
        {
            "input": "select the rows whose 2011 1h record is greater than 20 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; 2011 1h ; 20 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to st john 's . there is only one such row in the table . the player record of this unqiue row is mark jackson .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; st john 's } } ; eq { hop { filter_eq { all_rows ; school / club team ; st john 's } ; player } ; mark jackson } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is minimum . the pick record of this row is 5 .",
            "output": [
                "eq { hop { argmin { all_rows ; pick } ; pick } ; 5 }"
            ]
        },
        {
            "input": "the average of the sales ( billion ) record of all rows is 155.6 .",
            "output": [
                "round_eq { avg { all_rows ; sales ( billion ) } ; 155.6 }"
            ]
        },
        {
            "input": "select the rows whose to par record fuzzily matches to +1 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; to par ; +1 } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose lost record of all rows is 2nd maximum . the club record of this row is fleur de lys rfc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; lost ; 2 } ; club } ; fleur de lys rfc }"
            ]
        },
        {
            "input": "select the rows whose home team score record is less than 10.0 . among these rows , select the rows whose crowd record is greater than 16000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_less { all_rows ; home team score ; 10.0 } ; crowd ; 16000 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the prize record of all rows is 3137419 .",
            "output": [
                "round_eq { avg { all_rows ; prize } ; 3137419 }"
            ]
        },
        {
            "input": "the average of the top - 5 record of all rows is .5 .",
            "output": [
                "round_eq { avg { all_rows ; top - 5 } ; .5 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 21273 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 21273 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jordon flodell . take the round record of this row . select the rows whose player record fuzzily matches to todd fedoruk . take the round record of this row . the second record is 1 larger than the first record . the round record of the first row is 6 . the round record of the second row is 7 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; player ; jordon flodell } ; round } ; hop { filter_eq { all_rows ; player ; todd fedoruk } ; round } } ; -1 } ; and { eq { hop { filter_eq { all_rows ; player ; jordon flodell } ; round } ; 6 } ; eq { hop { filter_eq { all_rows ; player ; todd fedoruk } ; round } ; 7 } } }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is 2nd minimum . the athlete record of this row is marshevet hooker .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; rank ; 2 } ; athlete } ; marshevet hooker }"
            ]
        },
        {
            "input": "select the rows whose transfer window record fuzzily matches to summer . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; transfer window ; summer } } ; 9 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 16119 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 16119 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to mexico . take the total record of this row . select the rows whose nation record fuzzily matches to canada . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; mexico } ; total } ; hop { filter_eq { all_rows ; nation ; canada } ; total } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to florida . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; date ; florida } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to klavdija bojarskikh . take the winter olympics record of this row . select the rows whose winner record fuzzily matches to toini gustafsson . take the winter olympics record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; winner ; klavdija bojarskikh } ; winter olympics } ; hop { filter_eq { all_rows ; winner ; toini gustafsson } ; winter olympics } }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to alfa romeo . there is only one such row in the table . the year record of this unqiue row is 1983 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; alfa romeo } } ; eq { hop { filter_eq { all_rows ; chassis ; alfa romeo } ; year } ; 1983 } }"
            ]
        },
        {
            "input": "select the rows whose proposed record fuzzily matches to 1989 . among these rows , select the rows whose proposed record fuzzily matches to 1989 . there is only one such row in the table . the county record of this unqiue row is new london .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; proposed ; 1989 } ; proposed ; 1989 } } ; eq { hop { filter_eq { filter_eq { all_rows ; proposed ; 1989 } ; proposed ; 1989 } ; county } ; new london } }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to memphis , us . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; championship ; memphis , us } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1986 . take the position record of this row . select the rows whose year record fuzzily matches to 1987 . take the position record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; year ; 1986 } ; position } ; hop { filter_eq { all_rows ; year ; 1987 } ; position } }"
            ]
        },
        {
            "input": "select the rows whose county record is arbitrary . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_all { all_rows ; county } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose soap opera record fuzzily matches to as the world turns . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; soap opera ; as the world turns } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the total bits record of all rows is 320 .",
            "output": [
                "round_eq { sum { all_rows ; total bits } ; 320 }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the player record of this row is steven gerrard .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; player } ; steven gerrard }"
            ]
        },
        {
            "input": "select the row whose height ( f ) record of all rows is 2nd minimum . the player record of this row is yuval naimi .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; height ( f ) ; 2 } ; player } ; yuval naimi }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to hawaii . there is only one such row in the table . the player record of this unqiue row is darrick branch .",
            "output": [
                "and { only { filter_eq { all_rows ; school ; hawaii } } ; eq { hop { filter_eq { all_rows ; school ; hawaii } ; player } ; darrick branch } }"
            ]
        },
        {
            "input": "the 4th minimum week record of all rows is 4 . the opponent record of the row with 4th minimum week record is chicago bears .",
            "output": [
                "and { eq { nth_min { all_rows ; week ; 4 } ; 4 } ; eq { hop { nth_argmin { all_rows ; week ; 4 } ; opponent } ; chicago bears } }"
            ]
        },
        {
            "input": "the average of the effective exhaust velocity ( m / s ) record of all rows is 33869 .",
            "output": [
                "round_eq { avg { all_rows ; effective exhaust velocity ( m / s ) } ; 33869 }"
            ]
        },
        {
            "input": "select the row whose isolation record of all rows is maximum . the mountain peak record of this row is mount rainier .",
            "output": [
                "eq { hop { argmax { all_rows ; isolation } ; mountain peak } ; mount rainier }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 30000 . there is only one such row in the table . the home team record of this unqiue row is melbourne .",
            "output": [
                "and { only { filter_greater { all_rows ; crowd ; 30000 } } ; eq { hop { filter_greater { all_rows ; crowd ; 30000 } ; home team } ; melbourne } }"
            ]
        },
        {
            "input": "the average of the bodyweight record of all rows is 100.55 .",
            "output": [
                "round_eq { avg { all_rows ; bodyweight } ; 100.55 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to new york . take the score record of this row . select the rows whose team record fuzzily matches to detroit . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; new york } ; score } ; hop { filter_eq { all_rows ; team ; detroit } ; score } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to australia . there is only one such row in the table . the player record of this unqiue row is david graham .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; australia } } ; eq { hop { filter_eq { all_rows ; country ; australia } ; player } ; david graham } }"
            ]
        },
        {
            "input": "select the rows whose model number record fuzzily matches to 800 . the average of the frequency record of these rows is 800 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; model number ; 800 } ; frequency } ; 800 }"
            ]
        },
        {
            "input": "the average of the draws record of all rows is 9.38 .",
            "output": [
                "round_eq { avg { all_rows ; draws } ; 9.38 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to september 8 , 1986 . take the attendance record of this row . select the rows whose date record fuzzily matches to december 21 , 1986 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; september 8 , 1986 } ; attendance } ; hop { filter_eq { all_rows ; date ; december 21 , 1986 } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose race record fuzzily matches to italian grand prix . take the date record of this row . select the rows whose race record fuzzily matches to european grand prix . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; race ; italian grand prix } ; date } ; hop { filter_eq { all_rows ; race ; european grand prix } ; date } }"
            ]
        },
        {
            "input": "select the rows whose west lancashire record is equal to 4 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; west lancashire ; 4 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose meas num record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; meas num } } ; 11 }"
            ]
        },
        {
            "input": "for the original air date records of all rows , all of them fuzzily match to 2013 .",
            "output": [
                "all_eq { all_rows ; original air date ; 2013 }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to display only . there is only one such row in the table . the number record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_eq { all_rows ; status ; display only } } ; eq { hop { filter_eq { all_rows ; status ; display only } ; number } ; 1 } }"
            ]
        },
        {
            "input": "select the rows whose afc cup record is not equal to 0 . there is only one such row in the table . the member association record of this unqiue row is uzbekistan .",
            "output": [
                "and { only { filter_not_eq { all_rows ; afc cup ; 0 } } ; eq { hop { filter_not_eq { all_rows ; afc cup ; 0 } ; member association } ; uzbekistan } }"
            ]
        },
        {
            "input": "select the rows whose 1st ship delivery date record fuzzily matches to 1942 . for the location ( city , state ) records of these rows , most of them fuzzily match to california .",
            "output": [
                "most_eq { filter_eq { all_rows ; 1st ship delivery date ; 1942 } ; location ( city , state ) ; california }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to great britain ( gbr ) . take the silver record of this row . select the rows whose nation record fuzzily matches to hungary ( hun ) . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; great britain ( gbr ) } ; silver } ; hop { filter_eq { all_rows ; nation ; hungary ( hun ) } ; silver } }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to ottawa . among these rows , select the rows whose decision record fuzzily matches to hasek . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; home ; ottawa } ; decision ; hasek } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is united states ( usa ) .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; united states ( usa ) }"
            ]
        },
        {
            "input": "select the row whose to par record of all rows is minimum . the player record of this row is bill rogers .",
            "output": [
                "eq { hop { argmin { all_rows ; to par } ; player } ; bill rogers }"
            ]
        },
        {
            "input": "select the row whose earnings record of all rows is maximum . the player record of this row is lee trevino .",
            "output": [
                "eq { hop { argmax { all_rows ; earnings } ; player } ; lee trevino }"
            ]
        },
        {
            "input": "select the row whose total offense record of all rows is maximum . the player record of this row is devin gardner .",
            "output": [
                "eq { hop { argmax { all_rows ; total offense } ; player } ; devin gardner }"
            ]
        },
        {
            "input": "select the row whose margin of victory record of all rows is maximum . the champion record of this row is jiyai shin .",
            "output": [
                "eq { hop { argmax { all_rows ; margin of victory } ; champion } ; jiyai shin }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to brunswick street oval . there is only one such row in the table . the home team record of this unqiue row is fitzroy .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; brunswick street oval } } ; eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team } ; fitzroy } }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; party ; democratic } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose react record of all rows is 5th minimum . the name record of this row is christopher williams .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; react ; 5 } ; name } ; christopher williams }"
            ]
        },
        {
            "input": "select the row whose win % record of all rows is maximum . the played record of this row is 16 . the wins record of this row is 9 .",
            "output": [
                "and { eq { hop { argmax { all_rows ; win % } ; played } ; 16 } ; eq { hop { argmax { all_rows ; win % } ; wins } ; 9 } }"
            ]
        },
        {
            "input": "select the rows whose finish record is equal to 10 . there is only one such row in the table . the year record of this unqiue row is 1972 .",
            "output": [
                "and { only { filter_eq { all_rows ; finish ; 10 } } ; eq { hop { filter_eq { all_rows ; finish ; 10 } ; year } ; 1972 } }"
            ]
        },
        {
            "input": "the maximum results 2004 record of all rows is 28.90 % . the party record of the row with superlative results 2004 record is ps .",
            "output": [
                "and { eq { max { all_rows ; results 2004 } ; 28.90 % } ; eq { hop { argmax { all_rows ; results 2004 } ; party } ; ps } }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to biu chun rangers . take the position in 2012 - 13 record of this row . select the rows whose club record fuzzily matches to citizen . take the position in 2012 - 13 record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; club ; biu chun rangers } ; position in 2012 - 13 } ; hop { filter_eq { all_rows ; club ; citizen } ; position in 2012 - 13 } }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 10000 . for the date records of these rows , most of them fuzzily match to 21 - 11 - 1973 .",
            "output": [
                "most_eq { filter_greater { all_rows ; attendance ; 10000 } ; date ; 21 - 11 - 1973 }"
            ]
        },
        {
            "input": "select the rows whose size ( steps ) record is greater than 4 . the average of the size ( cents ) record of these rows is 510 .",
            "output": [
                "round_eq { avg { filter_greater { all_rows ; size ( steps ) ; 4 } ; size ( cents ) } ; 510 }"
            ]
        },
        {
            "input": "select the row whose money spent , 2q record of all rows is maximum . the candidate record of this row is barack obama .",
            "output": [
                "eq { hop { argmax { all_rows ; money spent , 2q } ; candidate } ; barack obama }"
            ]
        },
        {
            "input": "select the rows whose batsmen record fuzzily matches to iain anderson alan hill . take the runs record of this row . select the rows whose batsmen record fuzzily matches to chris taylor ant botha . take the runs record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; batsmen ; iain anderson alan hill } ; runs } ; hop { filter_eq { all_rows ; batsmen ; chris taylor ant botha } ; runs } }"
            ]
        },
        {
            "input": "select the row whose date of successors formal installation record of all rows is 2nd maximum . the successor record of this row is james chesnut , jr ( d ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date of successors formal installation ; 2 } ; successor } ; james chesnut , jr ( d ) }"
            ]
        },
        {
            "input": "select the row whose founding date record of all rows is 2nd minimum . the organization record of this row is delta epsilon sigma iota .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; founding date ; 2 } ; organization } ; delta epsilon sigma iota }"
            ]
        },
        {
            "input": "select the row whose total finals record of all rows is maximum . the clubs record of this row is primeiro de agosto .",
            "output": [
                "eq { hop { argmax { all_rows ; total finals } ; clubs } ; primeiro de agosto }"
            ]
        },
        {
            "input": "select the rows whose lost record is equal to 2 . there is only one such row in the table . the club record of this unqiue row is tumble rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; lost ; 2 } } ; eq { hop { filter_eq { all_rows ; lost ; 2 } ; club } ; tumble rfc } }"
            ]
        },
        {
            "input": "select the row whose entered service record of all rows is 3rd minimum . the locomotive record of this row is bl28 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; entered service ; 3 } ; locomotive } ; bl28 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to marion . the average of the enrollment record of these rows is 3,633 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; county ; marion } ; enrollment } ; 3,633 }"
            ]
        },
        {
            "input": "for the directed by records of all rows , all of them fuzzily match to noam pitlik .",
            "output": [
                "all_eq { all_rows ; directed by ; noam pitlik }"
            ]
        },
        {
            "input": "select the rows whose runner - up record fuzzily matches to fabrizio baldassari . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; runner - up ; fabrizio baldassari } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose license record fuzzily matches to closed source . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_eq { all_rows ; license ; closed source } } ; 12 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 14000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 14000 }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is maximum . the nation record of this row is england .",
            "output": [
                "eq { hop { argmax { all_rows ; silver } ; nation } ; england }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; new york } } ; 2 }"
            ]
        },
        {
            "input": "for the category records of all rows , all of them fuzzily match to short film 2005 prix uip .",
            "output": [
                "all_eq { all_rows ; category ; short film 2005 prix uip }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to oklahoma . there is only one such row in the table . the name record of this unqiue row is dominique franks .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; oklahoma } } ; eq { hop { filter_eq { all_rows ; college ; oklahoma } ; name } ; dominique franks } }"
            ]
        },
        {
            "input": "select the row whose high points record of all rows is maximum . the date record of this row is june 20 .",
            "output": [
                "eq { hop { argmax { all_rows ; high points } ; date } ; june 20 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to bosnia and herzegovina . there is only one such row in the table . the previous team record of this unqiue row is golden state warriors .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; bosnia and herzegovina } } ; eq { hop { filter_eq { all_rows ; nationality ; bosnia and herzegovina } ; previous team } ; golden state warriors } }"
            ]
        },
        {
            "input": "for the first leg records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; first leg ; 0 }"
            ]
        },
        {
            "input": "the average of the floor record of all rows is 60.589 .",
            "output": [
                "round_eq { avg { all_rows ; floor } ; 60.589 }"
            ]
        },
        {
            "input": "select the rows whose home team record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; home team } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose county name record fuzzily matches to warrick . take the population ( 2010 ) ( rank ) record of this row . select the rows whose county name record fuzzily matches to perry . take the population ( 2010 ) ( rank ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; county name ; warrick } ; population ( 2010 ) ( rank ) } ; hop { filter_eq { all_rows ; county name ; perry } ; population ( 2010 ) ( rank ) } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to detroit red wings . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; detroit red wings } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponents in the final record fuzzily matches to jeremy bates kevin curren . there is only one such row in the table . the date record of this unqiue row is 1990 . the tournament record of this unqiue row is london / queen 's club , england .",
            "output": [
                "and { only { filter_eq { all_rows ; opponents in the final ; jeremy bates kevin curren } } ; and { eq { hop { filter_eq { all_rows ; opponents in the final ; jeremy bates kevin curren } ; date } ; 1990 } ; eq { hop { filter_eq { all_rows ; opponents in the final ; jeremy bates kevin curren } ; tournament } ; london / queen 's club , england } } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the country record of this row is france .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; country } ; france }"
            ]
        },
        {
            "input": "select the rows whose goals record is less than 55 . there is only one such row in the table . the player record of this unqiue row is eus\u00e9bio .",
            "output": [
                "and { only { filter_less { all_rows ; goals ; 55 } } ; eq { hop { filter_less { all_rows ; goals ; 55 } ; player } ; eus\u00e9bio } }"
            ]
        },
        {
            "input": "select the rows whose origin record fuzzily matches to us . the average of the chart no record of these rows is 70 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; origin ; us } ; chart no } ; 70 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to ireland . among these rows , select the rows whose goals record is greater than 60 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; nationality ; ireland } ; goals ; 60 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose shirt sponsor record fuzzily matches to n / a . there is only one such row in the table . the team record of this unqiue row is dubai .",
            "output": [
                "and { only { filter_eq { all_rows ; shirt sponsor ; n / a } } ; eq { hop { filter_eq { all_rows ; shirt sponsor ; n / a } ; team } ; dubai } }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to august . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; original air date ; august } } ; 3 }"
            ]
        },
        {
            "input": "the average of the caps record of all rows is 10.4 .",
            "output": [
                "round_eq { avg { all_rows ; caps } ; 10.4 }"
            ]
        },
        {
            "input": "select the rows whose runs record is less than 3000 . there is only one such row in the table . the record of this unqiue row is chris pringle .",
            "output": [
                "and { only { filter_less { all_rows ; runs ; 3000 } } ; eq { hop { filter_less { all_rows ; runs ; 3000 } ; } ; chris pringle } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 18000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 18000 }"
            ]
        },
        {
            "input": "select the rows whose no in series record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; no in series } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to owen valley . take the enrollment record of this row . select the rows whose school record fuzzily matches to sullivan . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; school ; owen valley } ; enrollment } ; hop { filter_eq { all_rows ; school ; sullivan } ; enrollment } }"
            ]
        },
        {
            "input": "for the height records of all rows , most of them fuzzily match to 6 - .",
            "output": [
                "most_eq { all_rows ; height ; 6 - }"
            ]
        },
        {
            "input": "select the rows whose settlement record fuzzily matches to gardinovci . take the population ( 2011 ) record of this row . select the rows whose settlement record fuzzily matches to lok . take the population ( 2011 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; settlement ; gardinovci } ; population ( 2011 ) } ; hop { filter_eq { all_rows ; settlement ; lok } ; population ( 2011 ) } }"
            ]
        },
        {
            "input": "for the innings records of all rows , most of them are greater than 20 .",
            "output": [
                "most_greater { all_rows ; innings ; 20 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to june . for the score records of these rows , most of them fuzzily match to 2-0 .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; june } ; score ; 2-0 }"
            ]
        },
        {
            "input": "select the rows whose writer ( s ) record fuzzily matches to ira ungerleider . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; writer ( s ) ; ira ungerleider } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to africa . among these rows , select the rows whose joined opec record is equal to 1969 . there is only one such row in the table . the country record of this unqiue row is algeria .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; region ; africa } ; joined opec ; 1969 } } ; eq { hop { filter_eq { filter_eq { all_rows ; region ; africa } ; joined opec ; 1969 } ; country } ; algeria } }"
            ]
        },
        {
            "input": "select the row whose car record of all rows is 2nd maximum . the player record of this row is john ritcher .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; car ; 2 } ; player } ; john ritcher }"
            ]
        },
        {
            "input": "select the row whose speed ( km / h ) record of all rows is 2nd maximum . the vehicle record of this row is lockheed sr - 71 blackbird .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; speed ( km / h ) ; 2 } ; vehicle } ; lockheed sr - 71 blackbird }"
            ]
        },
        {
            "input": "the average of the goals for record of all rows is 38.5 .",
            "output": [
                "round_eq { avg { all_rows ; goals for } ; 38.5 }"
            ]
        },
        {
            "input": "select the rows whose seasons at this level record fuzzily matches to 27 seasons . for the settlements records of these rows , most of them fuzzily match to lisbon .",
            "output": [
                "most_eq { filter_eq { all_rows ; seasons at this level ; 27 seasons } ; settlements ; lisbon }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2009 . take the finish position record of this row . select the rows whose year record fuzzily matches to 2008 . take the finish position record of this row . the first record is less than the second record . the finish position record of the first row is 31st . the finish position record of the second row is 33rd .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; hop { filter_eq { all_rows ; year ; 2008 } ; finish position } } ; and { eq { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; 31st } ; eq { hop { filter_eq { all_rows ; year ; 2008 } ; finish position } ; 33rd } } }"
            ]
        },
        {
            "input": "the maximum distance record of all rows is 2500 m .",
            "output": [
                "eq { max { all_rows ; distance } ; 2500 m }"
            ]
        },
        {
            "input": "select the rows whose won record is equal to 15 . there is only one such row in the table . the club record of this unqiue row is heidelberger rk .",
            "output": [
                "and { only { filter_eq { all_rows ; won ; 15 } } ; eq { hop { filter_eq { all_rows ; won ; 15 } ; club } ; heidelberger rk } }"
            ]
        },
        {
            "input": "select the rows whose episode record is equal to 77 . there is only one such row in the table . the netflix record of this unqiue row is s03e25 .",
            "output": [
                "and { only { filter_eq { all_rows ; episode ; 77 } } ; eq { hop { filter_eq { all_rows ; episode ; 77 } ; netflix } ; s03e25 } }"
            ]
        },
        {
            "input": "select the rows whose homeport ( as of july 2013 ) record fuzzily matches to portsmouth . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; homeport ( as of july 2013 ) ; portsmouth } } ; 6 }"
            ]
        },
        {
            "input": "the average of the winnings record of all rows is 884656 .",
            "output": [
                "round_eq { avg { all_rows ; winnings } ; 884656 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to jamaica . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; jamaica } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the nation record of this row is netherlands .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; netherlands }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to best supporting actress . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; category ; best supporting actress } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to win . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; win } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to 5-0 . there is only one such row in the table . the winner record of this unqiue row is kiveton park .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; 5-0 } } ; eq { hop { filter_eq { all_rows ; result ; 5-0 } ; winner } ; kiveton park } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . among these rows , select the rows whose attendance record is greater than 50000 . there is only one such row in the table . the date record of this unqiue row is 10 / 20 / 1928 .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; result ; w } ; attendance ; 50000 } } ; eq { hop { filter_greater { filter_eq { all_rows ; result ; w } ; attendance ; 50000 } ; date } ; 10 / 20 / 1928 } }"
            ]
        },
        {
            "input": "select the rows whose unit record fuzzily matches to colorado . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; unit ; colorado } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to tami whitlinger - jones . select the row whose date record of these rows is minimum . the surface record of this row is carpet .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; partner ; tami whitlinger - jones } ; date } ; surface } ; carpet }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to eclair . take the launched record of this row . select the rows whose name record fuzzily matches to derwent . take the launched record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; eclair } ; launched } ; hop { filter_eq { all_rows ; name ; derwent } ; launched } }"
            ]
        },
        {
            "input": "for the builder records of all rows , most of them fuzzily match to andrew barclay & co .",
            "output": [
                "most_eq { all_rows ; builder ; andrew barclay & co }"
            ]
        },
        {
            "input": "select the rows whose 2nd member record fuzzily matches to dugald mccoig cowan . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2nd member ; dugald mccoig cowan } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to athens , greece . take the year record of this row . select the rows whose venue record fuzzily matches to helsinki , finland . take the year record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; venue ; athens , greece } ; year } ; hop { filter_eq { all_rows ; venue ; helsinki , finland } ; year } } ; -1 }"
            ]
        },
        {
            "input": "the maximum enrollment record of all rows is 580 .",
            "output": [
                "eq { max { all_rows ; enrollment } ; 580 }"
            ]
        },
        {
            "input": "select the rows whose area served record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; area served } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose episode summary record fuzzily matches to richard is made into boyfriend material . take the premier date record of this row . select the rows whose episode summary record fuzzily matches to lawryn is made into a bmx biker . take the premier date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; episode summary ; richard is made into boyfriend material } ; premier date } ; hop { filter_eq { all_rows ; episode summary ; lawryn is made into a bmx biker } ; premier date } }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the date record of this row is may 9 .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; date } ; may 9 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2006 . select the row whose date record of these rows is minimum . the opponent record of this row is josipa bek .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; date ; 2006 } ; date } ; opponent } ; josipa bek }"
            ]
        },
        {
            "input": "select the row whose year erected record of all rows is minimum . the statue record of this row is general jos\u00e9 gervasio artigas .",
            "output": [
                "eq { hop { argmin { all_rows ; year erected } ; statue } ; general jos\u00e9 gervasio artigas }"
            ]
        },
        {
            "input": "select the rows whose programming record fuzzily matches to main wybe programming . take the channel record of this row . select the rows whose programming record fuzzily matches to russia today . take the channel record of this row . the second record is 0.3 larger than the first record . the channel record of the first row is 35.1 . the channel record of the second row is 35.4 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; programming ; main wybe programming } ; channel } ; hop { filter_eq { all_rows ; programming ; russia today } ; channel } } ; -0.3 } ; and { eq { hop { filter_eq { all_rows ; programming ; main wybe programming } ; channel } ; 35.1 } ; eq { hop { filter_eq { all_rows ; programming ; russia today } ; channel } ; 35.4 } } }"
            ]
        },
        {
            "input": "for the kit supplier records of all rows , most of them fuzzily match to adidas .",
            "output": [
                "most_eq { all_rows ; kit supplier ; adidas }"
            ]
        },
        {
            "input": "select the row whose size record of all rows is maximum . the school record of this row is mitchell .",
            "output": [
                "eq { hop { argmax { all_rows ; size } ; school } ; mitchell }"
            ]
        },
        {
            "input": "select the rows whose division record record fuzzily matches to 4-2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; division record ; 4-2 } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the wins record of all rows is 11 .",
            "output": [
                "round_eq { sum { all_rows ; wins } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than or equal to 1994 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; founded ; 1994 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jon gott . take the pick record of this row . select the rows whose player record fuzzily matches to paul woldu . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; jon gott } ; pick } ; hop { filter_eq { all_rows ; player ; paul woldu } ; pick } }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is maximum . the player record of this row is david hemp .",
            "output": [
                "eq { hop { argmax { all_rows ; average } ; player } ; david hemp }"
            ]
        },
        {
            "input": "select the rows whose bronze record is equal to 8 . there is only one such row in the table . the rank record of this unqiue row is 3 .",
            "output": [
                "and { only { filter_eq { all_rows ; bronze ; 8 } } ; eq { hop { filter_eq { all_rows ; bronze ; 8 } ; rank } ; 3 } }"
            ]
        },
        {
            "input": "select the rows whose starts record is greater than 30 . among these rows , select the rows whose losses record is equal to 17 . there is only one such row in the table . the name record of this unqiue row is brady quinn .",
            "output": [
                "and { only { filter_eq { filter_greater { all_rows ; starts ; 30 } ; losses ; 17 } } ; eq { hop { filter_eq { filter_greater { all_rows ; starts ; 30 } ; losses ; 17 } ; name } ; brady quinn } }"
            ]
        },
        {
            "input": "select the rows whose frequency record fuzzily matches to 450 mhz . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; frequency ; 450 mhz } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 200 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; laps ; 200 } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose goal difference record of all rows is 3rd maximum . the club record of this row is real murcia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; goal difference ; 3 } ; club } ; real murcia }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to mogadore . take the tenure record of this row . select the rows whose school record fuzzily matches to field . take the tenure record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; school ; mogadore } ; tenure } ; hop { filter_eq { all_rows ; school ; field } ; tenure } }"
            ]
        },
        {
            "input": "for the goals records of all rows , most of them are greater than 1000 .",
            "output": [
                "most_greater { all_rows ; goals ; 1000 }"
            ]
        },
        {
            "input": "the sum of the total g record of all rows is 44 .",
            "output": [
                "round_eq { sum { all_rows ; total g } ; 44 }"
            ]
        },
        {
            "input": "select the rows whose commissioned or completed record fuzzily matches to 1864 . for the laid down records of these rows , all of them are equal to 1862 .",
            "output": [
                "all_eq { filter_eq { all_rows ; commissioned or completed ; 1864 } ; laid down ; 1862 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is united states .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; united states }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to gary springer . take the pick record of this row . select the rows whose player record fuzzily matches to rich congo . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; gary springer } ; pick } ; hop { filter_eq { all_rows ; player ; rich congo } ; pick } }"
            ]
        },
        {
            "input": "for the result records of all rows , most of them fuzzily match to advanced .",
            "output": [
                "most_eq { all_rows ; result ; advanced }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to aj foyt . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; aj foyt } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose earnings record of all rows is 2nd maximum . the year record of this row is 2009 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; earnings ; 2 } ; year } ; 2009 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 15.0 . among these rows , select the rows whose crowd record is less than 10000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; home team score ; 15.0 } ; crowd ; 10000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose mccain % record fuzzily matches to 75.7 % . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; mccain % ; 75.7 % } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 1st maximum . the date record of this row is december 27 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 1 } ; date } ; december 27 }"
            ]
        },
        {
            "input": "select the rows whose away team score record is greater than 10 . among these rows , select the rows whose crowd record is greater than 12000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; away team score ; 10 } ; crowd ; 12000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to joe bradford . take the years record of this row . select the rows whose name record fuzzily matches to trevor francis . take the years record of this row . the second record is 50 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; joe bradford } ; years } ; hop { filter_eq { all_rows ; name ; trevor francis } ; years } } ; -50 years }"
            ]
        },
        {
            "input": "the average of the mult record of all rows is 3.90 90 repeating .",
            "output": [
                "round_eq { avg { all_rows ; mult } ; 3.90 90 repeating }"
            ]
        },
        {
            "input": "for the performer 1 records of all rows , all of them fuzzily match to john sessions .",
            "output": [
                "all_eq { all_rows ; performer 1 ; john sessions }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to australia ( aus ) . take the silver record of this row . select the rows whose nation record fuzzily matches to japan ( jpn ) . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; australia ( aus ) } ; silver } ; hop { filter_eq { all_rows ; nation ; japan ( jpn ) } ; silver } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 0 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 0 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . select the row whose began record of these rows is minimum . the tournament record of this row is cincinnati masters .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; country ; united states } ; began } ; tournament } ; cincinnati masters }"
            ]
        },
        {
            "input": "select the rows whose top 10 record is equal to 4 . there is only one such row in the table . the year record of this unqiue row is 1995 .",
            "output": [
                "and { only { filter_eq { all_rows ; top 10 ; 4 } } ; eq { hop { filter_eq { all_rows ; top 10 ; 4 } ; year } ; 1995 } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to indianapolis colts . select the row whose date record of these rows is minimum . the game site record of this row is hoosier dome .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; opponent ; indianapolis colts } ; date } ; game site } ; hoosier dome }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is maximum . the home team record of this row is richmond . the away team score record of this row is 14.10 ( 94 ) .",
            "output": [
                "and { eq { hop { argmax { all_rows ; home team score } ; home team } ; richmond } ; eq { hop { argmax { all_rows ; home team score } ; away team score } ; 14.10 ( 94 ) } }"
            ]
        },
        {
            "input": "select the row whose us viewers ( millions ) record of all rows is maximum . the no in season record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( millions ) } ; no in season } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose notes record fuzzily matches to enid . take the built record of this row . select the rows whose notes record fuzzily matches to snowdon . take the built record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; notes ; enid } ; built } ; hop { filter_eq { all_rows ; notes ; snowdon } ; built } }"
            ]
        },
        {
            "input": "for the laps records of all rows , most of them are equal to 47 .",
            "output": [
                "most_eq { all_rows ; laps ; 47 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 15000 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 15000 }"
            ]
        },
        {
            "input": "select the rows whose last title record fuzzily matches to ( none ) . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; last title ; ( none ) } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is cuba .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; cuba }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . there is only one such row in the table . the incumbent record of this unqiue row is clarence f lea .",
            "output": [
                "and { only { filter_eq { all_rows ; party ; democratic } } ; eq { hop { filter_eq { all_rows ; party ; democratic } ; incumbent } ; clarence f lea } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to lost re - election republican gain . there is only one such row in the table . the incumbent record of this unqiue row is dixie gilmer .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; lost re - election republican gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re - election republican gain } ; incumbent } ; dixie gilmer } }"
            ]
        },
        {
            "input": "for the home captain records of all rows , all of them fuzzily match to alec stewart .",
            "output": [
                "all_eq { all_rows ; home captain ; alec stewart }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to lietuvos rytas vilnius . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; lietuvos rytas vilnius } } ; 2 }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are less than 30000 .",
            "output": [
                "most_less { all_rows ; crowd ; 30000 }"
            ]
        },
        {
            "input": "for the formats records of all rows , most of them fuzzily match to vinyl .",
            "output": [
                "most_eq { all_rows ; formats ; vinyl }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the average of the to par record of these rows is 3.4 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; country ; united states } ; to par } ; 3.4 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 17 august 1940 .",
            "output": [
                "all_eq { all_rows ; date ; 17 august 1940 }"
            ]
        },
        {
            "input": "for the duration records of all rows , most of them are less than 5:00 .",
            "output": [
                "most_less { all_rows ; duration ; 5:00 }"
            ]
        },
        {
            "input": "select the rows whose total record is equal to 5 . there is only one such row in the table . the nation record of this unqiue row is germany .",
            "output": [
                "and { only { filter_eq { all_rows ; total ; 5 } } ; eq { hop { filter_eq { all_rows ; total ; 5 } ; nation } ; germany } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired to run for us senate . there is only one such row in the table . the incumbent record of this unqiue row is roman c pucinski .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; retired to run for us senate } } ; eq { hop { filter_eq { all_rows ; result ; retired to run for us senate } ; incumbent } ; roman c pucinski } }"
            ]
        },
        {
            "input": "select the rows whose silver record is equal to 3 . there is only one such row in the table . the nation record of this unqiue row is soviet union .",
            "output": [
                "and { only { filter_eq { all_rows ; silver ; 3 } } ; eq { hop { filter_eq { all_rows ; silver ; 3 } ; nation } ; soviet union } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1993 . take the laps record of this row . select the rows whose year record fuzzily matches to 1997 . take the laps record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1993 } ; laps } ; hop { filter_eq { all_rows ; year ; 1997 } ; laps } }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to brian kelly . take the title record of this row . select the rows whose director record fuzzily matches to andrew lincoln . take the title record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; director ; brian kelly } ; title } ; hop { filter_eq { all_rows ; director ; andrew lincoln } ; title } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to championship test . among these rows , select the rows whose horse record fuzzily matches to donna dm . there is only one such row in the table . the athlete record of this unqiue row is sabine peters .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; event ; championship test } ; horse ; donna dm } } ; eq { hop { filter_eq { filter_eq { all_rows ; event ; championship test } ; horse ; donna dm } ; athlete } ; sabine peters } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to commonwealth games . take the result record of this row . select the rows whose tournament record fuzzily matches to summer olympics . take the result record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result } ; hop { filter_eq { all_rows ; tournament ; summer olympics } ; result } }"
            ]
        },
        {
            "input": "select the rows whose top 5 record is equal to 1 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; top 5 ; 1 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to france . there is only one such row in the table . the player record of this unqiue row is thomas levet .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; france } } ; eq { hop { filter_eq { all_rows ; country ; france } ; player } ; thomas levet } }"
            ]
        },
        {
            "input": "select the row whose seats in hamburgische b\u00fcrgerschaft record of all rows is maximum . the ideology record of this row is social democracy .",
            "output": [
                "eq { hop { argmax { all_rows ; seats in hamburgische b\u00fcrgerschaft } ; ideology } ; social democracy }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to queens park rangers . take the date of vacancy record of this row . select the rows whose team record fuzzily matches to norwich city . take the date of vacancy record of this row . the second record is 7 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; team ; queens park rangers } ; date of vacancy } ; hop { filter_eq { all_rows ; team ; norwich city } ; date of vacancy } } ; -7 days }"
            ]
        },
        {
            "input": "select the rows whose date of birth record is greater than or equal to 1 january 1971 . for the batting style records of these rows , most of them fuzzily match to right hand bat .",
            "output": [
                "most_eq { filter_greater_eq { all_rows ; date of birth ; 1 january 1971 } ; batting style ; right hand bat }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them do not match to friendly .",
            "output": [
                "most_not_eq { all_rows ; competition ; friendly }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to c . there is only one such row in the table . the player record of this unqiue row is jeff winchester .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; c } } ; eq { hop { filter_eq { all_rows ; position ; c } ; player } ; jeff winchester } }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 2030 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 2030 }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to leo . take the year joined record of this row . select the rows whose school record fuzzily matches to south adams . take the year joined record of this row . the second record is 20 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; school ; leo } ; year joined } ; hop { filter_eq { all_rows ; school ; south adams } ; year joined } } ; -20 years }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to juventus . take the against record of this row . select the rows whose team record fuzzily matches to corinthians . take the against record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; juventus } ; against } ; hop { filter_eq { all_rows ; team ; corinthians } ; against } }"
            ]
        },
        {
            "input": "select the row whose date ( from ) record of all rows is minimum . the name of system record of this row is edmonton radial railway .",
            "output": [
                "eq { hop { argmin { all_rows ; date ( from ) } ; name of system } ; edmonton radial railway }"
            ]
        },
        {
            "input": "select the row whose ties played record of all rows is 2nd maximum . the player record of this row is dovydas \u0161akinis .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; ties played ; 2 } ; player } ; dovydas \u0161akinis }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to brazil . there is only one such row in the table . the race name record of this unqiue row is tour de santa catarina .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; brazil } } ; eq { hop { filter_eq { all_rows ; location ; brazil } ; race name } ; tour de santa catarina } }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is maximum . the home team record of this row is essendon .",
            "output": [
                "eq { hop { argmax { all_rows ; home team score } ; home team } ; essendon }"
            ]
        },
        {
            "input": "select the rows whose bowling style record fuzzily matches to left arm slow chinaman . there is only one such row in the table . the player record of this unqiue row is michael bevan .",
            "output": [
                "and { only { filter_eq { all_rows ; bowling style ; left arm slow chinaman } } ; eq { hop { filter_eq { all_rows ; bowling style ; left arm slow chinaman } ; player } ; michael bevan } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . there is only one such row in the table . the label record of this unqiue row is astralwerks .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; united states } } ; eq { hop { filter_eq { all_rows ; country ; united states } ; label } ; astralwerks } }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 16 august .",
            "output": [
                "all_eq { all_rows ; date ; 16 august }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 1st maximum . the title record of this row is i 'll take you .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; title } ; i 'll take you }"
            ]
        },
        {
            "input": "select the rows whose decision record fuzzily matches to labarbera . among these rows , select the rows whose attendance record is greater than 18000 . there is only one such row in the table . the date record of this unqiue row is november 3 .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; decision ; labarbera } ; attendance ; 18000 } } ; eq { hop { filter_greater { filter_eq { all_rows ; decision ; labarbera } ; attendance ; 18000 } ; date } ; november 3 } }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is maximum . the player record of this row is mile sterjovski .",
            "output": [
                "eq { hop { argmax { all_rows ; goals } ; player } ; mile sterjovski }"
            ]
        },
        {
            "input": "select the rows whose industry record fuzzily matches to banking . the average of the profits ( billion ) record of these rows is 13.9 billion .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; industry ; banking } ; profits ( billion ) } ; 13.9 billion }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to winners . for the surface records of these rows , most of them fuzzily match to clay .",
            "output": [
                "most_eq { filter_eq { all_rows ; outcome ; winners } ; surface ; clay }"
            ]
        },
        {
            "input": "select the rows whose first air date record fuzzily matches to july 4 , 1987 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first air date ; july 4 , 1987 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose host record fuzzily matches to united arab emirates . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; host ; united arab emirates } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose score record is equal to 70 . for the country records of these rows , most of them fuzzily match to united states .",
            "output": [
                "most_eq { filter_eq { all_rows ; score ; 70 } ; country ; united states }"
            ]
        },
        {
            "input": "select the rows whose record record fuzzily matches to postponed ( rain ) . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; record ; postponed ( rain ) } } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 2900 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 2900 }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 1st maximum . the team record of this row is cleveland .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 1 } ; team } ; cleveland }"
            ]
        },
        {
            "input": "for the percentage of possible points records of all rows , most of them are less than 70 .",
            "output": [
                "most_less { all_rows ; percentage of possible points ; 70 }"
            ]
        },
        {
            "input": "select the row whose matches record of all rows is maximum . the name record of this row is glenn ferguson .",
            "output": [
                "eq { hop { argmax { all_rows ; matches } ; name } ; glenn ferguson }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is saturday , april 10 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; saturday , april 10 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to eureka . take the mccain % record of this row . select the rows whose county record fuzzily matches to mineral . take the mccain % record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; county ; eureka } ; mccain % } ; hop { filter_eq { all_rows ; county ; mineral } ; mccain % } }"
            ]
        },
        {
            "input": "select the rows whose time / retired record fuzzily matches to engine . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time / retired ; engine } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to neema barnette . there is only one such row in the table . the original air date record of this unqiue row is october 21 , 2003 .",
            "output": [
                "and { only { filter_eq { all_rows ; director ; neema barnette } } ; eq { hop { filter_eq { all_rows ; director ; neema barnette } ; original air date } ; october 21 , 2003 } }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to busch stadium .",
            "output": [
                "most_eq { all_rows ; location ; busch stadium }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 21486 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 21486 }"
            ]
        },
        {
            "input": "for the attendance records of all rows , most of them are greater than 50,000 .",
            "output": [
                "most_greater { all_rows ; attendance ; 50,000 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the race record of this row is manikato stakes .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; race } ; manikato stakes }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is 2.125 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; 2.125 }"
            ]
        },
        {
            "input": "select the rows whose institution record is arbitrary . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_all { all_rows ; institution } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired . there is only one such row in the table . the incumbent record of this unqiue row is edward boland .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; retired } } ; eq { hop { filter_eq { all_rows ; result ; retired } ; incumbent } ; edward boland } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 2nd maximum . the player record of this row is obed cetoute .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 2 } ; player } ; obed cetoute }"
            ]
        },
        {
            "input": "select the rows whose metropolitan area record fuzzily matches to new york , new york . take the since record of this row . select the rows whose metropolitan area record fuzzily matches to chicago , illinois . take the since record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; metropolitan area ; new york , new york } ; since } ; hop { filter_eq { all_rows ; metropolitan area ; chicago , illinois } ; since } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to fl . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; position ; fl } }"
            ]
        },
        {
            "input": "select the row whose production num record of all rows is 3rd maximum . the title record of this row is red - headed baby .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; production num ; 3 } ; title } ; red - headed baby }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 19893 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 19893 }"
            ]
        },
        {
            "input": "select the rows whose college / junior / club team record fuzzily matches to wchl . among these rows , select the rows whose round record is greater than 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; college / junior / club team ; wchl } ; round ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to punt road oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to glenferrie oval . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; punt road oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; glenferrie oval } ; crowd } }"
            ]
        },
        {
            "input": "select the rows whose film title used in nomination record fuzzily matches to back in trouble . take the year ( ceremony ) record of this row . select the rows whose film title used in nomination record fuzzily matches to renart the fox . take the year ( ceremony ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; film title used in nomination ; back in trouble } ; year ( ceremony ) } ; hop { filter_eq { all_rows ; film title used in nomination ; renart the fox } ; year ( ceremony ) } }"
            ]
        },
        {
            "input": "the maximum money record of all rows is 2400 . the player record of the row with superlative money record is jimmy demaret .",
            "output": [
                "and { eq { max { all_rows ; money } ; 2400 } ; eq { hop { argmax { all_rows ; money } ; player } ; jimmy demaret } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to billabong pro . for the winner records of these rows , most of them fuzzily match to usa .",
            "output": [
                "most_eq { filter_eq { all_rows ; event ; billabong pro } ; winner ; usa }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to mark kerr . take the round record of this row . select the rows whose opponent record fuzzily matches to dieusel berto . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; mark kerr } ; round } ; hop { filter_eq { all_rows ; opponent ; dieusel berto } ; round } }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to spurs . among these rows , select the rows whose leading scorer record fuzzily matches to tim duncan . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; home ; spurs } ; leading scorer ; tim duncan } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is 1st maximum . the player record of this row is max waller .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; average ; 1 } ; player } ; max waller }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is algeria .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; algeria }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to 1st . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; 1st } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to north british . take the date record of this row . select the rows whose builder record fuzzily matches to g & swr kilmarnock . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; builder ; north british } ; date } ; hop { filter_eq { all_rows ; builder ; g & swr kilmarnock } ; date } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 17392 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 17392 }"
            ]
        },
        {
            "input": "select the rows whose nation record is arbitrary . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_all { all_rows ; nation } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose erp w record fuzzily matches to 10 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; erp w ; 10 } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the athlete record of this row is andrea fuentes & gemma mengual .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; athlete } ; andrea fuentes & gemma mengual }"
            ]
        },
        {
            "input": "select the rows whose sport record fuzzily matches to m cross country . take the date record of this row . select the rows whose sport record fuzzily matches to w gymnastics . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; sport ; m cross country } ; date } ; hop { filter_eq { all_rows ; sport ; w gymnastics } ; date } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to bellator 14 . take the round record of this row . select the rows whose event record fuzzily matches to unconquered 1 : november reign . take the round record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; event ; bellator 14 } ; round } ; hop { filter_eq { all_rows ; event ; unconquered 1 : november reign } ; round } } ; 1 }"
            ]
        },
        {
            "input": "the average of the blackberry record of all rows is 3.19 % .",
            "output": [
                "round_eq { avg { all_rows ; blackberry } ; 3.19 % }"
            ]
        },
        {
            "input": "select the rows whose road record fuzzily matches to i - 80 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; road ; i - 80 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose womens singles record fuzzily matches to aya umemura . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; womens singles ; aya umemura } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to rca dome . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; rca dome } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 40 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; matches ; 40 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose frequency mhz record is less than 100 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; frequency mhz ; 100 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose podiums record is greater than 9 . there is only one such row in the table . the season record of this unqiue row is 2008 .",
            "output": [
                "and { only { filter_greater { all_rows ; podiums ; 9 } } ; eq { hop { filter_greater { all_rows ; podiums ; 9 } ; season } ; 2008 } }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than or equal to 11 . for the crowd records of these rows , most of them are greater than 10000 .",
            "output": [
                "most_greater { filter_greater_eq { all_rows ; home team score ; 11 } ; crowd ; 10000 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is 2nd minimum . the player record of this row is billy casper .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; score ; 2 } ; player } ; billy casper }"
            ]
        },
        {
            "input": "select the row whose opened record of all rows is maximum . the opened record of this row is 1969 .",
            "output": [
                "eq { hop { argmax { all_rows ; opened } ; opened } ; 1969 }"
            ]
        },
        {
            "input": "the 1st maximum total record of all rows is 85100 . the raion ( district ) or city record of the row with 1st maximum total record is city of izmayil .",
            "output": [
                "and { eq { nth_max { all_rows ; total ; 1 } ; 85100 } ; eq { hop { nth_argmax { all_rows ; total ; 1 } ; raion ( district ) or city } ; city of izmayil } }"
            ]
        },
        {
            "input": "select the rows whose round record is arbitrary . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_all { all_rows ; round } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to man of action . among these rows , select the rows whose directed by record fuzzily matches to sam montes . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; written by ; man of action } ; directed by ; sam montes } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose series result record fuzzily matches to drawn . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; series result ; drawn } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to puerto rico . take the total record of this row . select the rows whose nation record fuzzily matches to dominican republic . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; puerto rico } ; total } ; hop { filter_eq { all_rows ; nation ; dominican republic } ; total } }"
            ]
        },
        {
            "input": "the average of the draw record of all rows is 4.5 .",
            "output": [
                "round_eq { avg { all_rows ; draw } ; 4.5 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to none . there is only one such row in the table . the season record of this unqiue row is 3 .",
            "output": [
                "and { only { filter_eq { all_rows ; winner ; none } } ; eq { hop { filter_eq { all_rows ; winner ; none } ; season } ; 3 } }"
            ]
        },
        {
            "input": "the average of the innings record of all rows is 22 .",
            "output": [
                "round_eq { avg { all_rows ; innings } ; 22 }"
            ]
        },
        {
            "input": "the average of the home team score record of all rows is 15.18 .",
            "output": [
                "round_eq { avg { all_rows ; home team score } ; 15.18 }"
            ]
        },
        {
            "input": "select the row whose week record of all rows is 6th minimum . the date record of this row is october 12 , 2008 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; week ; 6 } ; date } ; october 12 , 2008 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to western oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to victoria park . take the crowd record of this row . the first record is greater than the second record . the crowd record of the first row is 23000 . the crowd record of the second row is 17500 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; venue ; western oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } } ; and { eq { hop { filter_eq { all_rows ; venue ; western oval } ; crowd } ; 23000 } ; eq { hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } ; 17500 } } }"
            ]
        },
        {
            "input": "select the rows whose race winner record fuzzily matches to andrew pitt . among these rows , select the rows whose fastest lap record fuzzily matches to gianluca vizziello . there is only one such row in the table . the date record of this unqiue row is 27 april .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; race winner ; andrew pitt } ; fastest lap ; gianluca vizziello } } ; eq { hop { filter_eq { filter_eq { all_rows ; race winner ; andrew pitt } ; fastest lap ; gianluca vizziello } ; date } ; 27 april } }"
            ]
        },
        {
            "input": "select the rows whose executive record fuzzily matches to second . among these rows , select the rows whose first minister record fuzzily matches to ian paisley . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; executive ; second } ; first minister ; ian paisley } } ; 2 }"
            ]
        },
        {
            "input": "for the gold records of all rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { all_rows ; gold ; 1 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . for the score records of these rows , most of them are greater than 142 .",
            "output": [
                "most_greater { filter_eq { all_rows ; country ; united states } ; score ; 142 }"
            ]
        },
        {
            "input": "select the row whose gross capacity record of all rows is 3rd maximum . the unit record of this row is hamaoka - 3 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; gross capacity ; 3 } ; unit } ; hamaoka - 3 }"
            ]
        },
        {
            "input": "select the row whose hard discounters record of all rows is maximum . the country record of this row is spain .",
            "output": [
                "eq { hop { argmax { all_rows ; hard discounters } ; country } ; spain }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to borisov . there is only one such row in the table . the team record of this unqiue row is bate .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; borisov } } ; eq { hop { filter_eq { all_rows ; location ; borisov } ; team } ; bate } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2004 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 2004 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose organization record fuzzily matches to delta zeta . take the founding date record of this row . select the rows whose organization record fuzzily matches to alpha gamma delta . take the founding date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; organization ; delta zeta } ; founding date } ; hop { filter_eq { all_rows ; organization ; alpha gamma delta } ; founding date } }"
            ]
        },
        {
            "input": "select the row whose time / retired record of all rows is maximum . the rider record of this row is dani pedrosa .",
            "output": [
                "eq { hop { argmax { all_rows ; time / retired } ; rider } ; dani pedrosa }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is college all - stars at chicago .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; college all - stars at chicago }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 9037 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 9037 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1998 . take the result record of this row . select the rows whose year record fuzzily matches to 2010 . take the result record of this row . the first record fuzzily matches to the second record . the result record of the first row is champions . the result record of the second row is champions .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; year ; 1998 } ; result } ; hop { filter_eq { all_rows ; year ; 2010 } ; result } } ; and { eq { hop { filter_eq { all_rows ; year ; 1998 } ; result } ; champions } ; eq { hop { filter_eq { all_rows ; year ; 2010 } ; result } ; champions } } }"
            ]
        },
        {
            "input": "select the rows whose to par record is equal to -4 . there is only one such row in the table . the player record of this unqiue row is jim colbert .",
            "output": [
                "and { only { filter_eq { all_rows ; to par ; -4 } } ; eq { hop { filter_eq { all_rows ; to par ; -4 } ; player } ; jim colbert } }"
            ]
        },
        {
            "input": "select the rows whose against record is less than 10 . among these rows , select the rows whose status record fuzzily matches to tour match . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; against ; 10 } ; status ; tour match } } ; 2 }"
            ]
        },
        {
            "input": "for the writer records of all rows , all of them fuzzily match to mike bullen .",
            "output": [
                "all_eq { all_rows ; writer ; mike bullen }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the singer record of this row is olta boka .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; singer } ; olta boka }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the championship record of this row is merion , us .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; championship } ; merion , us }"
            ]
        },
        {
            "input": "select the rows whose traction type record fuzzily matches to steam . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; traction type ; steam } } ; 2 }"
            ]
        },
        {
            "input": "for the cores records of all rows , all of them are equal to 4 .",
            "output": [
                "all_eq { all_rows ; cores ; 4 }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to rock records . among these rows , select the rows whose release date record fuzzily matches to 2000 . there is only one such row in the table . the english title record of this unqiue row is courage .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; label ; rock records } ; release date ; 2000 } } ; eq { hop { filter_eq { filter_eq { all_rows ; label ; rock records } ; release date ; 2000 } ; english title } ; courage } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 19.91 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 19.91 }"
            ]
        },
        {
            "input": "the minimum date record of all rows is 27 january .",
            "output": [
                "eq { min { all_rows ; date } ; 27 january }"
            ]
        },
        {
            "input": "select the row whose no in season record of all rows is 2nd minimum . the written by record of this row is jeremy carver .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; no in season ; 2 } ; written by } ; jeremy carver }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is corinthians .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; corinthians }"
            ]
        },
        {
            "input": "select the rows whose vacator record fuzzily matches to clifford p case ( r ) . take the reason for change record of this row . select the rows whose vacator record fuzzily matches to paul w shafer ( r ) . take the reason for change record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; vacator ; clifford p case ( r ) } ; reason for change } ; hop { filter_eq { all_rows ; vacator ; paul w shafer ( r ) } ; reason for change } }"
            ]
        },
        {
            "input": "for the treaty of cession records of all rows , most of them fuzzily match to 28 may 1956 .",
            "output": [
                "most_eq { all_rows ; treaty of cession ; 28 may 1956 }"
            ]
        },
        {
            "input": "the average of the number of clubs record of all rows is 13 .",
            "output": [
                "round_eq { avg { all_rows ; number of clubs } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose total record is equal to 35994 . there is only one such row in the table . the department record of this unqiue row is la paz .",
            "output": [
                "and { only { filter_eq { all_rows ; total ; 35994 } } ; eq { hop { filter_eq { all_rows ; total ; 35994 } ; department } ; la paz } }"
            ]
        },
        {
            "input": "select the rows whose elevation ( m ) record is less than 3000 . among these rows , select the rows whose col ( m ) record is equal to 0 . there is only one such row in the table . the peak record of this unqiue row is mount ruapehu .",
            "output": [
                "and { only { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } } ; eq { hop { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } ; peak } ; mount ruapehu } }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the opponent record of this row is st louis rams .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; opponent } ; st louis rams }"
            ]
        },
        {
            "input": "select the rows whose telenovela record fuzzily matches to mentir para vivir . among these rows , select the rows whose series premiere record fuzzily matches to september 2 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { filter_eq { all_rows ; telenovela ; mentir para vivir } ; series premiere ; september 2 } }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to philadelphia . among these rows , select the rows whose attendance record is less than 19500 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; home ; philadelphia } ; attendance ; 19500 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to left wing . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; left wing } } ; 3 }"
            ]
        },
        {
            "input": "for the goals for records of all rows , most of them are greater than 50 .",
            "output": [
                "most_greater { all_rows ; goals for ; 50 }"
            ]
        },
        {
            "input": "select the rows whose authority record fuzzily matches to state integrated . there is only one such row in the table . the name record of this unqiue row is st joseph 's school .",
            "output": [
                "and { only { filter_eq { all_rows ; authority ; state integrated } } ; eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st joseph 's school } }"
            ]
        },
        {
            "input": "select the row whose district record of all rows is 2nd maximum . the incumbent record of this row is christopher shays .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; district ; 2 } ; incumbent } ; christopher shays }"
            ]
        },
        {
            "input": "select the rows whose downhill record is equal to - . there is only one such row in the table . the season record of this unqiue row is 1990 .",
            "output": [
                "and { only { filter_eq { all_rows ; downhill ; - } } ; eq { hop { filter_eq { all_rows ; downhill ; - } ; season } ; 1990 } }"
            ]
        },
        {
            "input": "select the row whose incorporated record of all rows is 2nd minimum . the company record of this row is airline allied services ltd .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; incorporated ; 2 } ; company } ; airline allied services ltd }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to tony lema . take the to par record of this row . select the rows whose player record fuzzily matches to johnny miller ( a ) . take the to par record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; tony lema } ; to par } ; hop { filter_eq { all_rows ; player ; johnny miller ( a ) } ; to par } }"
            ]
        },
        {
            "input": "select the rows whose years record is equal to 1947 . there is only one such row in the table . the name record of this unqiue row is benito lorenzi .",
            "output": [
                "and { only { filter_eq { all_rows ; years ; 1947 } } ; eq { hop { filter_eq { all_rows ; years ; 1947 } ; name } ; benito lorenzi } }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is maximum . the rank record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; bronze } ; rank } ; 1 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 28,610 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 28,610 }"
            ]
        },
        {
            "input": "select the rows whose w record is greater than 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; w ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . among these rows , select the rows whose partner record fuzzily matches to anna linkova . there is only one such row in the table . the date record of this unqiue row is august 7 , 1995 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; surface ; clay } ; partner ; anna linkova } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; clay } ; partner ; anna linkova } ; date } ; august 7 , 1995 } }"
            ]
        },
        {
            "input": "select the rows whose year founded record is greater than 2000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; year founded ; 2000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . there is only one such row in the table . the athlete record of this unqiue row is shawn crawford .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; united states } } ; eq { hop { filter_eq { all_rows ; nationality ; united states } ; athlete } ; shawn crawford } }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to gerald wallace . there is only one such row in the table . the date record of this unqiue row is february 8 .",
            "output": [
                "and { only { filter_eq { all_rows ; high points ; gerald wallace } } ; eq { hop { filter_eq { all_rows ; high points ; gerald wallace } ; date } ; february 8 } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the tournament record of this row is makarska , croatia itf 75000 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; tournament } ; makarska , croatia itf 75000 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 772 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 772 }"
            ]
        },
        {
            "input": "select the rows whose technology record fuzzily matches to wifi . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; technology ; wifi } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is november 9 . the opponent record of this row is new york jets .",
            "output": [
                "and { eq { hop { argmax { all_rows ; attendance } ; date } ; november 9 } ; eq { hop { argmax { all_rows ; attendance } ; opponent } ; new york jets } }"
            ]
        },
        {
            "input": "select the rows whose game record is arbitrary . the number of such rows is 15 .",
            "output": [
                "eq { count { filter_all { all_rows ; game } } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose school colors record fuzzily matches to white . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; school colors ; white } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 50000 . among these rows , select the rows whose date record fuzzily matches to december . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; attendance ; 50000 } ; date ; december } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose first member record fuzzily matches to john ivatt briscoe . take the election record of this row . select the rows whose first member record fuzzily matches to peter john locke king . take the election record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; first member ; john ivatt briscoe } ; election } ; hop { filter_eq { all_rows ; first member ; peter john locke king } ; election } }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to ecuador . take the 2011 ( imf ) record of this row . select the rows whose nation record fuzzily matches to paraguay . take the 2011 ( imf ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; ecuador } ; 2011 ( imf ) } ; hop { filter_eq { all_rows ; nation ; paraguay } ; 2011 ( imf ) } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1964 . take the points record of this row . select the rows whose year record fuzzily matches to 1963 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1964 } ; points } ; hop { filter_eq { all_rows ; year ; 1963 } ; points } }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to draw . there is only one such row in the table . the opponent record of this unqiue row is yoko takahashi .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; draw } } ; eq { hop { filter_eq { all_rows ; method ; draw } ; opponent } ; yoko takahashi } }"
            ]
        },
        {
            "input": "select the row whose years for grizzlies record of all rows is minimum . the player record of this row is bryant reeves .",
            "output": [
                "eq { hop { argmin { all_rows ; years for grizzlies } ; player } ; bryant reeves }"
            ]
        },
        {
            "input": "the sum of the earnings record of all rows is 7546842 .",
            "output": [
                "round_eq { sum { all_rows ; earnings } ; 7546842 }"
            ]
        },
        {
            "input": "for the result records of all rows , all of them fuzzily match to w .",
            "output": [
                "all_eq { all_rows ; result ; w }"
            ]
        },
        {
            "input": "the maximum date record of all rows is 31 may 2011 . the album record of the row with superlative date record is l'un n'emp\u00e3\u00aache pas l'autre .",
            "output": [
                "and { eq { max { all_rows ; date } ; 31 may 2011 } ; eq { hop { argmax { all_rows ; date } ; album } ; l'un n'emp\u00e3\u00aache pas l'autre } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to canada . there is only one such row in the table . the champion record of this unqiue row is jessica shepley .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; canada } } ; eq { hop { filter_eq { all_rows ; country ; canada } ; champion } ; jessica shepley } }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to kiveton park . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winner ; kiveton park } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to rondo . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high assists ; rondo } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to wreck - it ralph . take the worldwide gross record of this row . select the rows whose title record fuzzily matches to the twilight saga : breaking dawn - part 2 . take the worldwide gross record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; wreck - it ralph } ; worldwide gross } ; hop { filter_eq { all_rows ; title ; the twilight saga : breaking dawn - part 2 } ; worldwide gross } }"
            ]
        },
        {
            "input": "select the rows whose round of 16 record fuzzily matches to 15-8 . there is only one such row in the table . the athlete record of this unqiue row is alexander achten .",
            "output": [
                "and { only { filter_eq { all_rows ; round of 16 ; 15-8 } } ; eq { hop { filter_eq { all_rows ; round of 16 ; 15-8 } ; athlete } ; alexander achten } }"
            ]
        },
        {
            "input": "select the rows whose defensive record fuzzily matches to matt disher . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; defensive ; matt disher } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose elevation ( m ) record of all rows is maximum . the peak record of this row is galdh\u00f8piggen .",
            "output": [
                "eq { hop { argmax { all_rows ; elevation ( m ) } ; peak } ; galdh\u00f8piggen }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is maximum . the year record of this row is 1948 .",
            "output": [
                "eq { hop { argmax { all_rows ; laps } ; year } ; 1948 }"
            ]
        },
        {
            "input": "select the row whose date won record of all rows is 4th maximum . the champion ( s ) record of this row is atomo & sonico .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date won ; 4 } ; champion ( s ) } ; atomo & sonico }"
            ]
        },
        {
            "input": "the average of the population served record of all rows is 4038 .",
            "output": [
                "round_eq { avg { all_rows ; population served } ; 4038 }"
            ]
        },
        {
            "input": "select the rows whose average record is less than 1.0 . select the row whose points record of these rows is maximum . the team record of this row is estudiantes de la plata .",
            "output": [
                "eq { hop { argmax { filter_less { all_rows ; average ; 1.0 } ; points } ; team } ; estudiantes de la plata }"
            ]
        },
        {
            "input": "select the row whose team number record of all rows is 3rd maximum . the team name record of this row is sap g33k .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; team number ; 3 } ; team name } ; sap g33k }"
            ]
        },
        {
            "input": "select the rows whose first elected record is equal to 1882 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first elected ; 1882 } } ; 3 }"
            ]
        },
        {
            "input": "for the release date records of all rows , all of them fuzzily match to q1 , 2007 .",
            "output": [
                "all_eq { all_rows ; release date ; q1 , 2007 }"
            ]
        },
        {
            "input": "for the laid down records of all rows , most of them fuzzily match to february 1935 .",
            "output": [
                "most_eq { all_rows ; laid down ; february 1935 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . among these rows , select the rows whose college / junior / club team ( league ) record fuzzily matches to university of notre dame . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; nationality ; united states } ; college / junior / club team ( league ) ; university of notre dame } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 2002 african cup of nations . take the date record of this row . select the rows whose competition record fuzzily matches to 2006 fifa world cup qualification . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; competition ; 2002 african cup of nations } ; date } ; hop { filter_eq { all_rows ; competition ; 2006 fifa world cup qualification } ; date } }"
            ]
        },
        {
            "input": "select the rows whose content record fuzzily matches to programmi per adulti 24h / 24 . among these rows , select the rows whose television service record fuzzily matches to boy & boy . there is only one such row in the table . the n degree record of this unqiue row is 992 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; content ; programmi per adulti 24h / 24 } ; television service ; boy & boy } } ; eq { hop { filter_eq { filter_eq { all_rows ; content ; programmi per adulti 24h / 24 } ; television service ; boy & boy } ; n degree } ; 992 } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . among these rows , select the rows whose result record fuzzily matches to w . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; date ; october } ; result ; w } } ; 3 }"
            ]
        },
        {
            "input": "for the title playoff records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; title playoff ; 0 }"
            ]
        },
        {
            "input": "for the discipline records of all rows , most of them fuzzily match to stock car .",
            "output": [
                "most_eq { all_rows ; discipline ; stock car }"
            ]
        },
        {
            "input": "select the rows whose livery record fuzzily matches to dark blue . there is only one such row in the table . the number & name record of this unqiue row is no d4279 arthur wright .",
            "output": [
                "and { only { filter_eq { all_rows ; livery ; dark blue } } ; eq { hop { filter_eq { all_rows ; livery ; dark blue } ; number & name } ; no d4279 arthur wright } }"
            ]
        },
        {
            "input": "select the row whose original airdate record of all rows is maximum . the episode record of this row is 13 .",
            "output": [
                "eq { hop { argmax { all_rows ; original airdate } ; episode } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose metres record is less than 200 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; metres ; 200 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose vessels record of all rows is 2nd maximum . the ship name record of this row is theofilos .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; vessels ; 2 } ; ship name } ; theofilos }"
            ]
        },
        {
            "input": "select the rows whose performer 2 record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; performer 2 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to clint bowyer . take the average speed ( mph ) record of this row . select the rows whose driver record fuzzily matches to greg biffle . take the average speed ( mph ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; driver ; clint bowyer } ; average speed ( mph ) } ; hop { filter_eq { all_rows ; driver ; greg biffle } ; average speed ( mph ) } }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to nijmegen . among these rows , select the rows whose traction type record fuzzily matches to electric . there is only one such row in the table . the date ( from ) record of this unqiue row is 4 june 1911 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; location ; nijmegen } ; traction type ; electric } } ; eq { hop { filter_eq { filter_eq { all_rows ; location ; nijmegen } ; traction type ; electric } ; date ( from ) } ; 4 june 1911 } }"
            ]
        },
        {
            "input": "select the rows whose draw record is greater than 0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; draw ; 0 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to mathew goggin . take the money record of this row . select the rows whose player record fuzzily matches to justin leonard . take the money record of this row . the first record is 66600 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; mathew goggin } ; money } ; hop { filter_eq { all_rows ; player ; justin leonard } ; money } } ; 66600 }"
            ]
        },
        {
            "input": "select the rows whose weeks record is greater than 16 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; weeks ; 16 } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to away . the average of the attendance record of these rows is 1,692 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; venue ; away } ; attendance } ; 1,692 }"
            ]
        },
        {
            "input": "select the row whose completion % record of all rows is maximum . the year record of this row is 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; completion % } ; year } ; 2010 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 2nd maximum . the incumbent record of this row is elijah cummings .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 2 } ; incumbent } ; elijah cummings }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 4th minimum . the song title record of this row is nee maatalo .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 4 } ; song title } ; nee maatalo }"
            ]
        },
        {
            "input": "for the socialist records of all rows , most of them are greater than or equal to 42 % .",
            "output": [
                "most_greater_eq { all_rows ; socialist ; 42 % }"
            ]
        },
        {
            "input": "select the rows whose winning team record fuzzily matches to iowa state . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning team ; iowa state } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose 1st party record fuzzily matches to liberal . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 1st party ; liberal } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to oppland . there is only one such row in the table . the name record of this unqiue row is galdh\u00f8piggen .",
            "output": [
                "and { only { filter_eq { all_rows ; county ; oppland } } ; eq { hop { filter_eq { all_rows ; county ; oppland } ; name } ; galdh\u00f8piggen } }"
            ]
        },
        {
            "input": "for the kitmaker records of all rows , most of them do not match to n / a .",
            "output": [
                "most_not_eq { all_rows ; kitmaker ; n / a }"
            ]
        },
        {
            "input": "for the character records of all rows , most of them fuzzily match to craven .",
            "output": [
                "most_eq { all_rows ; character ; craven }"
            ]
        },
        {
            "input": "select the rows whose december record is greater than 15 . among these rows , select the rows whose score record fuzzily matches to 4-2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; december ; 15 } ; score ; 4-2 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to melbourne . the average of the crowd record of these rows is 24500 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; away team ; melbourne } ; crowd } ; 24500 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to draw . there is only one such row in the table . the venue record of this unqiue row is sydney cricket ground .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; draw } } ; eq { hop { filter_eq { all_rows ; result ; draw } ; venue } ; sydney cricket ground } }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to hwm 53 . there is only one such row in the table . the year record of this unqiue row is 1953 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; hwm 53 } } ; eq { hop { filter_eq { all_rows ; chassis ; hwm 53 } ; year } ; 1953 } }"
            ]
        },
        {
            "input": "for the format records of all rows , all of them fuzzily match to news / talk .",
            "output": [
                "all_eq { all_rows ; format ; news / talk }"
            ]
        },
        {
            "input": "for the land ( sqmi ) records of all rows , most of them are less than 40 .",
            "output": [
                "most_less { all_rows ; land ( sqmi ) ; 40 }"
            ]
        },
        {
            "input": "select the rows whose launched record fuzzily matches to 1973 . among these rows , select the rows whose destination record fuzzily matches to mars . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; launched ; 1973 } ; destination ; mars } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose earnings record is less than 560000 . there is only one such row in the table . the player record of this unqiue row is gene littler .",
            "output": [
                "and { only { filter_less { all_rows ; earnings ; 560000 } } ; eq { hop { filter_less { all_rows ; earnings ; 560000 } ; player } ; gene littler } }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 5.603 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 5.603 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to spurs . select the row whose attendance record of these rows is 1st maximum . the home record of this row is jazz .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; visitor ; spurs } ; attendance ; 1 } ; home } ; jazz }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to soviet union . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; soviet union } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose women 's singles record fuzzily matches to sara persson . there is only one such row in the table . the year record of this unqiue row is 2006 .",
            "output": [
                "and { only { filter_eq { all_rows ; women 's singles ; sara persson } } ; eq { hop { filter_eq { all_rows ; women 's singles ; sara persson } ; year } ; 2006 } }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to resigned . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; resigned } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the november record of this row is 29 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; november } ; 29 }"
            ]
        },
        {
            "input": "the 2nd minimum year record of all rows is 1994 . the men 's singles record of the row with 2nd minimum year record is juraj brestovsk\u00fd .",
            "output": [
                "and { eq { nth_min { all_rows ; year ; 2 } ; 1994 } ; eq { hop { nth_argmin { all_rows ; year ; 2 } ; men 's singles } ; juraj brestovsk\u00fd } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 45585 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 45585 }"
            ]
        },
        {
            "input": "select the rows whose service record fuzzily matches to marine corps . among these rows , select the rows whose rank record fuzzily matches to private . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; service ; marine corps } ; rank ; private } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose platform ( s ) record fuzzily matches to gamecube . there is only one such row in the table . the game record of this unqiue row is resident evil 4 .",
            "output": [
                "and { only { filter_eq { all_rows ; platform ( s ) ; gamecube } } ; eq { hop { filter_eq { all_rows ; platform ( s ) ; gamecube } ; game } ; resident evil 4 } }"
            ]
        },
        {
            "input": "select the rows whose current club record fuzzily matches to bot tur\u00f3w . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; current club ; bot tur\u00f3w } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose county record fuzzily matches to oppland . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; county ; oppland } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the name record of this row is tyson gay .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; name } ; tyson gay }"
            ]
        },
        {
            "input": "for the location attendance records of all rows , most of them fuzzily match to amway arena .",
            "output": [
                "most_eq { all_rows ; location attendance ; amway arena }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 2 - 0 . there is only one such row in the table . the home team record of this unqiue row is eastern team a .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; 2 - 0 } } ; eq { hop { filter_eq { all_rows ; score ; 2 - 0 } ; home team } ; eastern team a } }"
            ]
        },
        {
            "input": "select the rows whose spacecraft record fuzzily matches to venera . the sum of the time elapsed record of these rows is 205 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; spacecraft ; venera } ; time elapsed } ; 205 }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to canada . there is only one such row in the table . the catalog record of this unqiue row is b001150702 .",
            "output": [
                "and { only { filter_eq { all_rows ; region ; canada } } ; eq { hop { filter_eq { all_rows ; region ; canada } ; catalog } ; b001150702 } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to keutenberg . take the kilometer record of this row . select the rows whose name record fuzzily matches to fromberg . take the kilometer record of this row . the first record is 4 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; keutenberg } ; kilometer } ; hop { filter_eq { all_rows ; name ; fromberg } ; kilometer } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose name dates record fuzzily matches to anne , princess royal 1709 - 1759 . take the date married record of this row . select the rows whose name dates record fuzzily matches to charlotte , princess royal 1766 - 1828 . take the date married record of this row . the second record is 63 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name dates ; anne , princess royal 1709 - 1759 } ; date married } ; hop { filter_eq { all_rows ; name dates ; charlotte , princess royal 1766 - 1828 } ; date married } } ; -63 }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to general dynamics , quincy . select the row whose commissioned - decommissioned record of these rows is 1st minimum . the ship record of this row is wichita .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; builder ; general dynamics , quincy } ; commissioned - decommissioned ; 1 } ; ship } ; wichita }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to qf . among these rows , select the rows whose surface record fuzzily matches to clay . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; round ; qf } ; surface ; clay } } ; 2 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 42.91 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 42.91 }"
            ]
        },
        {
            "input": "the 4th maximum points record of all rows is 6 .",
            "output": [
                "eq { nth_max { all_rows ; points ; 4 } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to b ' in music . select the row whose release date record of these rows is minimum . the english title record of this row is kissing the future of love .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; label ; b ' in music } ; release date } ; english title } ; kissing the future of love }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to us open . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; championship ; us open } } ; 6 }"
            ]
        },
        {
            "input": "the sum of the races record of all rows is 190 .",
            "output": [
                "round_eq { sum { all_rows ; races } ; 190 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to jason st louis . take the time record of this row . select the rows whose opponent record fuzzily matches to mike swick . take the time record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; jason st louis } ; time } ; hop { filter_eq { all_rows ; opponent ; mike swick } ; time } }"
            ]
        },
        {
            "input": "select the row whose area ( km 2 ) record of all rows is maximum . the main town record of this row is adampan .",
            "output": [
                "eq { hop { argmax { all_rows ; area ( km 2 ) } ; main town } ; adampan }"
            ]
        },
        {
            "input": "select the rows whose premiere record fuzzily matches to 14 august . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; premiere ; 14 august } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to pescarolo sport . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; team ; pescarolo sport } } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 24652 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 24652 }"
            ]
        },
        {
            "input": "select the rows whose film record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; film } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to england . there is only one such row in the table . the name record of this unqiue row is proraphidia gomezi .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; england } } ; eq { hop { filter_eq { all_rows ; location ; england } ; name } ; proraphidia gomezi } }"
            ]
        },
        {
            "input": "select the rows whose reason for change record fuzzily matches to failure to elect . there is only one such row in the table . the state ( class ) record of this unqiue row is tennessee ( 2 ) .",
            "output": [
                "and { only { filter_eq { all_rows ; reason for change ; failure to elect } } ; eq { hop { filter_eq { all_rows ; reason for change ; failure to elect } ; state ( class ) } ; tennessee ( 2 ) } }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to parker .",
            "output": [
                "most_eq { all_rows ; high points ; parker }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 17 . there is only one such row in the table . the team record of this unqiue row is ant\u00e1rtica .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 17 } } ; eq { hop { filter_eq { all_rows ; points ; 17 } ; team } ; ant\u00e1rtica } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to punt road oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to junction oval . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; venue ; punt road oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; junction oval } ; crowd } }"
            ]
        },
        {
            "input": "select the row whose frequency record of all rows is maximum . the callsign record of this row is kgbt .",
            "output": [
                "eq { hop { argmax { all_rows ; frequency } ; callsign } ; kgbt }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to italy . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; country ; italy } }"
            ]
        },
        {
            "input": "select the rows whose goalkeeper record fuzzily matches to mat\u00edas garavano . take the goals record of this row . select the rows whose goalkeeper record fuzzily matches to \u00e1lvaro campos . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; goalkeeper ; mat\u00edas garavano } ; goals } ; hop { filter_eq { all_rows ; goalkeeper ; \u00e1lvaro campos } ; goals } }"
            ]
        },
        {
            "input": "the average of the weight ( kg ) record of all rows is 54.29 .",
            "output": [
                "round_eq { avg { all_rows ; weight ( kg ) } ; 54.29 }"
            ]
        },
        {
            "input": "for the won records of all rows , most of them are greater than 10 .",
            "output": [
                "most_greater { all_rows ; won ; 10 }"
            ]
        },
        {
            "input": "select the row whose purse record of all rows is maximum . the year record of this row is 2008 .",
            "output": [
                "eq { hop { argmax { all_rows ; purse } ; year } ; 2008 }"
            ]
        },
        {
            "input": "for the license records of all rows , most of them fuzzily match to proprietary .",
            "output": [
                "most_eq { all_rows ; license ; proprietary }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to paul millsap . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high rebounds ; paul millsap } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose ngc number record fuzzily matches to 2736 . take the object type record of this row . select the rows whose ngc number record fuzzily matches to 2770 . take the object type record of this row . the first record does not match to the second record . the object type record of the first row is diffuse nebula . the object type record of the second row is spiral galaxy .",
            "output": [
                "and { not_eq { hop { filter_eq { all_rows ; ngc number ; 2736 } ; object type } ; hop { filter_eq { all_rows ; ngc number ; 2770 } ; object type } } ; and { eq { hop { filter_eq { all_rows ; ngc number ; 2736 } ; object type } ; diffuse nebula } ; eq { hop { filter_eq { all_rows ; ngc number ; 2770 } ; object type } ; spiral galaxy } } }"
            ]
        },
        {
            "input": "select the rows whose games record is equal to 14 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; games ; 14 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose owned since record is equal to 2011 . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; owned since ; 2011 } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 0 . there is only one such row in the table . the artist record of this unqiue row is photogenique .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 0 } } ; eq { hop { filter_eq { all_rows ; points ; 0 } ; artist } ; photogenique } }"
            ]
        },
        {
            "input": "the sum of the winners share record of all rows is 444286 .",
            "output": [
                "round_eq { sum { all_rows ; winners share } ; 444286 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to db . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; db } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose district record fuzzily matches to sagar . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; district ; sagar } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 741290 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 741290 }"
            ]
        },
        {
            "input": "for the pick records of all rows , all of them are equal to 2 .",
            "output": [
                "all_eq { all_rows ; pick ; 2 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1995 . take the pts record of this row . select the rows whose year record fuzzily matches to 1991 . take the pts record of this row . the first record is greater than the second record . the pts record of the first row is 13 . the pts record of the second row is 1 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; hop { filter_eq { all_rows ; year ; 1991 } ; pts } } ; and { eq { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; 13 } ; eq { hop { filter_eq { all_rows ; year ; 1991 } ; pts } ; 1 } } }"
            ]
        },
        {
            "input": "select the rows whose studio ( s ) record fuzzily matches to red chillies entertainment . there is only one such row in the table . the movie record of this unqiue row is chennai express .",
            "output": [
                "and { only { filter_eq { all_rows ; studio ( s ) ; red chillies entertainment } } ; eq { hop { filter_eq { all_rows ; studio ( s ) ; red chillies entertainment } ; movie } ; chennai express } }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to may .",
            "output": [
                "all_eq { all_rows ; date ; may }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to helicopter . take the date record of this row . select the rows whose category record fuzzily matches to glider ( sailplane ) . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; category ; helicopter } ; date } ; hop { filter_eq { all_rows ; category ; glider ( sailplane ) } ; date } }"
            ]
        },
        {
            "input": "select the rows whose race record is equal to 28 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; race ; 28 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the viewing figure record of all rows is 7.2 .",
            "output": [
                "round_eq { avg { all_rows ; viewing figure } ; 7.2 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to jon cassar . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; jon cassar } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to arnold nogy . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; artist ; arnold nogy } } ; 3 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 71 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 71 }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than 100 . there is only one such row in the table . the nation record of this unqiue row is united states .",
            "output": [
                "and { only { filter_greater { all_rows ; total ; 100 } } ; eq { hop { filter_greater { all_rows ; total ; 100 } ; nation } ; united states } }"
            ]
        },
        {
            "input": "for the region 4 records of all rows , most of them do not match to n / a .",
            "output": [
                "most_not_eq { all_rows ; region 4 ; n / a }"
            ]
        },
        {
            "input": "the maximum score record of all rows is 5 - 0 .",
            "output": [
                "eq { max { all_rows ; score } ; 5 - 0 }"
            ]
        },
        {
            "input": "for the height records of all rows , most of them are less than 190 .",
            "output": [
                "most_less { all_rows ; height ; 190 }"
            ]
        },
        {
            "input": "the average of the games played record of all rows is 7.6 .",
            "output": [
                "round_eq { avg { all_rows ; games played } ; 7.6 }"
            ]
        },
        {
            "input": "select the rows whose ship name record fuzzily matches to ashantian . take the tonnage ( grt ) record of this row . select the rows whose ship name record fuzzily matches to manchester brigade . take the tonnage ( grt ) record of this row . the second record is 1125 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; ship name ; ashantian } ; tonnage ( grt ) } ; hop { filter_eq { all_rows ; ship name ; manchester brigade } ; tonnage ( grt ) } } ; -1125 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the winning driver record of this row is arthur duray .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; winning driver } ; arthur duray }"
            ]
        },
        {
            "input": "select the rows whose runner - up record fuzzily matches to dynamo moscow . take the season record of this row . select the rows whose runner - up record fuzzily matches to lokomotiv moscow . take the season record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; runner - up ; dynamo moscow } ; season } ; hop { filter_eq { all_rows ; runner - up ; lokomotiv moscow } ; season } }"
            ]
        },
        {
            "input": "for the of weeks records of all rows , most of them are equal to 13 .",
            "output": [
                "most_eq { all_rows ; of weeks ; 13 }"
            ]
        },
        {
            "input": "select the rows whose tv network record fuzzily matches to cbs . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tv network ; cbs } } ; 12 }"
            ]
        },
        {
            "input": "the average of the balls record of all rows is 670 .",
            "output": [
                "round_eq { avg { all_rows ; balls } ; 670 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; w } } ; 5 }"
            ]
        },
        {
            "input": "the average of the away team score record of all rows is 10.86 .",
            "output": [
                "round_eq { avg { all_rows ; away team score } ; 10.86 }"
            ]
        },
        {
            "input": "select the rows whose bsu head coach record fuzzily matches to bus conner . take the year record of this row . select the rows whose bsu head coach record fuzzily matches to greg graham . take the year record of this row . the second record is 32 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; bsu head coach ; bus conner } ; year } ; hop { filter_eq { all_rows ; bsu head coach ; greg graham } ; year } } ; -32 years }"
            ]
        },
        {
            "input": "select the row whose year born record of all rows is 1st minimum . the player record of this row is sacha giffa .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year born ; 1 } ; player } ; sacha giffa }"
            ]
        },
        {
            "input": "select the rows whose miss international record fuzzily matches to lara quigaman . take the year record of this row . select the rows whose miss international record fuzzily matches to daniela di giacomo . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; miss international ; lara quigaman } ; year } ; hop { filter_eq { all_rows ; miss international ; daniela di giacomo } ; year } }"
            ]
        },
        {
            "input": "select the row whose entries record of all rows is maximum . the driver record of this row is rubens barrichello .",
            "output": [
                "eq { hop { argmax { all_rows ; entries } ; driver } ; rubens barrichello }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to senior race . there is only one such row in the table . the year record of this unqiue row is 2008 .",
            "output": [
                "and { only { filter_eq { all_rows ; event ; senior race } } ; eq { hop { filter_eq { all_rows ; event ; senior race } ; year } ; 2008 } }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to tony parker . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; leading scorer ; tony parker } } ; 4 }"
            ]
        },
        {
            "input": "for the year born records of all rows , most of them are greater than 1979 .",
            "output": [
                "most_greater { all_rows ; year born ; 1979 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to win . for the wildcats points records of these rows , most of them are greater than 20 .",
            "output": [
                "most_greater { filter_eq { all_rows ; result ; win } ; wildcats points ; 20 }"
            ]
        },
        {
            "input": "select the rows whose 1989 record fuzzily matches to 3r . there is only one such row in the table . the tournament record of this unqiue row is wimbledon .",
            "output": [
                "and { only { filter_eq { all_rows ; 1989 ; 3r } } ; eq { hop { filter_eq { all_rows ; 1989 ; 3r } ; tournament } ; wimbledon } }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( in millions ) record is less than 8 . there is only one such row in the table . the no by series record of this unqiue row is 6 .",
            "output": [
                "and { only { filter_less { all_rows ; us viewers ( in millions ) ; 8 } } ; eq { hop { filter_less { all_rows ; us viewers ( in millions ) ; 8 } ; no by series } ; 6 } }"
            ]
        },
        {
            "input": "select the rows whose type record does not match to public . the average of the enrollment record of these rows is 4,523 .",
            "output": [
                "round_eq { avg { filter_not_eq { all_rows ; type ; public } ; enrollment } ; 4,523 }"
            ]
        },
        {
            "input": "select the row whose us viewers ( millions ) record of all rows is maximum . the title record of this row is bea stays in the picture .",
            "output": [
                "eq { hop { argmax { all_rows ; us viewers ( millions ) } ; title } ; bea stays in the picture }"
            ]
        },
        {
            "input": "select the rows whose habitat type record fuzzily matches to forest steppe . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; habitat type ; forest steppe } } ; 8 }"
            ]
        },
        {
            "input": "the average of the td 's record of all rows is 15 .",
            "output": [
                "round_eq { avg { all_rows ; td 's } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose population record is greater than 50000 . among these rows , select the rows whose altitude ( mslm ) record is less than 300 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; population ; 50000 } ; altitude ( mslm ) ; 300 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is 2nd minimum . the home team record of this row is fitzroy .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; home team score ; 2 } ; home team } ; fitzroy }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to forward . among these rows , select the rows whose years in orlando record is greater than or equal to 2000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { filter_eq { all_rows ; position ; forward } ; years in orlando ; 2000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to gothenburg . among these rows , select the rows whose date record fuzzily matches to may . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; opponent ; gothenburg } ; date ; may } } ; 2 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 1259.8 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 1259.8 }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to vince carter . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; vince carter } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to chris haseman . take the round record of this row . select the rows whose opponent record fuzzily matches to wanderlei silva . take the round record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; opponent ; chris haseman } ; round } ; hop { filter_eq { all_rows ; opponent ; wanderlei silva } ; round } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose the world university rankings 2012 - 13 record is less than 300 . there is only one such row in the table . the university record of this unqiue row is queensland university of technology .",
            "output": [
                "and { only { filter_less { all_rows ; the world university rankings 2012 - 13 ; 300 } } ; eq { hop { filter_less { all_rows ; the world university rankings 2012 - 13 ; 300 } ; university } ; queensland university of technology } }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 5th minimum . the series record of this row is 5 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; original air date ; 5 } ; series } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to craig baird . among these rows , select the rows whose location record fuzzily matches to melbourne , victoria . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; winning driver ; craig baird } ; location ; melbourne , victoria } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose successor record fuzzily matches to vacant . there is only one such row in the table . the vacator record of this unqiue row is ross bass ( d ) .",
            "output": [
                "and { only { filter_eq { all_rows ; successor ; vacant } } ; eq { hop { filter_eq { all_rows ; successor ; vacant } ; vacator } ; ross bass ( d ) } }"
            ]
        },
        {
            "input": "for the became consort records of all rows , most of them fuzzily match to husband 's ascession .",
            "output": [
                "most_eq { all_rows ; became consort ; husband 's ascession }"
            ]
        },
        {
            "input": "select the row whose 2006 - 10 record of all rows is maximum . the state record of this row is bihar .",
            "output": [
                "eq { hop { argmax { all_rows ; 2006 - 10 } ; state } ; bihar }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to brazil . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tournament ; brazil } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose height in ft record is greater than or equal to 7 - 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; height in ft ; 7 - 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to russell ingall . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winner ; russell ingall } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired democratic hold . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; result ; retired democratic hold } }"
            ]
        },
        {
            "input": "select the rows whose colony record fuzzily matches to chandernagore . take the de facto transfer record of this row . select the rows whose colony record fuzzily matches to karikal . take the de facto transfer record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; colony ; chandernagore } ; de facto transfer } ; hop { filter_eq { all_rows ; colony ; karikal } ; de facto transfer } }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is minimum . the stadium record of this row is billesley common .",
            "output": [
                "eq { hop { argmin { all_rows ; capacity } ; stadium } ; billesley common }"
            ]
        },
        {
            "input": "select the rows whose music record fuzzily matches to george gershwin . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; music ; george gershwin } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose drawn record is equal to 2 . there is only one such row in the table . the club record of this unqiue row is abercynon rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; drawn ; 2 } } ; eq { hop { filter_eq { all_rows ; drawn ; 2 } ; club } ; abercynon rfc } }"
            ]
        },
        {
            "input": "select the rows whose champion record fuzzily matches to spartak moscow . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; champion ; spartak moscow } } ; 7 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 56169 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 56169 }"
            ]
        },
        {
            "input": "select the rows whose transmission record fuzzily matches to 8 - speed . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; transmission ; 8 - speed } } ; 6 }"
            ]
        },
        {
            "input": "for the date of vacancy records of all rows , most of them fuzzily match to 2010 .",
            "output": [
                "most_eq { all_rows ; date of vacancy ; 2010 }"
            ]
        },
        {
            "input": "select the rows whose time record is less than 22.2 . there is only one such row in the table . the athlete record of this unqiue row is veronica campbell - brown .",
            "output": [
                "and { only { filter_less { all_rows ; time ; 22.2 } } ; eq { hop { filter_less { all_rows ; time ; 22.2 } ; athlete } ; veronica campbell - brown } }"
            ]
        },
        {
            "input": "the average of the starts record of all rows is 7.67 .",
            "output": [
                "round_eq { avg { all_rows ; starts } ; 7.67 }"
            ]
        },
        {
            "input": "select the row whose episode number record of all rows is 1st minimum . the musical guest ( song performed ) record of this row is the courteeners ( no you did n't , no you do n't ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; episode number ; 1 } ; musical guest ( song performed ) } ; the courteeners ( no you did n't , no you do n't ) }"
            ]
        },
        {
            "input": "select the rows whose tv time record fuzzily matches to fox . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tv time ; fox } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jim farmer . take the no record of this row . select the rows whose player record fuzzily matches to derek fisher . take the no record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; jim farmer } ; no } ; hop { filter_eq { all_rows ; player ; derek fisher } ; no } }"
            ]
        },
        {
            "input": "for the reason for non - seating records of all rows , most of them fuzzily match to died .",
            "output": [
                "most_eq { all_rows ; reason for non - seating ; died }"
            ]
        },
        {
            "input": "for the matches records of all rows , all of them are greater than or equal to 30 .",
            "output": [
                "all_greater_eq { all_rows ; matches ; 30 }"
            ]
        },
        {
            "input": "select the rows whose bodyweight record is equal to 69.73 . there is only one such row in the table . the name record of this unqiue row is nelly rivera ( dom ) .",
            "output": [
                "and { only { filter_eq { all_rows ; bodyweight ; 69.73 } } ; eq { hop { filter_eq { all_rows ; bodyweight ; 69.73 } ; name } ; nelly rivera ( dom ) } }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { all_rows ; score ; w }"
            ]
        },
        {
            "input": "select the row whose goals scored ( gf ) record of all rows is maximum . the team ( equipo ) record of this row is arabe unido .",
            "output": [
                "eq { hop { argmax { all_rows ; goals scored ( gf ) } ; team ( equipo ) } ; arabe unido }"
            ]
        },
        {
            "input": "the sum of the runs record of all rows is 2617 .",
            "output": [
                "round_eq { sum { all_rows ; runs } ; 2617 }"
            ]
        },
        {
            "input": "select the row whose max speed ( mph ) record of all rows is 2nd maximum . the pilot record of this row is joseph a walker .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; max speed ( mph ) ; 2 } ; pilot } ; joseph a walker }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 3rd minimum . the rowers record of this row is misaki kumakura , akiko iwamoto .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 3 } ; rowers } ; misaki kumakura , akiko iwamoto }"
            ]
        },
        {
            "input": "select the row whose age at appointment record of all rows is maximum . the foreign nationality record of this row is canadian .",
            "output": [
                "eq { hop { argmax { all_rows ; age at appointment } ; foreign nationality } ; canadian }"
            ]
        },
        {
            "input": "select the rows whose largest ethnic group ( 2002 ) record fuzzily matches to serbs . for the type records of these rows , most of them fuzzily match to village .",
            "output": [
                "most_eq { filter_eq { all_rows ; largest ethnic group ( 2002 ) ; serbs } ; type ; village }"
            ]
        },
        {
            "input": "select the rows whose goals record is equal to 23 . there is only one such row in the table . the player record of this unqiue row is mehmet y\u0131lmaz .",
            "output": [
                "and { only { filter_eq { all_rows ; goals ; 23 } } ; eq { hop { filter_eq { all_rows ; goals ; 23 } ; player } ; mehmet y\u0131lmaz } }"
            ]
        },
        {
            "input": "the average of the season record of all rows is 2007 .",
            "output": [
                "round_eq { avg { all_rows ; season } ; 2007 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly . among these rows , select the rows whose venue record fuzzily matches to stadion villach lind , villach , austria . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; competition ; friendly } ; venue ; stadion villach lind , villach , austria } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to dengeki game appli . take the first published record of this row . select the rows whose title record fuzzily matches to rekidama . take the first published record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; dengeki game appli } ; first published } ; hop { filter_eq { all_rows ; title ; rekidama } ; first published } }"
            ]
        },
        {
            "input": "select the row whose release date record of all rows is 1st minimum . the developer ( s ) record of this row is valve corporation .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; release date ; 1 } ; developer ( s ) } ; valve corporation }"
            ]
        },
        {
            "input": "select the rows whose 7:30 record fuzzily matches to jeopardy! . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; 7:30 ; jeopardy! } }"
            ]
        },
        {
            "input": "select the rows whose years record fuzzily matches to 1 - 8 . among these rows , select the rows whose authority record fuzzily matches to integrated . there is only one such row in the table . the name record of this unqiue row is st teresa 's school .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; years ; 1 - 8 } ; authority ; integrated } } ; eq { hop { filter_eq { filter_eq { all_rows ; years ; 1 - 8 } ; authority ; integrated } ; name } ; st teresa 's school } }"
            ]
        },
        {
            "input": "select the rows whose position in 2001 record fuzzily matches to first league . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position in 2001 ; first league } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose scoring rank record fuzzily matches to n/a . there is only one such row in the table . the year record of this unqiue row is 2005 .",
            "output": [
                "and { only { filter_eq { all_rows ; scoring rank ; n/a } } ; eq { hop { filter_eq { all_rows ; scoring rank ; n/a } ; year } ; 2005 } }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 6:43.99 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 6:43.99 }"
            ]
        },
        {
            "input": "select the row whose socialist record of all rows is maximum . the date released record of this row is august 4 , 1991 .",
            "output": [
                "eq { hop { argmax { all_rows ; socialist } ; date released } ; august 4 , 1991 }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to garnett . the sum of the high rebounds record of these rows is 65 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; high rebounds ; garnett } ; high rebounds } ; 65 }"
            ]
        },
        {
            "input": "select the rows whose runner - up record fuzzily matches to kanto gakuin university . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; runner - up ; kanto gakuin university } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to friendly . select the row whose spectators record of these rows is maximum . the date record of this row is 14 november 2012 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; round ; friendly } ; spectators } ; date } ; 14 november 2012 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to darwin robinson . take the round record of this row . select the rows whose name record fuzzily matches to joe miller . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; darwin robinson } ; round } ; hop { filter_eq { all_rows ; name ; joe miller } ; round } }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 9900 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 9900 }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are equal to 68 .",
            "output": [
                "most_eq { all_rows ; score ; 68 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to rb . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; rb } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose genre record fuzzily matches to sitcom . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; genre ; sitcom } } ; 2 }"
            ]
        },
        {
            "input": "for the city records of all rows , most of them fuzzily match to los angeles , california .",
            "output": [
                "most_eq { all_rows ; city ; los angeles , california }"
            ]
        },
        {
            "input": "select the rows whose location record does not match to ma . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; location ; ma } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose results record fuzzily matches to re - elected . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; results ; re - elected } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose call sign record fuzzily matches to cjjc - fm . take the frequency record of this row . select the rows whose call sign record fuzzily matches to cfgw - fm . take the frequency record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; call sign ; cjjc - fm } ; frequency } ; hop { filter_eq { all_rows ; call sign ; cfgw - fm } ; frequency } }"
            ]
        },
        {
            "input": "select the rows whose season record is equal to 2011 . the maximum races record of these rows is 18 .",
            "output": [
                "eq { max { filter_eq { all_rows ; season ; 2011 } ; races } ; 18 }"
            ]
        },
        {
            "input": "the sum of the races record of all rows is 198 .",
            "output": [
                "round_eq { sum { all_rows ; races } ; 198 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 1997 korea cup . among these rows , select the rows whose score record fuzzily matches to 1 goal . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; competition ; 1997 korea cup } ; score ; 1 goal } } ; 2 }"
            ]
        },
        {
            "input": "for the original us air date records of all rows , all of them fuzzily match to 2012 .",
            "output": [
                "all_eq { all_rows ; original us air date ; 2012 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 134,131 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 134,131 }"
            ]
        },
        {
            "input": "select the rows whose high school record fuzzily matches to lincoln . take the enrollment record of this row . select the rows whose high school record fuzzily matches to tacoma school of the arts . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; high school ; lincoln } ; enrollment } ; hop { filter_eq { all_rows ; high school ; tacoma school of the arts } ; enrollment } }"
            ]
        },
        {
            "input": "the average of the number of seasons in top division record of all rows is 16 .",
            "output": [
                "round_eq { avg { all_rows ; number of seasons in top division } ; 16 }"
            ]
        },
        {
            "input": "select the rows whose circuit record fuzzily matches to marcus theatres . take the sites record of this row . select the rows whose circuit record fuzzily matches to rave motion pictures . take the sites record of this row . the second record is 7 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; circuit ; marcus theatres } ; sites } ; hop { filter_eq { all_rows ; circuit ; rave motion pictures } ; sites } } ; -7 }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to kevin garnett . there is only one such row in the table . the date record of this unqiue row is december 21 . the team record of this unqiue row is new york .",
            "output": [
                "and { only { filter_eq { all_rows ; high assists ; kevin garnett } } ; and { eq { hop { filter_eq { all_rows ; high assists ; kevin garnett } ; date } ; december 21 } ; eq { hop { filter_eq { all_rows ; high assists ; kevin garnett } ; team } ; new york } } }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is 2nd minimum . the city of license record of this row is lyons falls , ny .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; frequency mhz ; 2 } ; city of license } ; lyons falls , ny }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to dell curry . there is only one such row in the table . the date record of this unqiue row is may 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; high points ; dell curry } } ; eq { hop { filter_eq { all_rows ; high points ; dell curry } ; date } ; may 2 } }"
            ]
        },
        {
            "input": "the maximum points record of all rows is 581 . the player record of the row with superlative points record is kendall gill .",
            "output": [
                "and { eq { max { all_rows ; points } ; 581 } ; eq { hop { argmax { all_rows ; points } ; player } ; kendall gill } }"
            ]
        },
        {
            "input": "select the rows whose standard record fuzzily matches to gsm . for the frequency records of these rows , all of them fuzzily match to 900 mhz and 1800 mhz .",
            "output": [
                "all_eq { filter_eq { all_rows ; standard ; gsm } ; frequency ; 900 mhz and 1800 mhz }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the event record of this row is 2008 european poker championships .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; event } ; 2008 european poker championships }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is minimum . the season record of this row is 2006 .",
            "output": [
                "eq { hop { argmin { all_rows ; position } ; season } ; 2006 }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to uefa intertoto cup .",
            "output": [
                "most_eq { all_rows ; competition ; uefa intertoto cup }"
            ]
        },
        {
            "input": "select the rows whose air date record fuzzily matches to january . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; air date ; january } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose year built record is less than 1960 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { all_rows ; year built ; 1960 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the location attendance record of this row is united center 23854 .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; location attendance } ; united center 23854 }"
            ]
        },
        {
            "input": "select the rows whose call sign record fuzzily matches to w245ac . take the frequency mhz record of this row . select the rows whose call sign record fuzzily matches to k216fw . take the frequency mhz record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; call sign ; w245ac } ; frequency mhz } ; hop { filter_eq { all_rows ; call sign ; k216fw } ; frequency mhz } }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is 3rd minimum . the institution record of this row is university of california , davis .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; founded ; 3 } ; institution } ; university of california , davis }"
            ]
        },
        {
            "input": "select the rows whose constituency record fuzzily matches to nordland . take the electorate record of this row . select the rows whose constituency record fuzzily matches to troms . take the electorate record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; constituency ; nordland } ; electorate } ; hop { filter_eq { all_rows ; constituency ; troms } ; electorate } }"
            ]
        },
        {
            "input": "the 2nd maximum money record of all rows is 135000 . the player record of the row with 2nd maximum money record is fred couples .",
            "output": [
                "and { eq { nth_max { all_rows ; money ; 2 } ; 135000 } ; eq { hop { nth_argmax { all_rows ; money ; 2 } ; player } ; fred couples } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to nov 15 . take the cowboys points record of this row . select the rows whose date record fuzzily matches to nov 8 . take the cowboys points record of this row . the first record is 2 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; date ; nov 15 } ; cowboys points } ; hop { filter_eq { all_rows ; date ; nov 8 } ; cowboys points } } ; 2 }"
            ]
        },
        {
            "input": "for the laps records of all rows , most of them are greater than 60 .",
            "output": [
                "most_greater { all_rows ; laps ; 60 }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to 2nd . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; 2nd } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to indianapolis . take the date record of this row . select the rows whose tournament record fuzzily matches to palm beach gardens . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; tournament ; indianapolis } ; date } ; hop { filter_eq { all_rows ; tournament ; palm beach gardens } ; date } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the game record of this row is 1 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; game } ; 1 }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is 0.86 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; 0.86 }"
            ]
        },
        {
            "input": "select the row whose edges record of all rows is maximum . the dual archimedean solid record of this row is truncated icosidodecahedron .",
            "output": [
                "eq { hop { argmax { all_rows ; edges } ; dual archimedean solid } ; truncated icosidodecahedron }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gold ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "the 2nd minimum year record of all rows is 1974 . the partner record of the row with 2nd minimum year record is roscoe tanner .",
            "output": [
                "and { eq { nth_min { all_rows ; year ; 2 } ; 1974 } ; eq { hop { nth_argmin { all_rows ; year ; 2 } ; partner } ; roscoe tanner } }"
            ]
        },
        {
            "input": "select the rows whose home record fuzzily matches to tampa bay . among these rows , select the rows whose attendance record is greater than 19,000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; home ; tampa bay } ; attendance ; 19,000 } } ; 4 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 58 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 58 }"
            ]
        },
        {
            "input": "select the row whose erp w record of all rows is maximum . the call sign record of this row is k211ch .",
            "output": [
                "eq { hop { argmax { all_rows ; erp w } ; call sign } ; k211ch }"
            ]
        },
        {
            "input": "select the rows whose agg record fuzzily matches to 0 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; agg ; 0 } } ; 1 }"
            ]
        },
        {
            "input": "for the winning amount records of all rows , most of them fuzzily match to rs 10 , 00000 .",
            "output": [
                "most_eq { all_rows ; winning amount ; rs 10 , 00000 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 10000 . the average of the crowd record of these rows is 7005 .",
            "output": [
                "round_eq { avg { filter_less { all_rows ; crowd ; 10000 } ; crowd } ; 7005 }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to 2006 afc challenge cup .",
            "output": [
                "most_eq { all_rows ; competition ; 2006 afc challenge cup }"
            ]
        },
        {
            "input": "select the row whose 1 euro = record of all rows is 2nd maximum . the currency record of this row is colombian peso ( cop ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; 1 euro"
            ]
        },
        {
            "input": "for the duration records of all rows , most of them are greater than 4:00 .",
            "output": [
                "most_greater { all_rows ; duration ; 4:00 }"
            ]
        },
        {
            "input": "select the rows whose men 's singles record fuzzily matches to tan joe hok . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; men 's singles ; tan joe hok } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to diana sproveri . there is only one such row in the table . the title record of this unqiue row is my boss ate my homework .",
            "output": [
                "and { only { filter_eq { all_rows ; written by ; diana sproveri } } ; eq { hop { filter_eq { all_rows ; written by ; diana sproveri } ; title } ; my boss ate my homework } }"
            ]
        },
        {
            "input": "the sum of the points jury record of all rows is 235 .",
            "output": [
                "round_eq { sum { all_rows ; points jury } ; 235 }"
            ]
        },
        {
            "input": "select the rows whose record label record fuzzily matches to wild world . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; record label ; wild world } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the enrollment record of all rows is 11100 .",
            "output": [
                "round_eq { sum { all_rows ; enrollment } ; 11100 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is may 24 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; may 24 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 6:21.73 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 6:21.73 }"
            ]
        },
        {
            "input": "select the rows whose year of publication record fuzzily matches to 2007 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year of publication ; 2007 } } ; 4 }"
            ]
        },
        {
            "input": "the 2nd minimum year record of all rows is 1980 .",
            "output": [
                "eq { nth_min { all_rows ; year ; 2 } ; 1980 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 210.6 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 210.6 }"
            ]
        },
        {
            "input": "select the rows whose language form record fuzzily matches to nynorsk . select the row whose area record of these rows is 2nd maximum . the name record of this row is samnanger .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; language form ; nynorsk } ; area ; 2 } ; name } ; samnanger }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to end . among these rows , select the rows whose draft record fuzzily matches to nfl . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; position ; end } ; draft ; nfl } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose content record fuzzily matches to salute . there is only one such row in the table . the television service record of this unqiue row is erde und mensch .",
            "output": [
                "and { only { filter_eq { all_rows ; content ; salute } } ; eq { hop { filter_eq { all_rows ; content ; salute } ; television service } ; erde und mensch } }"
            ]
        },
        {
            "input": "for the primary sponsor ( s ) records of all rows , most of them do not match to n / a .",
            "output": [
                "most_not_eq { all_rows ; primary sponsor ( s ) ; n / a }"
            ]
        },
        {
            "input": "select the rows whose entrant record fuzzily matches to jaguar racing . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; entrant ; jaguar racing } } ; 3 }"
            ]
        },
        {
            "input": "for the mens singles records of all rows , most of them fuzzily match to lee chong wei .",
            "output": [
                "most_eq { all_rows ; mens singles ; lee chong wei }"
            ]
        },
        {
            "input": "the 3rd minimum round record of all rows is 3 . the name record of the row with 3rd minimum round record is scott starks .",
            "output": [
                "and { eq { nth_min { all_rows ; round ; 3 } ; 3 } ; eq { hop { nth_argmin { all_rows ; round ; 3 } ; name } ; scott starks } }"
            ]
        },
        {
            "input": "select the row whose goals scored record of all rows is maximum . the club record of this row is fbk kaunas .",
            "output": [
                "eq { hop { argmax { all_rows ; goals scored } ; club } ; fbk kaunas }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to mercedescup , stuttgart , germany . there is only one such row in the table . the date record of this unqiue row is july 17 , 2011 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; mercedescup , stuttgart , germany } } ; eq { hop { filter_eq { all_rows ; tournament ; mercedescup , stuttgart , germany } ; date } ; july 17 , 2011 } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is finis j garrett .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; finis j garrett }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to kotokasuga . take the top division debut record of this row . select the rows whose name record fuzzily matches to yoshiazuma . take the top division debut record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; kotokasuga } ; top division debut } ; hop { filter_eq { all_rows ; name ; yoshiazuma } ; top division debut } }"
            ]
        },
        {
            "input": "select the rows whose best uk team record fuzzily matches to leeds university . take the year record of this row . select the rows whose best uk team record fuzzily matches to oxford brookes university . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; best uk team ; leeds university } ; year } ; hop { filter_eq { all_rows ; best uk team ; oxford brookes university } ; year } }"
            ]
        },
        {
            "input": "select the row whose first store record of all rows is 3rd minimum . the country record of this row is spain .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first store ; 3 } ; country } ; spain }"
            ]
        },
        {
            "input": "select the rows whose deceased spouse record fuzzily matches to jessica mitford . take the length of marriage record of this row . select the rows whose deceased spouse record fuzzily matches to helen palmer geisel . take the length of marriage record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; deceased spouse ; jessica mitford } ; length of marriage } ; hop { filter_eq { all_rows ; deceased spouse ; helen palmer geisel } ; length of marriage } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd minimum . the institution record of this row is north georgia technical college .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; enrollment ; 2 } ; institution } ; north georgia technical college }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to milano speluzzi . there is only one such row in the table . the entrant record of this unqiue row is scuderia milano .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; milano speluzzi } } ; eq { hop { filter_eq { all_rows ; chassis ; milano speluzzi } ; entrant } ; scuderia milano } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to 2009 african youth championship ( qualifiers ) . among these rows , select the rows whose home team record fuzzily matches to zambia . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; tournament ; 2009 african youth championship ( qualifiers ) } ; home team ; zambia } } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 60644 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 60644 }"
            ]
        },
        {
            "input": "select the rows whose object type record fuzzily matches to irregular galaxy . there is only one such row in the table . the ngc number record of this unqiue row is 6240 . the constellation record of this unqiue row is ophiuchus .",
            "output": [
                "and { only { filter_eq { all_rows ; object type ; irregular galaxy } } ; and { eq { hop { filter_eq { all_rows ; object type ; irregular galaxy } ; ngc number } ; 6240 } ; eq { hop { filter_eq { all_rows ; object type ; irregular galaxy } ; constellation } ; ophiuchus } } }"
            ]
        },
        {
            "input": "select the rows whose aspect record fuzzily matches to 4:3 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; aspect ; 4:3 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose locale record fuzzily matches to prince edward island . there is only one such row in the table . the skip record of this unqiue row is rod macdonald .",
            "output": [
                "and { only { filter_eq { all_rows ; locale ; prince edward island } } ; eq { hop { filter_eq { all_rows ; locale ; prince edward island } ; skip } ; rod macdonald } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd maximum . the institution record of this row is minot state university .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ; 2 } ; institution } ; minot state university }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to acadia . there is only one such row in the table . the player record of this unqiue row is karl ortmanns .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; acadia } } ; eq { hop { filter_eq { all_rows ; college ; acadia } ; player } ; karl ortmanns } }"
            ]
        },
        {
            "input": "select the rows whose to par record is equal to -1 . there is only one such row in the table . the player record of this unqiue row is jodie mudd .",
            "output": [
                "and { only { filter_eq { all_rows ; to par ; -1 } } ; eq { hop { filter_eq { all_rows ; to par ; -1 } ; player } ; jodie mudd } }"
            ]
        },
        {
            "input": "for the supplier records of all rows , most of them fuzzily match to kooga .",
            "output": [
                "most_eq { all_rows ; supplier ; kooga }"
            ]
        },
        {
            "input": "select the row whose matches record of all rows is maximum . the goalkeeper record of this row is asier riesgo .",
            "output": [
                "eq { hop { argmax { all_rows ; matches } ; goalkeeper } ; asier riesgo }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to colombo . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; colombo } } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 46,203 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 46,203 }"
            ]
        },
        {
            "input": "the minimum place record of all rows is 1 . the player record of the row with superlative place record is trevor immelman .",
            "output": [
                "and { eq { min { all_rows ; place } ; 1 } ; eq { hop { argmin { all_rows ; place } ; player } ; trevor immelman } }"
            ]
        },
        {
            "input": "select the row whose released record of all rows is 2nd minimum . the codename record of this row is sb700 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; released ; 2 } ; codename } ; sb700 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . the maximum date record of these rows is august 4 , 2013 .",
            "output": [
                "eq { max { filter_eq { all_rows ; surface ; hard } ; date } ; august 4 , 2013 }"
            ]
        },
        {
            "input": "the average of the overall record record of all rows is 5 .",
            "output": [
                "round_eq { avg { all_rows ; overall record } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose main town record fuzzily matches to adampan . take the population density ( / km 2 ) record of this row . select the rows whose main town record fuzzily matches to chilawathurai . take the population density ( / km 2 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; main town ; adampan } ; population density ( / km 2 ) } ; hop { filter_eq { all_rows ; main town ; chilawathurai } ; population density ( / km 2 ) } }"
            ]
        },
        {
            "input": "select the rows whose seats contested record is greater than 40 . select the row whose no of votes record of these rows is minimum . the party record of this row is bharatiya janata party .",
            "output": [
                "eq { hop { argmin { filter_greater { all_rows ; seats contested ; 40 } ; no of votes } ; party } ; bharatiya janata party }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2002 . take the tournaments played record of this row . select the rows whose year record fuzzily matches to 2003 . take the tournaments played record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2002 } ; tournaments played } ; hop { filter_eq { all_rows ; year ; 2003 } ; tournaments played } }"
            ]
        },
        {
            "input": "for the area ( km square ) records of all rows , most of them are greater than 40 .",
            "output": [
                "most_greater { all_rows ; area ( km square ) ; 40 }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than or equal to 1990 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; year ; 1990 } } ; 4 }"
            ]
        },
        {
            "input": "for the transfer fee records of all rows , most of them fuzzily match to free .",
            "output": [
                "most_eq { all_rows ; transfer fee ; free }"
            ]
        },
        {
            "input": "for the platform ( s ) records of all rows , most of them fuzzily match to windows .",
            "output": [
                "most_eq { all_rows ; platform ( s ) ; windows }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to forward-center . there is only one such row in the table . the player record of this unqiue row is keon clark .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; forward-center } } ; eq { hop { filter_eq { all_rows ; position ; forward-center } ; player } ; keon clark } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to april . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; april } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to china . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; china } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose designation hd record fuzzily matches to hd 178428 . take the arrival date record of this row . select the rows whose designation hd record fuzzily matches to hd 186408 . take the arrival date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; designation hd ; hd 178428 } ; arrival date } ; hop { filter_eq { all_rows ; designation hd ; hd 186408 } ; arrival date } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the venue record of this row is gosford .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; venue } ; gosford }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to jamaica . select the row whose reaction record of these rows is 2nd minimum . the name record of this row is brigitte foster - hylton .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; nationality ; jamaica } ; reaction ; 2 } ; name } ; brigitte foster - hylton }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is maximum . the date record of this row is november 3 .",
            "output": [
                "eq { hop { argmax { all_rows ; location attendance } ; date } ; november 3 }"
            ]
        },
        {
            "input": "select the row whose inn record of all rows is 2nd minimum . the team record of this row is arizona diamondbacks .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; inn ; 2 } ; team } ; arizona diamondbacks }"
            ]
        },
        {
            "input": "the sum of the total record of all rows is 1,353 .",
            "output": [
                "round_eq { sum { all_rows ; total } ; 1,353 }"
            ]
        },
        {
            "input": "select the rows whose segment a record fuzzily matches to metal detectors . take the episode record of this row . select the rows whose segment a record fuzzily matches to riding mowers . take the episode record of this row . the second record is 1 larger than the first record . the episode record of the first row is 151 . the episode record of the second row is 152 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; segment a ; metal detectors } ; episode } ; hop { filter_eq { all_rows ; segment a ; riding mowers } ; episode } } ; -1 } ; and { eq { hop { filter_eq { all_rows ; segment a ; metal detectors } ; episode } ; 151 } ; eq { hop { filter_eq { all_rows ; segment a ; riding mowers } ; episode } ; 152 } } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the womens singles record of this row is wang yihan .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; womens singles } ; wang yihan }"
            ]
        },
        {
            "input": "select the row whose in service for nal record of all rows is minimum . the ship record of this row is sskristianiafjord .",
            "output": [
                "eq { hop { argmin { all_rows ; in service for nal } ; ship } ; sskristianiafjord }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to san francisco 49ers . among these rows , select the rows whose attendance record is equal to 39727 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { filter_eq { all_rows ; opponent ; san francisco 49ers } ; attendance ; 39727 } }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to udonis haslem . among these rows , select the rows whose high assists record fuzzily matches to dwyane wade . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; high rebounds ; udonis haslem } ; high assists ; dwyane wade } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose 2014 2 record of all rows is maximum . the greek national account record of this row is public debt 8 ( billion ) .",
            "output": [
                "eq { hop { argmax { all_rows ; 2014 2 } ; greek national account } ; public debt 8 ( billion ) }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to adams state . there is only one such row in the table . the name record of this unqiue row is carl palazzo .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; adams state } } ; eq { hop { filter_eq { all_rows ; college ; adams state } ; name } ; carl palazzo } }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to various artists ( compilation ) . for the date records of these rows , most of them fuzzily match to 1992 .",
            "output": [
                "most_eq { filter_eq { all_rows ; artist ; various artists ( compilation ) } ; date ; 1992 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to eng . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; eng } } ; 11 }"
            ]
        },
        {
            "input": "for the remittances 2009 records of all rows , most of them are less than 23 .",
            "output": [
                "most_less { all_rows ; remittances 2009 ; 23 }"
            ]
        },
        {
            "input": "select the rows whose lap - by - lap record fuzzily matches to marty reid . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; lap - by - lap ; marty reid } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to end of loan . there is only one such row in the table . the name record of this unqiue row is bertolt .",
            "output": [
                "and { only { filter_eq { all_rows ; type ; end of loan } } ; eq { hop { filter_eq { all_rows ; type ; end of loan } ; name } ; bertolt } }"
            ]
        },
        {
            "input": "for the built records of all rows , most of them are less than 2000 .",
            "output": [
                "most_less { all_rows ; built ; 2000 }"
            ]
        },
        {
            "input": "the 1st minimum place record of all rows is 1 . the artist record of the row with 1st minimum place record is vnia fernandes .",
            "output": [
                "and { eq { nth_min { all_rows ; place ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; place ; 1 } ; artist } ; vnia fernandes } }"
            ]
        },
        {
            "input": "select the row whose season premiere record of all rows is 2nd maximum . the ranking record of this row is 67th .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; season premiere ; 2 } ; ranking } ; 67th }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to fred couples . take the weeks record of this row . select the rows whose player record fuzzily matches to david duval . take the weeks record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; fred couples } ; weeks } ; hop { filter_eq { all_rows ; player ; david duval } ; weeks } }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to kenny br\u00e4ck . take the time / retired record of this row . select the rows whose driver record fuzzily matches to jimmy vasser . take the time / retired record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; driver ; kenny br\u00e4ck } ; time / retired } ; hop { filter_eq { all_rows ; driver ; jimmy vasser } ; time / retired } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; friendly } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 526 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 526 }"
            ]
        },
        {
            "input": "for the loser records of all rows , most of them fuzzily match to kansas city chiefs .",
            "output": [
                "most_eq { all_rows ; loser ; kansas city chiefs }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to won . there is only one such row in the table . the year record of this unqiue row is 1957 .",
            "output": [
                "and { only { filter_eq { all_rows ; status ; won } } ; eq { hop { filter_eq { all_rows ; status ; won } ; year } ; 1957 } }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to carlton . take the home team score record of this row . select the rows whose home team record fuzzily matches to st kilda . take the home team score record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; home team ; carlton } ; home team score } ; hop { filter_eq { all_rows ; home team ; st kilda } ; home team score } }"
            ]
        },
        {
            "input": "for the origin records of all rows , most of them fuzzily match to pune railway station .",
            "output": [
                "most_eq { all_rows ; origin ; pune railway station }"
            ]
        },
        {
            "input": "the average of the home team score record of all rows is 17.67 .",
            "output": [
                "round_eq { avg { all_rows ; home team score } ; 17.67 }"
            ]
        },
        {
            "input": "select the rows whose td 's record is equal to 17 . there is only one such row in the table . the player name record of this unqiue row is torrance marshall .",
            "output": [
                "and { only { filter_eq { all_rows ; td 's ; 17 } } ; eq { hop { filter_eq { all_rows ; td 's ; 17 } ; player name } ; torrance marshall } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to david d terry . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to ezekiel c gathings . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; david d terry } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; ezekiel c gathings } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose no in series record is greater than or equal to 40 . the sum of the us viewers ( millions ) record of these rows is 26.10 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; no in series ; 40 } ; us viewers ( millions ) } ; 26.10 }"
            ]
        },
        {
            "input": "select the rows whose model number record fuzzily matches to core i7 - 2649 m . take the frequency record of this row . select the rows whose model number record fuzzily matches to core i7 - 2629 m . take the frequency record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; model number ; core i7 - 2649 m } ; frequency } ; hop { filter_eq { all_rows ; model number ; core i7 - 2629 m } ; frequency } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the average of the to par record of these rows is -7.6 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; country ; united states } ; to par } ; -7.6 }"
            ]
        },
        {
            "input": "for the results records of all rows , all of them fuzzily match to re - elected .",
            "output": [
                "all_eq { all_rows ; results ; re - elected }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united states } } ; 12 }"
            ]
        },
        {
            "input": "the average of the population ( 2010 ) record of all rows is 17935 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2010 ) } ; 17935 }"
            ]
        },
        {
            "input": "select the row whose 2004 - 05 pts record of all rows is maximum . the team record of this row is v\u00e9lez s\u00e1rsfield .",
            "output": [
                "eq { hop { argmax { all_rows ; 2004 - 05 pts } ; team } ; v\u00e9lez s\u00e1rsfield }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is 2nd minimum . the stadium record of this row is stadio italia .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; capacity ; 2 } ; stadium } ; stadio italia }"
            ]
        },
        {
            "input": "select the rows whose election record fuzzily matches to 2004 . take the share of votes record of this row . select the rows whose election record fuzzily matches to 1996 . take the share of votes record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; election ; 2004 } ; share of votes } ; hop { filter_eq { all_rows ; election ; 1996 } ; share of votes } }"
            ]
        },
        {
            "input": "for the withdrawn records of all rows , most of them are equal to 1951 .",
            "output": [
                "most_eq { all_rows ; withdrawn ; 1951 }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 13 . the average of the points for record of these rows is 1174 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; wins ; 13 } ; points for } ; 1174 }"
            ]
        },
        {
            "input": "select the row whose weight ( lb ) record of all rows is maximum . the name record of this row is gary mcghee .",
            "output": [
                "eq { hop { argmax { all_rows ; weight ( lb ) } ; name } ; gary mcghee }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to away . the average of the attendance record of these rows is 565.33 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; venue ; away } ; attendance } ; 565.33 }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than or equal to 1960 . the maximum rank record of these rows is 17 .",
            "output": [
                "eq { max { filter_greater_eq { all_rows ; year ; 1960 } ; rank } ; 17 }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to double cd . there is only one such row in the table . the region record of this unqiue row is scandinavia . the date record of this unqiue row is 2002 .",
            "output": [
                "and { only { filter_eq { all_rows ; format ; double cd } } ; and { eq { hop { filter_eq { all_rows ; format ; double cd } ; region } ; scandinavia } ; eq { hop { filter_eq { all_rows ; format ; double cd } ; date } ; 2002 } } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to big time babysitting . take the original us air date record of this row . select the rows whose title record fuzzily matches to big time gold . take the original us air date record of this row . the first record is less than the second record . the original us air date record of the first row is october 13 , 2012 . the original us air date record of the second row is october 20 , 2012 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; title ; big time babysitting } ; original us air date } ; hop { filter_eq { all_rows ; title ; big time gold } ; original us air date } } ; and { eq { hop { filter_eq { all_rows ; title ; big time babysitting } ; original us air date } ; october 13 , 2012 } ; eq { hop { filter_eq { all_rows ; title ; big time gold } ; original us air date } ; october 20 , 2012 } } }"
            ]
        },
        {
            "input": "select the rows whose album record fuzzily matches to come on over . take the weeks at number one record of this row . select the rows whose album record fuzzily matches to let 's talk about love . take the weeks at number one record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; album ; come on over } ; weeks at number one } ; hop { filter_eq { all_rows ; album ; let 's talk about love } ; weeks at number one } }"
            ]
        },
        {
            "input": "select the rows whose theme record fuzzily matches to contestant 's choice . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; theme ; contestant 's choice } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose worldwide gross record of all rows is 4th maximum . the title record of this row is the hobbit : an unexpected journey .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; worldwide gross ; 4 } ; title } ; the hobbit : an unexpected journey }"
            ]
        },
        {
            "input": "for the population records of all rows , most of them are greater than 200 .",
            "output": [
                "most_greater { all_rows ; population ; 200 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to canada . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; canada } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose college / junior / club team ( league ) record fuzzily matches to northern michigan university ( ncaa ) . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; college / junior / club team ( league ) ; northern michigan university ( ncaa ) } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose nominee record fuzzily matches to anthony hopkins . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nominee ; anthony hopkins } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose sack record of all rows is maximum . the player record of this row is craig walls .",
            "output": [
                "eq { hop { argmax { all_rows ; sack } ; player } ; craig walls }"
            ]
        },
        {
            "input": "select the rows whose pos record fuzzily matches to gk . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pos ; gk } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd maximum . the incumbent record of this row is lane evans .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; first elected ; 2 } ; incumbent } ; lane evans }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to mario fazio . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; winner ; mario fazio } }"
            ]
        },
        {
            "input": "select the row whose torque ( nm ) / rpm record of all rows is maximum . the model / engine record of this row is 2.0 duratec he .",
            "output": [
                "eq { hop { argmax { all_rows ; torque ( nm ) / rpm } ; model / engine } ; 2.0 duratec he }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd minimum . the athletes record of this row is mathieu goubel .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 2 } ; athletes } ; mathieu goubel }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 3284 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 3284 }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to 3 . take the pick record of this row . select the rows whose round record fuzzily matches to 2 . take the pick record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; round ; 3 } ; pick } ; hop { filter_eq { all_rows ; round ; 2 } ; pick } }"
            ]
        },
        {
            "input": "select the rows whose outcome record fuzzily matches to winner . among these rows , select the rows whose surface record fuzzily matches to clay . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; outcome ; winner } ; surface ; clay } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; surface ; carpet } }"
            ]
        },
        {
            "input": "for the acronym records of all rows , most of them fuzzily match to - .",
            "output": [
                "most_eq { all_rows ; acronym ; - }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to sacked . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; sacked } } ; 4 }"
            ]
        },
        {
            "input": "the average of the first elected record of all rows is 1953.5 .",
            "output": [
                "round_eq { avg { all_rows ; first elected } ; 1953.5 }"
            ]
        },
        {
            "input": "the sum of the current record of all rows is 10 .",
            "output": [
                "round_eq { sum { all_rows ; current } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to poland . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; poland } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to canada ( can ) . take the silver record of this row . select the rows whose nation record fuzzily matches to puerto rico ( pur ) . take the silver record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; canada ( can ) } ; silver } ; hop { filter_eq { all_rows ; nation ; puerto rico ( pur ) } ; silver } }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to mcdyess . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high rebounds ; mcdyess } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to the open championship . take the cuts made record of this row . select the rows whose tournament record fuzzily matches to pga championship . take the cuts made record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; the open championship } ; cuts made } ; hop { filter_eq { all_rows ; tournament ; pga championship } ; cuts made } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the venue record of this row is mcg .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; venue } ; mcg }"
            ]
        },
        {
            "input": "select the rows whose cores record is equal to 1 . there is only one such row in the table . the processor record of this unqiue row is conroe - l .",
            "output": [
                "and { only { filter_eq { all_rows ; cores ; 1 } } ; eq { hop { filter_eq { all_rows ; cores ; 1 } ; processor } ; conroe - l } }"
            ]
        },
        {
            "input": "select the rows whose capacity record is greater than 10000 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { all_rows ; capacity ; 10000 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose frequency record fuzzily matches to 150 mhz . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; frequency ; 150 mhz } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose election record is equal to 2013 . for the inhabitants records of these rows , all of them are greater than or equal to 100000 .",
            "output": [
                "all_greater_eq { filter_eq { all_rows ; election ; 2013 } ; inhabitants ; 100000 }"
            ]
        },
        {
            "input": "select the rows whose launcher record fuzzily matches to saturn v . there is only one such row in the table . the flights record of this unqiue row is 10 lun / or .",
            "output": [
                "and { only { filter_eq { all_rows ; launcher ; saturn v } } ; eq { hop { filter_eq { all_rows ; launcher ; saturn v } ; flights } ; 10 lun / or } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to george miller . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to cal dooley . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; george miller } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; cal dooley } ; first elected } }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are equal to 1996 .",
            "output": [
                "most_eq { all_rows ; year ; 1996 }"
            ]
        },
        {
            "input": "select the row whose oilers points record of all rows is 3rd minimum . the date record of this row is oct 29 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; oilers points ; 3 } ; date } ; oct 29 }"
            ]
        },
        {
            "input": "select the rows whose network record fuzzily matches to the wb . the sum of the viewers in millions record of these rows is 7.62 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; network ; the wb } ; viewers in millions } ; 7.62 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is libertad .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; libertad }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 24000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 24000 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to august . among these rows , select the rows whose winning driver record fuzzily matches to maur\u00edcio gugelmin . there is only one such row in the table . the winning team record of this unqiue row is pacwest .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; date ; august } ; winning driver ; maur\u00edcio gugelmin } } ; eq { hop { filter_eq { filter_eq { all_rows ; date ; august } ; winning driver ; maur\u00edcio gugelmin } ; winning team } ; pacwest } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to mario dom\u00ednguez . take the qual 2 record of this row . select the rows whose name record fuzzily matches to alex sperafico . take the qual 2 record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; mario dom\u00ednguez } ; qual 2 } ; hop { filter_eq { all_rows ; name ; alex sperafico } ; qual 2 } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1987 . the sum of the notes record of these rows is 4:27:46 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 1987 } ; notes } ; 4:27:46 }"
            ]
        },
        {
            "input": "select the rows whose gender record fuzzily matches to f . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gender ; f } } ; 2 }"
            ]
        },
        {
            "input": "the average of the runs record of all rows is 5390 .",
            "output": [
                "round_eq { avg { all_rows ; runs } ; 5390 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is 2nd minimum . the country record of this row is czech republic .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; time ; 2 } ; country } ; czech republic }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them are less than 54.0 .",
            "output": [
                "most_less { all_rows ; time ; 54.0 }"
            ]
        },
        {
            "input": "select the rows whose shot pct record is greater than or equal to 80 % . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; shot pct ; 80 % } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose events record of all rows is maximum . the player record of this row is jim thorpe .",
            "output": [
                "eq { hop { argmax { all_rows ; events } ; player } ; jim thorpe }"
            ]
        },
        {
            "input": "select the row whose years for grizzlies record of all rows is minimum . the player record of this row is eric leckner .",
            "output": [
                "eq { hop { argmin { all_rows ; years for grizzlies } ; player } ; eric leckner }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to pepsi center . among these rows , select the rows whose location attendance record is greater than 19,500 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { filter_eq { all_rows ; location attendance ; pepsi center } ; location attendance ; 19,500 } }"
            ]
        },
        {
            "input": "select the row whose events record of all rows is maximum . the tournament record of this row is pga championship .",
            "output": [
                "eq { hop { argmax { all_rows ; events } ; tournament } ; pga championship }"
            ]
        },
        {
            "input": "select the rows whose points ( total 500 ) record is greater than 300 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ( total 500 ) ; 300 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose difference record is equal to 6 . there is only one such row in the table . the team record of this unqiue row is santos .",
            "output": [
                "and { only { filter_eq { all_rows ; difference ; 6 } } ; eq { hop { filter_eq { all_rows ; difference ; 6 } ; team } ; santos } }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 154 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 154 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to republican . there is only one such row in the table . the incumbent record of this unqiue row is jimmy quillen .",
            "output": [
                "and { only { filter_eq { all_rows ; party ; republican } } ; eq { hop { filter_eq { all_rows ; party ; republican } ; incumbent } ; jimmy quillen } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to yamaha . the average of the points record of these rows is 4.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; team ; yamaha } ; points } ; 4.5 }"
            ]
        },
        {
            "input": "the 3rd minimum days held record of all rows is 196 .",
            "output": [
                "eq { nth_min { all_rows ; days held ; 3 } ; 196 }"
            ]
        },
        {
            "input": "select the rows whose ceased operation record fuzzily matches to failed at launch . there is only one such row in the table . the name record of this unqiue row is injun 2 .",
            "output": [
                "and { only { filter_eq { all_rows ; ceased operation ; failed at launch } } ; eq { hop { filter_eq { all_rows ; ceased operation ; failed at launch } ; name } ; injun 2 } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 17724 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 17724 }"
            ]
        },
        {
            "input": "the sum of the total record of all rows is 12 .",
            "output": [
                "round_eq { sum { all_rows ; total } ; 12 }"
            ]
        },
        {
            "input": "the maximum goals record of all rows is 15 . the scorer record of the row with superlative goals record is choi sang - kuk .",
            "output": [
                "and { eq { max { all_rows ; goals } ; 15 } ; eq { hop { argmax { all_rows ; goals } ; scorer } ; choi sang - kuk } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly match . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; friendly match } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose place record fuzzily matches to t2 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; place ; t2 } } ; 3 }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is .67 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; .67 }"
            ]
        },
        {
            "input": "select the rows whose gender record fuzzily matches to f . among these rows , select the rows whose residence record fuzzily matches to halifax . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; gender ; f } ; residence ; halifax } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose bbc one presenter ( s ) record fuzzily matches to jake humphrey . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; bbc one presenter ( s ) ; jake humphrey } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose agg record of all rows is maximum . the team 1 record of this row is manzini wanderers .",
            "output": [
                "eq { hop { argmax { all_rows ; agg } ; team 1 } ; manzini wanderers }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to a . there is only one such row in the table . the city of license record of this unqiue row is kingston .",
            "output": [
                "and { only { filter_eq { all_rows ; class ; a } } ; eq { hop { filter_eq { all_rows ; class ; a } ; city of license } ; kingston } }"
            ]
        },
        {
            "input": "select the rows whose first aired record fuzzily matches to or . there is only one such row in the table . the episode title record of this unqiue row is the great american melting pot .",
            "output": [
                "and { only { filter_eq { all_rows ; first aired ; or } } ; eq { hop { filter_eq { all_rows ; first aired ; or } ; episode title } ; the great american melting pot } }"
            ]
        },
        {
            "input": "select the rows whose engine type record fuzzily matches to diesel - electric . there is only one such row in the table . the make & model record of this unqiue row is orion vii 3rd generation .",
            "output": [
                "and { only { filter_eq { all_rows ; engine type ; diesel - electric } } ; eq { hop { filter_eq { all_rows ; engine type ; diesel - electric } ; make & model } ; orion vii 3rd generation } }"
            ]
        },
        {
            "input": "select the row whose frequency record of all rows is 2nd maximum . the model number record of this row is turion 64 x2 tl - 66 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; frequency ; 2 } ; model number } ; turion 64 x2 tl - 66 }"
            ]
        },
        {
            "input": "select the rows whose position record is less than or equal to 5 . the average of the points record of these rows is 22 .",
            "output": [
                "round_eq { avg { filter_less_eq { all_rows ; position ; 5 } ; points } ; 22 }"
            ]
        },
        {
            "input": "select the row whose gross record of all rows is maximum . the title record of this row is et the extra - terrestrial .",
            "output": [
                "eq { hop { argmax { all_rows ; gross } ; title } ; et the extra - terrestrial }"
            ]
        },
        {
            "input": "select the row whose podiums record of all rows is maximum . the points record of this row is 357 .",
            "output": [
                "eq { hop { argmax { all_rows ; podiums } ; points } ; 357 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 2nd minimum . the player record of this row is burns mcpherson .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; pick ; 2 } ; player } ; burns mcpherson }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2005 . take the races record of this row . select the rows whose season record fuzzily matches to 2012 . take the races record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2005 } ; races } ; hop { filter_eq { all_rows ; season ; 2012 } ; races } }"
            ]
        },
        {
            "input": "select the rows whose number of electorates ( 2009 ) record is greater than 150000 . among these rows , select the rows whose number of electorates ( 2009 ) record is greater than 150000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; number of electorates ( 2009 ) ; 150000 } ; number of electorates ( 2009 ) ; 150000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date successor seated record fuzzily matches to not filled this congress . there is only one such row in the table . the district record of this unqiue row is virginia 2nd .",
            "output": [
                "and { only { filter_eq { all_rows ; date successor seated ; not filled this congress } } ; eq { hop { filter_eq { all_rows ; date successor seated ; not filled this congress } ; district } ; virginia 2nd } }"
            ]
        },
        {
            "input": "select the row whose attempts record of all rows is 2nd maximum . the name record of this row is anthony thomas .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attempts ; 2 } ; name } ; anthony thomas }"
            ]
        },
        {
            "input": "select the rows whose launch date ( ddmmyyyy ) record fuzzily matches to 2005 . among these rows , select the rows whose connection speed record fuzzily matches to 236.8 kbit/s . there is only one such row in the table . the carrier record of this unqiue row is moldcell .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; launch date ( ddmmyyyy ) ; 2005 } ; connection speed ; 236.8 kbit/s } } ; eq { hop { filter_eq { filter_eq { all_rows ; launch date ( ddmmyyyy ) ; 2005 } ; connection speed ; 236.8 kbit/s } ; carrier } ; moldcell } }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to andreas lundstedt . take the points record of this row . select the rows whose artist record fuzzily matches to garmarna . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; artist ; andreas lundstedt } ; points } ; hop { filter_eq { all_rows ; artist ; garmarna } ; points } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to ray lindwall . take the wickets record of this row . select the rows whose player record fuzzily matches to bill johnston . take the wickets record of this row . the first record is equal to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; player ; ray lindwall } ; wickets } ; hop { filter_eq { all_rows ; player ; bill johnston } ; wickets } }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 80962 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 80962 }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to whalen .",
            "output": [
                "most_eq { all_rows ; high assists ; whalen }"
            ]
        },
        {
            "input": "select the row whose won record of all rows is 2nd maximum . the club record of this row is treorchy rfc .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; won ; 2 } ; club } ; treorchy rfc }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jerry grote . take the from record of this row . select the rows whose player record fuzzily matches to andrew goudelock . take the from record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; jerry grote } ; from } ; hop { filter_eq { all_rows ; player ; andrew goudelock } ; from } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to portugal . take the rank record of this row . select the rows whose country record fuzzily matches to cuba . take the rank record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; country ; portugal } ; rank } ; hop { filter_eq { all_rows ; country ; cuba } ; rank } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 1.67 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 1.67 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to jack thomas brinkley . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to dawson mathis . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; jack thomas brinkley } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; dawson mathis } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose method record fuzzily matches to no contest . there is only one such row in the table . the opponent record of this unqiue row is rob emerson .",
            "output": [
                "and { only { filter_eq { all_rows ; method ; no contest } } ; eq { hop { filter_eq { all_rows ; method ; no contest } ; opponent } ; rob emerson } }"
            ]
        },
        {
            "input": "select the rows whose region record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; region } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose authority record fuzzily matches to state integrated . there is only one such row in the table . the name record of this unqiue row is st joseph 's catholic school .",
            "output": [
                "and { only { filter_eq { all_rows ; authority ; state integrated } } ; eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st joseph 's catholic school } }"
            ]
        },
        {
            "input": "select the rows whose length record is less than 1:00 . there is only one such row in the table . the title record of this unqiue row is intro .",
            "output": [
                "and { only { filter_less { all_rows ; length ; 1:00 } } ; eq { hop { filter_less { all_rows ; length ; 1:00 } ; title } ; intro } }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 145.5 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 145.5 }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to jean behra . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; jean behra } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to kohl center madison , wi . there is only one such row in the table . the acc team record of this unqiue row is nc state .",
            "output": [
                "and { only { filter_eq { all_rows ; location ; kohl center madison , wi } } ; eq { hop { filter_eq { all_rows ; location ; kohl center madison , wi } ; acc team } ; nc state } }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the nationality record of this row is australia .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; nationality } ; australia }"
            ]
        },
        {
            "input": "select the rows whose decile record is equal to 9 . there is only one such row in the table . the name record of this unqiue row is elsthorpe school .",
            "output": [
                "and { only { filter_eq { all_rows ; decile ; 9 } } ; eq { hop { filter_eq { all_rows ; decile ; 9 } ; name } ; elsthorpe school } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to ryan lamb . take the tries record of this row . select the rows whose name record fuzzily matches to shane drahm . take the tries record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; ryan lamb } ; tries } ; hop { filter_eq { all_rows ; name ; shane drahm } ; tries } }"
            ]
        },
        {
            "input": "select the row whose apps record of all rows is maximum . the name record of this row is john hall .",
            "output": [
                "eq { hop { argmax { all_rows ; apps } ; name } ; john hall }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to nigeria . take the penalty record of this row . select the rows whose country record fuzzily matches to uzbekistan . take the penalty record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; country ; nigeria } ; penalty } ; hop { filter_eq { all_rows ; country ; uzbekistan } ; penalty } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to alexey ignashov . take the round record of this row . select the rows whose opponent record fuzzily matches to lee hasdell . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; alexey ignashov } ; round } ; hop { filter_eq { all_rows ; opponent ; lee hasdell } ; round } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to david trimble . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to thomas p moore . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; david trimble } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; thomas p moore } ; first elected } }"
            ]
        },
        {
            "input": "the average of the percentage record of all rows is 50 % .",
            "output": [
                "round_eq { avg { all_rows ; percentage } ; 50 % }"
            ]
        },
        {
            "input": "the sum of the issue price record of all rows is 395.1 .",
            "output": [
                "round_eq { sum { all_rows ; issue price } ; 395.1 }"
            ]
        },
        {
            "input": "select the row whose black knights points record of all rows is 4th minimum . the date record of this row is oct 20 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; black knights points ; 4 } ; date } ; oct 20 }"
            ]
        },
        {
            "input": "select the rows whose frequency record is less than 1000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; frequency ; 1000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to south africa . there is only one such row in the table . the player record of this unqiue row is wayne westner .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; south africa } } ; eq { hop { filter_eq { all_rows ; country ; south africa } ; player } ; wayne westner } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to ch . there is only one such row in the table . the building record of this unqiue row is victoria hall .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; ch } } ; eq { hop { filter_eq { all_rows ; country ; ch } ; building } ; victoria hall } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the date record of this row is october 1 , 1989 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; date } ; october 1 , 1989 }"
            ]
        },
        {
            "input": "select the rows whose cause record fuzzily matches to gas explosion . the number of such rows is 16 .",
            "output": [
                "eq { count { filter_eq { all_rows ; cause ; gas explosion } } ; 16 }"
            ]
        },
        {
            "input": "select the rows whose wickets record is greater than 700 . there is only one such row in the table . the name record of this unqiue row is shane warne .",
            "output": [
                "and { only { filter_greater { all_rows ; wickets ; 700 } } ; eq { hop { filter_greater { all_rows ; wickets ; 700 } ; name } ; shane warne } }"
            ]
        },
        {
            "input": "select the rows whose flagship station record fuzzily matches to wrko . there is only one such row in the table . the color commentator ( s ) record of this unqiue row is cedric maxwell .",
            "output": [
                "and { only { filter_eq { all_rows ; flagship station ; wrko } } ; eq { hop { filter_eq { all_rows ; flagship station ; wrko } ; color commentator ( s ) } ; cedric maxwell } }"
            ]
        },
        {
            "input": "select the rows whose listed record fuzzily matches to 1997 . for the built records of these rows , most of them fuzzily match to 1894 .",
            "output": [
                "most_eq { filter_eq { all_rows ; listed ; 1997 } ; built ; 1894 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to netherlands . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; netherlands } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose film record fuzzily matches to bullets over broadway . among these rows , select the rows whose result record fuzzily matches to nominated . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; film ; bullets over broadway } ; result ; nominated } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the athlete record of this row is anastasia davydova & anastasiya yermakova .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; athlete } ; anastasia davydova & anastasiya yermakova }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are greater than or equal to 9 .",
            "output": [
                "most_greater_eq { all_rows ; points ; 9 }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 6 . there is only one such row in the table . the nation record of this unqiue row is united states .",
            "output": [
                "and { only { filter_eq { all_rows ; gold ; 6 } } ; eq { hop { filter_eq { all_rows ; gold ; 6 } ; nation } ; united states } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet ( i ) . there is only one such row in the table . the tournament record of this unqiue row is wolfsburg , germany .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet ( i ) } } ; eq { hop { filter_eq { all_rows ; surface ; carpet ( i ) } ; tournament } ; wolfsburg , germany } }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 3 . there is only one such row in the table . the nation record of this unqiue row is china ( chn ) .",
            "output": [
                "and { only { filter_eq { all_rows ; gold ; 3 } } ; eq { hop { filter_eq { all_rows ; gold ; 3 } ; nation } ; china ( chn ) } }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to lebron james . among these rows , select the rows whose attendance record is less than 15000 . there is only one such row in the table . the date record of this unqiue row is february 20 .",
            "output": [
                "and { only { filter_less { filter_eq { all_rows ; leading scorer ; lebron james } ; attendance ; 15000 } } ; eq { hop { filter_less { filter_eq { all_rows ; leading scorer ; lebron james } ; attendance ; 15000 } ; date } ; february 20 } }"
            ]
        },
        {
            "input": "select the rows whose goals record is equal to 33 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; goals ; 33 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; date } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to lee hasdell . take the round record of this row . select the rows whose opponent record fuzzily matches to zabir elbiev . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; lee hasdell } ; round } ; hop { filter_eq { all_rows ; opponent ; zabir elbiev } ; round } }"
            ]
        },
        {
            "input": "select the row whose age record of all rows is 1st maximum . the contestant record of this row is cindy guerrero reynoso .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; age ; 1 } ; contestant } ; cindy guerrero reynoso }"
            ]
        },
        {
            "input": "select the rows whose classification record fuzzily matches to fraternity & sorority . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; classification ; fraternity & sorority } } ; 2 }"
            ]
        },
        {
            "input": "the average of the erp w record of all rows is 23 .",
            "output": [
                "round_eq { avg { all_rows ; erp w } ; 23 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to cricket . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; cricket } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to dwight lewis . take the round record of this row . select the rows whose player record fuzzily matches to doug hogan . take the round record of this row . the first record is less than the second record . the round record of the first row is 10 . the round record of the second row is 16 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; player ; dwight lewis } ; round } ; hop { filter_eq { all_rows ; player ; doug hogan } ; round } } ; and { eq { hop { filter_eq { all_rows ; player ; dwight lewis } ; round } ; 10 } ; eq { hop { filter_eq { all_rows ; player ; doug hogan } ; round } ; 16 } } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to metro ag . take the revenue ( mil ) record of this row . select the rows whose name record fuzzily matches to daimler ag . take the revenue ( mil ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; metro ag } ; revenue ( mil ) } ; hop { filter_eq { all_rows ; name ; daimler ag } ; revenue ( mil ) } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the opponent in the final record of this row is milos raonic .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; opponent in the final } ; milos raonic }"
            ]
        },
        {
            "input": "for the year joined records of all rows , most of them are less than 1978 .",
            "output": [
                "most_less { all_rows ; year joined ; 1978 }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are equal to 1 .",
            "output": [
                "most_eq { all_rows ; score ; 1 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to pandeli evangjeli ( 2nd time ) . take the term start record of this row . select the rows whose name record fuzzily matches to mehdi bej frash\u00ebri ( 1st time ) . take the term start record of this row . the first record is less than the second record . the term start record of the first row is 6 march 1930 . the term start record of the second row is 22 october 1935 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; name ; pandeli evangjeli ( 2nd time ) } ; term start } ; hop { filter_eq { all_rows ; name ; mehdi bej frash\u00ebri ( 1st time ) } ; term start } } ; and { eq { hop { filter_eq { all_rows ; name ; pandeli evangjeli ( 2nd time ) } ; term start } ; 6 march 1930 } ; eq { hop { filter_eq { all_rows ; name ; mehdi bej frash\u00ebri ( 1st time ) } ; term start } ; 22 october 1935 } } }"
            ]
        },
        {
            "input": "select the rows whose city or town record fuzzily matches to istanbul . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; city or town ; istanbul } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose prominence record of all rows is 15th maximum . the mountain peak record of this row is mount fernow .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; prominence ; 15 } ; mountain peak } ; mount fernow }"
            ]
        },
        {
            "input": "select the rows whose nominated / won record fuzzily matches to won . the 2nd minimum year record of these rows is 2008 .",
            "output": [
                "eq { nth_min { filter_eq { all_rows ; nominated / won ; won } ; year ; 2 } ; 2008 }"
            ]
        },
        {
            "input": "for the screen size ( inch ) records of all rows , most of them are greater than or equal to 7 .",
            "output": [
                "most_greater_eq { all_rows ; screen size ( inch ) ; 7 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to new girls . take the original airdate record of this row . select the rows whose title record fuzzily matches to freedom . take the original airdate record of this row . the first record is greater than the second record . the original airdate record of the first row is 25 march 1978 . the original airdate record of the second row is 18 march 1978 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; title ; new girls } ; original airdate } ; hop { filter_eq { all_rows ; title ; freedom } ; original airdate } } ; and { eq { hop { filter_eq { all_rows ; title ; new girls } ; original airdate } ; 25 march 1978 } ; eq { hop { filter_eq { all_rows ; title ; freedom } ; original airdate } ; 18 march 1978 } } }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 12 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the date record of this row is 8 october 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; date } ; 8 october 2010 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the club record of this row is warrnambool .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; club } ; warrnambool }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 58746 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 58746 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 3rd minimum . the venue record of this row is victoria park . the crowd record of this row is 23000 .",
            "output": [
                "and { eq { hop { nth_argmin { all_rows ; date ; 3 } ; venue } ; victoria park } ; eq { hop { nth_argmin { all_rows ; date ; 3 } ; crowd } ; 23000 } }"
            ]
        },
        {
            "input": "select the row whose week record of all rows is 9th minimum . the finalist record of this row is francesca schiavone .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; week ; 9 } ; finalist } ; francesca schiavone }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the location attendance record of this row is verizon center 14485 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; location attendance } ; verizon center 14485 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to bridgewater , massachusetts . take the enrollment record of this row . select the rows whose location record fuzzily matches to fitchburg , massachusetts . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; location ; bridgewater , massachusetts } ; enrollment } ; hop { filter_eq { all_rows ; location ; fitchburg , massachusetts } ; enrollment } }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to august . there is only one such row in the table . the family / families record of this unqiue row is the hillhouse - docherty family .",
            "output": [
                "and { only { filter_eq { all_rows ; original air date ; august } } ; eq { hop { filter_eq { all_rows ; original air date ; august } ; family / families } ; the hillhouse - docherty family } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to minnesota vikings . take the date record of this row . select the rows whose opponent record fuzzily matches to green bay packers . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; minnesota vikings } ; date } ; hop { filter_eq { all_rows ; opponent ; green bay packers } ; date } }"
            ]
        },
        {
            "input": "select the rows whose genre record fuzzily matches to period drama . there is only one such row in the table . the english title ( chinese title ) record of this unqiue row is old time buddy - to catch a thief \u96e3\u5144\u96e3\u5f1f\u4e4b\u795e\u63a2\u674e\u5947 .",
            "output": [
                "and { only { filter_eq { all_rows ; genre ; period drama } } ; eq { hop { filter_eq { all_rows ; genre ; period drama } ; english title ( chinese title ) } ; old time buddy - to catch a thief \u96e3\u5144\u96e3\u5f1f\u4e4b\u795e\u63a2\u674e\u5947 } }"
            ]
        },
        {
            "input": "select the row whose starts record of all rows is 2nd maximum . the year record of this row is 1994 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; starts ; 2 } ; year } ; 1994 }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to siddique . take the year record of this row . select the rows whose director record fuzzily matches to arbaaz khan . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; director ; siddique } ; year } ; hop { filter_eq { all_rows ; director ; arbaaz khan } ; year } }"
            ]
        },
        {
            "input": "select the row whose swing to gain record of all rows is 3rd maximum . the constituency record of this row is ayr .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; swing to gain ; 3 } ; constituency } ; ayr }"
            ]
        },
        {
            "input": "select the rows whose area record fuzzily matches to azad kashmir . take the % muslim record of this row . select the rows whose area record fuzzily matches to gilgit - baltistan . take the % muslim record of this row . the first record is 1 % larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; area ; azad kashmir } ; % muslim } ; hop { filter_eq { all_rows ; area ; gilgit - baltistan } ; % muslim } } ; 1 % }"
            ]
        },
        {
            "input": "select the rows whose rank record is less than or equal to 3 . among these rows , select the rows whose loss record is greater than or equal to 1 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { filter_less_eq { all_rows ; rank ; 3 } ; loss ; 1 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose institution record is arbitrary . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_all { all_rows ; institution } } ; 11 }"
            ]
        },
        {
            "input": "select the row whose population record of all rows is maximum . the borough record of this row is fleurimont .",
            "output": [
                "eq { hop { argmax { all_rows ; population } ; borough } ; fleurimont }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to january . there is only one such row in the table . the title record of this unqiue row is checking out .",
            "output": [
                "and { only { filter_eq { all_rows ; original air date ; january } } ; eq { hop { filter_eq { all_rows ; original air date ; january } ; title } ; checking out } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to uchana kalan . take the number of electorates ( 2009 ) record of this row . select the rows whose name record fuzzily matches to bawani khera . take the number of electorates ( 2009 ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; uchana kalan } ; number of electorates ( 2009 ) } ; hop { filter_eq { all_rows ; name ; bawani khera } ; number of electorates ( 2009 ) } }"
            ]
        },
        {
            "input": "select the rows whose enrollment record is greater than 3000 . there is only one such row in the table . the school record of this unqiue row is lake central .",
            "output": [
                "and { only { filter_greater { all_rows ; enrollment ; 3000 } } ; eq { hop { filter_greater { all_rows ; enrollment ; 3000 } ; school } ; lake central } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the driver / passenger record of this row is dani\u00e3l willemsen / sven verbrugge 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; driver / passenger } ; dani\u00e3l willemsen / sven verbrugge 1 }"
            ]
        },
        {
            "input": "select the rows whose pos record fuzzily matches to d . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pos ; d } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose office record fuzzily matches to representative . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; office ; representative } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to round of 32 - 1st leg . take the attendance record of this row . select the rows whose round record fuzzily matches to round of 32 - 2nd leg . take the attendance record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; round ; round of 32 - 1st leg } ; attendance } ; hop { filter_eq { all_rows ; round ; round of 32 - 2nd leg } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; surface ; hard } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose peak record is equal to 1 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; peak ; 1 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose pavement record fuzzily matches to asphalt . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; pavement ; asphalt } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to ferrari 156 aero . there is only one such row in the table . the year record of this unqiue row is 1964 .",
            "output": [
                "and { only { filter_eq { all_rows ; chassis ; ferrari 156 aero } } ; eq { hop { filter_eq { all_rows ; chassis ; ferrari 156 aero } ; year } ; 1964 } }"
            ]
        },
        {
            "input": "select the row whose first season record of all rows is maximum . the club record of this row is godoy cruz .",
            "output": [
                "eq { hop { argmax { all_rows ; first season } ; club } ; godoy cruz }"
            ]
        },
        {
            "input": "select the row whose margin of victory record of all rows is maximum . the date record of this row is 22 jun 2006 .",
            "output": [
                "eq { hop { argmax { all_rows ; margin of victory } ; date } ; 22 jun 2006 }"
            ]
        },
        {
            "input": "select the rows whose director record fuzzily matches to fraser . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; director ; fraser } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose weeks on top record of all rows is 2nd maximum . the song record of this row is livin ' la vida loca .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; weeks on top ; 2 } ; song } ; livin ' la vida loca }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to european cup . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; european cup } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is june 25 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; june 25 }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to lee gregory . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; leading scorer ; lee gregory } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose run time record of all rows is 2nd maximum . the episode number record of this row is 311 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; run time ; 2 } ; episode number } ; 311 }"
            ]
        },
        {
            "input": "select the rows whose erp w record is equal to 10 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; erp w ; 10 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to ecotec l61 i4 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; engine ; ecotec l61 i4 } } ; 6 }"
            ]
        },
        {
            "input": "for the first issue records of all rows , most of them fuzzily match to august 2008 .",
            "output": [
                "most_eq { all_rows ; first issue ; august 2008 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2005 . take the points record of this row . select the rows whose year record fuzzily matches to 2007 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2005 } ; points } ; hop { filter_eq { all_rows ; year ; 2007 } ; points } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1995 . take the points record of this row . select the rows whose year record fuzzily matches to 1996 . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1995 } ; points } ; hop { filter_eq { all_rows ; year ; 1996 } ; points } }"
            ]
        },
        {
            "input": "select the row whose quantity made record of all rows is 4th maximum . the class record of this row is c .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; quantity made ; 4 } ; class } ; c }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is maximum . the season record of this row is 2009 - 10 .",
            "output": [
                "eq { hop { argmax { all_rows ; goals } ; season } ; 2009 - 10 }"
            ]
        },
        {
            "input": "select the rows whose erp w record is equal to 27 . there is only one such row in the table . the call sign record of this unqiue row is w230aa .",
            "output": [
                "and { only { filter_eq { all_rows ; erp w ; 27 } } ; eq { hop { filter_eq { all_rows ; erp w ; 27 } ; call sign } ; w230aa } }"
            ]
        },
        {
            "input": "select the rows whose channel record is equal to 40 . there is only one such row in the table . the territory record of this unqiue row is indonesia .",
            "output": [
                "and { only { filter_eq { all_rows ; channel ; 40 } } ; eq { hop { filter_eq { all_rows ; channel ; 40 } ; territory } ; indonesia } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to republican . the minimum district record of these rows is texas 8 .",
            "output": [
                "eq { min { filter_eq { all_rows ; party ; republican } ; district } ; texas 8 }"
            ]
        },
        {
            "input": "the average of the us viewers ( millions ) record of all rows is 0.944 .",
            "output": [
                "round_eq { avg { all_rows ; us viewers ( millions ) } ; 0.944 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 29 july 1978 .",
            "output": [
                "all_eq { all_rows ; date ; 29 july 1978 }"
            ]
        },
        {
            "input": "the average of the time record of all rows is 45.16 .",
            "output": [
                "round_eq { avg { all_rows ; time } ; 45.16 }"
            ]
        },
        {
            "input": "select the rows whose rec record is less than 50 . the sum of the yards record of these rows is 37 .",
            "output": [
                "round_eq { sum { filter_less { all_rows ; rec ; 50 } ; yards } ; 37 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to florida state . there is only one such row in the table . the player record of this unqiue row is terry , nat nat terry .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; florida state } } ; eq { hop { filter_eq { all_rows ; college ; florida state } ; player } ; terry , nat nat terry } }"
            ]
        },
        {
            "input": "the average of the televote / sms record of all rows is 8.33 .",
            "output": [
                "round_eq { avg { all_rows ; televote / sms } ; 8.33 }"
            ]
        },
        {
            "input": "select the row whose start date record of all rows is 4th minimum . the minister record of this row is marc fischbach .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; start date ; 4 } ; minister } ; marc fischbach }"
            ]
        },
        {
            "input": "select the rows whose fuel system record fuzzily matches to single carburetor . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; fuel system ; single carburetor } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the athlete record of this row is yane marques .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; athlete } ; yane marques }"
            ]
        },
        {
            "input": "for the seaman records of all rows , most of them fuzzily match to petty officer .",
            "output": [
                "most_eq { all_rows ; seaman ; petty officer }"
            ]
        },
        {
            "input": "for the team classification records of all rows , most of them fuzzily match to predictor-lotto .",
            "output": [
                "most_eq { all_rows ; team classification ; predictor-lotto }"
            ]
        },
        {
            "input": "select the rows whose final record fuzzily matches to did not advance . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; final ; did not advance } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to united states . select the row whose jersey number ( s ) record of these rows is maximum . the player record of this row is frank oleynick .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; nationality ; united states } ; jersey number ( s ) } ; player } ; frank oleynick }"
            ]
        },
        {
            "input": "select the rows whose 2nd position record fuzzily matches to lija . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2nd position ; lija } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose wkts record of all rows is maximum . the player record of this row is brett lee .",
            "output": [
                "eq { hop { argmax { all_rows ; wkts } ; player } ; brett lee }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to 2002 world cup qualifier .",
            "output": [
                "most_eq { all_rows ; competition ; 2002 world cup qualifier }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to punt road oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to kardinia park . take the crowd record of this row . the second record is 4000 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; venue ; punt road oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; kardinia park } ; crowd } } ; -4000 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to charleston southern . there is only one such row in the table . the player record of this unqiue row is shawn gifford .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; charleston southern } } ; eq { hop { filter_eq { all_rows ; college ; charleston southern } ; player } ; shawn gifford } }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 325.4 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 325.4 }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 0 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; points ; 0 } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose census ranking record of all rows is 2nd minimum . the official name record of this row is dieppe .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; census ranking ; 2 } ; official name } ; dieppe }"
            ]
        },
        {
            "input": "select the row whose elected record of all rows is minimum . the incumbent record of this row is john lewis .",
            "output": [
                "eq { hop { argmin { all_rows ; elected } ; incumbent } ; john lewis }"
            ]
        },
        {
            "input": "select the rows whose certification record fuzzily matches to 2x platinum . there is only one such row in the table . the album record of this unqiue row is my love : essential collection .",
            "output": [
                "and { only { filter_eq { all_rows ; certification ; 2x platinum } } ; eq { hop { filter_eq { all_rows ; certification ; 2x platinum } ; album } ; my love : essential collection } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to finland . there is only one such row in the table . the company record of this unqiue row is stonesoft .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; finland } } ; eq { hop { filter_eq { all_rows ; country ; finland } ; company } ; stonesoft } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to james quinn . there is only one such row in the table . the title record of this unqiue row is indifference .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; james quinn } } ; eq { hop { filter_eq { all_rows ; directed by ; james quinn } ; title } ; indifference } }"
            ]
        },
        {
            "input": "select the rows whose start source record fuzzily matches to bbc sport . among these rows , select the rows whose loan club record fuzzily matches to dundee united . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; start source ; bbc sport } ; loan club ; dundee united } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose gold record of all rows is maximum . the nation record of this row is soviet union .",
            "output": [
                "eq { hop { argmax { all_rows ; gold } ; nation } ; soviet union }"
            ]
        },
        {
            "input": "the average of the population ( 2011 ) record of all rows is 4251 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2011 ) } ; 4251 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . for the attendance records of these rows , all of them are less than 75000 .",
            "output": [
                "all_less { filter_eq { all_rows ; date ; december } ; attendance ; 75000 }"
            ]
        },
        {
            "input": "select the row whose place record of all rows is minimum . the artist record of this row is liam reilly . the song record of this row is somewhere in europe .",
            "output": [
                "and { eq { hop { argmin { all_rows ; place } ; artist } ; liam reilly } ; eq { hop { argmin { all_rows ; place } ; song } ; somewhere in europe } }"
            ]
        },
        {
            "input": "select the row whose date of vacancy record of all rows is minimum . the outgoing manager record of this row is mauricio cienfuegos .",
            "output": [
                "eq { hop { argmin { all_rows ; date of vacancy } ; outgoing manager } ; mauricio cienfuegos }"
            ]
        },
        {
            "input": "select the rows whose inhabitants record is equal to 0 . there is only one such row in the table . the name record of this unqiue row is l\u00edtla d\u00edmun .",
            "output": [
                "and { only { filter_eq { all_rows ; inhabitants ; 0 } } ; eq { hop { filter_eq { all_rows ; inhabitants ; 0 } ; name } ; l\u00edtla d\u00edmun } }"
            ]
        },
        {
            "input": "select the rows whose site record fuzzily matches to memorial stadium minneapolis , mn . for the attendance records of these rows , most of them are greater than 24999 .",
            "output": [
                "most_greater { filter_eq { all_rows ; site ; memorial stadium minneapolis , mn } ; attendance ; 24999 }"
            ]
        },
        {
            "input": "select the row whose overall record of all rows is 3rd minimum . the name record of this row is brandon burlsworth .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; overall ; 3 } ; name } ; brandon burlsworth }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to christ\u00edna papad\u00e1ki . take the date record of this row . select the rows whose opponent in the final record fuzzily matches to julia vakulenko . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent in the final ; christ\u00edna papad\u00e1ki } ; date } ; hop { filter_eq { all_rows ; opponent in the final ; julia vakulenko } ; date } }"
            ]
        },
        {
            "input": "for the high rebounds records of all rows , most of them fuzzily match to greg monroe .",
            "output": [
                "most_eq { all_rows ; high rebounds ; greg monroe }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is 2nd maximum . the film title used in nomination record of this row is lore .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ( ceremony ) ; 2 } ; film title used in nomination } ; lore }"
            ]
        },
        {
            "input": "select the rows whose race time record is less than 3:00:00 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_less { all_rows ; race time ; 3:00:00 } } ; 4 }"
            ]
        },
        {
            "input": "for the home records of all rows , most of them fuzzily match to philadelphia .",
            "output": [
                "most_eq { all_rows ; home ; philadelphia }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is november 13 , 1994 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; november 13 , 1994 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . for the attendance records of these rows , most of them are greater than 60000 .",
            "output": [
                "most_greater { filter_eq { all_rows ; date ; december } ; attendance ; 60000 }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the nation record of this row is cuba .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; nation } ; cuba }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to brisbane cricket ground . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; brisbane cricket ground } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose warship record fuzzily matches to chacabuco . take the speed ( knots ) record of this row . select the rows whose warship record fuzzily matches to abtao . take the speed ( knots ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; warship ; chacabuco } ; speed ( knots ) } ; hop { filter_eq { all_rows ; warship ; abtao } ; speed ( knots ) } }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 4.5 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 4.5 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . there is only one such row in the table . the team record of this unqiue row is new jersey .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; w } } ; eq { hop { filter_eq { all_rows ; score ; w } ; team } ; new jersey } }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to saitama , japan .",
            "output": [
                "most_eq { all_rows ; location ; saitama , japan }"
            ]
        },
        {
            "input": "select the row whose haat record of all rows is maximum . the station record of this row is wwpb .",
            "output": [
                "eq { hop { argmax { all_rows ; haat } ; station } ; wwpb }"
            ]
        },
        {
            "input": "select the row whose census ranking record of all rows is maximum . the official name record of this row is hampstead .",
            "output": [
                "eq { hop { argmax { all_rows ; census ranking } ; official name } ; hampstead }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is maximum . the opponent record of this row is bob schrijber .",
            "output": [
                "eq { hop { argmax { all_rows ; time } ; opponent } ; bob schrijber }"
            ]
        },
        {
            "input": "for the time records of all rows , most of them fuzzily match to 2:15 . .",
            "output": [
                "most_eq { all_rows ; time ; 2:15 . }"
            ]
        },
        {
            "input": "select the rows whose playoffs 1 record fuzzily matches to champions . there is only one such row in the table . the season record of this unqiue row is 2001 - 02 .",
            "output": [
                "and { only { filter_eq { all_rows ; playoffs 1 ; champions } } ; eq { hop { filter_eq { all_rows ; playoffs 1 ; champions } ; season } ; 2001 - 02 } }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to belgrade . the average of the average attendance record of these rows is 19,807 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; city ; belgrade } ; average attendance } ; 19,807 }"
            ]
        },
        {
            "input": "the 2nd minimum round record of all rows is 2 . the player record of the row with 2nd minimum round record is joe hernandez .",
            "output": [
                "and { eq { nth_min { all_rows ; round ; 2 } ; 2 } ; eq { hop { nth_argmin { all_rows ; round ; 2 } ; player } ; joe hernandez } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to l . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; l } } ; 1 }"
            ]
        },
        {
            "input": "for the stadium records of all rows , most of them fuzzily match to edison international field .",
            "output": [
                "most_eq { all_rows ; stadium ; edison international field }"
            ]
        },
        {
            "input": "select the rows whose children together record fuzzily matches to 1 son . there is only one such row in the table . the name record of this unqiue row is norris church mailer . the deceased spouse record of this unqiue row is norman mailer .",
            "output": [
                "and { only { filter_eq { all_rows ; children together ; 1 son } } ; and { eq { hop { filter_eq { all_rows ; children together ; 1 son } ; name } ; norris church mailer } ; eq { hop { filter_eq { all_rows ; children together ; 1 son } ; deceased spouse } ; norman mailer } } }"
            ]
        },
        {
            "input": "for the extra records of all rows , most of them fuzzily match to 4x100 m relay .",
            "output": [
                "most_eq { all_rows ; extra ; 4x100 m relay }"
            ]
        },
        {
            "input": "for the replaced by records of all rows , none of them is equal to - .",
            "output": [
                "all_not_eq { all_rows ; replaced by ; - }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to cleber luciano . take the time record of this row . select the rows whose opponent record fuzzily matches to john borsos . take the time record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; cleber luciano } ; time } ; hop { filter_eq { all_rows ; opponent ; john borsos } ; time } }"
            ]
        },
        {
            "input": "select the row whose ios record of all rows is maximum . the source record of this row is wikimedia .",
            "output": [
                "eq { hop { argmax { all_rows ; ios } ; source } ; wikimedia }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; october } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose pts record of all rows is 3rd maximum . the season record of this row is 2010 - 11 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pts ; 3 } ; season } ; 2010 - 11 }"
            ]
        },
        {
            "input": "select the row whose years for jazz record of all rows is maximum . the player record of this row is kirk snyder .",
            "output": [
                "eq { hop { argmax { all_rows ; years for jazz } ; player } ; kirk snyder }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 12 june 1937 . select the row whose crowd record of these rows is maximum . the venue record of this row is punt road oval .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; date ; 12 june 1937 } ; crowd } ; venue } ; punt road oval }"
            ]
        },
        {
            "input": "for the socket records of all rows , most of them fuzzily match to lga 775 .",
            "output": [
                "most_eq { all_rows ; socket ; lga 775 }"
            ]
        },
        {
            "input": "select the rows whose enrollment record is greater than 2000 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { all_rows ; enrollment ; 2000 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 96 . the average of the points record of these rows is 20.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; laps ; 96 } ; points } ; 20.5 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to gilead . take the usviewers ( million ) record of this row . select the rows whose title record fuzzily matches to fa guan . take the usviewers ( million ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; gilead } ; usviewers ( million ) } ; hop { filter_eq { all_rows ; title ; fa guan } ; usviewers ( million ) } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to 9 ad . take the power record of this row . select the rows whose name record fuzzily matches to 9 adb . take the power record of this row . the second record is 200 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; 9 ad } ; power } ; hop { filter_eq { all_rows ; name ; 9 adb } ; power } } ; -200 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the incumbent record of this row is james p richards .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; incumbent } ; james p richards }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 3rd minimum . the incumbent record of this row is william huston natcher .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 3 } ; incumbent } ; william huston natcher }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 1954 . the sum of the points record of these rows is 4 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; year ; 1954 } ; points } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to alvan adams . there is only one such row in the table . the date record of this unqiue row is april 15 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } ; date } ; april 15 } }"
            ]
        },
        {
            "input": "select the row whose area ( km square ) record of all rows is maximum . the english name record of this row is central denmark region .",
            "output": [
                "eq { hop { argmax { all_rows ; area ( km square ) } ; english name } ; central denmark region }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to left wing . for the nationality records of these rows , most of them fuzzily match to canada .",
            "output": [
                "most_eq { filter_eq { all_rows ; position ; left wing } ; nationality ; canada }"
            ]
        },
        {
            "input": "for the to par records of all rows , most of them are greater than or equal to 9 .",
            "output": [
                "most_greater_eq { all_rows ; to par ; 9 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is maximum . the name record of this row is 6.5 x 68 .",
            "output": [
                "eq { hop { argmax { all_rows ; length } ; name } ; 6.5 x 68 }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to roberval andrade . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; roberval andrade } } ; 4 }"
            ]
        },
        {
            "input": "for the show records of all rows , most of them fuzzily match to terminator : the sarah connor chronicles .",
            "output": [
                "most_eq { all_rows ; show ; terminator : the sarah connor chronicles }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 6 july 1957 .",
            "output": [
                "all_eq { all_rows ; date ; 6 july 1957 }"
            ]
        },
        {
            "input": "select the rows whose nba draft record fuzzily matches to pick . there is only one such row in the table . the player record of this unqiue row is marquis teague .",
            "output": [
                "and { only { filter_eq { all_rows ; nba draft ; pick } } ; eq { hop { filter_eq { all_rows ; nba draft ; pick } ; player } ; marquis teague } }"
            ]
        },
        {
            "input": "select the rows whose gain record is less than 100 . among these rows , select the rows whose long record is equal to 18 . there is only one such row in the table . the name record of this unqiue row is patton , chase .",
            "output": [
                "and { only { filter_eq { filter_less { all_rows ; gain ; 100 } ; long ; 18 } } ; eq { hop { filter_eq { filter_less { all_rows ; gain ; 100 } ; long ; 18 } ; name } ; patton , chase } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the entrant record of this row is force india f1 team .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; entrant } ; force india f1 team }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to nominated . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; nominated } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the 1953 record of this row is robert f wagner , jr .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; 1953 } ; robert f wagner , jr }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 1128.5 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 1128.5 }"
            ]
        },
        {
            "input": "select the rows whose district record is arbitrary . the number of such rows is 16 .",
            "output": [
                "eq { count { filter_all { all_rows ; district } } ; 16 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the song record of this row is all kinds of everything .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; song } ; all kinds of everything }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to t . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; result ; t } }"
            ]
        },
        {
            "input": "select the rows whose tournament at which lead began record fuzzily matches to australian championships . there is only one such row in the table . the player record of this unqiue row is roy emerson .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament at which lead began ; australian championships } } ; eq { hop { filter_eq { all_rows ; tournament at which lead began ; australian championships } ; player } ; roy emerson } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is d wyatt aiken .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; d wyatt aiken }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 51.8 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 51.8 }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than or equal to 1 . among these rows , select the rows whose silver record is equal to 2 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_greater_eq { all_rows ; gold ; 1 } ; silver ; 2 } } ; 3 }"
            ]
        },
        {
            "input": "for the seats records of all rows , all of them are equal to 2 .",
            "output": [
                "all_eq { all_rows ; seats ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to ol . select the row whose pick record of these rows is minimum . the cfl team record of this row is montreal alouettes .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; position ; ol } ; pick } ; cfl team } ; montreal alouettes }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to wednesday . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; wednesday } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose 2010 record fuzzily matches to sf . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 2010 ; sf } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose built record is equal to 1923 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; built ; 1923 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose driver record fuzzily matches to mike spence . take the laps record of this row . select the rows whose driver record fuzzily matches to jo bonnier . take the laps record of this row . the first record is 1 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; driver ; mike spence } ; laps } ; hop { filter_eq { all_rows ; driver ; jo bonnier } ; laps } } ; 1 }"
            ]
        },
        {
            "input": "the average of the votes record of all rows is 76762 .",
            "output": [
                "round_eq { avg { all_rows ; votes } ; 76762 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to carolina hurricanes . the sum of the points record of these rows is 57 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; carolina hurricanes } ; points } ; 57 }"
            ]
        },
        {
            "input": "select the row whose muzzle energy record of all rows is maximum . the cartridge record of this row is .357 magnum .",
            "output": [
                "eq { hop { argmax { all_rows ; muzzle energy } ; cartridge } ; .357 magnum }"
            ]
        },
        {
            "input": "select the row whose date successor seated record of all rows is 2nd minimum . the successor record of this row is michael j harrington ( d ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date successor seated ; 2 } ; successor } ; michael j harrington ( d ) }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to rio de janeiro . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; rio de janeiro } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose coach record fuzzily matches to bj coleman . there is only one such row in the table . the episode summary record of this unqiue row is chris is made into a celebrity assistant .",
            "output": [
                "and { only { filter_eq { all_rows ; coach ; bj coleman } } ; eq { hop { filter_eq { all_rows ; coach ; bj coleman } ; episode summary } ; chris is made into a celebrity assistant } }"
            ]
        },
        {
            "input": "select the rows whose school record is arbitrary . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_all { all_rows ; school } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to s\u00edrio liban\u00eas . take the played record of this row . select the rows whose team record fuzzily matches to jardim am\u00e9rica . take the played record of this row . the first record is less than the second record . the played record of the first row is 12 . the played record of the second row is 13 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; team ; s\u00edrio liban\u00eas } ; played } ; hop { filter_eq { all_rows ; team ; jardim am\u00e9rica } ; played } } ; and { eq { hop { filter_eq { all_rows ; team ; s\u00edrio liban\u00eas } ; played } ; 12 } ; eq { hop { filter_eq { all_rows ; team ; jardim am\u00e9rica } ; played } ; 13 } } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 2nd maximum . the date record of this row is march 13 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; march 13 }"
            ]
        },
        {
            "input": "the average of the result record of all rows is 15th .",
            "output": [
                "round_eq { avg { all_rows ; result } ; 15th }"
            ]
        },
        {
            "input": "select the row whose weeks on top record of all rows is 1st maximum . the song record of this row is music .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; weeks on top ; 1 } ; song } ; music }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 738 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 738 }"
            ]
        },
        {
            "input": "the sum of the winnings record of all rows is 2076417 .",
            "output": [
                "round_eq { sum { all_rows ; winnings } ; 2076417 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to embankment . the maximum height ( m ) record of these rows is 67.0 .",
            "output": [
                "eq { max { filter_eq { all_rows ; type ; embankment } ; height ( m ) } ; 67.0 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to safe . the sum of the score record of these rows is 54 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; result ; safe } ; score } ; 54 }"
            ]
        },
        {
            "input": "for the chassis records of all rows , most of them fuzzily match to talbot-lago t26c da .",
            "output": [
                "most_eq { all_rows ; chassis ; talbot-lago t26c da }"
            ]
        },
        {
            "input": "select the row whose p1 diameter ( mm ) record of all rows is 2nd maximum . the chambering record of this row is .45 acp .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; p1 diameter ( mm ) ; 2 } ; chambering } ; .45 acp }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to private .",
            "output": [
                "most_eq { all_rows ; type ; private }"
            ]
        },
        {
            "input": "select the rows whose executive director record fuzzily matches to jessie a montalbo . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; executive director ; jessie a montalbo } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 145 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 145 }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is minimum . the team record of this row is northern demons .",
            "output": [
                "eq { hop { argmin { all_rows ; founded } ; team } ; northern demons }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the club record of this row is wigan warriors .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; club } ; wigan warriors }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the opponent record of this row is jeff davis .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; opponent } ; jeff davis }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2013 . among these rows , select the rows whose result record fuzzily matches to won . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; year ; 2013 } ; result ; won } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to ot . there is only one such row in the table . the date record of this unqiue row is november 24 , 1985 .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; ot } } ; eq { hop { filter_eq { all_rows ; result ; ot } ; date } ; november 24 , 1985 } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new england patriots . take the attendance record of this row . select the rows whose opponent record fuzzily matches to cleveland browns . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; new england patriots } ; attendance } ; hop { filter_eq { all_rows ; opponent ; cleveland browns } ; attendance } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to david grossman . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; david grossman } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to japan . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; japan } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose first air date record of all rows is 2nd minimum . the city record of this row is cairns .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first air date ; 2 } ; city } ; cairns }"
            ]
        },
        {
            "input": "select the row whose goals scored record of all rows is maximum . the team record of this row is san salvador fc .",
            "output": [
                "eq { hop { argmax { all_rows ; goals scored } ; team } ; san salvador fc }"
            ]
        },
        {
            "input": "select the row whose viewing figure record of all rows is maximum . the episode record of this row is episode 11 .",
            "output": [
                "eq { hop { argmax { all_rows ; viewing figure } ; episode } ; episode 11 }"
            ]
        },
        {
            "input": "for the pole position records of all rows , most of them fuzzily match to rick mears .",
            "output": [
                "most_eq { all_rows ; pole position ; rick mears }"
            ]
        },
        {
            "input": "select the rows whose aspect record fuzzily matches to 16:9 . there is only one such row in the table . the channel record of this unqiue row is 26.1 .",
            "output": [
                "and { only { filter_eq { all_rows ; aspect ; 16:9 } } ; eq { hop { filter_eq { all_rows ; aspect ; 16:9 } ; channel } ; 26.1 } }"
            ]
        },
        {
            "input": "select the rows whose a - league record fuzzily matches to ( 0 ) . there is only one such row in the table . the name record of this unqiue row is kevin muscat .",
            "output": [
                "and { only { filter_eq { all_rows ; a - league ; ( 0 ) } } ; eq { hop { filter_eq { all_rows ; a - league ; ( 0 ) } ; name } ; kevin muscat } }"
            ]
        },
        {
            "input": "select the rows whose political party record fuzzily matches to democratic party of albania . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; political party ; democratic party of albania } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose vacator record fuzzily matches to ( d ) . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; vacator ; ( d ) } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to january 31 , 2008 . take the score record of this row . select the rows whose date record fuzzily matches to january 26 , 2008 . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; january 31 , 2008 } ; score } ; hop { filter_eq { all_rows ; date ; january 26 , 2008 } ; score } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to the chipmunk adventure . take the year record of this row . select the rows whose title record fuzzily matches to alvin and the chipmunks meet the wolfman . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; title ; the chipmunk adventure } ; year } ; hop { filter_eq { all_rows ; title ; alvin and the chipmunks meet the wolfman } ; year } }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to wimbledon . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; championship ; wimbledon } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose class record fuzzily matches to b . the sum of the no built record of these rows is 58 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; class ; b } ; no built } ; 58 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to england . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; england } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the tournament record of this unqiue row is eckental , germany .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; eckental , germany } }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to republican . among these rows , select the rows whose result record fuzzily matches to resigned . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; party ; republican } ; result ; resigned } } ; 5 }"
            ]
        },
        {
            "input": "the sum of the number of families record of all rows is 30630 .",
            "output": [
                "round_eq { sum { all_rows ; number of families } ; 30630 }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to french . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; language ; french } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 1st minimum . the player record of this row is toni st\u00e3hl .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; pick ; 1 } ; player } ; toni st\u00e3hl }"
            ]
        },
        {
            "input": "select the rows whose service area record fuzzily matches to sw ireland . take the 2fm ( mhz ) record of this row . select the rows whose service area record fuzzily matches to se ireland . take the 2fm ( mhz ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; service area ; sw ireland } ; 2fm ( mhz ) } ; hop { filter_eq { all_rows ; service area ; se ireland } ; 2fm ( mhz ) } }"
            ]
        },
        {
            "input": "the average of the individual winners record of all rows is 2.08 .",
            "output": [
                "round_eq { avg { all_rows ; individual winners } ; 2.08 }"
            ]
        },
        {
            "input": "for the method records of all rows , most of them fuzzily match to punches .",
            "output": [
                "most_eq { all_rows ; method ; punches }"
            ]
        },
        {
            "input": "the average of the races record of all rows is 8.73 .",
            "output": [
                "round_eq { avg { all_rows ; races } ; 8.73 }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 0 . among these rows , select the rows whose attendance record is greater than 4000 . there is only one such row in the table . the home team record of this unqiue row is milton keynes dons .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; score ; 0 } ; attendance ; 4000 } } ; eq { hop { filter_greater { filter_eq { all_rows ; score ; 0 } ; attendance ; 4000 } ; home team } ; milton keynes dons } }"
            ]
        },
        {
            "input": "the average of the length ( ft ) record of all rows is 86.25 .",
            "output": [
                "round_eq { avg { all_rows ; length ( ft ) } ; 86.25 }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is maximum . the name record of this row is kingdom tower .",
            "output": [
                "eq { hop { argmax { all_rows ; floors } ; name } ; kingdom tower }"
            ]
        },
        {
            "input": "select the row whose commissioned record of all rows is maximum . the name record of this row is chivalrous .",
            "output": [
                "eq { hop { argmax { all_rows ; commissioned } ; name } ; chivalrous }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to pontiac . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manufacturer ; pontiac } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to steve blake . among these rows , select the rows whose score record fuzzily matches to w . there is only one such row in the table . the date record of this unqiue row is april 21 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; high assists ; steve blake } ; score ; w } } ; eq { hop { filter_eq { filter_eq { all_rows ; high assists ; steve blake } ; score ; w } ; date } ; april 21 } }"
            ]
        },
        {
            "input": "select the rows whose sport record fuzzily matches to association football . among these rows , select the rows whose country record fuzzily matches to england . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; sport ; association football } ; country ; england } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose semifinalists record of all rows is 4th maximum . the country / territory record of this row is australia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; semifinalists ; 4 } ; country / territory } ; australia }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the venue record of this row is vasil levski national stadium , sofia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; venue } ; vasil levski national stadium , sofia }"
            ]
        },
        {
            "input": "select the rows whose height record fuzzily matches to 6 ' 2 . select the row whose weight record of these rows is 1st minimum . the college record of this row is hawaii .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; height ; 6 ' 2 } ; weight ; 1 } ; college } ; hawaii }"
            ]
        },
        {
            "input": "select the rows whose total matches record is equal to 5 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; total matches ; 5 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to forsythe racing . the sum of the points record of these rows is 8 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; team ; forsythe racing } ; points } ; 8 }"
            ]
        },
        {
            "input": "the average of the us viewers ( millions ) record of all rows is 8.55 million .",
            "output": [
                "round_eq { avg { all_rows ; us viewers ( millions ) } ; 8.55 million }"
            ]
        },
        {
            "input": "select the rows whose first publisher record fuzzily matches to shodensha non - novels . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first publisher ; shodensha non - novels } } ; 2 }"
            ]
        },
        {
            "input": "the 2nd minimum years for grizzlies record of all rows is 1997 - 1999 . the player record of the row with 2nd minimum years for grizzlies record is michael smith .",
            "output": [
                "and { eq { nth_min { all_rows ; years for grizzlies ; 2 } ; 1997 - 1999 } ; eq { hop { nth_argmin { all_rows ; years for grizzlies ; 2 } ; player } ; michael smith } }"
            ]
        },
        {
            "input": "select the rows whose l3 cache record fuzzily matches to 8 mb . among these rows , select the rows whose frequency record fuzzily matches to 3 ghz . there is only one such row in the table . the model number record of this unqiue row is core i7 - 3940xm .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; l3 cache ; 8 mb } ; frequency ; 3 ghz } } ; eq { hop { filter_eq { filter_eq { all_rows ; l3 cache ; 8 mb } ; frequency ; 3 ghz } ; model number } ; core i7 - 3940xm } }"
            ]
        },
        {
            "input": "for the silver records of all rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { all_rows ; silver ; 1 }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is 3 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose edition record fuzzily matches to 2008 davis cup europe / africa group ii . take the surface record of this row . select the rows whose edition record fuzzily matches to 2013 davis cup europe / africa group ii . take the surface record of this row . the first record fuzzily matches to the second record . the surface record of the first row is clay . the surface record of the second row is clay .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; edition ; 2008 davis cup europe / africa group ii } ; surface } ; hop { filter_eq { all_rows ; edition ; 2013 davis cup europe / africa group ii } ; surface } } ; and { eq { hop { filter_eq { all_rows ; edition ; 2008 davis cup europe / africa group ii } ; surface } ; clay } ; eq { hop { filter_eq { all_rows ; edition ; 2013 davis cup europe / africa group ii } ; surface } ; clay } } }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than or equal to 13000 .",
            "output": [
                "most_greater_eq { all_rows ; crowd ; 13000 }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to brian fairlie . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; brian fairlie } } ; 4 }"
            ]
        },
        {
            "input": "the average of the losses record of all rows is 10.94 .",
            "output": [
                "round_eq { avg { all_rows ; losses } ; 10.94 }"
            ]
        },
        {
            "input": "select the rows whose polling firm record fuzzily matches to environics . there is only one such row in the table . the date of polling record of this unqiue row is september 29 - october 4 , 2011 .",
            "output": [
                "and { only { filter_eq { all_rows ; polling firm ; environics } } ; eq { hop { filter_eq { all_rows ; polling firm ; environics } ; date of polling } ; september 29 - october 4 , 2011 } }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 10 . there is only one such row in the table . the club record of this unqiue row is deportivo alav\u00e9s .",
            "output": [
                "and { only { filter_eq { all_rows ; wins ; 10 } } ; eq { hop { filter_eq { all_rows ; wins ; 10 } ; club } ; deportivo alav\u00e9s } }"
            ]
        },
        {
            "input": "select the rows whose rating record is less than 3 . there is only one such row in the table . the ride record of this unqiue row is taxi jam .",
            "output": [
                "and { only { filter_less { all_rows ; rating ; 3 } } ; eq { hop { filter_less { all_rows ; rating ; 3 } ; ride } ; taxi jam } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . among these rows , select the rows whose opponent record fuzzily matches to oakland raiders . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; result ; w } ; opponent ; oakland raiders } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose goals against record of all rows is maximum . the team record of this row is montreal crystals .",
            "output": [
                "eq { hop { argmax { all_rows ; goals against } ; team } ; montreal crystals }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to john bowe . there is only one such row in the table . the race title record of this unqiue row is winton .",
            "output": [
                "and { only { filter_eq { all_rows ; winner ; john bowe } } ; eq { hop { filter_eq { all_rows ; winner ; john bowe } ; race title } ; winton } }"
            ]
        },
        {
            "input": "the average of the capacity record of all rows is 7000-7500 .",
            "output": [
                "round_eq { avg { all_rows ; capacity } ; 7000-7500 }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is minimum . the nick prod record of this row is 1001 .",
            "output": [
                "eq { hop { argmin { all_rows ; original air date } ; nick prod } ; 1001 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to channel 3 . take the broadcasting hours record of this row . select the rows whose name record fuzzily matches to thai pbs . take the broadcasting hours record of this row . the first record is greater than the second record . the broadcasting hours record of the first row is 24 - hours . the broadcasting hours record of the second row is 21 - hours ( 5:00 am - 2:00 am ) .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; name ; channel 3 } ; broadcasting hours } ; hop { filter_eq { all_rows ; name ; thai pbs } ; broadcasting hours } } ; and { eq { hop { filter_eq { all_rows ; name ; channel 3 } ; broadcasting hours } ; 24 - hours } ; eq { hop { filter_eq { all_rows ; name ; thai pbs } ; broadcasting hours } ; 21 - hours ( 5:00 am - 2:00 am ) } } }"
            ]
        },
        {
            "input": "select the rows whose home team score record is greater than 10 . for the crowd records of these rows , most of them are less than 20000 .",
            "output": [
                "most_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 }"
            ]
        },
        {
            "input": "for the paper type records of all rows , most of them fuzzily match to tullis russell coatings .",
            "output": [
                "most_eq { all_rows ; paper type ; tullis russell coatings }"
            ]
        },
        {
            "input": "select the rows whose platform ( s ) record fuzzily matches to gamecube . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; platform ( s ) ; gamecube } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to park . the maximum away team score record of these rows is 21.10 ( 136 ) .",
            "output": [
                "eq { max { filter_eq { all_rows ; venue ; park } ; away team score } ; 21.10 ( 136 ) }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to syracuse , ny . there is only one such row in the table . the call sign record of this unqiue row is wmhr .",
            "output": [
                "and { only { filter_eq { all_rows ; city of license ; syracuse , ny } } ; eq { hop { filter_eq { all_rows ; city of license ; syracuse , ny } ; call sign } ; wmhr } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is nova southeastern university .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; nova southeastern university }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to switcher .",
            "output": [
                "most_eq { all_rows ; type ; switcher }"
            ]
        },
        {
            "input": "select the rows whose winners record fuzzily matches to cliftonville fc . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winners ; cliftonville fc } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to masters . take the 2012 - 13 record of this row . select the rows whose event record fuzzily matches to autumn gold . take the 2012 - 13 record of this row . the first record fuzzily matches to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; event ; masters } ; 2012 - 13 } ; hop { filter_eq { all_rows ; event ; autumn gold } ; 2012 - 13 } }"
            ]
        },
        {
            "input": "the sum of the mintage record of all rows is 418918 .",
            "output": [
                "round_eq { sum { all_rows ; mintage } ; 418918 }"
            ]
        },
        {
            "input": "select the rows whose manufacturer record fuzzily matches to ford . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manufacturer ; ford } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose city of license record fuzzily matches to ga . among these rows , select the rows whose class record fuzzily matches to a . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; city of license ; ga } ; class ; a } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose date record is less than jun 27 . among these rows , select the rows whose set 5 record fuzzily matches to na . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; date ; jun 27 } ; set 5 ; na } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose model record fuzzily matches to nd4 . take the top speed ( in operation ) \uff08 km / h \uff09 record of this row . select the rows whose model record fuzzily matches to nd5 . take the top speed ( in operation ) \uff08 km / h \uff09 record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; model ; nd4 } ; top speed ( in operation ) \uff08 km / h \uff09 } ; hop { filter_eq { all_rows ; model ; nd5 } ; top speed ( in operation ) \uff08 km / h \uff09 } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to friendly match . the minimum date record of these rows is 7 november 1997 .",
            "output": [
                "eq { min { filter_eq { all_rows ; competition ; friendly match } ; date } ; 7 november 1997 }"
            ]
        },
        {
            "input": "select the rows whose high points record fuzzily matches to richard jefferson . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high points ; richard jefferson } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to memorial coliseum . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location attendance ; memorial coliseum } } ; 3 }"
            ]
        },
        {
            "input": "for the opponent records of all rows , all of them fuzzily match to angels .",
            "output": [
                "all_eq { all_rows ; opponent ; angels }"
            ]
        },
        {
            "input": "select the row whose central rate record of all rows is maximum . the currency record of this row is danish krone .",
            "output": [
                "eq { hop { argmax { all_rows ; central rate } ; currency } ; danish krone }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than 200 . for the total records of these rows , all of them are greater than 1000 .",
            "output": [
                "all_greater { filter_greater { all_rows ; gold ; 200 } ; total ; 1000 }"
            ]
        },
        {
            "input": "select the rows whose first broadcast record fuzzily matches to october . among these rows , select the rows whose seans team record fuzzily matches to joe wilkinson . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; first broadcast ; october } ; seans team ; joe wilkinson } } ; 2 }"
            ]
        },
        {
            "input": "for the us viewers ( million ) records of all rows , most of them are greater than 7 .",
            "output": [
                "most_greater { all_rows ; us viewers ( million ) ; 7 }"
            ]
        },
        {
            "input": "select the rows whose nat record fuzzily matches to ury . there is only one such row in the table . the name record of this unqiue row is garc\u00eda .",
            "output": [
                "and { only { filter_eq { all_rows ; nat ; ury } } ; eq { hop { filter_eq { all_rows ; nat ; ury } ; name } ; garc\u00eda } }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to south georgia technical college . take the founded record of this row . select the rows whose institution record fuzzily matches to southern crescent technical college . take the founded record of this row . the second record is 13 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; institution ; south georgia technical college } ; founded } ; hop { filter_eq { all_rows ; institution ; southern crescent technical college } ; founded } } ; -13 }"
            ]
        },
        {
            "input": "the average of the total points record of all rows is 962.2 .",
            "output": [
                "round_eq { avg { all_rows ; total points } ; 962.2 }"
            ]
        },
        {
            "input": "select the rows whose league record fuzzily matches to aba . there is only one such row in the table . the season record of this unqiue row is 2004 - 05 .",
            "output": [
                "and { only { filter_eq { all_rows ; league ; aba } } ; eq { hop { filter_eq { all_rows ; league ; aba } ; season } ; 2004 - 05 } }"
            ]
        },
        {
            "input": "select the rows whose gpu frequency record fuzzily matches to 320 mhz . for the release price ( usd ) records of these rows , all of them are greater than 60 .",
            "output": [
                "all_greater { filter_eq { all_rows ; gpu frequency ; 320 mhz } ; release price ( usd ) ; 60 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to rangers . the maximum season record of these rows is 1944 - 45 .",
            "output": [
                "eq { max { filter_eq { all_rows ; winner ; rangers } ; season } ; 1944 - 45 }"
            ]
        },
        {
            "input": "select the row whose pieces record of all rows is 2nd maximum . the release record of this row is 1999 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pieces ; 2 } ; release } ; 1999 }"
            ]
        },
        {
            "input": "select the row whose televote record of all rows is maximum . the song record of this row is dj , take me away .",
            "output": [
                "eq { hop { argmax { all_rows ; televote } ; song } ; dj , take me away }"
            ]
        },
        {
            "input": "select the row whose year established record of all rows is 2nd maximum . the members record of this row is university of otago .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year established ; 2 } ; members } ; university of otago }"
            ]
        },
        {
            "input": "select the rows whose apps record is equal to 38 . among these rows , select the rows whose points record is equal to 91 . there is only one such row in the table . the club record of this unqiue row is barcelona .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; apps ; 38 } ; points ; 91 } } ; eq { hop { filter_eq { filter_eq { all_rows ; apps ; 38 } ; points ; 91 } ; club } ; barcelona } }"
            ]
        },
        {
            "input": "the maximum total record of all rows is 45:40 .",
            "output": [
                "eq { max { all_rows ; total } ; 45:40 }"
            ]
        },
        {
            "input": "for the winner records of all rows , most of them fuzzily match to dick johnson .",
            "output": [
                "most_eq { all_rows ; winner ; dick johnson }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the opponent record of this row is cincinnati bengals .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opponent } ; cincinnati bengals }"
            ]
        },
        {
            "input": "the average of the population ( 2010 census ) record of all rows is 187514 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2010 census ) } ; 187514 }"
            ]
        },
        {
            "input": "select the rows whose date of polls record fuzzily matches to december . there is only one such row in the table . the state record of this unqiue row is mizoram .",
            "output": [
                "and { only { filter_eq { all_rows ; date of polls ; december } } ; eq { hop { filter_eq { all_rows ; date of polls ; december } ; state } ; mizoram } }"
            ]
        },
        {
            "input": "for the prothrombin time records of all rows , most of them fuzzily match to unaffected .",
            "output": [
                "most_eq { all_rows ; prothrombin time ; unaffected }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 2nd maximum . the nation record of this row is argentina .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; argentina }"
            ]
        },
        {
            "input": "select the rows whose dates record is less than or equal to 2005 . select the row whose dates record of these rows is 1st minimum . the squadron record of this row is squadron 33 .",
            "output": [
                "eq { hop { nth_argmin { filter_less_eq { all_rows ; dates ; 2005 } ; dates ; 1 } ; squadron } ; squadron 33 }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is 3rd minimum . the year record of this row is 2007 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; result ; 3 } ; year } ; 2007 }"
            ]
        },
        {
            "input": "select the rows whose original air date record fuzzily matches to april . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; original air date ; april } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to forward . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; forward } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose season record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; season } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose points 1 record of all rows is 2nd maximum . the team record of this row is eastwood hanley .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points 1 ; 2 } ; team } ; eastwood hanley }"
            ]
        },
        {
            "input": "the average of the total flights record of all rows is 16.63 .",
            "output": [
                "round_eq { avg { all_rows ; total flights } ; 16.63 }"
            ]
        },
        {
            "input": "select the rows whose nationality record is arbitrary . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_all { all_rows ; nationality } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose top - 10 record is not equal to 0 . there is only one such row in the table . the tournament record of this unqiue row is the open championship .",
            "output": [
                "and { only { filter_not_eq { all_rows ; top - 10 ; 0 } } ; eq { hop { filter_not_eq { all_rows ; top - 10 ; 0 } ; tournament } ; the open championship } }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is 6th minimum . the name record of this row is emilio falla ( ecu ) .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; rank ; 6 } ; name } ; emilio falla ( ecu ) }"
            ]
        },
        {
            "input": "select the rows whose origin record fuzzily matches to france . there is only one such row in the table . the aircraft record of this unqiue row is aerospatiale as 365 dauphin .",
            "output": [
                "and { only { filter_eq { all_rows ; origin ; france } } ; eq { hop { filter_eq { all_rows ; origin ; france } ; aircraft } ; aerospatiale as 365 dauphin } }"
            ]
        },
        {
            "input": "select the rows whose weight ( lb ) record is equal to 150 . there is only one such row in the table . the name record of this unqiue row is karon abraham .",
            "output": [
                "and { only { filter_eq { all_rows ; weight ( lb ) ; 150 } } ; eq { hop { filter_eq { all_rows ; weight ( lb ) ; 150 } ; name } ; karon abraham } }"
            ]
        },
        {
            "input": "select the row whose rec record of all rows is maximum . the player record of this row is chris cooley .",
            "output": [
                "eq { hop { argmax { all_rows ; rec } ; player } ; chris cooley }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to village . select the row whose population ( 2011 ) record of these rows is maximum . the settlement record of this row is ka\u0107 .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; type ; village } ; population ( 2011 ) } ; settlement } ; ka\u0107 }"
            ]
        },
        {
            "input": "the average of the socialist record of all rows is 45 % .",
            "output": [
                "round_eq { avg { all_rows ; socialist } ; 45 % }"
            ]
        },
        {
            "input": "select the rows whose men 's singles record fuzzily matches to kenneth jonassen . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; men 's singles ; kenneth jonassen } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose name / designation record fuzzily matches to saturn machine pistol . take the year of intro record of this row . select the rows whose name / designation record fuzzily matches to serlea . take the year of intro record of this row . the second record is 5 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name / designation ; saturn machine pistol } ; year of intro } ; hop { filter_eq { all_rows ; name / designation ; serlea } ; year of intro } } ; -5 years }"
            ]
        },
        {
            "input": "for the time of day records of all rows , most of them fuzzily match to night .",
            "output": [
                "most_eq { all_rows ; time of day ; night }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to aa das palmeiras . take the drawn record of this row . select the rows whose team record fuzzily matches to minas gerais . take the drawn record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; aa das palmeiras } ; drawn } ; hop { filter_eq { all_rows ; team ; minas gerais } ; drawn } }"
            ]
        },
        {
            "input": "select the rows whose 1973 democratic initial primary record fuzzily matches to mario biaggi . take the brooklyn record of this row . select the rows whose 1973 democratic initial primary record fuzzily matches to albert h blumenthal . take the brooklyn record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; 1973 democratic initial primary ; mario biaggi } ; brooklyn } ; hop { filter_eq { all_rows ; 1973 democratic initial primary ; albert h blumenthal } ; brooklyn } }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 64 . among these rows , select the rows whose points record is greater than 30 . there is only one such row in the table . the driver record of this unqiue row is s\u00e9bastien bourdais .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; laps ; 64 } ; points ; 30 } } ; eq { hop { filter_greater { filter_eq { all_rows ; laps ; 64 } ; points ; 30 } ; driver } ; s\u00e9bastien bourdais } }"
            ]
        },
        {
            "input": "select the rows whose s wicket record is greater than 50 . there is only one such row in the table . the player record of this unqiue row is damien wright .",
            "output": [
                "and { only { filter_greater { all_rows ; s wicket ; 50 } } ; eq { hop { filter_greater { all_rows ; s wicket ; 50 } ; player } ; damien wright } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to qb . there is only one such row in the table . the cfl team record of this unqiue row is montreal alouettes .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; qb } } ; eq { hop { filter_eq { all_rows ; position ; qb } ; cfl team } ; montreal alouettes } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to 2004 summer paralympics . take the total record of this row . select the rows whose event record fuzzily matches to 2008 summer paralympics . take the total record of this row . the first record is equal to the second record . the total record of the first row is 1 . the total record of the second row is 1 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; event ; 2004 summer paralympics } ; total } ; hop { filter_eq { all_rows ; event ; 2008 summer paralympics } ; total } } ; and { eq { hop { filter_eq { all_rows ; event ; 2004 summer paralympics } ; total } ; 1 } ; eq { hop { filter_eq { all_rows ; event ; 2008 summer paralympics } ; total } ; 1 } } }"
            ]
        },
        {
            "input": "the average of the seed record of all rows is 13.16 .",
            "output": [
                "round_eq { avg { all_rows ; seed } ; 13.16 }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 14 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 14 }"
            ]
        },
        {
            "input": "the average of the votes record of all rows is 46.4 .",
            "output": [
                "round_eq { avg { all_rows ; votes } ; 46.4 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 27 november 1997 . take the attendance record of this row . select the rows whose date record fuzzily matches to 10 december 1997 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 27 november 1997 } ; attendance } ; hop { filter_eq { all_rows ; date ; 10 december 1997 } ; attendance } }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is .8 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; .8 }"
            ]
        },
        {
            "input": "select the row whose number of bearers 2009 record of all rows is 2nd maximum . the surname record of this row is nielsen . the number of bearers 1971 record of this row is 349.126 .",
            "output": [
                "and { eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; surname } ; nielsen } ; eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; number of bearers 1971 } ; 349.126 } }"
            ]
        },
        {
            "input": "select the row whose result f - a record of all rows is maximum . the opponents record of this row is dumbarton .",
            "output": [
                "eq { hop { argmax { all_rows ; result f - a } ; opponents } ; dumbarton }"
            ]
        },
        {
            "input": "select the rows whose champion record fuzzily matches to karrie webb . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; champion ; karrie webb } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is maximum . the professional partner record of this row is janja lesar .",
            "output": [
                "eq { hop { argmax { all_rows ; average } ; professional partner } ; janja lesar }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to imereti . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; region ; imereti } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose l3 cache record fuzzily matches to 8 mb . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; l3 cache ; 8 mb } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose kiplinger 's top 100 values record fuzzily matches to n / a . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; kiplinger 's top 100 values ; n / a } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 6 . for the lost records of these rows , most of them are equal to 6 .",
            "output": [
                "most_eq { filter_eq { all_rows ; points ; 6 } ; lost ; 6 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 23522 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 23522 }"
            ]
        },
        {
            "input": "select the row whose record record of all rows is 2nd minimum . the nationality record of this row is russia .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; record ; 2 } ; nationality } ; russia }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is maximum . the club record of this row is standard li\u00e8ge .",
            "output": [
                "eq { hop { argmax { all_rows ; capacity } ; club } ; standard li\u00e8ge }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is 3rd maximum . the nation record of this row is mongolia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ; 3 } ; nation } ; mongolia }"
            ]
        },
        {
            "input": "for the matches records of all rows , most of them are less than 100 .",
            "output": [
                "most_less { all_rows ; matches ; 100 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to kenya . among these rows , select the rows whose time record is less than 30:34 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; nation ; kenya } ; time ; 30:34 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to liberty . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; liberty } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose duration record of all rows is 2nd minimum . the actor record of this row is nina soldano .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; duration ; 2 } ; actor } ; nina soldano }"
            ]
        },
        {
            "input": "select the rows whose year joined record is equal to 1932 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; year joined ; 1932 } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose 2012 record of all rows is maximum . the location record of this row is lake buena vista , florida , usa .",
            "output": [
                "eq { hop { argmax { all_rows ; 2012 } ; location } ; lake buena vista , florida , usa }"
            ]
        },
        {
            "input": "select the rows whose champion record fuzzily matches to laura davies . select the row whose year record of these rows is 2nd minimum . the margin of victory record of this row is 4 strokes .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; champion ; laura davies } ; year ; 2 } ; margin of victory } ; 4 strokes }"
            ]
        },
        {
            "input": "the sum of the solo record of all rows is 153 .",
            "output": [
                "round_eq { sum { all_rows ; solo } ; 153 }"
            ]
        },
        {
            "input": "select the rows whose weeks on top record is equal to 2 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; weeks on top ; 2 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 17 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 17 }"
            ]
        },
        {
            "input": "select the rows whose season record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; season } } ; 5 }"
            ]
        },
        {
            "input": "for the second quarter records of all rows , most of them are less than 250000 .",
            "output": [
                "most_less { all_rows ; second quarter ; 250000 }"
            ]
        },
        {
            "input": "select the rows whose date record is greater than april 8 . among these rows , select the rows whose attendance record is greater than 35000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; date ; april 8 } ; attendance ; 35000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose unit record fuzzily matches to novovoronezh - 2 . take the shutdown record of this row . select the rows whose unit record fuzzily matches to novovoronezh - 1 . take the shutdown record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; unit ; novovoronezh - 2 } ; shutdown } ; hop { filter_eq { all_rows ; unit ; novovoronezh - 1 } ; shutdown } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is october 27 , 2002 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; october 27 , 2002 }"
            ]
        },
        {
            "input": "select the row whose max power record of all rows is minimum . the vehicle record of this row is nissan y11 ad van .",
            "output": [
                "eq { hop { argmin { all_rows ; max power } ; vehicle } ; nissan y11 ad van }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1976 . take the points record of this row . select the rows whose year record fuzzily matches to 1975 . take the points record of this row . the first record is 6 points larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; year ; 1976 } ; points } ; hop { filter_eq { all_rows ; year ; 1975 } ; points } } ; 6 points }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them are less than 1 september .",
            "output": [
                "most_less { all_rows ; date ; 1 september }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to russian . there is only one such row in the table . the ship record of this unqiue row is isabel browne .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; russian } } ; eq { hop { filter_eq { all_rows ; nationality ; russian } ; ship } ; isabel browne } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to loss . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; loss } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is maximum . the nation record of this row is united states ( usa ) .",
            "output": [
                "eq { hop { argmax { all_rows ; silver } ; nation } ; united states ( usa ) }"
            ]
        },
        {
            "input": "select the rows whose capacity record is less than 2000 . there is only one such row in the table . the city record of this unqiue row is scafati .",
            "output": [
                "and { only { filter_less { all_rows ; capacity ; 2000 } } ; eq { hop { filter_less { all_rows ; capacity ; 2000 } ; city } ; scafati } }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to arizona state . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; college ; arizona state } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose public vote record of all rows is maximum . the couple record of this row is coleen & stuart .",
            "output": [
                "eq { hop { argmax { all_rows ; public vote } ; couple } ; coleen & stuart }"
            ]
        },
        {
            "input": "for the begin records of all rows , most of them are less than 2009 .",
            "output": [
                "most_less { all_rows ; begin ; 2009 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to air canada centre . among these rows , select the rows whose team record fuzzily matches to dallas . there is only one such row in the table . the date record of this unqiue row is february 6 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; location attendance ; air canada centre } ; team ; dallas } } ; eq { hop { filter_eq { filter_eq { all_rows ; location attendance ; air canada centre } ; team ; dallas } ; date } ; february 6 } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to eric king . take the round record of this row . select the rows whose player record fuzzily matches to lionel gates . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; eric king } ; round } ; hop { filter_eq { all_rows ; player ; lionel gates } ; round } }"
            ]
        },
        {
            "input": "select the rows whose losses record is equal to 9 . there is only one such row in the table . the club record of this unqiue row is sestao .",
            "output": [
                "and { only { filter_eq { all_rows ; losses ; 9 } } ; eq { hop { filter_eq { all_rows ; losses ; 9 } ; club } ; sestao } }"
            ]
        },
        {
            "input": "for the erp kw records of all rows , most of them are equal to 60 .",
            "output": [
                "most_eq { all_rows ; erp kw ; 60 }"
            ]
        },
        {
            "input": "select the rows whose club record is arbitrary . the number of such rows is 20 .",
            "output": [
                "eq { count { filter_all { all_rows ; club } } ; 20 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 13333 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 13333 }"
            ]
        },
        {
            "input": "select the rows whose date record is equal to - . there is only one such row in the table . the week record of this unqiue row is 6 .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; - } } ; eq { hop { filter_eq { all_rows ; date ; - } ; week } ; 6 } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to aberdeen . there is only one such row in the table . the date record of this unqiue row is 5 december 1978 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; aberdeen } } ; eq { hop { filter_eq { all_rows ; venue ; aberdeen } ; date } ; 5 december 1978 } }"
            ]
        },
        {
            "input": "select the rows whose top 10s record is equal to 0 . there is only one such row in the table . the year record of this unqiue row is 2007 .",
            "output": [
                "and { only { filter_eq { all_rows ; top 10s ; 0 } } ; eq { hop { filter_eq { all_rows ; top 10s ; 0 } ; year } ; 2007 } }"
            ]
        },
        {
            "input": "select the rows whose event record is less than 65 kg . for the quarterfinal records of these rows , most of them fuzzily match to did not advance .",
            "output": [
                "most_eq { filter_less { all_rows ; event ; 65 kg } ; quarterfinal ; did not advance }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 13 may 1998 . take the weight ( kg ) record of this row . select the rows whose date record fuzzily matches to 23 aug 1997 . take the weight ( kg ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; 13 may 1998 } ; weight ( kg ) } ; hop { filter_eq { all_rows ; date ; 23 aug 1997 } ; weight ( kg ) } }"
            ]
        },
        {
            "input": "select the rows whose attendance record is greater than 70000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; attendance ; 70000 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to nuremberg . there is only one such row in the table . the date record of this unqiue row is 3 june 2000 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; nuremberg } } ; eq { hop { filter_eq { all_rows ; venue ; nuremberg } ; date } ; 3 june 2000 } }"
            ]
        },
        {
            "input": "the average of the points won record of all rows is 198 .",
            "output": [
                "round_eq { avg { all_rows ; points won } ; 198 }"
            ]
        },
        {
            "input": "select the rows whose owner record fuzzily matches to four roses thoroughbreds llc . there is only one such row in the table . the horse record of this unqiue row is anak nakal .",
            "output": [
                "and { only { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } } ; eq { hop { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } ; horse } ; anak nakal } }"
            ]
        },
        {
            "input": "select the rows whose round record fuzzily matches to 1 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; round ; 1 } } ; 4 }"
            ]
        },
        {
            "input": "the average of the high points record of all rows is 29.5 .",
            "output": [
                "round_eq { avg { all_rows ; high points } ; 29.5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jack kemp ( la ) . take the yards record of this row . select the rows whose player record fuzzily matches to tom flores ( oak ) . take the yards record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; jack kemp ( la ) } ; yards } ; hop { filter_eq { all_rows ; player ; tom flores ( oak ) } ; yards } }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 10 july .",
            "output": [
                "all_eq { all_rows ; date ; 10 july }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 12000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 12000 }"
            ]
        },
        {
            "input": "the average of the episodes record of all rows is 38.167 .",
            "output": [
                "round_eq { avg { all_rows ; episodes } ; 38.167 }"
            ]
        },
        {
            "input": "select the rows whose leader at the summit record fuzzily matches to ( usa ) . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; leader at the summit ; ( usa ) } }"
            ]
        },
        {
            "input": "for the label records of all rows , most of them fuzzily match to parlophone .",
            "output": [
                "most_eq { all_rows ; label ; parlophone }"
            ]
        },
        {
            "input": "select the rows whose power ( kw ) record fuzzily matches to 5 kw . the number of such rows is 12 .",
            "output": [
                "eq { count { filter_eq { all_rows ; power ( kw ) ; 5 kw } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to family quarrel . take the air date record of this row . select the rows whose title record fuzzily matches to the award . take the air date record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; family quarrel } ; air date } ; hop { filter_eq { all_rows ; title ; the award } ; air date } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to clay . there is only one such row in the table . the track record of this unqiue row is little valley speedway .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; clay } } ; eq { hop { filter_eq { all_rows ; surface ; clay } ; track } ; little valley speedway } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the opponent record of this row is denver broncos .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; opponent } ; denver broncos }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 12 november . the average of the crowd record of these rows is 2663 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; date ; 12 november } ; crowd } ; 2663 }"
            ]
        },
        {
            "input": "select the rows whose ladder position record fuzzily matches to 9 / 16 . there is only one such row in the table . the competition record of this unqiue row is 2013 nrl season .",
            "output": [
                "and { only { filter_eq { all_rows ; ladder position ; 9 / 16 } } ; eq { hop { filter_eq { all_rows ; ladder position ; 9 / 16 } ; competition } ; 2013 nrl season } }"
            ]
        },
        {
            "input": "select the row whose elevated record of all rows is minimum . the elector record of this row is gregorio papareschi , canreglat .",
            "output": [
                "eq { hop { argmin { all_rows ; elevated } ; elector } ; gregorio papareschi , canreglat }"
            ]
        },
        {
            "input": "the average of the of candidates nominated record of all rows is 31.2 .",
            "output": [
                "round_eq { avg { all_rows ; of candidates nominated } ; 31.2 }"
            ]
        },
        {
            "input": "the sum of the to par record of all rows is -40 .",
            "output": [
                "round_eq { sum { all_rows ; to par } ; -40 }"
            ]
        },
        {
            "input": "the average of the duration record of all rows is 6 months 7 days .",
            "output": [
                "round_eq { avg { all_rows ; duration } ; 6 months 7 days }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the race name record of this row is iv glover trophy .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; race name } ; iv glover trophy }"
            ]
        },
        {
            "input": "select the row whose total poll ( % ) record of all rows is maximum . the constituency record of this row is oslo .",
            "output": [
                "eq { hop { argmax { all_rows ; total poll ( % ) } ; constituency } ; oslo }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2010 . take the podium record of this row . select the rows whose season record fuzzily matches to 2011 . take the podium record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2010 } ; podium } ; hop { filter_eq { all_rows ; season ; 2011 } ; podium } }"
            ]
        },
        {
            "input": "select the row whose caps record of all rows is maximum . the name record of this row is ronaldo .",
            "output": [
                "eq { hop { argmax { all_rows ; caps } ; name } ; ronaldo }"
            ]
        },
        {
            "input": "for the team records of all rows , all of them fuzzily match to honda .",
            "output": [
                "all_eq { all_rows ; team ; honda }"
            ]
        },
        {
            "input": "select the rows whose indigenous mining production 2006 record is equal to 0 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; indigenous mining production 2006 ; 0 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to detroit . among these rows , select the rows whose high rebounds record fuzzily matches to shaquille o'neal . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; team ; detroit } ; high rebounds ; shaquille o'neal } } ; 3 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to april .",
            "output": [
                "all_eq { all_rows ; date ; april }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 2nd minimum . the celebrity record of this row is margot kidder .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; original air date ; 2 } ; celebrity } ; margot kidder }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to melbourne . among these rows , select the rows whose crowd record is greater than 10000 . there is only one such row in the table . the venue record of this unqiue row is mcg .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; home team ; melbourne } ; crowd ; 10000 } } ; eq { hop { filter_greater { filter_eq { all_rows ; home team ; melbourne } ; crowd ; 10000 } ; venue } ; mcg } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jon koncak . take the years in orlando record of this row . select the rows whose player record fuzzily matches to tim kempton . take the years in orlando record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; jon koncak } ; years in orlando } ; hop { filter_eq { all_rows ; player ; tim kempton } ; years in orlando } }"
            ]
        },
        {
            "input": "for the format ( s ) records of all rows , most of them fuzzily match to cd .",
            "output": [
                "most_eq { all_rows ; format ( s ) ; cd }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to july 2010 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; date ; july 2010 } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to drew . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; drew } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2013 . there is only one such row in the table . the tournament record of this unqiue row is oklahoma city , usa f9 .",
            "output": [
                "and { only { filter_eq { all_rows ; date ; 2013 } } ; eq { hop { filter_eq { all_rows ; date ; 2013 } ; tournament } ; oklahoma city , usa f9 } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd minimum . the venue record of this row is port of spain , trinidad and tobago .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 2 } ; venue } ; port of spain , trinidad and tobago }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to canada . there is only one such row in the table . the name record of this unqiue row is barbara underhill / paul martini .",
            "output": [
                "and { only { filter_eq { all_rows ; nation ; canada } } ; eq { hop { filter_eq { all_rows ; nation ; canada } ; name } ; barbara underhill / paul martini } }"
            ]
        },
        {
            "input": "select the rows whose song record fuzzily matches to ek ladki ko dekha . take the year record of this row . select the rows whose song record fuzzily matches to yeh kaali kaali aankhen . take the year record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; song ; ek ladki ko dekha } ; year } ; hop { filter_eq { all_rows ; song ; yeh kaali kaali aankhen } ; year } }"
            ]
        },
        {
            "input": "select the rows whose water park record fuzzily matches to water country usa . take the rank record of this row . select the rows whose water park record fuzzily matches to siam water park . take the rank record of this row . the first record is 2 larger than the second record . the rank record of the first row is 20 . the rank record of the second row is 18 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; water park ; water country usa } ; rank } ; hop { filter_eq { all_rows ; water park ; siam water park } ; rank } } ; 2 } ; and { eq { hop { filter_eq { all_rows ; water park ; water country usa } ; rank } ; 20 } ; eq { hop { filter_eq { all_rows ; water park ; siam water park } ; rank } ; 18 } } }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to jimmy duncan jr . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to zach wamp . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; jimmy duncan jr } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; zach wamp } ; first elected } }"
            ]
        },
        {
            "input": "select the row whose rebs record of all rows is maximum . the player record of this row is alvan adams .",
            "output": [
                "eq { hop { argmax { all_rows ; rebs } ; player } ; alvan adams }"
            ]
        },
        {
            "input": "select the rows whose time record is less than 0:10 . there is only one such row in the table . the winner record of this unqiue row is scott smith . the loser record of this unqiue row is kyle noke .",
            "output": [
                "and { only { filter_less { all_rows ; time ; 0:10 } } ; and { eq { hop { filter_less { all_rows ; time ; 0:10 } ; winner } ; scott smith } ; eq { hop { filter_less { all_rows ; time ; 0:10 } ; loser } ; kyle noke } } }"
            ]
        },
        {
            "input": "select the rows whose age record is equal to 8 . among these rows , select the rows whose sp record fuzzily matches to 20 / 1 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; age ; 8 } ; sp ; 20 / 1 } } ; 1 }"
            ]
        },
        {
            "input": "select the rows whose res record fuzzily matches to draw . there is only one such row in the table . the opponent record of this unqiue row is ruben villareal .",
            "output": [
                "and { only { filter_eq { all_rows ; res ; draw } } ; eq { hop { filter_eq { all_rows ; res ; draw } ; opponent } ; ruben villareal } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to bob jones . take the team record of this row . select the rows whose player record fuzzily matches to larry hutton . take the team record of this row . the first record does not match to the second record . the team record of the first row is minnesota twins . the team record of the second row is los angeles dodgers .",
            "output": [
                "and { not_eq { hop { filter_eq { all_rows ; player ; bob jones } ; team } ; hop { filter_eq { all_rows ; player ; larry hutton } ; team } } ; and { eq { hop { filter_eq { all_rows ; player ; bob jones } ; team } ; minnesota twins } ; eq { hop { filter_eq { all_rows ; player ; larry hutton } ; team } ; los angeles dodgers } } }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to forbes field . the minimum date record of these rows is sunday september 20 .",
            "output": [
                "eq { min { filter_eq { all_rows ; game site ; forbes field } ; date } ; sunday september 20 }"
            ]
        },
        {
            "input": "select the rows whose channel record is less than 10 . there is only one such row in the table . the callsign record of this unqiue row is wnbc .",
            "output": [
                "and { only { filter_less { all_rows ; channel ; 10 } } ; eq { hop { filter_less { all_rows ; channel ; 10 } ; callsign } ; wnbc } }"
            ]
        },
        {
            "input": "the average of the result record of all rows is 25.5 .",
            "output": [
                "round_eq { avg { all_rows ; result } ; 25.5 }"
            ]
        },
        {
            "input": "select the row whose runs record of all rows is 2nd maximum . the batsmen record of this row is mark pettini jason gallian .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; runs ; 2 } ; batsmen } ; mark pettini jason gallian }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2001 . take the number of clubs record of this row . select the rows whose season record fuzzily matches to 1996 . take the number of clubs record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; season ; 2001 } ; number of clubs } ; hop { filter_eq { all_rows ; season ; 1996 } ; number of clubs } }"
            ]
        },
        {
            "input": "the 2nd maximum points record of all rows is 79 . the artist record of the row with 2nd maximum points record is staffan broms . the song record of the row with 2nd maximum points record is dags igen att vara k\u00e4ra .",
            "output": [
                "and { eq { nth_max { all_rows ; points ; 2 } ; 79 } ; and { eq { hop { nth_argmax { all_rows ; points ; 2 } ; artist } ; staffan broms } ; eq { hop { nth_argmax { all_rows ; points ; 2 } ; song } ; dags igen att vara k\u00e4ra } } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the opponent record of this row is buffalo bills .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent } ; buffalo bills }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 1979 president 's cup . the sum of the score record of these rows is 4 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; competition ; 1979 president 's cup } ; score } ; 4 }"
            ]
        },
        {
            "input": "for the snatch records of all rows , most of them are greater than or equal to 140 .",
            "output": [
                "most_greater_eq { all_rows ; snatch ; 140 }"
            ]
        },
        {
            "input": "the sum of the money record of all rows is 146800 .",
            "output": [
                "round_eq { sum { all_rows ; money } ; 146800 }"
            ]
        },
        {
            "input": "select the row whose points per game record of all rows is minimum . the tournament record of this row is 2011 eurobasket .",
            "output": [
                "eq { hop { argmin { all_rows ; points per game } ; tournament } ; 2011 eurobasket }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to won . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; won } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to january 2013 . the sum of the result record of these rows is 2 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; january 2013 } ; result } ; 2 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 52800 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 52800 }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to glenn leopold . select the row whose no in series record of these rows is 1st minimum . the original air date record of this row is september 23 , 1995 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; written by ; glenn leopold } ; no in series ; 1 } ; original air date } ; september 23 , 1995 }"
            ]
        },
        {
            "input": "for the episodes records of all rows , all of them are equal to 22 .",
            "output": [
                "all_eq { all_rows ; episodes ; 22 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to steve scaini . there is only one such row in the table . the record of this unqiue row is 11 .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; steve scaini } } ; eq { hop { filter_eq { all_rows ; directed by ; steve scaini } ; } ; 11 } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to t . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; t } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose state record fuzzily matches to jammu & kashmir . among these rows , select the rows whose total capacity ( mw ) record is equal to 44 . there is only one such row in the table . the power plant record of this unqiue row is chutak .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; state ; jammu & kashmir } ; total capacity ( mw ) ; 44 } } ; eq { hop { filter_eq { filter_eq { all_rows ; state ; jammu & kashmir } ; total capacity ( mw ) ; 44 } ; power plant } ; chutak } }"
            ]
        },
        {
            "input": "select the rows whose gold record is greater than or equal to 10 . among these rows , select the rows whose silver record is greater than or equal to 20 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { filter_greater_eq { all_rows ; gold ; 10 } ; silver ; 20 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose lost record is equal to 14 . there is only one such row in the table . the club record of this unqiue row is burry port rfc .",
            "output": [
                "and { only { filter_eq { all_rows ; lost ; 14 } } ; eq { hop { filter_eq { all_rows ; lost ; 14 } ; club } ; burry port rfc } }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to paul westphal .",
            "output": [
                "most_eq { all_rows ; high points ; paul westphal }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york islanders . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; new york islanders } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose member countries record fuzzily matches to sweden . take the population record of this row . select the rows whose member countries record fuzzily matches to austria . take the population record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; member countries ; sweden } ; population } ; hop { filter_eq { all_rows ; member countries ; austria } ; population } }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to cornerback . the average of the overall record of these rows is 41 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; position ; cornerback } ; overall } ; 41 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is 16 march 2008 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; 16 march 2008 }"
            ]
        },
        {
            "input": "the average of the gold record of all rows is 2.67 .",
            "output": [
                "round_eq { avg { all_rows ; gold } ; 2.67 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to david gim\u00e9nez . take the total g record of this row . select the rows whose player record fuzzily matches to casado . take the total g record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; david gim\u00e9nez } ; total g } ; hop { filter_eq { all_rows ; player ; casado } ; total g } }"
            ]
        },
        {
            "input": "select the row whose year built record of all rows is 3rd maximum . the church name record of this row is batalden bedehuskapell .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year built ; 3 } ; church name } ; batalden bedehuskapell }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to kansas city chiefs . there is only one such row in the table . the week record of this unqiue row is 4 .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; kansas city chiefs } } ; eq { hop { filter_eq { all_rows ; opponent ; kansas city chiefs } ; week } ; 4 } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose money record is greater than 52000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; country ; united states } ; money ; 52000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose result record is greater than 40 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; result ; 40 } }"
            ]
        },
        {
            "input": "select the rows whose call sign record fuzzily matches to wjds . take the frequency mhz record of this row . select the rows whose call sign record fuzzily matches to w298as . take the frequency mhz record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; call sign ; wjds } ; frequency mhz } ; hop { filter_eq { all_rows ; call sign ; w298as } ; frequency mhz } }"
            ]
        },
        {
            "input": "select the rows whose owner record fuzzily matches to wnetorg . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; owner ; wnetorg } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose rating record of all rows is maximum . the episode record of this row is a modest proposal .",
            "output": [
                "eq { hop { argmax { all_rows ; rating } ; episode } ; a modest proposal }"
            ]
        },
        {
            "input": "select the rows whose dance styles record fuzzily matches to rumba . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; dance styles ; rumba } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the opponent record of this row is ottawa senators .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; opponent } ; ottawa senators }"
            ]
        },
        {
            "input": "the 16th minimum date record of all rows is december 20 , 1981 .",
            "output": [
                "eq { nth_min { all_rows ; date ; 16 } ; december 20 , 1981 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2001 . take the races record of this row . select the rows whose year record fuzzily matches to 2003 . take the races record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 2001 } ; races } ; hop { filter_eq { all_rows ; year ; 2003 } ; races } }"
            ]
        },
        {
            "input": "for the pole position records of all rows , most of them fuzzily match to michael andretti .",
            "output": [
                "most_eq { all_rows ; pole position ; michael andretti }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 2nd maximum . the date record of this row is january 12 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; january 12 }"
            ]
        },
        {
            "input": "the average of the pts record of all rows is 0 .",
            "output": [
                "round_eq { avg { all_rows ; pts } ; 0 }"
            ]
        },
        {
            "input": "select the rows whose wins record is greater than 0 . there is only one such row in the table . the tournament record of this unqiue row is masters tournament .",
            "output": [
                "and { only { filter_greater { all_rows ; wins ; 0 } } ; eq { hop { filter_greater { all_rows ; wins ; 0 } ; tournament } ; masters tournament } }"
            ]
        },
        {
            "input": "select the row whose maximum seating capacity record of all rows is 2nd minimum . the arena / venue record of this row is quadricentennial pavilion .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; maximum seating capacity ; 2 } ; arena / venue } ; quadricentennial pavilion }"
            ]
        },
        {
            "input": "select the rows whose school record is arbitrary . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_all { all_rows ; school } } ; 9 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to manchester city . take the score record of this row . select the rows whose home team record fuzzily matches to arsenal . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; manchester city } ; score } ; hop { filter_eq { all_rows ; home team ; arsenal } ; score } }"
            ]
        },
        {
            "input": "select the row whose away team score record of all rows is maximum . the away team record of this row is hawthorn .",
            "output": [
                "eq { hop { argmax { all_rows ; away team score } ; away team } ; hawthorn }"
            ]
        },
        {
            "input": "select the rows whose team ( equipo ) record fuzzily matches to sporting san miguelito . take the won ( pg ) record of this row . select the rows whose team ( equipo ) record fuzzily matches to alianza . take the won ( pg ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ( equipo ) ; sporting san miguelito } ; won ( pg ) } ; hop { filter_eq { all_rows ; team ( equipo ) ; alianza } ; won ( pg ) } }"
            ]
        },
        {
            "input": "select the rows whose school record fuzzily matches to munster . take the enrollment record of this row . select the rows whose school record fuzzily matches to andrean . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; school ; munster } ; enrollment } ; hop { filter_eq { all_rows ; school ; andrean } ; enrollment } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is december 21 , 2007 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; december 21 , 2007 }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1969 . take the start record of this row . select the rows whose year record fuzzily matches to 1970 . take the start record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; year ; 1969 } ; start } ; hop { filter_eq { all_rows ; year ; 1970 } ; start } }"
            ]
        },
        {
            "input": "select the rows whose company record fuzzily matches to bp . take the profits ( billion ) record of this row . select the rows whose company record fuzzily matches to hsbc . take the profits ( billion ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; company ; bp } ; profits ( billion ) } ; hop { filter_eq { all_rows ; company ; hsbc } ; profits ( billion ) } }"
            ]
        },
        {
            "input": "for the pictorials records of all rows , most of them fuzzily match to girls .",
            "output": [
                "most_eq { all_rows ; pictorials ; girls }"
            ]
        },
        {
            "input": "for the gained university status records of all rows , most of them are greater than 1920 .",
            "output": [
                "most_greater { all_rows ; gained university status ; 1920 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to new zealand . there is only one such row in the table . the player record of this unqiue row is bob charles .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; new zealand } } ; eq { hop { filter_eq { all_rows ; country ; new zealand } ; player } ; bob charles } }"
            ]
        },
        {
            "input": "select the rows whose fri 5 june record fuzzily matches to no time . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; fri 5 june ; no time } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose role record fuzzily matches to 2nd male lead . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; role ; 2nd male lead } } ; 2 }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to lebron james .",
            "output": [
                "most_eq { all_rows ; high assists ; lebron james }"
            ]
        },
        {
            "input": "for the engine records of all rows , most of them fuzzily match to offenhauser l4 .",
            "output": [
                "most_eq { all_rows ; engine ; offenhauser l4 }"
            ]
        },
        {
            "input": "select the row whose week record of all rows is 1st minimum . the opponent record of this row is chicago cardinals .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; week ; 1 } ; opponent } ; chicago cardinals }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to mci heritage golf classic . there is only one such row in the table . the date record of this unqiue row is 17 apr 1988 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; mci heritage golf classic } } ; eq { hop { filter_eq { all_rows ; tournament ; mci heritage golf classic } ; date } ; 17 apr 1988 } }"
            ]
        },
        {
            "input": "select the row whose total assets ( score ) record of all rows is maximum . the bank record of this row is bank of industry and mine .",
            "output": [
                "eq { hop { argmax { all_rows ; total assets ( score ) } ; bank } ; bank of industry and mine }"
            ]
        },
        {
            "input": "select the rows whose first runner up record fuzzily matches to paragon denver co . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; first runner up ; paragon denver co } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date of successors taking office record fuzzily matches to 1895 . among these rows , select the rows whose reason for vacancy record fuzzily matches to resigned . there is only one such row in the table . the vacator record of this unqiue row is edwin j jordan ( r ) .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; date of successors taking office ; 1895 } ; reason for vacancy ; resigned } } ; eq { hop { filter_eq { filter_eq { all_rows ; date of successors taking office ; 1895 } ; reason for vacancy ; resigned } ; vacator } ; edwin j jordan ( r ) } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to alison maclean . there is only one such row in the table . the title record of this unqiue row is the river .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; alison maclean } } ; eq { hop { filter_eq { all_rows ; directed by ; alison maclean } ; title } ; the river } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 11 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 11 }"
            ]
        },
        {
            "input": "select the row whose goals record of all rows is maximum . the club record of this row is real madrid .",
            "output": [
                "eq { hop { argmax { all_rows ; goals } ; club } ; real madrid }"
            ]
        },
        {
            "input": "the maximum crowd record of all rows is 27000 . the venue record of the row with superlative crowd record is punt road oval .",
            "output": [
                "and { eq { max { all_rows ; crowd } ; 27000 } ; eq { hop { argmax { all_rows ; crowd } ; venue } ; punt road oval } }"
            ]
        },
        {
            "input": "select the rows whose height ft ( m ) record is equal to 504 . there is only one such row in the table . the name record of this unqiue row is one indiana square .",
            "output": [
                "and { only { filter_eq { all_rows ; height ft ( m ) ; 504 } } ; eq { hop { filter_eq { all_rows ; height ft ( m ) ; 504 } ; name } ; one indiana square } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 3rd maximum . the opponent record of this row is hartford whalers .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 3 } ; opponent } ; hartford whalers }"
            ]
        },
        {
            "input": "select the rows whose guest host record fuzzily matches to jessie wallace . take the air date record of this row . select the rows whose guest host record fuzzily matches to trisha goddard . take the air date record of this row . the first record is less than the second record . the air date record of the first row is 17 february 2006 . the air date record of the second row is 24 february 2006 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; guest host ; jessie wallace } ; air date } ; hop { filter_eq { all_rows ; guest host ; trisha goddard } ; air date } } ; and { eq { hop { filter_eq { all_rows ; guest host ; jessie wallace } ; air date } ; 17 february 2006 } ; eq { hop { filter_eq { all_rows ; guest host ; trisha goddard } ; air date } ; 24 february 2006 } } }"
            ]
        },
        {
            "input": "select the rows whose general classification record fuzzily matches to nick nuyens . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; general classification ; nick nuyens } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose lost record is greater than 1 . among these rows , select the rows whose points record is equal to 14 . there is only one such row in the table . the team record of this unqiue row is skra warszawa .",
            "output": [
                "and { only { filter_eq { filter_greater { all_rows ; lost ; 1 } ; points ; 14 } } ; eq { hop { filter_eq { filter_greater { all_rows ; lost ; 1 } ; points ; 14 } ; team } ; skra warszawa } }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is maximum . the nation record of this row is spain .",
            "output": [
                "eq { hop { argmax { all_rows ; bronze } ; nation } ; spain }"
            ]
        },
        {
            "input": "select the row whose first operated record of all rows is maximum . the name record of this row is jubilee line .",
            "output": [
                "eq { hop { argmax { all_rows ; first operated } ; name } ; jubilee line }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to tennessee . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; school / club team ; tennessee } } ; 2 }"
            ]
        },
        {
            "input": "the 2nd minimum year record of all rows is 1979 . the issued title record of the row with 2nd minimum year record is 1958 miles .",
            "output": [
                "and { eq { nth_min { all_rows ; year ; 2 } ; 1979 } ; eq { hop { nth_argmin { all_rows ; year ; 2 } ; issued title } ; 1958 miles } }"
            ]
        },
        {
            "input": "select the rows whose championship record fuzzily matches to wimbledon . select the row whose year record of these rows is minimum . the opponent in the final record of this row is wilhelm bungert .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; championship ; wimbledon } ; year } ; opponent in the final } ; wilhelm bungert }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to burma . there is only one such row in the table . the city record of this unqiue row is yangon .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; burma } } ; eq { hop { filter_eq { all_rows ; country ; burma } ; city } ; yangon } }"
            ]
        },
        {
            "input": "select the row whose assistant professors record of all rows is minimum . the lecturers record of this row is 7 .",
            "output": [
                "eq { hop { argmin { all_rows ; assistant professors } ; lecturers } ; 7 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the week record of this row is 16 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; week } ; 16 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to elio fox . take the prize money record of this row . select the rows whose winner record fuzzily matches to barry shulman . take the prize money record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; winner ; elio fox } ; prize money } ; hop { filter_eq { all_rows ; winner ; barry shulman } ; prize money } }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 23516 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 23516 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to baltimore colts . the minimum attendance record of these rows is 57808 .",
            "output": [
                "eq { min { filter_eq { all_rows ; opponent ; baltimore colts } ; attendance } ; 57808 }"
            ]
        },
        {
            "input": "select the row whose home team score record of all rows is maximum . the home team record of this row is richmond .",
            "output": [
                "eq { hop { argmax { all_rows ; home team score } ; home team } ; richmond }"
            ]
        },
        {
            "input": "select the rows whose losing bonus record is equal to 3 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; losing bonus ; 3 } } ; 5 }"
            ]
        },
        {
            "input": "the maximum wins record of all rows is 6 . the year record of the row with superlative wins record is 2011 .",
            "output": [
                "and { eq { max { all_rows ; wins } ; 6 } ; eq { hop { argmax { all_rows ; wins } ; year } ; 2011 } }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is 13.4 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; 13.4 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to scotland . there is only one such row in the table . the player record of this unqiue row is sandy lyle .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; scotland } } ; eq { hop { filter_eq { all_rows ; country ; scotland } ; player } ; sandy lyle } }"
            ]
        },
        {
            "input": "select the row whose grand total record of all rows is maximum . the nato member record of this row is uk .",
            "output": [
                "eq { hop { argmax { all_rows ; grand total } ; nato member } ; uk }"
            ]
        },
        {
            "input": "select the rows whose viewers ( households in millions ) record is less than 18 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; viewers ( households in millions ) ; 18 } } ; 3 }"
            ]
        },
        {
            "input": "for the current streak records of all rows , most of them fuzzily match to w .",
            "output": [
                "most_eq { all_rows ; current streak ; w }"
            ]
        },
        {
            "input": "for the wheels records of all rows , most of them fuzzily match to 4 - 4 - 2t .",
            "output": [
                "most_eq { all_rows ; wheels ; 4 - 4 - 2t }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to first . among these rows , select the rows whose intake record is equal to 30 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; type ; first } ; intake ; 30 } } ; 4 }"
            ]
        },
        {
            "input": "for the owgr points records of all rows , most of them are equal to 6 .",
            "output": [
                "most_eq { all_rows ; owgr points ; 6 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to quicken loans arena . there is only one such row in the table . the date record of this unqiue row is november 3 .",
            "output": [
                "and { only { filter_eq { all_rows ; location attendance ; quicken loans arena } } ; eq { hop { filter_eq { all_rows ; location attendance ; quicken loans arena } ; date } ; november 3 } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to tampa bay buccaneers . take the date record of this row . select the rows whose opponent record fuzzily matches to green bay packers . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; tampa bay buccaneers } ; date } ; hop { filter_eq { all_rows ; opponent ; green bay packers } ; date } }"
            ]
        },
        {
            "input": "for the joined records of all rows , most of them are equal to 2010 .",
            "output": [
                "most_eq { all_rows ; joined ; 2010 }"
            ]
        },
        {
            "input": "select the row whose unemployment rate record of all rows is maximum . the county record of this row is schoharie .",
            "output": [
                "eq { hop { argmax { all_rows ; unemployment rate } ; county } ; schoharie }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is footscray . the date record of this row is 20 june 1942 .",
            "output": [
                "and { eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; footscray } ; eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; date } ; 20 june 1942 } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to l . there is only one such row in the table . the team record of this unqiue row is georgetown ( 19 ) .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; l } } ; eq { hop { filter_eq { all_rows ; score ; l } ; team } ; georgetown ( 19 ) } }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is 0.92 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; 0.92 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the location attendance record of this row is american airlines center 19688 .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; location attendance } ; american airlines center 19688 }"
            ]
        },
        {
            "input": "select the rows whose of seats won record is less than 10 . there is only one such row in the table . the election record of this unqiue row is 1993 .",
            "output": [
                "and { only { filter_less { all_rows ; of seats won ; 10 } } ; eq { hop { filter_less { all_rows ; of seats won ; 10 } ; election } ; 1993 } }"
            ]
        },
        {
            "input": "select the rows whose royal house record fuzzily matches to twelfth . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; royal house ; twelfth } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to thomas muster . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; thomas muster } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose wins record is equal to 0 . there is only one such row in the table . the tournament record of this unqiue row is masters tournament .",
            "output": [
                "and { only { filter_eq { all_rows ; wins ; 0 } } ; eq { hop { filter_eq { all_rows ; wins ; 0 } ; tournament } ; masters tournament } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is essendon .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; essendon }"
            ]
        },
        {
            "input": "the sum of the viewers record of all rows is 111.2 .",
            "output": [
                "round_eq { sum { all_rows ; viewers } ; 111.2 }"
            ]
        },
        {
            "input": "select the rows whose branch record fuzzily matches to us marine corps . there is only one such row in the table . the name record of this unqiue row is general james l jones .",
            "output": [
                "and { only { filter_eq { all_rows ; branch ; us marine corps } } ; eq { hop { filter_eq { all_rows ; branch ; us marine corps } ; name } ; general james l jones } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2008 . the maximum date record of these rows is 4 september 2008 .",
            "output": [
                "eq { max { filter_eq { all_rows ; date ; 2008 } ; date } ; 4 september 2008 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . for the first elected records of these rows , most of them are less than 1970 .",
            "output": [
                "most_less { filter_eq { all_rows ; party ; democratic } ; first elected ; 1970 }"
            ]
        },
        {
            "input": "the maximum length record of all rows is 136 ' . the name record of the row with superlative length record is fay no 4 .",
            "output": [
                "and { eq { max { all_rows ; length } ; 136 ' } ; eq { hop { argmax { all_rows ; length } ; name } ; fay no 4 } }"
            ]
        },
        {
            "input": "select the rows whose writer record fuzzily matches to ed roe . there is only one such row in the table . the production code record of this unqiue row is 402 .",
            "output": [
                "and { only { filter_eq { all_rows ; writer ; ed roe } } ; eq { hop { filter_eq { all_rows ; writer ; ed roe } ; production code } ; 402 } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the song record of this row is living my life without you .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; song } ; living my life without you }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to rca dome . select the row whose date record of these rows is 4th minimum . the attendance record of this row is 56860 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; game site ; rca dome } ; date ; 4 } ; attendance } ; 56860 }"
            ]
        },
        {
            "input": "select the row whose league record of all rows is 2nd maximum . the player record of this row is tom de sutter .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; league ; 2 } ; player } ; tom de sutter }"
            ]
        },
        {
            "input": "select the rows whose tv network ( s ) record fuzzily matches to fox8 . there is only one such row in the table . the country record of this unqiue row is australia .",
            "output": [
                "and { only { filter_eq { all_rows ; tv network ( s ) ; fox8 } } ; eq { hop { filter_eq { all_rows ; tv network ( s ) ; fox8 } ; country } ; australia } }"
            ]
        },
        {
            "input": "select the rows whose opponent in the final record fuzzily matches to graeme dott . there is only one such row in the table . the championship record of this unqiue row is world series - berlin event .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent in the final ; graeme dott } } ; eq { hop { filter_eq { all_rows ; opponent in the final ; graeme dott } ; championship } ; world series - berlin event } }"
            ]
        },
        {
            "input": "for the launch year records of all rows , most of them are equal to 2004 .",
            "output": [
                "most_eq { all_rows ; launch year ; 2004 }"
            ]
        },
        {
            "input": "select the rows whose winning constructor record fuzzily matches to bugatti . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning constructor ; bugatti } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose indian scorers record fuzzily matches to own goal . there is only one such row in the table . the date record of this unqiue row is 23 june 2011 .",
            "output": [
                "and { only { filter_eq { all_rows ; indian scorers ; own goal } } ; eq { hop { filter_eq { all_rows ; indian scorers ; own goal } ; date } ; 23 june 2011 } }"
            ]
        },
        {
            "input": "for the friendly records of all rows , most of them fuzzily match to world cup 2006 qualifier .",
            "output": [
                "most_eq { all_rows ; friendly ; world cup 2006 qualifier }"
            ]
        },
        {
            "input": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row . select the rows whose away team record fuzzily matches to swans . take the away team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; hop { filter_eq { all_rows ; away team ; swans } ; away team score } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to ufc . among these rows , select the rows whose res record fuzzily matches to win . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; event ; ufc } ; res ; win } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose group position record fuzzily matches to 1st . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; group position ; 1st } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose party record fuzzily matches to democratic . select the row whose first elected record of these rows is minimum . the incumbent record of this row is charles edward bennett .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; party ; democratic } ; first elected } ; incumbent } ; charles edward bennett }"
            ]
        },
        {
            "input": "select the rows whose june 10 - 11 record fuzzily matches to june 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; june 10 - 11 ; june 10 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 19.05 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 19.05 }"
            ]
        },
        {
            "input": "select the rows whose english title record fuzzily matches to the saviour of the soul . take the hk viewers record of this row . select the rows whose english title record fuzzily matches to men in pain . take the hk viewers record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; english title ; the saviour of the soul } ; hk viewers } ; hop { filter_eq { all_rows ; english title ; men in pain } ; hk viewers } }"
            ]
        },
        {
            "input": "select the row whose rank record of all rows is minimum . the nation record of this row is soviet union .",
            "output": [
                "eq { hop { argmin { all_rows ; rank } ; nation } ; soviet union }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to chuck arnason . take the goals record of this row . select the rows whose winner record fuzzily matches to reggie leach . take the goals record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; winner ; chuck arnason } ; goals } ; hop { filter_eq { all_rows ; winner ; reggie leach } ; goals } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 36092.5 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 36092.5 }"
            ]
        },
        {
            "input": "select the rows whose no built record is greater than 20 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater { all_rows ; no built ; 20 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose district record fuzzily matches to new york . there is only one such row in the table . the vacator record of this unqiue row is jonathan havens ( dr ) .",
            "output": [
                "and { only { filter_eq { all_rows ; district ; new york } } ; eq { hop { filter_eq { all_rows ; district ; new york } ; vacator } ; jonathan havens ( dr ) } }"
            ]
        },
        {
            "input": "select the row whose population density ( per km square ) record of all rows is maximum . the country with flag record of this row is puerto rico ( usa ) .",
            "output": [
                "eq { hop { argmax { all_rows ; population density ( per km square ) } ; country with flag } ; puerto rico ( usa ) }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2003 . the average of the score record of these rows is 3 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; date ; 2003 } ; score } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to montauban . take the lost record of this row . select the rows whose club record fuzzily matches to biarritz . take the lost record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; club ; montauban } ; lost } ; hop { filter_eq { all_rows ; club ; biarritz } ; lost } }"
            ]
        },
        {
            "input": "for the report records of all rows , all of them fuzzily match to bbc .",
            "output": [
                "all_eq { all_rows ; report ; bbc }"
            ]
        },
        {
            "input": "select the row whose result record of all rows is maximum . the venue record of this row is adelaide oval .",
            "output": [
                "eq { hop { argmax { all_rows ; result } ; venue } ; adelaide oval }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is maximum . the chassis record of this row is ferrari 500 / 625 .",
            "output": [
                "eq { hop { argmax { all_rows ; year } ; chassis } ; ferrari 500 / 625 }"
            ]
        },
        {
            "input": "select the rows whose location / attendance record fuzzily matches to the omni . among these rows , select the rows whose score record fuzzily matches to l . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location / attendance ; the omni } ; score ; l } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to world championships . among these rows , select the rows whose position record fuzzily matches to 31st . there is only one such row in the table . the year record of this unqiue row is 2007 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; competition ; world championships } ; position ; 31st } } ; eq { hop { filter_eq { filter_eq { all_rows ; competition ; world championships } ; position ; 31st } ; year } ; 2007 } }"
            ]
        },
        {
            "input": "select the rows whose outgoing manager record fuzzily matches to ra\u015fit \u00e7etiner . take the date of vacancy record of this row . select the rows whose outgoing manager record fuzzily matches to engin ipeko\u011flu . take the date of vacancy record of this row . the second record is 8 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; outgoing manager ; ra\u015fit \u00e7etiner } ; date of vacancy } ; hop { filter_eq { all_rows ; outgoing manager ; engin ipeko\u011flu } ; date of vacancy } } ; -8 days }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to october . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; october } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to w . select the row whose week record of these rows is 1st minimum . the opponent record of this row is new york jets . the game site record of this row is qualcomm stadium .",
            "output": [
                "and { eq { hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 1 } ; opponent } ; new york jets } ; eq { hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 1 } ; game site } ; qualcomm stadium } }"
            ]
        },
        {
            "input": "the average of the purse record of all rows is 163250 .",
            "output": [
                "round_eq { avg { all_rows ; purse } ; 163250 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is 2nd minimum . the line record of this row is sofia - dragoman .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; length ; 2 } ; line } ; sofia - dragoman }"
            ]
        },
        {
            "input": "select the rows whose margin of victory record fuzzily matches to 3 strokes . there is only one such row in the table . the tournament record of this unqiue row is anheuser - busch golf classic .",
            "output": [
                "and { only { filter_eq { all_rows ; margin of victory ; 3 strokes } } ; eq { hop { filter_eq { all_rows ; margin of victory ; 3 strokes } ; tournament } ; anheuser - busch golf classic } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to justin knox . take the height record of this row . select the rows whose name record fuzzily matches to jamychal green . take the height record of this row . the first record fuzzily matches to the second record .",
            "output": [
                "eq { hop { filter_eq { all_rows ; name ; justin knox } ; height } ; hop { filter_eq { all_rows ; name ; jamychal green } ; height } }"
            ]
        },
        {
            "input": "select the rows whose citrate record fuzzily matches to negative . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; citrate ; negative } } ; 3 }"
            ]
        },
        {
            "input": "the average of the points against record of all rows is 292 .",
            "output": [
                "round_eq { avg { all_rows ; points against } ; 292 }"
            ]
        },
        {
            "input": "select the rows whose vocalist record fuzzily matches to kanako . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; vocalist ; kanako } }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to public . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; type ; public } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose current streak record fuzzily matches to l . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; current streak ; l } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to aran . take the tournaments record of this row . select the rows whose name record fuzzily matches to itai . take the tournaments record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; name ; aran } ; tournaments } ; hop { filter_eq { all_rows ; name ; itai } ; tournaments } } ; -1 }"
            ]
        },
        {
            "input": "the average of the frequency mhz record of all rows is 99.16 .",
            "output": [
                "round_eq { avg { all_rows ; frequency mhz } ; 99.16 }"
            ]
        },
        {
            "input": "select the rows whose pos record does not match to dnf . the sum of the laps record of these rows is 1359 .",
            "output": [
                "round_eq { sum { filter_not_eq { all_rows ; pos ; dnf } ; laps } ; 1359 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 103000 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 103000 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 2 august 1980 .",
            "output": [
                "all_eq { all_rows ; date ; 2 august 1980 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 10,000 . there is only one such row in the table . the venue record of this unqiue row is corio oval .",
            "output": [
                "and { only { filter_less { all_rows ; crowd ; 10,000 } } ; eq { hop { filter_less { all_rows ; crowd ; 10,000 } ; venue } ; corio oval } }"
            ]
        },
        {
            "input": "select the rows whose play - by - play record fuzzily matches to al michaels . for the play - by - play records of these rows , all of them fuzzily match to al michaels .",
            "output": [
                "all_eq { filter_eq { all_rows ; play - by - play ; al michaels } ; play - by - play ; al michaels }"
            ]
        },
        {
            "input": "for the starts records of all rows , most of them are greater than 33 .",
            "output": [
                "most_greater { all_rows ; starts ; 33 }"
            ]
        },
        {
            "input": "the 3rd minimum rank record of all rows is 3 . the rowers record of the row with 3rd minimum rank record is morten nielsen , thomas larsen . the time record of the row with 3rd minimum rank record is 6:38.33 .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 3 } ; 3 } ; and { eq { hop { nth_argmin { all_rows ; rank ; 3 } ; rowers } ; morten nielsen , thomas larsen } ; eq { hop { nth_argmin { all_rows ; rank ; 3 } ; time } ; 6:38.33 } } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is north melbourne .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; north melbourne }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 81 - 104 . take the date record of this row . select the rows whose score record fuzzily matches to 77 - 96 . take the date record of this row . the second record is 3 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; score ; 81 - 104 } ; date } ; hop { filter_eq { all_rows ; score ; 77 - 96 } ; date } } ; -3 days }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to a . select the row whose date record of these rows is 2nd minimum . the attendance record of this row is 10000 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; venue ; a } ; date ; 2 } ; attendance } ; 10000 }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the tournament record of this row is 1999 .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; tournament } ; 1999 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 7th minimum . the party record of this row is republican .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 7 } ; party } ; republican }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the driver record of this row is michael schumacher .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; driver } ; michael schumacher }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired democratic hold . there is only one such row in the table . the incumbent record of this unqiue row is william y humphreys .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; retired democratic hold } } ; eq { hop { filter_eq { all_rows ; result ; retired democratic hold } ; incumbent } ; william y humphreys } }"
            ]
        },
        {
            "input": "the sum of the in service record of all rows is 35 .",
            "output": [
                "round_eq { sum { all_rows ; in service } ; 35 }"
            ]
        },
        {
            "input": "select the rows whose color record fuzzily matches to green and light colors . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; color ; green and light colors } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose entries record of all rows is 1st maximum . the driver record of this row is michael schumacher .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; entries ; 1 } ; driver } ; michael schumacher }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to albany . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; albany } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 3rd maximum . the date record of this row is october 31 , 1999 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; date } ; october 31 , 1999 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to penguins . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; visitor ; penguins } } ; 6 }"
            ]
        },
        {
            "input": "for the overall wc points ( rank ) records of all rows , most of them are less than 500 .",
            "output": [
                "most_less { all_rows ; overall wc points ( rank ) ; 500 }"
            ]
        },
        {
            "input": "select the rows whose movie record fuzzily matches to agneepath . take the lifetime india distributor share record of this row . select the rows whose movie record fuzzily matches to dabangg 2 . take the lifetime india distributor share record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; movie ; agneepath } ; lifetime india distributor share } ; hop { filter_eq { all_rows ; movie ; dabangg 2 } ; lifetime india distributor share } }"
            ]
        },
        {
            "input": "select the rows whose % ( 2040 ) record is greater than or equal to 10 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; % ( 2040 ) ; 10 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose award record does not match to saturn award . there is only one such row in the table . the year record of this unqiue row is 2010 . the result record of this unqiue row is nominated .",
            "output": [
                "and { only { filter_not_eq { all_rows ; award ; saturn award } } ; and { eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; year } ; 2010 } ; eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; result } ; nominated } } }"
            ]
        },
        {
            "input": "select the row whose founded record of all rows is minimum . the school record of this row is lockland high school .",
            "output": [
                "eq { hop { argmin { all_rows ; founded } ; school } ; lockland high school }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than 2000 . among these rows , select the rows whose seasons in prsl record fuzzily matches to 2009 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_greater { all_rows ; founded ; 2000 } ; seasons in prsl ; 2009 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose nominee ( s ) record fuzzily matches to john wells . take the year record of this row . select the rows whose nominee ( s ) record fuzzily matches to carol flint . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; nominee ( s ) ; john wells } ; year } ; hop { filter_eq { all_rows ; nominee ( s ) ; carol flint } ; year } }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than or equal to 2005 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; founded ; 2005 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 90 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; points ; 90 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to metlife stadium . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; metlife stadium } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose height ( m ) record of all rows is 2nd maximum . the island record of this row is ailsa craig .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; height ( m ) ; 2 } ; island } ; ailsa craig }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 4th minimum . the champion record of this row is emory .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 4 } ; champion } ; emory }"
            ]
        },
        {
            "input": "the maximum term start record of all rows is 11 january 2005 . the minister record of the row with superlative term start record is eli ben - menachem .",
            "output": [
                "and { eq { max { all_rows ; term start } ; 11 january 2005 } ; eq { hop { argmax { all_rows ; term start } ; minister } ; eli ben - menachem } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to switzerland . there is only one such row in the table . the player record of this unqiue row is julien vauclair .",
            "output": [
                "and { only { filter_eq { all_rows ; nationality ; switzerland } } ; eq { hop { filter_eq { all_rows ; nationality ; switzerland } ; player } ; julien vauclair } }"
            ]
        },
        {
            "input": "select the rows whose video record fuzzily matches to 720p . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; video ; 720p } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to guard . there is only one such row in the table . the player record of this unqiue row is steve kerr .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; guard } } ; eq { hop { filter_eq { all_rows ; position ; guard } ; player } ; steve kerr } }"
            ]
        },
        {
            "input": "select the rows whose built record is equal to 1921 . there is only one such row in the table . the name record of this unqiue row is bob white .",
            "output": [
                "and { only { filter_eq { all_rows ; built ; 1921 } } ; eq { hop { filter_eq { all_rows ; built ; 1921 } ; name } ; bob white } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the incumbent record of this row is frank w boykin .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; incumbent } ; frank w boykin }"
            ]
        },
        {
            "input": "for the team records of all rows , most of them fuzzily match to motopark academy .",
            "output": [
                "most_eq { all_rows ; team ; motopark academy }"
            ]
        },
        {
            "input": "for the competition records of all rows , most of them fuzzily match to european championships .",
            "output": [
                "most_eq { all_rows ; competition ; european championships }"
            ]
        },
        {
            "input": "select the rows whose summary record fuzzily matches to runners - up . among these rows , select the rows whose losses record is equal to 11 . there is only one such row in the table . the year record of this unqiue row is 2012 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; summary ; runners - up } ; losses ; 11 } } ; eq { hop { filter_eq { filter_eq { all_rows ; summary ; runners - up } ; losses ; 11 } ; year } ; 2012 } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to scott simpson . take the place record of this row . select the rows whose player record fuzzily matches to larry mize . take the place record of this row . the second record is 3 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; scott simpson } ; place } ; hop { filter_eq { all_rows ; player ; larry mize } ; place } } ; -3 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is maximum . the series record of this row is italian formula three .",
            "output": [
                "eq { hop { argmax { all_rows ; wins } ; series } ; italian formula three }"
            ]
        },
        {
            "input": "select the rows whose writer ( s ) record fuzzily matches to steven melching . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; writer ( s ) ; steven melching } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose english name record fuzzily matches to hexi district . take the density record of this row . select the rows whose english name record fuzzily matches to fenghuang . take the density record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; english name ; hexi district } ; density } ; hop { filter_eq { all_rows ; english name ; fenghuang } ; density } }"
            ]
        },
        {
            "input": "select the rows whose island record fuzzily matches to hawaii . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; island ; hawaii } } ; 2 }"
            ]
        },
        {
            "input": "the average of the average record of all rows is 2530.6 .",
            "output": [
                "round_eq { avg { all_rows ; average } ; 2530.6 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is less than 10.0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { all_rows ; home team score ; 10.0 } } ; 3 }"
            ]
        },
        {
            "input": "the sum of the crowd record of all rows is 174 , 580 .",
            "output": [
                "round_eq { sum { all_rows ; crowd } ; 174 , 580 }"
            ]
        },
        {
            "input": "for the position records of all rows , most of them fuzzily match to rhp .",
            "output": [
                "most_eq { all_rows ; position ; rhp }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to vic / sa . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; player ; vic / sa } }"
            ]
        },
        {
            "input": "for the publisher records of all rows , most of them fuzzily match to nintendo .",
            "output": [
                "most_eq { all_rows ; publisher ; nintendo }"
            ]
        },
        {
            "input": "select the rows whose result record is greater than 50 . there is only one such row in the table . the date record of this unqiue row is september 9 , 1979 . the opponent record of this unqiue row is cincinnati bengals .",
            "output": [
                "and { only { filter_greater { all_rows ; result ; 50 } } ; and { eq { hop { filter_greater { all_rows ; result ; 50 } ; date } ; september 9 , 1979 } ; eq { hop { filter_greater { all_rows ; result ; 50 } ; opponent } ; cincinnati bengals } } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to arizona veterans memorial coliseum . the sum of the score record of these rows is 200 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; location attendance ; arizona veterans memorial coliseum } ; score } ; 200 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to south dakota .",
            "output": [
                "most_eq { all_rows ; location ; south dakota }"
            ]
        },
        {
            "input": "select the row whose round record of all rows is 1st maximum . the opponent record of this row is antoine jaoude .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; round ; 1 } ; opponent } ; antoine jaoude }"
            ]
        },
        {
            "input": "select the rows whose hometown record fuzzily matches to brampton , on . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; hometown ; brampton , on } }"
            ]
        },
        {
            "input": "for the money records of all rows , most of them are greater than or equal to 400 .",
            "output": [
                "most_greater_eq { all_rows ; money ; 400 }"
            ]
        },
        {
            "input": "select the rows whose record label record fuzzily matches to for us . there is only one such row in the table . the single record of this unqiue row is moped girls .",
            "output": [
                "and { only { filter_eq { all_rows ; record label ; for us } } ; eq { hop { filter_eq { all_rows ; record label ; for us } ; single } ; moped girls } }"
            ]
        },
        {
            "input": "the average of the sun devils points record of all rows is 38.5 .",
            "output": [
                "round_eq { avg { all_rows ; sun devils points } ; 38.5 }"
            ]
        },
        {
            "input": "select the rows whose crowd record is greater than 20000 . among these rows , select the rows whose venue record fuzzily matches to victoria park . there is only one such row in the table . the home team record of this unqiue row is collingwood .",
            "output": [
                "and { only { filter_eq { filter_greater { all_rows ; crowd ; 20000 } ; venue ; victoria park } } ; eq { hop { filter_eq { filter_greater { all_rows ; crowd ; 20000 } ; venue ; victoria park } ; home team } ; collingwood } }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than or equal to 1980 . the average of the world ranking record of these rows is 9.5 .",
            "output": [
                "round_eq { avg { filter_greater_eq { all_rows ; year ; 1980 } ; world ranking } ; 9.5 }"
            ]
        },
        {
            "input": "for the political party records of all rows , most of them fuzzily match to democratic party .",
            "output": [
                "most_eq { all_rows ; political party ; democratic party }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to czechoslovakia . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nationality ; czechoslovakia } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to shippensburg university . take the established record of this row . select the rows whose institution record fuzzily matches to penn state harrisburg . take the established record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; institution ; shippensburg university } ; established } ; hop { filter_eq { all_rows ; institution ; penn state harrisburg } ; established } }"
            ]
        },
        {
            "input": "select the rows whose matches record is equal to 10 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; matches ; 10 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose 2012 club record fuzzily matches to diablo water polo . there is only one such row in the table . the name record of this unqiue row is maggie steffens .",
            "output": [
                "and { only { filter_eq { all_rows ; 2012 club ; diablo water polo } } ; eq { hop { filter_eq { all_rows ; 2012 club ; diablo water polo } ; name } ; maggie steffens } }"
            ]
        },
        {
            "input": "select the rows whose total dismissals record is less than 10 . the sum of the total dismissals record of these rows is 8 .",
            "output": [
                "round_eq { sum { filter_less { all_rows ; total dismissals ; 10 } ; total dismissals } ; 8 }"
            ]
        },
        {
            "input": "for the timeslot records of all rows , all of them fuzzily match to wednesday 8:30 pm .",
            "output": [
                "all_eq { all_rows ; timeslot ; wednesday 8:30 pm }"
            ]
        },
        {
            "input": "for the length records of all rows , most of them are less than 5:00 .",
            "output": [
                "most_less { all_rows ; length ; 5:00 }"
            ]
        },
        {
            "input": "select the rows whose rank record fuzzily matches to 1 . take the total record of this row . select the rows whose rank record fuzzily matches to 2 . take the total record of this row . the first record is less than the second record . the total record of the first row is 4 . the total record of the second row is 5 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; rank ; 1 } ; total } ; hop { filter_eq { all_rows ; rank ; 2 } ; total } } ; and { eq { hop { filter_eq { all_rows ; rank ; 1 } ; total } ; 4 } ; eq { hop { filter_eq { all_rows ; rank ; 2 } ; total } ; 5 } } }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are less than 7 .",
            "output": [
                "most_less { all_rows ; wins ; 7 }"
            ]
        },
        {
            "input": "select the row whose total ( kg ) record of all rows is 3rd maximum . the name record of this row is soraya jim\u00e9nez ( mex ) .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; total ( kg ) ; 3 } ; name } ; soraya jim\u00e9nez ( mex ) }"
            ]
        },
        {
            "input": "select the row whose population m ( luz ) record of all rows is 2nd maximum . the city record of this row is london .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; population m ( luz ) ; 2 } ; city } ; london }"
            ]
        },
        {
            "input": "for the partner records of all rows , most of them fuzzily match to nicolas mahut .",
            "output": [
                "most_eq { all_rows ; partner ; nicolas mahut }"
            ]
        },
        {
            "input": "select the rows whose affiliation record fuzzily matches to public . among these rows , select the rows whose enrollment record is greater than 20000 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; affiliation ; public } ; enrollment ; 20000 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2002 . there is only one such row in the table . the event record of this unqiue row is ozzfest 2002 .",
            "output": [
                "and { only { filter_eq { all_rows ; year ; 2002 } } ; eq { hop { filter_eq { all_rows ; year ; 2002 } ; event } ; ozzfest 2002 } }"
            ]
        },
        {
            "input": "the average of the rank record of all rows is 38 .",
            "output": [
                "round_eq { avg { all_rows ; rank } ; 38 }"
            ]
        },
        {
            "input": "the average of the candidates record of all rows is 57 % .",
            "output": [
                "round_eq { avg { all_rows ; candidates } ; 57 % }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december . for the result records of these rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; december } ; result ; l }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to bruce vento . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to gerry sikorski . take the opponent record of this row . the first record is .10 % larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; incumbent ; bruce vento } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; gerry sikorski } ; opponent } } ; .10 % }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to chile . there is only one such row in the table . the date record of this unqiue row is september 4 , 2001 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; chile } } ; eq { hop { filter_eq { all_rows ; venue ; chile } ; date } ; september 4 , 2001 } }"
            ]
        },
        {
            "input": "for the matches records of all rows , all of them are equal to 7 .",
            "output": [
                "all_eq { all_rows ; matches ; 7 }"
            ]
        },
        {
            "input": "select the rows whose nat record fuzzily matches to slovakia . there is only one such row in the table . the name record of this unqiue row is filip \u0161ebo .",
            "output": [
                "and { only { filter_eq { all_rows ; nat ; slovakia } } ; eq { hop { filter_eq { all_rows ; nat ; slovakia } ; name } ; filip \u0161ebo } }"
            ]
        },
        {
            "input": "select the rows whose event record fuzzily matches to ufc 12 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; event ; ufc 12 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to kentucky . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; school / club team ; kentucky } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose winner record fuzzily matches to rangers . among these rows , select the rows whose runner - up record fuzzily matches to morton . there is only one such row in the table . the season record of this unqiue row is 1941 - 42 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; winner ; rangers } ; runner - up ; morton } } ; eq { hop { filter_eq { filter_eq { all_rows ; winner ; rangers } ; runner - up ; morton } ; season } ; 1941 - 42 } }"
            ]
        },
        {
            "input": "select the rows whose successor record fuzzily matches to vacant . for the date successor seated records of these rows , most of them fuzzily match to not filled this term .",
            "output": [
                "most_eq { filter_eq { all_rows ; successor ; vacant } ; date successor seated ; not filled this term }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to running back . for the round records of these rows , all of them are less than 10 .",
            "output": [
                "all_less { filter_eq { all_rows ; position ; running back } ; round ; 10 }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd maximum . the school record of this row is whitko .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ; 2 } ; school } ; whitko }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to northern ireland . there is only one such row in the table . the player record of this unqiue row is david feherty .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; northern ireland } } ; eq { hop { filter_eq { all_rows ; country ; northern ireland } ; player } ; david feherty } }"
            ]
        },
        {
            "input": "for the enrollment ( 2013 / 14 ) records of all rows , most of them are greater than 400 .",
            "output": [
                "most_greater { all_rows ; enrollment ( 2013 / 14 ) ; 400 }"
            ]
        },
        {
            "input": "select the row whose date of appointment record of all rows is 1st minimum . the team record of this row is acad\u00e9mica de coimbra .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date of appointment ; 1 } ; team } ; acad\u00e9mica de coimbra }"
            ]
        },
        {
            "input": "select the rows whose winning party 2003 record fuzzily matches to liberal democrats . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning party 2003 ; liberal democrats } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to scotiabank place . among these rows , select the rows whose score record fuzzily matches to w . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; location ; scotiabank place } ; score ; w } } ; 4 }"
            ]
        },
        {
            "input": "for the points 1 records of all rows , most of them are greater than or equal to 30 .",
            "output": [
                "most_greater_eq { all_rows ; points 1 ; 30 }"
            ]
        },
        {
            "input": "for the round records of all rows , most of them fuzzily match to final .",
            "output": [
                "most_eq { all_rows ; round ; final }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to buffalo bills . the sum of the attendance record of these rows is 26748 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; buffalo bills } ; attendance } ; 26748 }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 13.3 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 13.3 }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 1st minimum . the incumbent record of this row is nathaniel macon .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 1 } ; incumbent } ; nathaniel macon }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to 6th . there is only one such row in the table . the year record of this unqiue row is 2005 .",
            "output": [
                "and { only { filter_eq { all_rows ; position ; 6th } } ; eq { hop { filter_eq { all_rows ; position ; 6th } ; year } ; 2005 } }"
            ]
        },
        {
            "input": "select the rows whose winning driver record fuzzily matches to harry schell . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winning driver ; harry schell } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose opponents record of all rows is maximum . the opponent record of this row is penn state .",
            "output": [
                "eq { hop { argmax { all_rows ; opponents } ; opponent } ; penn state }"
            ]
        },
        {
            "input": "the average of the overall record of all rows is 38 .",
            "output": [
                "round_eq { avg { all_rows ; overall } ; 38 }"
            ]
        },
        {
            "input": "select the rows whose constellation record fuzzily matches to centaurus . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; constellation ; centaurus } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose opened ( closing date if defunct ) record of all rows is 2nd minimum . the track record of this row is indianapolis speedrome .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; opened ( closing date if defunct ) ; 2 } ; track } ; indianapolis speedrome }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to l . there is only one such row in the table . the date record of this unqiue row is april 5 .",
            "output": [
                "and { only { filter_eq { all_rows ; score ; l } } ; eq { hop { filter_eq { all_rows ; score ; l } ; date } ; april 5 } }"
            ]
        },
        {
            "input": "for the venue records of all rows , all of them fuzzily match to skonto hall , riga .",
            "output": [
                "all_eq { all_rows ; venue ; skonto hall , riga }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to mike heldt . take the round record of this row . select the rows whose player record fuzzily matches to joachim weinberg . take the round record of this row . the second record is 1 larger than the first record . the round record of the first row is 10 . the round record of the second row is 11 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; player ; mike heldt } ; round } ; hop { filter_eq { all_rows ; player ; joachim weinberg } ; round } } ; -1 } ; and { eq { hop { filter_eq { all_rows ; player ; mike heldt } ; round } ; 10 } ; eq { hop { filter_eq { all_rows ; player ; joachim weinberg } ; round } ; 11 } } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to guido carlo . take the round record of this row . select the rows whose opponent record fuzzily matches to sebastien gauthier . take the round record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; guido carlo } ; round } ; hop { filter_eq { all_rows ; opponent ; sebastien gauthier } ; round } }"
            ]
        },
        {
            "input": "select the rows whose university record fuzzily matches to mcgill university . take the founded record of this row . select the rows whose university record fuzzily matches to universit\u00e9 de sherbrooke . take the founded record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; university ; mcgill university } ; founded } ; hop { filter_eq { all_rows ; university ; universit\u00e9 de sherbrooke } ; founded } }"
            ]
        },
        {
            "input": "for the winner records of all rows , most of them fuzzily match to blue .",
            "output": [
                "most_eq { all_rows ; winner ; blue }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is march 19 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; march 19 }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to arts . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; category ; arts } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to sweden . there is only one such row in the table . the date record of this unqiue row is 4 july 1988 .",
            "output": [
                "and { only { filter_eq { all_rows ; tournament ; sweden } } ; eq { hop { filter_eq { all_rows ; tournament ; sweden } ; date } ; 4 july 1988 } }"
            ]
        },
        {
            "input": "the average of the number of contestants record of all rows is 11.4 .",
            "output": [
                "round_eq { avg { all_rows ; number of contestants } ; 11.4 }"
            ]
        },
        {
            "input": "select the rows whose hdtv record fuzzily matches to yes . there is only one such row in the table . the television service record of this unqiue row is satisfaction hd .",
            "output": [
                "and { only { filter_eq { all_rows ; hdtv ; yes } } ; eq { hop { filter_eq { all_rows ; hdtv ; yes } ; television service } ; satisfaction hd } }"
            ]
        },
        {
            "input": "select the rows whose award record fuzzily matches to laurence olivier award . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; award ; laurence olivier award } } ; 7 }"
            ]
        },
        {
            "input": "the 2nd minimum date record of all rows is jun 25 . the score record of the row with 2nd minimum date record is 2 - 3 .",
            "output": [
                "and { eq { nth_min { all_rows ; date ; 2 } ; jun 25 } ; eq { hop { nth_argmin { all_rows ; date ; 2 } ; score } ; 2 - 3 } }"
            ]
        },
        {
            "input": "the average of the round record of all rows is 3.8 .",
            "output": [
                "round_eq { avg { all_rows ; round } ; 3.8 }"
            ]
        },
        {
            "input": "select the rows whose language record fuzzily matches to marathi . there is only one such row in the table . the role record of this unqiue row is sonal .",
            "output": [
                "and { only { filter_eq { all_rows ; language ; marathi } } ; eq { hop { filter_eq { all_rows ; language ; marathi } ; role } ; sonal } }"
            ]
        },
        {
            "input": "for the games played records of all rows , all of them are equal to 36 .",
            "output": [
                "all_eq { all_rows ; games played ; 36 }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is minimum . the venue record of this row is peyia municipal stadium .",
            "output": [
                "eq { hop { argmin { all_rows ; capacity } ; venue } ; peyia municipal stadium }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to fb . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; fb } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose province record fuzzily matches to gyeonggi . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { all_rows ; province ; gyeonggi } } ; 8 }"
            ]
        },
        {
            "input": "the average of the group 's equity shareholding record of all rows is 85 % .",
            "output": [
                "round_eq { avg { all_rows ; group 's equity shareholding } ; 85 % }"
            ]
        },
        {
            "input": "for the country of origin records of all rows , all of them fuzzily match to philippines .",
            "output": [
                "all_eq { all_rows ; country of origin ; philippines }"
            ]
        },
        {
            "input": "select the rows whose game site record fuzzily matches to qualcomm stadium . among these rows , select the rows whose time record fuzzily matches to 5:15 pm . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; game site ; qualcomm stadium } ; time ; 5:15 pm } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose home team score record is less than 14.0 . among these rows , select the rows whose date record fuzzily matches to 28 april 1973 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_less { all_rows ; home team score ; 14.0 } ; date ; 28 april 1973 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to ronnie carroll . take the points record of this row . select the rows whose artist record fuzzily matches to carmela corren . take the points record of this row . the first record is 12 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; artist ; ronnie carroll } ; points } ; hop { filter_eq { all_rows ; artist ; carmela corren } ; points } } ; 12 }"
            ]
        },
        {
            "input": "select the rows whose season record fuzzily matches to 2001 - 02 . take the regular season 1 record of this row . select the rows whose season record fuzzily matches to 2002 - 03 . take the regular season 1 record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; season ; 2001 - 02 } ; regular season 1 } ; hop { filter_eq { all_rows ; season ; 2002 - 03 } ; regular season 1 } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to ghana . there is only one such row in the table . the name record of this unqiue row is owusu - abeyie .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; ghana } } ; eq { hop { filter_eq { all_rows ; country ; ghana } ; name } ; owusu - abeyie } }"
            ]
        },
        {
            "input": "select the rows whose director ( s ) record fuzzily matches to gary ross . there is only one such row in the table . the title record of this unqiue row is the hunger games .",
            "output": [
                "and { only { filter_eq { all_rows ; director ( s ) ; gary ross } } ; eq { hop { filter_eq { all_rows ; director ( s ) ; gary ross } ; title } ; the hunger games } }"
            ]
        },
        {
            "input": "select the row whose born record of all rows is minimum . the archbishop record of this row is jean baptiste lamy .",
            "output": [
                "eq { hop { argmin { all_rows ; born } ; archbishop } ; jean baptiste lamy }"
            ]
        },
        {
            "input": "for the residence records of all rows , most of them fuzzily match to winnipeg .",
            "output": [
                "most_eq { all_rows ; residence ; winnipeg }"
            ]
        },
        {
            "input": "select the rows whose actress record fuzzily matches to marlee matlin . take the year record of this row . select the rows whose actress record fuzzily matches to jessica tandy . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; actress ; marlee matlin } ; year } ; hop { filter_eq { all_rows ; actress ; jessica tandy } ; year } }"
            ]
        },
        {
            "input": "select the row whose original air date record of all rows is 2nd minimum . the family / families record of this row is the peterfreund family .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; original air date ; 2 } ; family / families } ; the peterfreund family }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to jo angel ( wa ) . take the matches record of this row . select the rows whose player record fuzzily matches to clarrie grimmett ( vic / sa ) . take the matches record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; jo angel ( wa ) } ; matches } ; hop { filter_eq { all_rows ; player ; clarrie grimmett ( vic / sa ) } ; matches } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to uefa europa league . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; competition ; uefa europa league } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose height in ft record is less than 6-0 . there is only one such row in the table . the player record of this unqiue row is turner , andre andre turner .",
            "output": [
                "and { only { filter_less { all_rows ; height in ft ; 6-0 } } ; eq { hop { filter_less { all_rows ; height in ft ; 6-0 } ; player } ; turner , andre andre turner } }"
            ]
        },
        {
            "input": "for the district records of all rows , most of them fuzzily match to hisar .",
            "output": [
                "most_eq { all_rows ; district ; hisar }"
            ]
        },
        {
            "input": "select the rows whose aircraft record fuzzily matches to boeing . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; aircraft ; boeing } } ; 3 }"
            ]
        },
        {
            "input": "for the extra points records of all rows , most of them are equal to 0 .",
            "output": [
                "most_eq { all_rows ; extra points ; 0 }"
            ]
        },
        {
            "input": "the sum of the w record of all rows is 21 .",
            "output": [
                "round_eq { sum { all_rows ; w } ; 21 }"
            ]
        },
        {
            "input": "the average of the away team score record of all rows is 14.2 .",
            "output": [
                "round_eq { avg { all_rows ; away team score } ; 14.2 }"
            ]
        },
        {
            "input": "the average of the to par record of all rows is -7 .",
            "output": [
                "round_eq { avg { all_rows ; to par } ; -7 }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2008 . among these rows , select the rows whose nominated / won record fuzzily matches to won . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; year ; 2008 } ; nominated / won ; won } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november 8 , 1992 . take the date record of this row . select the rows whose date record fuzzily matches to november 22 , 1992 . take the date record of this row . the second record is 14 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; date ; november 8 , 1992 } ; date } ; hop { filter_eq { all_rows ; date ; november 22 , 1992 } ; date } } ; -14 days }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to central . among these rows , select the rows whose pop density record is greater than 1000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; region ; central } ; pop density ; 1000 } } ; 3 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to 1992 .",
            "output": [
                "most_eq { all_rows ; date ; 1992 }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to outstanding featured actor in a musical . there is only one such row in the table . the nominee record of this unqiue row is alexander gemignani .",
            "output": [
                "and { only { filter_eq { all_rows ; category ; outstanding featured actor in a musical } } ; eq { hop { filter_eq { all_rows ; category ; outstanding featured actor in a musical } ; nominee } ; alexander gemignani } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is carlton . the away team record of this row is richmond .",
            "output": [
                "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; carlton } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; richmond } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to anorthosis famagusta . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; anorthosis famagusta } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose laps record of all rows is 2nd minimum . the driver record of this row is graham hill .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; laps ; 2 } ; driver } ; graham hill }"
            ]
        },
        {
            "input": "select the row whose total wins record of all rows is maximum . the nationality record of this row is united states .",
            "output": [
                "eq { hop { argmax { all_rows ; total wins } ; nationality } ; united states }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the visitor record of this row is kings .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; visitor } ; kings }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united kingdom . the number of such rows is 9 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country ; united kingdom } } ; 9 }"
            ]
        },
        {
            "input": "for the played records of all rows , most of them are equal to 14 .",
            "output": [
                "most_eq { all_rows ; played ; 14 }"
            ]
        },
        {
            "input": "select the rows whose owner record fuzzily matches to eternacom . there is only one such row in the table . the frequency record of this unqiue row is 103.5 fm .",
            "output": [
                "and { only { filter_eq { all_rows ; owner ; eternacom } } ; eq { hop { filter_eq { all_rows ; owner ; eternacom } ; frequency } ; 103.5 fm } }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to italy . there is only one such row in the table . the athlete record of this unqiue row is beatrice adelizzi & giulia lapi .",
            "output": [
                "and { only { filter_eq { all_rows ; country ; italy } } ; eq { hop { filter_eq { all_rows ; country ; italy } ; athlete } ; beatrice adelizzi & giulia lapi } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to dec . for the result records of these rows , most of them fuzzily match to win .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; dec } ; result ; win }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to offy . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; engine ; offy } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose percentage record is greater than 3 % . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_greater { all_rows ; percentage ; 3 % } } ; 1 }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 2.13 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 2.13 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to india . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; location ; india } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose champions record fuzzily matches to guy forget . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; champions ; guy forget } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose entrant record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; entrant } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose week record fuzzily matches to top 10 . take the result record of this row . select the rows whose week record fuzzily matches to top 10 . take the result record of this row . the first record fuzzily matches to the second record . the result record of the first row is bottom 2 . the result record of the second row is bottom 2 .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; week ; top 10 } ; result } ; hop { filter_eq { all_rows ; week ; top 10 } ; result } } ; and { eq { hop { filter_eq { all_rows ; week ; top 10 } ; result } ; bottom 2 } ; eq { hop { filter_eq { all_rows ; week ; top 10 } ; result } ; bottom 2 } } }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 6th minimum . the player record of this row is mike wacker .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; pick ; 6 } ; player } ; mike wacker }"
            ]
        },
        {
            "input": "select the rows whose receiving tds record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; receiving tds ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "the sum of the number of stations record of all rows is 259 .",
            "output": [
                "round_eq { sum { all_rows ; number of stations } ; 259 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to vince carter .",
            "output": [
                "most_eq { all_rows ; high points ; vince carter }"
            ]
        },
        {
            "input": "select the rows whose constructor record fuzzily matches to cooper - climax . select the row whose date record of these rows is minimum . the race name record of this row is vii glover trophy .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; constructor ; cooper - climax } ; date } ; race name } ; vii glover trophy }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to hale boggs . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to joe waggonner . take the first elected record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; hale boggs } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; joe waggonner } ; first elected } }"
            ]
        },
        {
            "input": "the average of the max speed record of all rows is 29 .",
            "output": [
                "round_eq { avg { all_rows ; max speed } ; 29 }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to retired . there is only one such row in the table . the incumbent record of this unqiue row is harold r collier .",
            "output": [
                "and { only { filter_eq { all_rows ; result ; retired } } ; eq { hop { filter_eq { all_rows ; result ; retired } ; incumbent } ; harold r collier } }"
            ]
        },
        {
            "input": "for the type records of all rows , most of them fuzzily match to village .",
            "output": [
                "most_eq { all_rows ; type ; village }"
            ]
        },
        {
            "input": "for the engine records of all rows , all of them fuzzily match to offenhauser l4 .",
            "output": [
                "all_eq { all_rows ; engine ; offenhauser l4 }"
            ]
        },
        {
            "input": "for the power rpm records of all rows , most of them are greater than or equal to 6000 .",
            "output": [
                "most_greater_eq { all_rows ; power rpm ; 6000 }"
            ]
        },
        {
            "input": "for the loans received records of all rows , most of them are greater than 0 .",
            "output": [
                "most_greater { all_rows ; loans received ; 0 }"
            ]
        },
        {
            "input": "select the rows whose location record fuzzily matches to arnhem . take the date ( from ) record of this row . select the rows whose location record fuzzily matches to nijmegen . take the date ( from ) record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; location ; arnhem } ; date ( from ) } ; hop { filter_eq { all_rows ; location ; nijmegen } ; date ( from ) } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is maximum . the player record of this row is hal sutton .",
            "output": [
                "eq { hop { argmax { all_rows ; total } ; player } ; hal sutton }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 2014 fifa world cup qualification . there is only one such row in the table . the date record of this unqiue row is 15 october 2013 .",
            "output": [
                "and { only { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } } ; eq { hop { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } ; date } ; 15 october 2013 } }"
            ]
        },
        {
            "input": "select the rows whose congress record fuzzily matches to 109th congress . take the of cosponsors record of this row . select the rows whose congress record fuzzily matches to 108th congress . take the of cosponsors record of this row . the first record is 3 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; congress ; 109th congress } ; of cosponsors } ; hop { filter_eq { all_rows ; congress ; 108th congress } ; of cosponsors } } ; 3 }"
            ]
        },
        {
            "input": "the average of the episode record of all rows is 240 .",
            "output": [
                "round_eq { avg { all_rows ; episode } ; 240 }"
            ]
        },
        {
            "input": "for the pos records of all rows , most of them fuzzily match to cf .",
            "output": [
                "most_eq { all_rows ; pos ; cf }"
            ]
        },
        {
            "input": "select the row whose - record of all rows is 2nd minimum . the team record of this row is rahal letterman lanigan racing .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; - ; 2 } ; team } ; rahal letterman lanigan racing }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to damon stoudamire . the sum of the high assists record of these rows is 95 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; high assists ; damon stoudamire } ; high assists } ; 95 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 197707 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 197707 }"
            ]
        },
        {
            "input": "select the rows whose wildcats points record is equal to 33 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wildcats points ; 33 } } ; 2 }"
            ]
        },
        {
            "input": "the 5th minimum track record of all rows is 5 . the song title record of the row with 5th minimum track record is crazy arms .",
            "output": [
                "and { eq { nth_min { all_rows ; track ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; track ; 5 } ; song title } ; crazy arms } }"
            ]
        },
        {
            "input": "for the nba draft records of all rows , most of them fuzzily match to 1987 draft .",
            "output": [
                "most_eq { all_rows ; nba draft ; 1987 draft }"
            ]
        },
        {
            "input": "select the rows whose athlete record fuzzily matches to federico muller . take the round of 16 record of this row . select the rows whose athlete record fuzzily matches to felipe saucedo . take the round of 16 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; athlete ; federico muller } ; round of 16 } ; hop { filter_eq { all_rows ; athlete ; felipe saucedo } ; round of 16 } }"
            ]
        },
        {
            "input": "select the row whose county team record of all rows is 2nd minimum . the player record of this row is mick mackey .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; county team ; 2 } ; player } ; mick mackey }"
            ]
        },
        {
            "input": "select the rows whose authority record fuzzily matches to state integrated . there is only one such row in the table . the name record of this unqiue row is st mary 's catholic school .",
            "output": [
                "and { only { filter_eq { all_rows ; authority ; state integrated } } ; eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st mary 's catholic school } }"
            ]
        },
        {
            "input": "select the rows whose regional county municipality ( rcm ) record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; regional county municipality ( rcm ) } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to richard white . take the round record of this row . select the rows whose opponent record fuzzily matches to jeremy beck . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; richard white } ; round } ; hop { filter_eq { all_rows ; opponent ; jeremy beck } ; round } }"
            ]
        },
        {
            "input": "select the rows whose engine record fuzzily matches to 16v . the maximum displacement record of these rows is 1596 cc .",
            "output": [
                "eq { max { filter_eq { all_rows ; engine ; 16v } ; displacement } ; 1596 cc }"
            ]
        },
        {
            "input": "select the rows whose height record is greater than 80 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; height ; 80 } } ; 4 }"
            ]
        },
        {
            "input": "select the row whose agg record of all rows is maximum . the team 1 record of this row is matera ( h15 ) . the team 2 record of this row is ( h14 ) quarto .",
            "output": [
                "and { eq { hop { argmax { all_rows ; agg } ; team 1 } ; matera ( h15 ) } ; eq { hop { argmax { all_rows ; agg } ; team 2 } ; ( h14 ) quarto } }"
            ]
        },
        {
            "input": "the sum of the points record of all rows is 490 .",
            "output": [
                "round_eq { sum { all_rows ; points } ; 490 }"
            ]
        },
        {
            "input": "for the high rebounds records of all rows , most of them fuzzily match to tim duncan .",
            "output": [
                "most_eq { all_rows ; high rebounds ; tim duncan }"
            ]
        },
        {
            "input": "select the rows whose internl tourism receipts 2011 ( million usd ) record fuzzily matches to n/d . there is only one such row in the table . the selected caribbean and n latin america countries record of this unqiue row is cuba . the revenues as % of exports goods and services 2011 record of this unqiue row is n / d .",
            "output": [
                "and { only { filter_eq { all_rows ; internl tourism receipts 2011 ( million usd ) ; n/d } } ; and { eq { hop { filter_eq { all_rows ; internl tourism receipts 2011 ( million usd ) ; n/d } ; selected caribbean and n latin america countries } ; cuba } ; eq { hop { filter_eq { all_rows ; internl tourism receipts 2011 ( million usd ) ; n/d } ; revenues as % of exports goods and services 2011 } ; n / d } } }"
            ]
        },
        {
            "input": "select the rows whose oberbayern record fuzzily matches to fc ingolstadt 04 . the minimum season record of these rows is 2005 .",
            "output": [
                "eq { min { filter_eq { all_rows ; oberbayern ; fc ingolstadt 04 } ; season } ; 2005 }"
            ]
        },
        {
            "input": "for the sprints classification records of all rows , most of them fuzzily match to ren\u00e9 weissinger .",
            "output": [
                "most_eq { all_rows ; sprints classification ; ren\u00e9 weissinger }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 4th maximum . the date record of this row is december 13 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 4 } ; date } ; december 13 }"
            ]
        },
        {
            "input": "select the row whose year ( ceremony ) record of all rows is 2nd minimum . the director record of this row is shamil najafzadeh .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ( ceremony ) ; 2 } ; director } ; shamil najafzadeh }"
            ]
        },
        {
            "input": "select the row whose earnings record of all rows is 2nd maximum . the player record of this row is tom watson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; earnings ; 2 } ; player } ; tom watson }"
            ]
        },
        {
            "input": "the average of the overall record of all rows is 125.1 .",
            "output": [
                "round_eq { avg { all_rows ; overall } ; 125.1 }"
            ]
        },
        {
            "input": "select the rows whose suburb / town record fuzzily matches to vincentia . select the row whose founded record of these rows is minimum . the school record of this row is vincentia public school .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; suburb / town ; vincentia } ; founded } ; school } ; vincentia public school }"
            ]
        },
        {
            "input": "select the rows whose election record is arbitrary . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_all { all_rows ; election } } ; 6 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 1st maximum . the name record of this row is jakim donaldson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; points ; 1 } ; name } ; jakim donaldson }"
            ]
        },
        {
            "input": "for the drawn records of all rows , most of them are greater than or equal to 1 .",
            "output": [
                "most_greater_eq { all_rows ; drawn ; 1 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to bob brown . take the pick record of this row . select the rows whose player record fuzzily matches to ted davis . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; bob brown } ; pick } ; hop { filter_eq { all_rows ; player ; ted davis } ; pick } }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is 3rd maximum . the name record of this row is h\u00f4tel loews le concorde .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; floors ; 3 } ; name } ; h\u00f4tel loews le concorde }"
            ]
        },
        {
            "input": "for the high assists records of all rows , most of them fuzzily match to ambrose .",
            "output": [
                "most_eq { all_rows ; high assists ; ambrose }"
            ]
        },
        {
            "input": "select the rows whose played record is less than 114 . among these rows , select the rows whose average record is greater than 1.0 . there is only one such row in the table . the team record of this unqiue row is hurac\u00e1n .",
            "output": [
                "and { only { filter_greater { filter_less { all_rows ; played ; 114 } ; average ; 1.0 } } ; eq { hop { filter_greater { filter_less { all_rows ; played ; 114 } ; average ; 1.0 } ; team } ; hurac\u00e1n } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 102 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 102 }"
            ]
        },
        {
            "input": "select the row whose opened record of all rows is 2nd minimum . the name record of this row is the shock wave .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; opened ; 2 } ; name } ; the shock wave }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 70 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 70 }"
            ]
        },
        {
            "input": "select the rows whose founded record is greater than or equal to 1990 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater_eq { all_rows ; founded ; 1990 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 2nd maximum . the home team record of this row is adelaide 36ers .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 2 } ; home team } ; adelaide 36ers }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to dallas cowboys . select the row whose date record of these rows is 2nd minimum . the attendance record of this row is 54714 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; opponent ; dallas cowboys } ; date ; 2 } ; attendance } ; 54714 }"
            ]
        },
        {
            "input": "for the signed records of all rows , most of them fuzzily match to yes .",
            "output": [
                "most_eq { all_rows ; signed ; yes }"
            ]
        },
        {
            "input": "the sum of the us viewers ( millions ) record of all rows is 78.52 .",
            "output": [
                "round_eq { sum { all_rows ; us viewers ( millions ) } ; 78.52 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to dante taylor . take the weight ( lb ) record of this row . select the rows whose name record fuzzily matches to nasir robinson . take the weight ( lb ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; dante taylor } ; weight ( lb ) } ; hop { filter_eq { all_rows ; name ; nasir robinson } ; weight ( lb ) } }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the opponent record of this row is boston bruins .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; opponent } ; boston bruins }"
            ]
        },
        {
            "input": "select the rows whose losses record is equal to 8 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; losses ; 8 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to december 3 , 1967 . take the attendance record of this row . select the rows whose date record fuzzily matches to december 17 , 1967 . take the attendance record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; date ; december 3 , 1967 } ; attendance } ; hop { filter_eq { all_rows ; date ; december 17 , 1967 } ; attendance } }"
            ]
        },
        {
            "input": "for the entrant records of all rows , most of them fuzzily match to osella squadra corse .",
            "output": [
                "most_eq { all_rows ; entrant ; osella squadra corse }"
            ]
        },
        {
            "input": "select the rows whose team 2 record fuzzily matches to stade quimp\u00e9rois ( d2 ) . take the score record of this row . select the rows whose team 2 record fuzzily matches to rc lens ( d1 ) . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team 2 ; stade quimp\u00e9rois ( d2 ) } ; score } ; hop { filter_eq { all_rows ; team 2 ; rc lens ( d1 ) } ; score } }"
            ]
        },
        {
            "input": "select the rows whose others record is greater than 6000 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { all_rows ; others ; 6000 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose united states original airdate record fuzzily matches to july . among these rows , select the rows whose directed by record fuzzily matches to greg sullivan . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; united states original airdate ; july } ; directed by ; greg sullivan } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose power record of all rows is maximum . the name record of this row is 9 adr .",
            "output": [
                "eq { hop { argmax { all_rows ; power } ; name } ; 9 adr }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to wake forest . there is only one such row in the table . the player record of this unqiue row is mark moroz .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; wake forest } } ; eq { hop { filter_eq { all_rows ; college ; wake forest } ; player } ; mark moroz } }"
            ]
        },
        {
            "input": "for the area records of all rows , most of them fuzzily match to papakura .",
            "output": [
                "most_eq { all_rows ; area ; papakura }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to juan theron . take the overs record of this row . select the rows whose player record fuzzily matches to makhaya ntini . take the overs record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; juan theron } ; overs } ; hop { filter_eq { all_rows ; player ; makhaya ntini } ; overs } }"
            ]
        },
        {
            "input": "the sum of the against record of all rows is 49 .",
            "output": [
                "round_eq { sum { all_rows ; against } ; 49 }"
            ]
        },
        {
            "input": "select the rows whose round record is greater than 6 . there is only one such row in the table .",
            "output": [
                "only { filter_greater { all_rows ; round ; 6 } }"
            ]
        },
        {
            "input": "select the rows whose points record is equal to 4 . there is only one such row in the table . the year record of this unqiue row is 1980 .",
            "output": [
                "and { only { filter_eq { all_rows ; points ; 4 } } ; eq { hop { filter_eq { all_rows ; points ; 4 } ; year } ; 1980 } }"
            ]
        },
        {
            "input": "the sum of the ends won record of all rows is 516 .",
            "output": [
                "round_eq { sum { all_rows ; ends won } ; 516 }"
            ]
        },
        {
            "input": "select the rows whose m60a3 patton record fuzzily matches to 105 mm m68 rifled tank - gun . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; m60a3 patton ; 105 mm m68 rifled tank - gun } }"
            ]
        },
        {
            "input": "for the authority records of all rows , most of them fuzzily match to state .",
            "output": [
                "most_eq { all_rows ; authority ; state }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to poland . take the results record of this row . select the rows whose opponent record fuzzily matches to italy . take the results record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; poland } ; results } ; hop { filter_eq { all_rows ; opponent ; italy } ; results } }"
            ]
        },
        {
            "input": "select the rows whose wind farm record is arbitrary . the number of such rows is 17 .",
            "output": [
                "eq { count { filter_all { all_rows ; wind farm } } ; 17 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to atlanta . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; venue ; atlanta } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . among these rows , select the rows whose total record is greater than 150 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; country ; united states } ; total ; 150 } } ; 2 }"
            ]
        },
        {
            "input": "the maximum release price ( usd ) record of all rows is 97 .",
            "output": [
                "eq { max { all_rows ; release price ( usd ) } ; 97 }"
            ]
        },
        {
            "input": "select the rows whose mean record is equal to 3.0 . there is only one such row in the table . the drug record of this unqiue row is heroin .",
            "output": [
                "and { only { filter_eq { all_rows ; mean ; 3.0 } } ; eq { hop { filter_eq { all_rows ; mean ; 3.0 } ; drug } ; heroin } }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1965 . take the overall record record of this row . select the rows whose year record fuzzily matches to 1959 . take the overall record record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1965 } ; overall record } ; hop { filter_eq { all_rows ; year ; 1959 } ; overall record } }"
            ]
        },
        {
            "input": "select the rows whose equipment record fuzzily matches to ktm - vmc . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; equipment ; ktm - vmc } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose base record fuzzily matches to united states . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; base ; united states } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose nation record fuzzily matches to kingfisher east bengal fc . take the winners record of this row . select the rows whose nation record fuzzily matches to pahang fa . take the winners record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; nation ; kingfisher east bengal fc } ; winners } ; hop { filter_eq { all_rows ; nation ; pahang fa } ; winners } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to san diego . take the week record of this row . select the rows whose tournament record fuzzily matches to toronto . take the week record of this row . the second record is 14 days larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; tournament ; san diego } ; week } ; hop { filter_eq { all_rows ; tournament ; toronto } ; week } } ; -14 days }"
            ]
        },
        {
            "input": "select the row whose published record of all rows is maximum . the title record of this row is the golden age .",
            "output": [
                "eq { hop { argmax { all_rows ; published } ; title } ; the golden age }"
            ]
        },
        {
            "input": "select the rows whose race record fuzzily matches to super g . there is only one such row in the table . the season record of this unqiue row is 2009 .",
            "output": [
                "and { only { filter_eq { all_rows ; race ; super g } } ; eq { hop { filter_eq { all_rows ; race ; super g } ; season } ; 2009 } }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is sept 7 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; sept 7 }"
            ]
        },
        {
            "input": "for the points records of all rows , most of them are greater than 6 .",
            "output": [
                "most_greater { all_rows ; points ; 6 }"
            ]
        },
        {
            "input": "select the rows whose total goals record is greater than 250 . among these rows , select the rows whose total appearances record is less than 400 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { filter_greater { all_rows ; total goals ; 250 } ; total appearances ; 400 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to notre dame . the sum of the total offense record of these rows is 948 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; notre dame } ; total offense } ; 948 }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to webber international university . take the founded record of this row . select the rows whose institution record fuzzily matches to ave maria university . take the founded record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; institution ; webber international university } ; founded } ; hop { filter_eq { all_rows ; institution ; ave maria university } ; founded } }"
            ]
        },
        {
            "input": "select the rows whose points record is greater than 20 . there is only one such row in the table . the grid record of this unqiue row is 1 .",
            "output": [
                "and { only { filter_greater { all_rows ; points ; 20 } } ; eq { hop { filter_greater { all_rows ; points ; 20 } ; grid } ; 1 } }"
            ]
        },
        {
            "input": "the sum of the score record of all rows is 4577 .",
            "output": [
                "round_eq { sum { all_rows ; score } ; 4577 }"
            ]
        },
        {
            "input": "the average of the us msrp record of all rows is 365 .",
            "output": [
                "round_eq { avg { all_rows ; us msrp } ; 365 }"
            ]
        },
        {
            "input": "select the rows whose total record is equal to 1 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; total ; 1 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose stolen ends record is greater than 15 . there is only one such row in the table . the skip ( club ) record of this unqiue row is chris gardner ( renfrew ) .",
            "output": [
                "and { only { filter_greater { all_rows ; stolen ends ; 15 } } ; eq { hop { filter_greater { all_rows ; stolen ends ; 15 } ; skip ( club ) } ; chris gardner ( renfrew ) } }"
            ]
        },
        {
            "input": "for the wins records of all rows , most of them are less than 20 .",
            "output": [
                "most_less { all_rows ; wins ; 20 }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to september .",
            "output": [
                "most_eq { all_rows ; date ; september }"
            ]
        },
        {
            "input": "select the rows whose nation record is arbitrary . the number of such rows is 13 .",
            "output": [
                "eq { count { filter_all { all_rows ; nation } } ; 13 }"
            ]
        },
        {
            "input": "select the rows whose tv time record fuzzily matches to cbs 12:00 pm . among these rows , select the rows whose result record fuzzily matches to w . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; tv time ; cbs 12:00 pm } ; result ; w } } ; 8 }"
            ]
        },
        {
            "input": "the average of the money record of all rows is 18630 .",
            "output": [
                "round_eq { avg { all_rows ; money } ; 18630 }"
            ]
        },
        {
            "input": "select the row whose money record of all rows is 2nd maximum . the player record of this row is tom watson .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; money ; 2 } ; player } ; tom watson }"
            ]
        },
        {
            "input": "select the row whose micro ( 10ha ) record of all rows is maximum . the department record of this row is potosi .",
            "output": [
                "eq { hop { argmax { all_rows ; micro ( 10ha ) } ; department } ; potosi }"
            ]
        },
        {
            "input": "select the rows whose date introduced record fuzzily matches to june . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date introduced ; june } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to mark eaton . take the nationality record of this row . select the rows whose player record fuzzily matches to jerry eaves . take the nationality record of this row . the first record fuzzily matches to the second record . the nationality record of the first row is united states . the nationality record of the second row is united states .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; player ; mark eaton } ; nationality } ; hop { filter_eq { all_rows ; player ; jerry eaves } ; nationality } } ; and { eq { hop { filter_eq { all_rows ; player ; mark eaton } ; nationality } ; united states } ; eq { hop { filter_eq { all_rows ; player ; jerry eaves } ; nationality } ; united states } } }"
            ]
        },
        {
            "input": "select the rows whose title record fuzzily matches to chicken run . take the year record of this row . select the rows whose title record fuzzily matches to creature comforts . take the year record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; title ; chicken run } ; year } ; hop { filter_eq { all_rows ; title ; creature comforts } ; year } }"
            ]
        },
        {
            "input": "the average of the wins record of all rows is .44 .",
            "output": [
                "round_eq { avg { all_rows ; wins } ; .44 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 1535 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 1535 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 21221 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 21221 }"
            ]
        },
        {
            "input": "the average of the enrollment record of all rows is 538 .",
            "output": [
                "round_eq { avg { all_rows ; enrollment } ; 538 }"
            ]
        },
        {
            "input": "the average of the viewership record of all rows is 4.75 million .",
            "output": [
                "round_eq { avg { all_rows ; viewership } ; 4.75 million }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 113 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 113 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 2nd maximum . the opponent in the final record of this row is v\u00edctor pecci .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; date ; 2 } ; opponent in the final } ; v\u00edctor pecci }"
            ]
        },
        {
            "input": "select the row whose june 14 , 2009 record of all rows is 2nd maximum . the mexico record of this row is croatia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; june 14 , 2009 ; 2 } ; mexico } ; croatia }"
            ]
        },
        {
            "input": "select the rows whose total record is less than 13 . the sum of the silver record of these rows is 2 .",
            "output": [
                "round_eq { sum { filter_less { all_rows ; total ; 13 } ; silver } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose club record fuzzily matches to orlando metro . there is only one such row in the table . the name record of this unqiue row is olivia courtney .",
            "output": [
                "and { only { filter_eq { all_rows ; club ; orlando metro } } ; eq { hop { filter_eq { all_rows ; club ; orlando metro } ; name } ; olivia courtney } }"
            ]
        },
        {
            "input": "select the rows whose rec record is greater than 50 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { all_rows ; rec ; 50 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2 april . select the row whose crowd record of these rows is 1st maximum . the home team record of this row is collingwood .",
            "output": [
                "eq { hop { nth_argmax { filter_eq { all_rows ; date ; 2 april } ; crowd ; 1 } ; home team } ; collingwood }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is mcg .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg }"
            ]
        },
        {
            "input": "select the rows whose first elected record is equal to 1958 . there is only one such row in the table . the incumbent record of this unqiue row is del latta .",
            "output": [
                "and { only { filter_eq { all_rows ; first elected ; 1958 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1958 } ; incumbent } ; del latta } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the location attendance record of this row is verizon center 20173 .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; location attendance } ; verizon center 20173 }"
            ]
        },
        {
            "input": "select the rows whose traction type record fuzzily matches to petrol . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; traction type ; petrol } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose pick record of all rows is 2nd maximum . the player record of this row is igor larionov .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; pick ; 2 } ; player } ; igor larionov }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose no of villages record is less than 5 . there is only one such row in the table . the district record of this unqiue row is boe .",
            "output": [
                "and { only { filter_less { all_rows ; no of villages ; 5 } } ; eq { hop { filter_less { all_rows ; no of villages ; 5 } ; district } ; boe } }"
            ]
        },
        {
            "input": "select the row whose against record of all rows is 2nd maximum . the opposing teams record of this row is scotland .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; against ; 2 } ; opposing teams } ; scotland }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to wilmer mizell . take the candidates record of this row . select the rows whose incumbent record fuzzily matches to earl b ruth . take the candidates record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; wilmer mizell } ; candidates } ; hop { filter_eq { all_rows ; incumbent ; earl b ruth } ; candidates } }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is minimum . the vessel record of this row is marianarray .",
            "output": [
                "eq { hop { argmin { all_rows ; length } ; vessel } ; marianarray }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to minardi team usa . select the row whose laps record of these rows is maximum . the driver record of this row is robert doornbos .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; team ; minardi team usa } ; laps } ; driver } ; robert doornbos }"
            ]
        },
        {
            "input": "select the row whose number of episodes record of all rows is maximum . the english title ( chinese title ) record of this row is dark tales ii \u804a\u9f4b ( \u8cb3 ) .",
            "output": [
                "eq { hop { argmax { all_rows ; number of episodes } ; english title ( chinese title ) } ; dark tales ii \u804a\u9f4b ( \u8cb3 ) }"
            ]
        },
        {
            "input": "select the row whose average record of all rows is 2nd minimum . the goalkeeper record of this row is jacobo .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; average ; 2 } ; goalkeeper } ; jacobo }"
            ]
        },
        {
            "input": "for the regional county municipality records of all rows , all of them fuzzily match to not part of a rcm .",
            "output": [
                "all_eq { all_rows ; regional county municipality ; not part of a rcm }"
            ]
        },
        {
            "input": "the sum of the round record of all rows is 8 .",
            "output": [
                "round_eq { sum { all_rows ; round } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose voivodeship after 1569 record fuzzily matches to samogitian eldership . take the year established record of this row . select the rows whose voivodeship after 1569 record fuzzily matches to trakai voivodeship . take the year established record of this row . the second record is 2 years larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; voivodeship after 1569 ; samogitian eldership } ; year established } ; hop { filter_eq { all_rows ; voivodeship after 1569 ; trakai voivodeship } ; year established } } ; -2 years }"
            ]
        },
        {
            "input": "select the rows whose fa cup record is greater than 0 . select the row whose championship record of these rows is 2nd maximum . the name record of this row is stern john .",
            "output": [
                "eq { hop { nth_argmax { filter_greater { all_rows ; fa cup ; 0 } ; championship ; 2 } ; name } ; stern john }"
            ]
        },
        {
            "input": "select the rows whose winning percentage record is equal to 1 . among these rows , select the rows whose wins record is equal to 2 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; winning percentage ; 1 } ; wins ; 2 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the total freshwater withdrawal record of all rows is 60.34 .",
            "output": [
                "round_eq { avg { all_rows ; total freshwater withdrawal } ; 60.34 }"
            ]
        },
        {
            "input": "select the rows whose date record is greater than november 1 , 1955 . among these rows , select the rows whose result record fuzzily matches to l . there is only one such row in the table .",
            "output": [
                "only { filter_eq { filter_greater { all_rows ; date ; november 1 , 1955 } ; result ; l } }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to notre dame . there is only one such row in the table . the player record of this unqiue row is rodney culver .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; notre dame } } ; eq { hop { filter_eq { all_rows ; college ; notre dame } ; player } ; rodney culver } }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to mo williams . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high assists ; mo williams } } ; 2 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to 10 may 1969 .",
            "output": [
                "all_eq { all_rows ; date ; 10 may 1969 }"
            ]
        },
        {
            "input": "select the rows whose ground record fuzzily matches to football park . among these rows , select the rows whose crowd record is less than 16000 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; ground ; football park } ; crowd ; 16000 } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose kerry record of all rows is 2nd maximum . the county record of this row is fairfield .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; kerry ; 2 } ; county } ; fairfield }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is maximum . the game record of this row is 1 .",
            "output": [
                "eq { hop { argmax { all_rows ; time } ; game } ; 1 }"
            ]
        },
        {
            "input": "select the row whose winnings record of all rows is maximum . the year record of this row is 2004 .",
            "output": [
                "eq { hop { argmax { all_rows ; winnings } ; year } ; 2004 }"
            ]
        },
        {
            "input": "for the district records of all rows , all of them fuzzily match to pennsylvania .",
            "output": [
                "all_eq { all_rows ; district ; pennsylvania }"
            ]
        },
        {
            "input": "select the rows whose original channel record fuzzily matches to bbc one . there is only one such row in the table . the programme record of this unqiue row is superstars .",
            "output": [
                "and { only { filter_eq { all_rows ; original channel ; bbc one } } ; eq { hop { filter_eq { all_rows ; original channel ; bbc one } ; programme } ; superstars } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to leron mitchell . take the pick record of this row . select the rows whose player record fuzzily matches to aaron wagner . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; leron mitchell } ; pick } ; hop { filter_eq { all_rows ; player ; aaron wagner } ; pick } }"
            ]
        },
        {
            "input": "the sum of the number of seasons in superettan record of all rows is 76 .",
            "output": [
                "round_eq { sum { all_rows ; number of seasons in superettan } ; 76 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to edward everett eslick . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to gordon browning . take the first elected record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; edward everett eslick } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; gordon browning } ; first elected } }"
            ]
        },
        {
            "input": "select the rows whose rank record is greater than or equal to 4 . the sum of the total record of these rows is 5 .",
            "output": [
                "round_eq { sum { filter_greater_eq { all_rows ; rank ; 4 } ; total } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose product record fuzzily matches to grain . take the 2001 record of this row . select the rows whose product record fuzzily matches to timber . take the 2001 record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; product ; grain } ; 2001 } ; hop { filter_eq { all_rows ; product ; timber } ; 2001 } }"
            ]
        },
        {
            "input": "the 4th minimum episode record of all rows is 4 . the date record of the row with 4th minimum episode record is 23 january 1988 .",
            "output": [
                "and { eq { nth_min { all_rows ; episode ; 4 } ; 4 } ; eq { hop { nth_argmin { all_rows ; episode ; 4 } ; date } ; 23 january 1988 } }"
            ]
        },
        {
            "input": "select the row whose score record of all rows is maximum . the opposition record of this row is surrey .",
            "output": [
                "eq { hop { argmax { all_rows ; score } ; opposition } ; surrey }"
            ]
        },
        {
            "input": "select the rows whose silver record is greater than 0 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_greater { all_rows ; silver ; 0 } } ; 5 }"
            ]
        },
        {
            "input": "select the row whose population , in thousands , ( 1905 ) record of all rows is maximum . the governorate record of this row is warsaw governorate .",
            "output": [
                "eq { hop { argmax { all_rows ; population , in thousands , ( 1905 ) } ; governorate } ; warsaw governorate }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 1st minimum . the opponent record of this row is matea mezak .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opponent } ; matea mezak }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them are greater than 2000 .",
            "output": [
                "all_greater { all_rows ; date ; 2000 }"
            ]
        },
        {
            "input": "select the row whose poll losses record of all rows is maximum . the advocate record of this row is andrew daly .",
            "output": [
                "eq { hop { argmax { all_rows ; poll losses } ; advocate } ; andrew daly }"
            ]
        },
        {
            "input": "select the row whose games record of all rows is 2nd maximum . the player record of this row is david gonzalvez .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; games ; 2 } ; player } ; david gonzalvez }"
            ]
        },
        {
            "input": "select the rows whose televote record fuzzily matches to 2.33 % . there is only one such row in the table . the artist record of this unqiue row is simona sivanio .",
            "output": [
                "and { only { filter_eq { all_rows ; televote ; 2.33 % } } ; eq { hop { filter_eq { all_rows ; televote ; 2.33 % } ; artist } ; simona sivanio } }"
            ]
        },
        {
            "input": "the maximum population ( 2010 census ) record of all rows is 241528 . the district record of the row with superlative population ( 2010 census ) record is sampaloc .",
            "output": [
                "and { eq { max { all_rows ; population ( 2010 census ) } ; 241528 } ; eq { hop { argmax { all_rows ; population ( 2010 census ) } ; district } ; sampaloc } }"
            ]
        },
        {
            "input": "select the row whose dolphins points record of all rows is 2nd maximum . the date record of this row is sept 23 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; dolphins points ; 2 } ; date } ; sept 23 }"
            ]
        },
        {
            "input": "select the rows whose gold record is equal to 13 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; gold ; 13 } } ; 2 }"
            ]
        },
        {
            "input": "the average of the viewers record of all rows is 880000 .",
            "output": [
                "round_eq { avg { all_rows ; viewers } ; 880000 }"
            ]
        },
        {
            "input": "select the rows whose protocol record fuzzily matches to proprietary . among these rows , select the rows whose license record fuzzily matches to apache license . there is only one such row in the table . the project record of this unqiue row is jxta remote desktop .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; protocol ; proprietary } ; license ; apache license } } ; eq { hop { filter_eq { filter_eq { all_rows ; protocol ; proprietary } ; license ; apache license } ; project } ; jxta remote desktop } }"
            ]
        },
        {
            "input": "select the rows whose category record fuzzily matches to best overseas new artist . take the year record of this row . select the rows whose category record fuzzily matches to songs of the year . take the year record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; category ; best overseas new artist } ; year } ; hop { filter_eq { all_rows ; category ; songs of the year } ; year } }"
            ]
        },
        {
            "input": "select the rows whose recorded record fuzzily matches to 1980 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; recorded ; 1980 } }"
            ]
        },
        {
            "input": "select the row whose area record of all rows is maximum . the rr romaja record of this row is gyeongsangbuk .",
            "output": [
                "eq { hop { argmax { all_rows ; area } ; rr romaja } ; gyeongsangbuk }"
            ]
        },
        {
            "input": "select the rows whose wickets record fuzzily matches to none . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; wickets ; none } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose team 2 record fuzzily matches to d3 . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; team 2 ; d3 } }"
            ]
        },
        {
            "input": "for the largest ethnic group ( year ) records of all rows , most of them fuzzily match to serbs .",
            "output": [
                "most_eq { all_rows ; largest ethnic group ( year ) ; serbs }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd minimum . the director record of this row is john ford .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 2 } ; director } ; john ford }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the team record of this row is sc internacional de s\u00e3o paulo .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; team } ; sc internacional de s\u00e3o paulo }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to brad lamb . take the round record of this row . select the rows whose player record fuzzily matches to mark maddox . take the round record of this row . the second record is 1 larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; brad lamb } ; round } ; hop { filter_eq { all_rows ; player ; mark maddox } ; round } } ; -1 }"
            ]
        },
        {
            "input": "select the rows whose manner of departure record fuzzily matches to resigned . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; manner of departure ; resigned } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose pole position record fuzzily matches to mattias ekstr\u00f6m . take the date record of this row . select the rows whose pole position record fuzzily matches to oliver jarvis . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; pole position ; mattias ekstr\u00f6m } ; date } ; hop { filter_eq { all_rows ; pole position ; oliver jarvis } ; date } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the venue record of this row is texas stadium .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; venue } ; texas stadium }"
            ]
        },
        {
            "input": "the average of the pick record of all rows is 13.14 .",
            "output": [
                "round_eq { avg { all_rows ; pick } ; 13.14 }"
            ]
        },
        {
            "input": "select the rows whose top - 25 record is equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; top - 25 ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to guy bee . there is only one such row in the table . the title record of this unqiue row is family matters .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; guy bee } } ; eq { hop { filter_eq { all_rows ; directed by ; guy bee } ; title } ; family matters } }"
            ]
        },
        {
            "input": "select the rows whose winner 's share record is equal to 8400 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; winner 's share ; 8400 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose loses record of all rows is 3rd maximum . the club record of this row is nev\u0117\u017eis k\u0117dainiai .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; loses ; 3 } ; club } ; nev\u0117\u017eis k\u0117dainiai }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd maximum . the year record of this row is 2012 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; year ; 2 } ; year } ; 2012 }"
            ]
        },
        {
            "input": "select the row whose number of electorates ( 2003 ) record of all rows is maximum . the name record of this row is niwari .",
            "output": [
                "eq { hop { argmax { all_rows ; number of electorates ( 2003 ) } ; name } ; niwari }"
            ]
        },
        {
            "input": "select the row whose discontinued record of all rows is 2nd minimum . the model record of this row is lisa 2 .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; discontinued ; 2 } ; model } ; lisa 2 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to tucker gates . there is only one such row in the table . the title record of this unqiue row is the road to damascus .",
            "output": [
                "and { only { filter_eq { all_rows ; directed by ; tucker gates } } ; eq { hop { filter_eq { all_rows ; directed by ; tucker gates } ; title } ; the road to damascus } }"
            ]
        },
        {
            "input": "select the rows whose nickname record fuzzily matches to saints . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_eq { all_rows ; nickname ; saints } } ; 1 }"
            ]
        },
        {
            "input": "for the location records of all rows , most of them fuzzily match to japan .",
            "output": [
                "most_eq { all_rows ; location ; japan }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1990 - 09 . for the result records of these rows , most of them fuzzily match to l .",
            "output": [
                "most_eq { filter_eq { all_rows ; date ; 1990 - 09 } ; result ; l }"
            ]
        },
        {
            "input": "the 1st minimum time record of all rows is 2:25.46 . the rank record of the row with 1st minimum time record is 1 . the name record of the row with 1st minimum time record is kristy kowal .",
            "output": [
                "and { eq { nth_min { all_rows ; time ; 1 } ; 2:25.46 } ; and { eq { hop { nth_argmin { all_rows ; time ; 1 } ; rank } ; 1 } ; eq { hop { nth_argmin { all_rows ; time ; 1 } ; name } ; kristy kowal } } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to dinamo minsk . take the position in 1992 record of this row . select the rows whose team record fuzzily matches to dinamo brest . take the position in 1992 record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; team ; dinamo minsk } ; position in 1992 } ; hop { filter_eq { all_rows ; team ; dinamo brest } ; position in 1992 } }"
            ]
        },
        {
            "input": "select the rows whose performer 4 record fuzzily matches to tony slattery . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; performer 4 ; tony slattery } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose chassis record fuzzily matches to ford fiesta . the sum of the points record of these rows is 727 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; chassis ; ford fiesta } ; points } ; 727 }"
            ]
        },
        {
            "input": "select the row whose length record of all rows is 3rd maximum . the model record of this row is flxible 35096 - 6 - 1 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; length ; 3 } ; model } ; flxible 35096 - 6 - 1 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to philadelphia eagles . take the result record of this row . select the rows whose opponent record fuzzily matches to chicago bears . take the result record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; philadelphia eagles } ; result } ; hop { filter_eq { all_rows ; opponent ; chicago bears } ; result } }"
            ]
        },
        {
            "input": "for the date records of all rows , most of them fuzzily match to january .",
            "output": [
                "most_eq { all_rows ; date ; january }"
            ]
        },
        {
            "input": "select the row whose erp / power w record of all rows is 2nd maximum . the call sign record of this row is wrli - fm .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; erp / power w ; 2 } ; call sign } ; wrli - fm }"
            ]
        },
        {
            "input": "select the rows whose leading scorer record fuzzily matches to tim duncan . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; leading scorer ; tim duncan } } ; 7 }"
            ]
        },
        {
            "input": "select the row whose date of successors formal installation record of all rows is minimum . the successor record of this row is john parker hale ( r ) .",
            "output": [
                "eq { hop { argmin { all_rows ; date of successors formal installation } ; successor } ; john parker hale ( r ) }"
            ]
        },
        {
            "input": "select the row whose league record of all rows is 3rd maximum . the name record of this row is bill foulkes .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; league ; 3 } ; name } ; bill foulkes }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is maximum . the call sign record of this row is w283au .",
            "output": [
                "eq { hop { argmax { all_rows ; frequency mhz } ; call sign } ; w283au }"
            ]
        },
        {
            "input": "select the row whose pts record of all rows is maximum . the entrant record of this row is leyton house march racing team .",
            "output": [
                "eq { hop { argmax { all_rows ; pts } ; entrant } ; leyton house march racing team }"
            ]
        },
        {
            "input": "select the rows whose clean & jerk record is greater than 110 . there is only one such row in the table . the name record of this unqiue row is maryse turcotte ( can ) .",
            "output": [
                "and { only { filter_greater { all_rows ; clean & jerk ; 110 } } ; eq { hop { filter_greater { all_rows ; clean & jerk ; 110 } ; name } ; maryse turcotte ( can ) } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . take the score record of this row . select the rows whose surface record fuzzily matches to clay . take the score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; surface ; hard } ; score } ; hop { filter_eq { all_rows ; surface ; clay } ; score } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; november } } ; 4 }"
            ]
        },
        {
            "input": "for the score records of all rows , most of them are greater than or equal to 70 .",
            "output": [
                "most_greater_eq { all_rows ; score ; 70 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to daniela hantuchov\u00e1 . take the edition record of this row . select the rows whose opponent record fuzzily matches to kirsten flipkens . take the edition record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; opponent ; daniela hantuchov\u00e1 } ; edition } ; hop { filter_eq { all_rows ; opponent ; kirsten flipkens } ; edition } }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to paul holahan . for the us viewers ( millions ) records of these rows , most of them are greater than 4.5 .",
            "output": [
                "most_greater { filter_eq { all_rows ; directed by ; paul holahan } ; us viewers ( millions ) ; 4.5 }"
            ]
        },
        {
            "input": "select the rows whose years in assembly record fuzzily matches to 2008 . among these rows , select the rows whose residence record fuzzily matches to san francisco . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; years in assembly ; 2008 } ; residence ; san francisco } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to kim hyun - seok . take the total assists record of this row . select the rows whose name record fuzzily matches to lee dong - gook . take the total assists record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; kim hyun - seok } ; total assists } ; hop { filter_eq { all_rows ; name ; lee dong - gook } ; total assists } }"
            ]
        },
        {
            "input": "select the rows whose laps record is greater than or equal to 200 . select the row whose rank record of these rows is 2nd maximum . the year record of this row is 1953 .",
            "output": [
                "eq { hop { nth_argmax { filter_greater_eq { all_rows ; laps ; 200 } ; rank ; 2 } ; year } ; 1953 }"
            ]
        },
        {
            "input": "for the date of successors formal installation records of all rows , most of them fuzzily match to elected .",
            "output": [
                "most_eq { all_rows ; date of successors formal installation ; elected }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to scott garlick . take the games record of this row . select the rows whose player record fuzzily matches to dj countess . take the games record of this row . the first record is 4 larger than the second record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; player ; scott garlick } ; games } ; hop { filter_eq { all_rows ; player ; dj countess } ; games } } ; 4 }"
            ]
        },
        {
            "input": "for the high points records of all rows , most of them fuzzily match to lennox .",
            "output": [
                "most_eq { all_rows ; high points ; lennox }"
            ]
        },
        {
            "input": "select the row whose floors record of all rows is maximum . the name record of this row is commerzbank tower .",
            "output": [
                "eq { hop { argmax { all_rows ; floors } ; name } ; commerzbank tower }"
            ]
        },
        {
            "input": "for the event records of all rows , most of them do not match to team competitions .",
            "output": [
                "most_not_eq { all_rows ; event ; team competitions }"
            ]
        },
        {
            "input": "select the row whose age record of all rows is maximum . the candidate record of this row is kirsty parkhill .",
            "output": [
                "eq { hop { argmax { all_rows ; age } ; candidate } ; kirsty parkhill }"
            ]
        },
        {
            "input": "select the rows whose driver / passenger record fuzzily matches to jan hendrickx / tim smeuninx . take the points record of this row . select the rows whose driver / passenger record fuzzily matches to marko happich / meinrad schelbert . take the points record of this row . the first record is greater than the second record . the points record of the first row is 405 . the points record of the second row is 317 .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; driver / passenger ; jan hendrickx / tim smeuninx } ; points } ; hop { filter_eq { all_rows ; driver / passenger ; marko happich / meinrad schelbert } ; points } } ; and { eq { hop { filter_eq { all_rows ; driver / passenger ; jan hendrickx / tim smeuninx } ; points } ; 405 } ; eq { hop { filter_eq { all_rows ; driver / passenger ; marko happich / meinrad schelbert } ; points } ; 317 } } }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to ramazan ramazanov . take the round record of this row . select the rows whose opponent record fuzzily matches to eduardo maiorino . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; ramazan ramazanov } ; round } ; hop { filter_eq { all_rows ; opponent ; eduardo maiorino } ; round } }"
            ]
        },
        {
            "input": "select the rows whose written by record fuzzily matches to adam barr . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; written by ; adam barr } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose originalairdate record of all rows is 2nd minimum . the title record of this row is seeds .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; originalairdate ; 2 } ; title } ; seeds }"
            ]
        },
        {
            "input": "select the rows whose status record fuzzily matches to re - elected . the number of such rows is 10 .",
            "output": [
                "eq { count { filter_eq { all_rows ; status ; re - elected } } ; 10 }"
            ]
        },
        {
            "input": "select the rows whose clinical status record fuzzily matches to fda - approved . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; clinical status ; fda - approved } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose total record is greater than 13 . the average of the fighting spirit record of these rows is 5 .",
            "output": [
                "round_eq { avg { filter_greater { all_rows ; total ; 13 } ; fighting spirit } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to jacksonville jaguars . select the row whose date record of these rows is 2nd minimum . the attendance record of this row is 68809 .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; opponent ; jacksonville jaguars } ; date ; 2 } ; attendance } ; 68809 }"
            ]
        },
        {
            "input": "select the row whose profits ( billion ) record of all rows is maximum . the company record of this row is exxonmobil .",
            "output": [
                "eq { hop { argmax { all_rows ; profits ( billion ) } ; company } ; exxonmobil }"
            ]
        },
        {
            "input": "select the rows whose points record is not equal to 0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; points ; 0 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to julien cayer . take the overall pick record of this row . select the rows whose player record fuzzily matches to gustav nyquist . take the overall pick record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; player ; julien cayer } ; overall pick } ; hop { filter_eq { all_rows ; player ; gustav nyquist } ; overall pick } }"
            ]
        },
        {
            "input": "select the row whose first broadcast record of all rows is 2nd maximum . the episode record of this row is 3x07 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; first broadcast ; 2 } ; episode } ; 3x07 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 58246 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 58246 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to / 05 / . the 1st maximum against record of these rows is 22 .",
            "output": [
                "eq { nth_max { filter_eq { all_rows ; date ; / 05 / } ; against ; 1 } ; 22 }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to san antonio . the maximum location attendance record of these rows is staples center 18997 .",
            "output": [
                "eq { max { filter_eq { all_rows ; team ; san antonio } ; location attendance } ; staples center 18997 }"
            ]
        },
        {
            "input": "for the qual 1 records of all rows , most of them are less than 1:18:000 .",
            "output": [
                "most_less { all_rows ; qual 1 ; 1:18:000 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to south melbourne . take the home team score record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the home team score record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; south melbourne } ; home team score } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score } }"
            ]
        },
        {
            "input": "select the rows whose player record is arbitrary . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_all { all_rows ; player } } ; 8 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 3rd minimum . the centerfold model record of this row is sandra hubby .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 3 } ; centerfold model } ; sandra hubby }"
            ]
        },
        {
            "input": "select the rows whose style record fuzzily matches to west coast swing . there is only one such row in the table . the week record of this unqiue row is 4 .",
            "output": [
                "and { only { filter_eq { all_rows ; style ; west coast swing } } ; eq { hop { filter_eq { all_rows ; style ; west coast swing } ; week } ; 4 } }"
            ]
        },
        {
            "input": "select the rows whose artist record fuzzily matches to demos beke . take the points record of this row . select the rows whose artist record fuzzily matches to lucas christodolou . take the points record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; artist ; demos beke } ; points } ; hop { filter_eq { all_rows ; artist ; lucas christodolou } ; points } }"
            ]
        },
        {
            "input": "select the row whose established record of all rows is 2nd maximum . the league record of this row is ahl .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; established ; 2 } ; league } ; ahl }"
            ]
        },
        {
            "input": "the average of the secondary ( 14 - 17 years ) record of all rows is 70.95 .",
            "output": [
                "round_eq { avg { all_rows ; secondary ( 14 - 17 years ) } ; 70.95 }"
            ]
        },
        {
            "input": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is keith ellison .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; keith ellison }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 1980 . take the top team in regular season ( points ) record of this row . select the rows whose year record fuzzily matches to 1982 . take the top team in regular season ( points ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; year ; 1980 } ; top team in regular season ( points ) } ; hop { filter_eq { all_rows ; year ; 1982 } ; top team in regular season ( points ) } }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to anyang stadium , anyang . there is only one such row in the table . the date record of this unqiue row is 15 august 2012 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; anyang stadium , anyang } } ; eq { hop { filter_eq { all_rows ; venue ; anyang stadium , anyang } ; date } ; 15 august 2012 } }"
            ]
        },
        {
            "input": "select the rows whose born / died record fuzzily matches to present . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; born / died ; present } } ; 2 }"
            ]
        },
        {
            "input": "for the crowd records of all rows , most of them are greater than 20000 .",
            "output": [
                "most_greater { all_rows ; crowd ; 20000 }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the year record of this row is 2010 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; year } ; 2010 }"
            ]
        },
        {
            "input": "the average of the lost record of all rows is 10.75 .",
            "output": [
                "round_eq { avg { all_rows ; lost } ; 10.75 }"
            ]
        },
        {
            "input": "the average of the blank ends record of all rows is 6.9 .",
            "output": [
                "round_eq { avg { all_rows ; blank ends } ; 6.9 }"
            ]
        },
        {
            "input": "for the bandwidth included records of all rows , all of them fuzzily match to unlimited mb .",
            "output": [
                "all_eq { all_rows ; bandwidth included ; unlimited mb }"
            ]
        },
        {
            "input": "select the row whose runs record of all rows is 2nd maximum . the player record of this row is dene hills .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; runs ; 2 } ; player } ; dene hills }"
            ]
        },
        {
            "input": "select the rows whose population ( 2008 ) record is less than 100000 . among these rows , select the rows whose created record is equal to 2000 . there is only one such row in the table . the county record of this unqiue row is river gee .",
            "output": [
                "and { only { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } } ; eq { hop { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } ; county } ; river gee } }"
            ]
        },
        {
            "input": "select the rows whose mens singles record fuzzily matches to alan budi kusuma . take the year record of this row . select the rows whose mens singles record fuzzily matches to hermawan susanto . take the year record of this row . the second record is 1 year larger than the first record .",
            "output": [
                "eq { diff { hop { filter_eq { all_rows ; mens singles ; alan budi kusuma } ; year } ; hop { filter_eq { all_rows ; mens singles ; hermawan susanto } ; year } } ; -1 year }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to darren cahill . there is only one such row in the table . the championship record of this unqiue row is gstaad , switzerland .",
            "output": [
                "and { only { filter_eq { all_rows ; opponent ; darren cahill } } ; eq { hop { filter_eq { all_rows ; opponent ; darren cahill } ; championship } ; gstaad , switzerland } }"
            ]
        },
        {
            "input": "select the rows whose result record fuzzily matches to loss . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; result ; loss } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose main date record fuzzily matches to may . there is only one such row in the table . the round record of this unqiue row is final .",
            "output": [
                "and { only { filter_eq { all_rows ; main date ; may } } ; eq { hop { filter_eq { all_rows ; main date ; may } ; round } ; final } }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is maximum . the opponent record of this row is osvaldo castuera .",
            "output": [
                "eq { hop { argmax { all_rows ; date } ; opponent } ; osvaldo castuera }"
            ]
        },
        {
            "input": "select the rows whose relationship record fuzzily matches to wife . there is only one such row in the table . the name record of this unqiue row is eva braun .",
            "output": [
                "and { only { filter_eq { all_rows ; relationship ; wife } } ; eq { hop { filter_eq { all_rows ; relationship ; wife } ; name } ; eva braun } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to ot . select the row whose january record of these rows is 3rd minimum . the opponent record of this row is st louis blues .",
            "output": [
                "eq { hop { nth_argmin { filter_eq { all_rows ; score ; ot } ; january ; 3 } ; opponent } ; st louis blues }"
            ]
        },
        {
            "input": "the sum of the population record of all rows is 17660 .",
            "output": [
                "round_eq { sum { all_rows ; population } ; 17660 }"
            ]
        },
        {
            "input": "the average of the episodes record of all rows is 10.73 .",
            "output": [
                "round_eq { avg { all_rows ; episodes } ; 10.73 }"
            ]
        },
        {
            "input": "the 3rd minimum round record of all rows is 3 . the circuit record of the row with 3rd minimum round record is wakefield park .",
            "output": [
                "and { eq { nth_min { all_rows ; round ; 3 } ; 3 } ; eq { hop { nth_argmin { all_rows ; round ; 3 } ; circuit } ; wakefield park } }"
            ]
        },
        {
            "input": "select the row whose year record of all rows is 2nd minimum . the nomination record of this row is jam hsiao .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year ; 2 } ; nomination } ; jam hsiao }"
            ]
        },
        {
            "input": "select the rows whose syndicate record fuzzily matches to america 3 foundation . among these rows , select the rows whose yacht record fuzzily matches to kanza . there is only one such row in the table . the sail record of this unqiue row is usa - 28 .",
            "output": [
                "and { only { filter_eq { filter_eq { all_rows ; syndicate ; america 3 foundation } ; yacht ; kanza } } ; eq { hop { filter_eq { filter_eq { all_rows ; syndicate ; america 3 foundation } ; yacht ; kanza } ; sail } ; usa - 28 } }"
            ]
        },
        {
            "input": "select the rows whose team record fuzzily matches to bourgoin . take the tries for record of this row . select the rows whose team record fuzzily matches to london irish . take the tries for record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; team ; bourgoin } ; tries for } ; hop { filter_eq { all_rows ; team ; london irish } ; tries for } }"
            ]
        },
        {
            "input": "select the rows whose laps record is equal to 1 . there is only one such row in the table . the year record of this unqiue row is 1964 . the finish record of this unqiue row is 30 .",
            "output": [
                "and { only { filter_eq { all_rows ; laps ; 1 } } ; and { eq { hop { filter_eq { all_rows ; laps ; 1 } ; year } ; 1964 } ; eq { hop { filter_eq { all_rows ; laps ; 1 } ; finish } ; 30 } } }"
            ]
        },
        {
            "input": "select the row whose frequency mhz record of all rows is 3rd maximum . the erp kw record of this row is 3 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; frequency mhz ; 3 } ; erp kw } ; 3 }"
            ]
        },
        {
            "input": "the 1st minimum rank record of all rows is 1 . the player record of the row with 1st minimum rank record is bob charles .",
            "output": [
                "and { eq { nth_min { all_rows ; rank ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; rank ; 1 } ; player } ; bob charles } }"
            ]
        },
        {
            "input": "select the row whose points for record of all rows is maximum . the club record of this row is betws rfc .",
            "output": [
                "eq { hop { argmax { all_rows ; points for } ; club } ; betws rfc }"
            ]
        },
        {
            "input": "select the rows whose notes record fuzzily matches to fa . there is only one such row in the table . the country record of this unqiue row is new zealand .",
            "output": [
                "and { only { filter_eq { all_rows ; notes ; fa } } ; eq { hop { filter_eq { all_rows ; notes ; fa } ; country } ; new zealand } }"
            ]
        },
        {
            "input": "select the rows whose partner record fuzzily matches to simon aspelin . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; partner ; simon aspelin } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose venue record is arbitrary . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_all { all_rows ; venue } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose 2nd leg record fuzzily matches to 4 . there is only one such row in the table . the team 1 record of this unqiue row is rabotni\u010dki . the team 2 record of this unqiue row is ilinden .",
            "output": [
                "and { only { filter_eq { all_rows ; 2nd leg ; 4 } } ; and { eq { hop { filter_eq { all_rows ; 2nd leg ; 4 } ; team 1 } ; rabotni\u010dki } ; eq { hop { filter_eq { all_rows ; 2nd leg ; 4 } ; team 2 } ; ilinden } } }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to w . for the high points records of these rows , most of them fuzzily match to tim duncan .",
            "output": [
                "most_eq { filter_eq { all_rows ; score ; w } ; high points ; tim duncan }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to new york giants . the sum of the attendance record of these rows is 144706 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; opponent ; new york giants } ; attendance } ; 144706 }"
            ]
        },
        {
            "input": "for the to par records of all rows , most of them fuzzily match to + .",
            "output": [
                "most_eq { all_rows ; to par ; + }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than 2005 . there is only one such row in the table . the version record of this unqiue row is live version ( recorded in 2006 ) .",
            "output": [
                "and { only { filter_greater { all_rows ; year ; 2005 } } ; eq { hop { filter_greater { all_rows ; year ; 2005 } ; version } ; live version ( recorded in 2006 ) } }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to linden rowat ( g ) . take the round record of this row . select the rows whose player record fuzzily matches to dwight king ( c ) . take the round record of this row . the first record is 1 larger than the second record . the round record of the first row is 5 . the round record of the second row is 4 .",
            "output": [
                "and { eq { diff { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } } ; 1 } ; and { eq { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; 5 } ; eq { hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } ; 4 } } }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to gary neville . take the total record of this row . select the rows whose name record fuzzily matches to alex stepney . take the total record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; name ; gary neville } ; total } ; hop { filter_eq { all_rows ; name ; alex stepney } ; total } }"
            ]
        },
        {
            "input": "select the rows whose goalkeeper record fuzzily matches to igor etxebarrieta . take the matches record of this row . select the rows whose goalkeeper record fuzzily matches to daniel gim\u00e9nez . take the matches record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; goalkeeper ; igor etxebarrieta } ; matches } ; hop { filter_eq { all_rows ; goalkeeper ; daniel gim\u00e9nez } ; matches } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 14 july 1979 . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 14 july 1979 } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to san francisco 49ers . the maximum attendance record of these rows is 65551 . the date record of the row with superlative attendance record is november 11 , 1979 .",
            "output": [
                "and { eq { max { filter_eq { all_rows ; opponent ; san francisco 49ers } ; attendance } ; 65551 } ; eq { hop { argmax { filter_eq { all_rows ; opponent ; san francisco 49ers } ; attendance } ; date } ; november 11 , 1979 } }"
            ]
        },
        {
            "input": "select the rows whose no in season record fuzzily matches to 1 / 2 . take the us viewers ( million ) record of this row . select the rows whose no in season record fuzzily matches to 16 . take the us viewers ( million ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; no in season ; 1 / 2 } ; us viewers ( million ) } ; hop { filter_eq { all_rows ; no in season ; 16 } ; us viewers ( million ) } }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to world championships . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; tournament ; world championships } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose tournament record fuzzily matches to us open . take the events record of this row . select the rows whose tournament record fuzzily matches to pga championship . take the events record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; tournament ; us open } ; events } ; hop { filter_eq { all_rows ; tournament ; pga championship } ; events } }"
            ]
        },
        {
            "input": "select the rows whose format record fuzzily matches to oldies . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; format ; oldies } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to weber state . there is only one such row in the table . the player record of this unqiue row is lee white .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; weber state } } ; eq { hop { filter_eq { all_rows ; college ; weber state } ; player } ; lee white } }"
            ]
        },
        {
            "input": "select the rows whose no of barangays record is equal to 11 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; no of barangays ; 11 } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose screens record is greater than 100 . there is only one such row in the table . the territory record of this unqiue row is turkey .",
            "output": [
                "and { only { filter_greater { all_rows ; screens ; 100 } } ; eq { hop { filter_greater { all_rows ; screens ; 100 } ; territory } ; turkey } }"
            ]
        },
        {
            "input": "for the tv time records of all rows , most of them fuzzily match to cbs .",
            "output": [
                "most_eq { all_rows ; tv time ; cbs }"
            ]
        },
        {
            "input": "select the rows whose best score record fuzzily matches to 30 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; best score ; 30 } } ; 7 }"
            ]
        },
        {
            "input": "select the rows whose dance styles record fuzzily matches to latin dances . there is only one such row in the table . the competing dancers record of this unqiue row is jason roditis & tonia kosovich .",
            "output": [
                "and { only { filter_eq { all_rows ; dance styles ; latin dances } } ; eq { hop { filter_eq { all_rows ; dance styles ; latin dances } ; competing dancers } ; jason roditis & tonia kosovich } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 16 august 2000 . take the competition record of this row . select the rows whose date record fuzzily matches to 22 august 2007 . take the competition record of this row . the first record fuzzily matches to the second record . the competition record of the first row is friendly . the competition record of the second row is friendly .",
            "output": [
                "and { eq { hop { filter_eq { all_rows ; date ; 16 august 2000 } ; competition } ; hop { filter_eq { all_rows ; date ; 22 august 2007 } ; competition } } ; and { eq { hop { filter_eq { all_rows ; date ; 16 august 2000 } ; competition } ; friendly } ; eq { hop { filter_eq { all_rows ; date ; 22 august 2007 } ; competition } ; friendly } } }"
            ]
        },
        {
            "input": "the average of the population ( 2011 ) record of all rows is 2262 .",
            "output": [
                "round_eq { avg { all_rows ; population ( 2011 ) } ; 2262 }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 34.8 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 34.8 }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to pepsi center . for the location attendance records of these rows , most of them are less than 19000 .",
            "output": [
                "most_less { filter_eq { all_rows ; location attendance ; pepsi center } ; location attendance ; 19000 }"
            ]
        },
        {
            "input": "the sum of the premierships record of all rows is 30 .",
            "output": [
                "round_eq { sum { all_rows ; premierships } ; 30 }"
            ]
        },
        {
            "input": "select the rows whose mens singles record fuzzily matches to dean galt . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; mens singles ; dean galt } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose type record fuzzily matches to tugboat . take the gross tonnage record of this row . select the rows whose type record fuzzily matches to deck cargo barge . take the gross tonnage record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; type ; tugboat } ; gross tonnage } ; hop { filter_eq { all_rows ; type ; deck cargo barge } ; gross tonnage } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is 1st maximum . the date record of this row is 12 august 2007 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 12 august 2007 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to august 18 . take the record record of this row . select the rows whose date record fuzzily matches to august 17 . take the record record of this row . the first record is greater than the second record . the opponent record of the first row is royals . the opponent record of the second row is royals .",
            "output": [
                "and { greater { hop { filter_eq { all_rows ; date ; august 18 } ; record } ; hop { filter_eq { all_rows ; date ; august 17 } ; record } } ; and { eq { hop { filter_eq { all_rows ; date ; august 18 } ; opponent } ; royals } ; eq { hop { filter_eq { all_rows ; date ; august 17 } ; opponent } ; royals } } }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is maximum . the institution record of this row is rochester institute of technology .",
            "output": [
                "eq { hop { argmax { all_rows ; enrollment } ; institution } ; rochester institute of technology }"
            ]
        },
        {
            "input": "select the row whose gdp per capita ( us ) record of all rows is 2nd minimum . the member countries record of this row is poland .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; gdp per capita ( us ) ; 2 } ; member countries } ; poland }"
            ]
        },
        {
            "input": "select the rows whose sport record fuzzily matches to w gymnastics . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; sport ; w gymnastics } } ; 2 }"
            ]
        },
        {
            "input": "the average of the division record record of all rows is 3.14 .",
            "output": [
                "round_eq { avg { all_rows ; division record } ; 3.14 }"
            ]
        },
        {
            "input": "the sum of the bronze record of all rows is 53 .",
            "output": [
                "round_eq { sum { all_rows ; bronze } ; 53 }"
            ]
        },
        {
            "input": "select the row whose wins record of all rows is 2nd maximum . the team record of this row is cerro porte\u00f1o .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; team } ; cerro porte\u00f1o }"
            ]
        },
        {
            "input": "select the rows whose away team score record is less than 10.0 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_less { all_rows ; away team score ; 10.0 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose enrollment record of all rows is 2nd maximum . the school record of this row is portage .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; enrollment ; 2 } ; school } ; portage }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 14924 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 14924 }"
            ]
        },
        {
            "input": "the average of the viewers record of all rows is 7.42 .",
            "output": [
                "round_eq { avg { all_rows ; viewers } ; 7.42 }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 48121 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 48121 }"
            ]
        },
        {
            "input": "select the row whose bronze record of all rows is 2nd maximum . the nation record of this row is colombia .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; bronze ; 2 } ; nation } ; colombia }"
            ]
        },
        {
            "input": "select the rows whose us viewers ( million ) record is greater than 11.0 . there is only one such row in the table . the no record of this unqiue row is 1 . the title record of this unqiue row is two of a kind .",
            "output": [
                "and { only { filter_greater { all_rows ; us viewers ( million ) ; 11.0 } } ; and { eq { hop { filter_greater { all_rows ; us viewers ( million ) ; 11.0 } ; no } ; 1 } ; eq { hop { filter_greater { all_rows ; us viewers ( million ) ; 11.0 } ; title } ; two of a kind } } }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is minimum . the title record of this row is the lorelais ' first day at yale .",
            "output": [
                "eq { hop { argmin { all_rows ; us viewers ( million ) } ; title } ; the lorelais ' first day at yale }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60000 . the number of such rows is 1 .",
            "output": [
                "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60000 } } ; 1 }"
            ]
        },
        {
            "input": "select the row whose tied record of all rows is maximum . the season record of this row is 1968 - 69 .",
            "output": [
                "eq { hop { argmax { all_rows ; tied } ; season } ; 1968 - 69 }"
            ]
        },
        {
            "input": "select the rows whose country of origin record fuzzily matches to united states . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; country of origin ; united states } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose date of birth record is equal to 1968 . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date of birth ; 1968 } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose market value ( billion ) record of all rows is 1st maximum . the company record of this row is general electric .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; market value ( billion ) ; 1 } ; company } ; general electric }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the opponent record of this row is vancouver canucks .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; opponent } ; vancouver canucks }"
            ]
        },
        {
            "input": "select the rows whose sunlight hours record is equal to 2043 . there is only one such row in the table . the city / town record of this unqiue row is ourense .",
            "output": [
                "and { only { filter_eq { all_rows ; sunlight hours ; 2043 } } ; eq { hop { filter_eq { all_rows ; sunlight hours ; 2043 } ; city / town } ; ourense } }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to central florida . there is only one such row in the table . the name record of this unqiue row is paul miranda .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; central florida } } ; eq { hop { filter_eq { all_rows ; college ; central florida } ; name } ; paul miranda } }"
            ]
        },
        {
            "input": "select the rows whose goals record is equal to 7 . there is only one such row in the table . the scorer record of this unqiue row is lee kil - yong .",
            "output": [
                "and { only { filter_eq { all_rows ; goals ; 7 } } ; eq { hop { filter_eq { all_rows ; goals ; 7 } ; scorer } ; lee kil - yong } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the home team record of this row is melbourne . the away team record of this row is st kilda .",
            "output": [
                "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; melbourne } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; st kilda } }"
            ]
        },
        {
            "input": "select the row whose capacity record of all rows is maximum . the venue record of this row is dinamo , minsk .",
            "output": [
                "eq { hop { argmax { all_rows ; capacity } ; venue } ; dinamo , minsk }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is 2nd minimum . the driver record of this row is sandor van es .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; points ; 2 } ; driver } ; sandor van es }"
            ]
        },
        {
            "input": "for the team name records of all rows , most of them fuzzily match to kemba racing .",
            "output": [
                "most_eq { all_rows ; team name ; kemba racing }"
            ]
        },
        {
            "input": "select the rows whose builder record fuzzily matches to peterson shipbuilders . the number of such rows is 11 .",
            "output": [
                "eq { count { filter_eq { all_rows ; builder ; peterson shipbuilders } } ; 11 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to margravine johanna of baden - baden . take the became duchess record of this row . select the rows whose name record fuzzily matches to victoria of saxe - coburg and gotha . take the became duchess record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; margravine johanna of baden - baden } ; became duchess } ; hop { filter_eq { all_rows ; name ; victoria of saxe - coburg and gotha } ; became duchess } }"
            ]
        },
        {
            "input": "the average of the speed record of all rows is 87.75 .",
            "output": [
                "round_eq { avg { all_rows ; speed } ; 87.75 }"
            ]
        },
        {
            "input": "select the row whose year of intro record of all rows is 2nd minimum . the name / designation record of this row is onorati smg .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; year of intro ; 2 } ; name / designation } ; onorati smg }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 82.71 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 82.71 }"
            ]
        },
        {
            "input": "select the rows whose 2009 record fuzzily matches to sf . there is only one such row in the table . the tournament record of this unqiue row is us open .",
            "output": [
                "and { only { filter_eq { all_rows ; 2009 ; sf } } ; eq { hop { filter_eq { all_rows ; 2009 ; sf } ; tournament } ; us open } }"
            ]
        },
        {
            "input": "select the rows whose visual arts record fuzzily matches to sharon hayes . there is only one such row in the table . the year record of this unqiue row is 2013 .",
            "output": [
                "and { only { filter_eq { all_rows ; visual arts ; sharon hayes } } ; eq { hop { filter_eq { all_rows ; visual arts ; sharon hayes } ; year } ; 2013 } }"
            ]
        },
        {
            "input": "select the rows whose 9:00 record fuzzily matches to the office . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; 9:00 ; the office } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose score record is equal to 69 . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; 69 } } ; 6 }"
            ]
        },
        {
            "input": "select the rows whose building record fuzzily matches to richcraft - dow honda site tower i . take the floors record of this row . select the rows whose building record fuzzily matches to claridge plaza iii . take the floors record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; building ; richcraft - dow honda site tower i } ; floors } ; hop { filter_eq { all_rows ; building ; claridge plaza iii } ; floors } }"
            ]
        },
        {
            "input": "select the row whose total record of all rows is minimum . the player record of this row is seve ballesteros .",
            "output": [
                "eq { hop { argmin { all_rows ; total } ; player } ; seve ballesteros }"
            ]
        },
        {
            "input": "select the rows whose political party record fuzzily matches to non - party . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; political party ; non - party } } ; 3 }"
            ]
        },
        {
            "input": "the average of the bronze record of all rows is 1.7 .",
            "output": [
                "round_eq { avg { all_rows ; bronze } ; 1.7 }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to hard . select the row whose date record of these rows is minimum . the opponent in the final record of this row is andre agassi .",
            "output": [
                "eq { hop { argmin { filter_eq { all_rows ; surface ; hard } ; date } ; opponent in the final } ; andre agassi }"
            ]
        },
        {
            "input": "the average of the clean electric grid california ( san francisco ) record of all rows is 131.4 g / mile .",
            "output": [
                "round_eq { avg { all_rows ; clean electric grid california ( san francisco ) } ; 131.4 g / mile }"
            ]
        },
        {
            "input": "the average of the total record of all rows is 15 .",
            "output": [
                "round_eq { avg { all_rows ; total } ; 15 }"
            ]
        },
        {
            "input": "select the rows whose height record is less than 6-0 . there is only one such row in the table . the player record of this unqiue row is myles mack .",
            "output": [
                "and { only { filter_less { all_rows ; height ; 6-0 } } ; eq { hop { filter_less { all_rows ; height ; 6-0 } ; player } ; myles mack } }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 2002 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; date ; 2002 } } ; 4 }"
            ]
        },
        {
            "input": "the average of the gr\u00fcne record of all rows is 10.58 % .",
            "output": [
                "round_eq { avg { all_rows ; gr\u00fcne } ; 10.58 % }"
            ]
        },
        {
            "input": "select the row whose position record of all rows is minimum . the competition record of this row is universiade .",
            "output": [
                "eq { hop { argmin { all_rows ; position } ; competition } ; universiade }"
            ]
        },
        {
            "input": "select the row whose grid record of all rows is maximum . the driver record of this row is zsolt baumgartner .",
            "output": [
                "eq { hop { argmax { all_rows ; grid } ; driver } ; zsolt baumgartner }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to ken higgs . take the wickets record of this row . select the rows whose player record fuzzily matches to stuart turner . take the wickets record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; player ; ken higgs } ; wickets } ; hop { filter_eq { all_rows ; player ; stuart turner } ; wickets } }"
            ]
        },
        {
            "input": "for the year records of all rows , most of them are greater than 2010 .",
            "output": [
                "most_greater { all_rows ; year ; 2010 }"
            ]
        },
        {
            "input": "the sum of the attendance record of all rows is 771872 .",
            "output": [
                "round_eq { sum { all_rows ; attendance } ; 771872 }"
            ]
        },
        {
            "input": "select the rows whose amino acid record fuzzily matches to valine . take the hydropathy index record of this row . select the rows whose amino acid record fuzzily matches to glycine . take the hydropathy index record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; amino acid ; valine } ; hydropathy index } ; hop { filter_eq { all_rows ; amino acid ; glycine } ; hydropathy index } }"
            ]
        },
        {
            "input": "select the rows whose label record fuzzily matches to toshiba - emi . there is only one such row in the table . the country record of this unqiue row is japan .",
            "output": [
                "and { only { filter_eq { all_rows ; label ; toshiba - emi } } ; eq { hop { filter_eq { all_rows ; label ; toshiba - emi } ; country } ; japan } }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is kardinia park .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; kardinia park }"
            ]
        },
        {
            "input": "select the rows whose primary industry record fuzzily matches to health care . the average of the market value ( usd million ) record of these rows is 151413.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; primary industry ; health care } ; market value ( usd million ) } ; 151413.5 }"
            ]
        },
        {
            "input": "select the rows whose coach record fuzzily matches to steve mcnamara . among these rows , select the rows whose captain record fuzzily matches to paul deacon . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; coach ; steve mcnamara } ; captain ; paul deacon } } ; 3 }"
            ]
        },
        {
            "input": "for the period records of all rows , most of them fuzzily match to 3rd .",
            "output": [
                "most_eq { all_rows ; period ; 3rd }"
            ]
        },
        {
            "input": "select the row whose us viewers ( million ) record of all rows is 2nd maximum . the title record of this row is sabotage .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; title } ; sabotage }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to punt road oval . there is only one such row in the table . the home team record of this unqiue row is richmond . the away team record of this unqiue row is essendon . the date record of this unqiue row is 14 june 1947 .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; punt road oval } } ; and { eq { hop { filter_eq { all_rows ; venue ; punt road oval } ; home team } ; richmond } ; and { eq { hop { filter_eq { all_rows ; venue ; punt road oval } ; away team } ; essendon } ; eq { hop { filter_eq { all_rows ; venue ; punt road oval } ; date } ; 14 june 1947 } } } }"
            ]
        },
        {
            "input": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the year record of this unqiue row is 11 october 2004 .",
            "output": [
                "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; year } ; 11 october 2004 } }"
            ]
        },
        {
            "input": "select the row whose aggregate score record of all rows is minimum . the proceed to quarter - final record of this row is montferrand .",
            "output": [
                "eq { hop { argmin { all_rows ; aggregate score } ; proceed to quarter - final } ; montferrand }"
            ]
        },
        {
            "input": "select the rows whose overall pick record fuzzily matches to 9 . take the overall pick record of this row . select the rows whose overall pick record fuzzily matches to 18 . take the overall pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; overall pick ; 9 } ; overall pick } ; hop { filter_eq { all_rows ; overall pick ; 18 } ; overall pick } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 23350 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 23350 }"
            ]
        },
        {
            "input": "select the rows whose title record is arbitrary . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_all { all_rows ; title } } ; 8 }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is 3rd minimum . the tournament record of this row is chennai , india .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; date ; 3 } ; tournament } ; chennai , india }"
            ]
        },
        {
            "input": "select the rows whose kansas state vs record fuzzily matches to oklahoma . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; kansas state vs ; oklahoma } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose frequency record of all rows is 1st maximum . the model number record of this row is athlon x2 5050e .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; frequency ; 1 } ; model number } ; athlon x2 5050e }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 45,972 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 45,972 }"
            ]
        },
        {
            "input": "select the row whose crowd record of all rows is maximum . the venue record of this row is junction oval .",
            "output": [
                "eq { hop { argmax { all_rows ; crowd } ; venue } ; junction oval }"
            ]
        },
        {
            "input": "select the rows whose year record fuzzily matches to 2003 . take the start record of this row . select the rows whose year record fuzzily matches to 2004 . take the start record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; year ; 2003 } ; start } ; hop { filter_eq { all_rows ; year ; 2004 } ; start } }"
            ]
        },
        {
            "input": "select the row whose first place record of all rows is maximum . the region represented record of this row is china .",
            "output": [
                "eq { hop { argmax { all_rows ; first place } ; region represented } ; china }"
            ]
        },
        {
            "input": "select the rows whose race winner record fuzzily matches to michele alboreto . there is only one such row in the table . the date record of this unqiue row is 5 june .",
            "output": [
                "and { only { filter_eq { all_rows ; race winner ; michele alboreto } } ; eq { hop { filter_eq { all_rows ; race winner ; michele alboreto } ; date } ; 5 june } }"
            ]
        },
        {
            "input": "the average of the score record of all rows is 4.21 .",
            "output": [
                "round_eq { avg { all_rows ; score } ; 4.21 }"
            ]
        },
        {
            "input": "select the row whose silver record of all rows is maximum . the nation record of this row is japan .",
            "output": [
                "eq { hop { argmax { all_rows ; silver } ; nation } ; japan }"
            ]
        },
        {
            "input": "select the rows whose fuel / trans record fuzzily matches to diesel . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; fuel / trans ; diesel } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose player record fuzzily matches to stefan frei . take the graduated record of this row . select the rows whose player record fuzzily matches to peri maro\u00e5 \u00a1 evic . take the graduated record of this row . the first record is less than the second record . the graduated record of the first row is 2010 . the graduated record of the second row is 2011 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; player ; stefan frei } ; graduated } ; hop { filter_eq { all_rows ; player ; peri maro\u00e5 \u00a1 evic } ; graduated } } ; and { eq { hop { filter_eq { all_rows ; player ; stefan frei } ; graduated } ; 2010 } ; eq { hop { filter_eq { all_rows ; player ; peri maro\u00e5 \u00a1 evic } ; graduated } ; 2011 } } }"
            ]
        },
        {
            "input": "select the rows whose year record is equal to 2008 . among these rows , select the rows whose length record is greater than 5:00 . there is only one such row in the table . the music video record of this unqiue row is umbrella ( feat younha ) ( \uc6b0\uc0b0 ) .",
            "output": [
                "and { only { filter_greater { filter_eq { all_rows ; year ; 2008 } ; length ; 5:00 } } ; eq { hop { filter_greater { filter_eq { all_rows ; year ; 2008 } ; length ; 5:00 } ; music video } ; umbrella ( feat younha ) ( \uc6b0\uc0b0 ) } }"
            ]
        },
        {
            "input": "select the rows whose region record fuzzily matches to japan . take the date record of this row . select the rows whose region record fuzzily matches to united kingdom . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; region ; japan } ; date } ; hop { filter_eq { all_rows ; region ; united kingdom } ; date } }"
            ]
        },
        {
            "input": "the average of the goals record of all rows is 18.83 .",
            "output": [
                "round_eq { avg { all_rows ; goals } ; 18.83 }"
            ]
        },
        {
            "input": "select the rows whose guest record fuzzily matches to garry trudeau . there is only one such row in the table . the episode record of this unqiue row is 806 .",
            "output": [
                "and { only { filter_eq { all_rows ; guest ; garry trudeau } } ; eq { hop { filter_eq { all_rows ; guest ; garry trudeau } ; episode } ; 806 } }"
            ]
        },
        {
            "input": "select the rows whose acronym record fuzzily matches to polimas . there is only one such row in the table . the name in english record of this unqiue row is sultan abdul halim mu'adzam shah .",
            "output": [
                "and { only { filter_eq { all_rows ; acronym ; polimas } } ; eq { hop { filter_eq { all_rows ; acronym ; polimas } ; name in english } ; sultan abdul halim mu'adzam shah } }"
            ]
        },
        {
            "input": "the average of the attendance record of all rows is 15503 .",
            "output": [
                "round_eq { avg { all_rows ; attendance } ; 15503 }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to historic federal reserve bank . take the floors record of this row . select the rows whose name record fuzzily matches to kansas city power and light building . take the floors record of this row . the first record is less than the second record . the floors record of the first row is 16 . the floors record of the second row is 34 .",
            "output": [
                "and { less { hop { filter_eq { all_rows ; name ; historic federal reserve bank } ; floors } ; hop { filter_eq { all_rows ; name ; kansas city power and light building } ; floors } } ; and { eq { hop { filter_eq { all_rows ; name ; historic federal reserve bank } ; floors } ; 16 } ; eq { hop { filter_eq { all_rows ; name ; kansas city power and light building } ; floors } ; 34 } } }"
            ]
        },
        {
            "input": "select the row whose points record of all rows is maximum . the year record of this row is 1993 .",
            "output": [
                "eq { hop { argmax { all_rows ; points } ; year } ; 1993 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to dallas cowboys . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; opponent ; dallas cowboys } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose college record fuzzily matches to eckerd . there is only one such row in the table . the player record of this unqiue row is jay washington .",
            "output": [
                "and { only { filter_eq { all_rows ; college ; eckerd } } ; eq { hop { filter_eq { all_rows ; college ; eckerd } ; player } ; jay washington } }"
            ]
        },
        {
            "input": "select the row whose against record of all rows is minimum . the opposing teams record of this row is ireland .",
            "output": [
                "eq { hop { argmin { all_rows ; against } ; opposing teams } ; ireland }"
            ]
        },
        {
            "input": "select the row whose date record of all rows is minimum . the opponent record of this row is japan .",
            "output": [
                "eq { hop { argmin { all_rows ; date } ; opponent } ; japan }"
            ]
        },
        {
            "input": "select the rows whose transfer fee record fuzzily matches to 120k . there is only one such row in the table . the name record of this unqiue row is christou .",
            "output": [
                "and { only { filter_eq { all_rows ; transfer fee ; 120k } } ; eq { hop { filter_eq { all_rows ; transfer fee ; 120k } ; name } ; christou } }"
            ]
        },
        {
            "input": "the sum of the races record of all rows is 123 .",
            "output": [
                "round_eq { sum { all_rows ; races } ; 123 }"
            ]
        },
        {
            "input": "select the rows whose date record is equal to 1873 . the sum of the no built record of these rows is 14 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; 1873 } ; no built } ; 14 }"
            ]
        },
        {
            "input": "select the rows whose % change record is greater than 10 % . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_greater { all_rows ; % change ; 10 % } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose origin record fuzzily matches to european union . there is only one such row in the table .",
            "output": [
                "only { filter_eq { all_rows ; origin ; european union } }"
            ]
        },
        {
            "input": "select the rows whose content record fuzzily matches to televendita . among these rows , select the rows whose television service record fuzzily matches to la sorgente . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; content ; televendita } ; television service ; la sorgente } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose station record fuzzily matches to tsu . take the distance ( km ) record of this row . select the rows whose station record fuzzily matches to kawage . take the distance ( km ) record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; station ; tsu } ; distance ( km ) } ; hop { filter_eq { all_rows ; station ; kawage } ; distance ( km ) } }"
            ]
        },
        {
            "input": "select the rows whose location attendance record fuzzily matches to united center . the sum of the location attendance record of these rows is 68,742 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; location attendance ; united center } ; location attendance } ; 68,742 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to dick armey . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to jack brooks . take the opponent record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; incumbent ; dick armey } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; jack brooks } ; opponent } }"
            ]
        },
        {
            "input": "select the rows whose year record is greater than 2004 . for the position records of these rows , most of them are greater than 50 .",
            "output": [
                "most_greater { filter_greater { all_rows ; year ; 2004 } ; position ; 50 }"
            ]
        },
        {
            "input": "select the rows whose royal house record fuzzily matches to jiang . there is only one such row in the table . the state record of this unqiue row is qi .",
            "output": [
                "and { only { filter_eq { all_rows ; royal house ; jiang } } ; eq { hop { filter_eq { all_rows ; royal house ; jiang } ; state } ; qi } }"
            ]
        },
        {
            "input": "select the rows whose nationality record fuzzily matches to japan . select the row whose time record of these rows is maximum . the name record of this row is noriko inada .",
            "output": [
                "eq { hop { argmax { filter_eq { all_rows ; nationality ; japan } ; time } ; name } ; noriko inada }"
            ]
        },
        {
            "input": "for the lineup records of all rows , most of them fuzzily match to 90 . start .",
            "output": [
                "most_eq { all_rows ; lineup ; 90 . start }"
            ]
        },
        {
            "input": "for the crankshaft records of all rows , most of them fuzzily match to 180 degree .",
            "output": [
                "most_eq { all_rows ; crankshaft ; 180 degree }"
            ]
        },
        {
            "input": "for the network records of all rows , most of them fuzzily match to abc 's wwos .",
            "output": [
                "most_eq { all_rows ; network ; abc 's wwos }"
            ]
        },
        {
            "input": "select the rows whose result record does not match to won . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_not_eq { all_rows ; result ; won } } ; 2 }"
            ]
        },
        {
            "input": "for the goals records of all rows , all of them are equal to 0 .",
            "output": [
                "all_eq { all_rows ; goals ; 0 }"
            ]
        },
        {
            "input": "the sum of the screens record of all rows is 461 .",
            "output": [
                "round_eq { sum { all_rows ; screens } ; 461 }"
            ]
        },
        {
            "input": "select the rows whose country record fuzzily matches to united states . the average of the score record of these rows is 66 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; country ; united states } ; score } ; 66 }"
            ]
        },
        {
            "input": "select the rows whose incumbent record fuzzily matches to thomas shailer weston . take the date record of this row . select the rows whose incumbent record fuzzily matches to isaac wilson . take the date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; incumbent ; thomas shailer weston } ; date } ; hop { filter_eq { all_rows ; incumbent ; isaac wilson } ; date } }"
            ]
        },
        {
            "input": "select the rows whose crowd record is less than 17000 . there is only one such row in the table . the venue record of this unqiue row is punt road oval .",
            "output": [
                "and { only { filter_less { all_rows ; crowd ; 17000 } } ; eq { hop { filter_less { all_rows ; crowd ; 17000 } ; venue } ; punt road oval } }"
            ]
        },
        {
            "input": "select the rows whose time / retired record fuzzily matches to + 2 laps . the number of such rows is 5 .",
            "output": [
                "eq { count { filter_eq { all_rows ; time / retired ; + 2 laps } } ; 5 }"
            ]
        },
        {
            "input": "select the rows whose dominant religion ( 2002 ) record fuzzily matches to catholic christianity . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; dominant religion ( 2002 ) ; catholic christianity } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose venue record fuzzily matches to greece . there is only one such row in the table . the competition record of this unqiue row is world athletics final .",
            "output": [
                "and { only { filter_eq { all_rows ; venue ; greece } } ; eq { hop { filter_eq { all_rows ; venue ; greece } ; competition } ; world athletics final } }"
            ]
        },
        {
            "input": "the maximum margin of victory record of all rows is 11 strokes .",
            "output": [
                "eq { max { all_rows ; margin of victory } ; 11 strokes }"
            ]
        },
        {
            "input": "select the rows whose institution record fuzzily matches to boise state university . take the enrollment record of this row . select the rows whose institution record fuzzily matches to california state university , bakersfield . take the enrollment record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; institution ; boise state university } ; enrollment } ; hop { filter_eq { all_rows ; institution ; california state university , bakersfield } ; enrollment } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is maximum . the date record of this row is january 11 .",
            "output": [
                "eq { hop { argmax { all_rows ; location attendance } ; date } ; january 11 }"
            ]
        },
        {
            "input": "the average of the money record of all rows is 420350 .",
            "output": [
                "round_eq { avg { all_rows ; money } ; 420350 }"
            ]
        },
        {
            "input": "the average of the average ratings record of all rows is 11.76 % .",
            "output": [
                "round_eq { avg { all_rows ; average ratings } ; 11.76 % }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to frank borman . take the born record of this row . select the rows whose name record fuzzily matches to jim lovell . take the born record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; frank borman } ; born } ; hop { filter_eq { all_rows ; name ; jim lovell } ; born } }"
            ]
        },
        {
            "input": "select the rows whose division record fuzzily matches to southeast . the average of the pts record of these rows is 75.5 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; division ; southeast } ; pts } ; 75.5 }"
            ]
        },
        {
            "input": "select the rows whose opponent record fuzzily matches to manny morales . take the round record of this row . select the rows whose opponent record fuzzily matches to alberto rodriguez . take the round record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; opponent ; manny morales } ; round } ; hop { filter_eq { all_rows ; opponent ; alberto rodriguez } ; round } }"
            ]
        },
        {
            "input": "select the rows whose us mission record fuzzily matches to ranger . the average of the mass ( kg ) record of these rows is 340 .",
            "output": [
                "round_eq { avg { filter_eq { all_rows ; us mission ; ranger } ; mass ( kg ) } ; 340 }"
            ]
        },
        {
            "input": "select the rows whose transfer fee record fuzzily matches to youth system . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { all_rows ; transfer fee ; youth system } } ; 2 }"
            ]
        },
        {
            "input": "select the rows whose home team record fuzzily matches to fitzroy . take the crowd record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the crowd record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; crowd } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; crowd } }"
            ]
        },
        {
            "input": "select the row whose first elected record of all rows is 2nd minimum . the incumbent record of this row is clarence f lea .",
            "output": [
                "eq { hop { nth_argmin { all_rows ; first elected ; 2 } ; incumbent } ; clarence f lea }"
            ]
        },
        {
            "input": "for the final records of all rows , most of them fuzzily match to did not advance .",
            "output": [
                "most_eq { all_rows ; final ; did not advance }"
            ]
        },
        {
            "input": "the average of the away team score record of all rows is 8.75 .",
            "output": [
                "round_eq { avg { all_rows ; away team score } ; 8.75 }"
            ]
        },
        {
            "input": "the average of the drawn record of all rows is 2.55 .",
            "output": [
                "round_eq { avg { all_rows ; drawn } ; 2.55 }"
            ]
        },
        {
            "input": "select the rows whose location / attendance record fuzzily matches to the omni . the maximum score record of these rows is w 124 - 91 .",
            "output": [
                "eq { max { filter_eq { all_rows ; location / attendance ; the omni } ; score } ; w 124 - 91 }"
            ]
        },
        {
            "input": "select the rows whose place record is greater than 1 . among these rows , select the rows whose points jury record is greater than 30 . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_greater { filter_greater { all_rows ; place ; 1 } ; points jury ; 30 } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose match points record fuzzily matches to 4-0 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; match points ; 4-0 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose channel record fuzzily matches to atv world . take the launch date record of this row . select the rows whose channel record fuzzily matches to tvb pearl . take the launch date record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; channel ; atv world } ; launch date } ; hop { filter_eq { all_rows ; channel ; tvb pearl } ; launch date } }"
            ]
        },
        {
            "input": "for the goodman records of all rows , most of them are greater than 8 .",
            "output": [
                "most_greater { all_rows ; goodman ; 8 }"
            ]
        },
        {
            "input": "select the rows whose tyre record fuzzily matches to e . for the constructor records of these rows , most of them fuzzily match to ferrari .",
            "output": [
                "most_eq { filter_eq { all_rows ; tyre ; e } ; constructor ; ferrari }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to university of texas at arlington . the sum of the overall record of these rows is 308 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; school / club team ; university of texas at arlington } ; overall } ; 308 }"
            ]
        },
        {
            "input": "select the rows whose city record fuzzily matches to mansuriyah . there is only one such row in the table . the club record of this unqiue row is arabi .",
            "output": [
                "and { only { filter_eq { all_rows ; city ; mansuriyah } } ; eq { hop { filter_eq { all_rows ; city ; mansuriyah } ; club } ; arabi } }"
            ]
        },
        {
            "input": "select the rows whose pilot record fuzzily matches to and . there is only one such row in the table . the vehicle record of this unqiue row is schempp - hirth nimbus - 4dm .",
            "output": [
                "and { only { filter_eq { all_rows ; pilot ; and } } ; eq { hop { filter_eq { all_rows ; pilot ; and } ; vehicle } ; schempp - hirth nimbus - 4dm } }"
            ]
        },
        {
            "input": "select the row whose cultural and educational panel record of all rows is 2nd maximum . the party record of this row is fianna f\u00e1il .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; cultural and educational panel ; 2 } ; party } ; fianna f\u00e1il }"
            ]
        },
        {
            "input": "select the rows whose name record fuzzily matches to willie adams . take the pick record of this row . select the rows whose name record fuzzily matches to bob reed . take the pick record of this row . the first record is less than the second record .",
            "output": [
                "less { hop { filter_eq { all_rows ; name ; willie adams } ; pick } ; hop { filter_eq { all_rows ; name ; bob reed } ; pick } }"
            ]
        },
        {
            "input": "select the rows whose year left record is greater than or equal to 1970 . among these rows , select the rows whose conference joined record fuzzily matches to hoosier heartland . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_greater_eq { all_rows ; year left ; 1970 } ; conference joined ; hoosier heartland } } ; 2 }"
            ]
        },
        {
            "input": "select the row whose attendance record of all rows is maximum . the date record of this row is 1970 - 10 - 04 .",
            "output": [
                "eq { hop { argmax { all_rows ; attendance } ; date } ; 1970 - 10 - 04 }"
            ]
        },
        {
            "input": "the average of the weight record of all rows is 90 .",
            "output": [
                "round_eq { avg { all_rows ; weight } ; 90 }"
            ]
        },
        {
            "input": "the average of the crowd record of all rows is 25000-27000 .",
            "output": [
                "round_eq { avg { all_rows ; crowd } ; 25000-27000 }"
            ]
        },
        {
            "input": "select the rows whose new channel ( s ) record fuzzily matches to same channel as original . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; new channel ( s ) ; same channel as original } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose school / club team record fuzzily matches to oklahoma state . there is only one such row in the table . the player record of this unqiue row is tony allen .",
            "output": [
                "and { only { filter_eq { all_rows ; school / club team ; oklahoma state } } ; eq { hop { filter_eq { all_rows ; school / club team ; oklahoma state } ; player } ; tony allen } }"
            ]
        },
        {
            "input": "select the rows whose high rebounds record fuzzily matches to greg monroe . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; high rebounds ; greg monroe } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose women 's singles record fuzzily matches to gabriela zabavn\u00edkov\u00e1 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; women 's singles ; gabriela zabavn\u00edkov\u00e1 } } ; 3 }"
            ]
        },
        {
            "input": "select the row whose viewers ( millions ) record of all rows is maximum . the airdate record of this row is sunday , june 1 , 2008 .",
            "output": [
                "eq { hop { argmax { all_rows ; viewers ( millions ) } ; airdate } ; sunday , june 1 , 2008 }"
            ]
        },
        {
            "input": "select the rows whose position record fuzzily matches to hb . the number of such rows is 4 .",
            "output": [
                "eq { count { filter_eq { all_rows ; position ; hb } } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose date record fuzzily matches to 1948 . the sum of the round record of these rows is 4 .",
            "output": [
                "round_eq { sum { filter_eq { all_rows ; date ; 1948 } ; round } ; 4 }"
            ]
        },
        {
            "input": "select the rows whose visitor record fuzzily matches to spurs . among these rows , select the rows whose attendance record is less than 18000 . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_less { filter_eq { all_rows ; visitor ; spurs } ; attendance ; 18000 } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose shirt printing record fuzzily matches to bluewings . there is only one such row in the table . the year record of this unqiue row is 1996 .",
            "output": [
                "and { only { filter_eq { all_rows ; shirt printing ; bluewings } } ; eq { hop { filter_eq { all_rows ; shirt printing ; bluewings } ; year } ; 1996 } }"
            ]
        },
        {
            "input": "for the agg records of all rows , most of them are not equal to 0 .",
            "output": [
                "most_not_eq { all_rows ; agg ; 0 }"
            ]
        },
        {
            "input": "select the rows whose career win - loss record fuzzily matches to 2 - . there is only one such row in the table . the tournament record of this unqiue row is us open .",
            "output": [
                "and { only { filter_eq { all_rows ; career win - loss ; 2 - } } ; eq { hop { filter_eq { all_rows ; career win - loss ; 2 - } ; tournament } ; us open } }"
            ]
        },
        {
            "input": "select the rows whose competition record fuzzily matches to 1994 fifa world cup qualification . for the venue records of these rows , most of them fuzzily match to estadio cuscatl\u00e1n , san salvador , el salvador .",
            "output": [
                "most_eq { filter_eq { all_rows ; competition ; 1994 fifa world cup qualification } ; venue ; estadio cuscatl\u00e1n , san salvador , el salvador }"
            ]
        },
        {
            "input": "select the rows whose club record is arbitrary . the number of such rows is 8 .",
            "output": [
                "eq { count { filter_all { all_rows ; club } } ; 8 }"
            ]
        },
        {
            "input": "select the rows whose directed by record fuzzily matches to dearbhla walsh . the number of such rows is 3 .",
            "output": [
                "eq { count { filter_eq { all_rows ; directed by ; dearbhla walsh } } ; 3 }"
            ]
        },
        {
            "input": "select the rows whose record fuzzily matches to soybean oil . take the polyunsaturated fat record of this row . select the rows whose record fuzzily matches to rice bran oil . take the polyunsaturated fat record of this row . the first record is greater than the second record .",
            "output": [
                "greater { hop { filter_eq { all_rows ; ; soybean oil } ; polyunsaturated fat } ; hop { filter_eq { all_rows ; ; rice bran oil } ; polyunsaturated fat } }"
            ]
        },
        {
            "input": "select the row whose location attendance record of all rows is 2nd maximum . the date record of this row is january 17 .",
            "output": [
                "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; january 17 }"
            ]
        },
        {
            "input": "select the row whose time record of all rows is minimum . the nationality record of this row is zimbabwe .",
            "output": [
                "eq { hop { argmin { all_rows ; time } ; nationality } ; zimbabwe }"
            ]
        },
        {
            "input": "select the rows whose score record is equal to 0 . the number of such rows is 7 .",
            "output": [
                "eq { count { filter_eq { all_rows ; score ; 0 } } ; 7 }"
            ]
        },
        {
            "input": "for the date records of all rows , all of them fuzzily match to september .",
            "output": [
                "all_eq { all_rows ; date ; september }"
            ]
        },
        {
            "input": "select the rows whose score record fuzzily matches to 1 - 0 . among these rows , select the rows whose attendance record fuzzily matches to february . the number of such rows is 2 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; score ; 1 - 0 } ; attendance ; february } } ; 2 }"
            ]
        },
        {
            "input": "the 2nd minimum launch date record of all rows is 25 january 1958 . the name record of the row with 2nd minimum launch date record is rta tv - 5 .",
            "output": [
                "and { eq { nth_min { all_rows ; launch date ; 2 } ; 25 january 1958 } ; eq { hop { nth_argmin { all_rows ; launch date ; 2 } ; name } ; rta tv - 5 } }"
            ]
        },
        {
            "input": "the sum of the round record of all rows is 19 .",
            "output": [
                "round_eq { sum { all_rows ; round } ; 19 }"
            ]
        },
        {
            "input": "the sum of the money record of all rows is 1497 .",
            "output": [
                "round_eq { sum { all_rows ; money } ; 1497 }"
            ]
        },
        {
            "input": "the average of the points record of all rows is 1.4 .",
            "output": [
                "round_eq { avg { all_rows ; points } ; 1.4 }"
            ]
        },
        {
            "input": "select the rows whose high assists record fuzzily matches to steve nash . among these rows , select the rows whose location attendance record fuzzily matches to us airways center . the number of such rows is 6 .",
            "output": [
                "eq { count { filter_eq { filter_eq { all_rows ; high assists ; steve nash } ; location attendance ; us airways center } } ; 6 }"
            ]
        }
    ]
}